Call for Contributions
The goal of the International Conference on Performance Engineering (ICPE) is to integrate theory and practice in the field of performance engineering by providing a forum for sharing ideas and experiences between industry and academia. Nowadays, complex systems of all types, like Web-based systems, data centers and cloud infrastructures, social networks, peer-to-peer, mobile and wireless systems, cyber-physical systems, the Internet of Things, real-time and embedded systems, have increasingly distributed and dynamic system architectures that provide high flexibility, however, also increase the complexity of managing end-to-end application performance. ICPE brings together researchers and industry practitioners to share and present their experiences, discuss challenges, and report state-of-the-art and in-progress research on performance engineering of software and systems, including performance measurement, modeling, benchmark design, and run-time performance management. The focus of ICPE is both on classical metrics such as response time, throughput, resource utilization, and (energy) efficiency, as well as on the relationship to other system properties including but not limited to scalability, elasticity, availability, reliability, and security.

Submissions should be made via Easychair. See the submission information for each track for further details.

This year's main theme is cost-effective performance engineering, where cost 
has a wide interpretation including measures such as effort and energy in 
addition to traditional performance measures.

Topics of interest include, but are not limited to:


Performance modeling of software

Languages and ontologies
Methods and tools
Relationship/integration/tradeoffs with other QoS attributes
Analytical, simulation and statistical modeling methodologies
Model validation and calibration techniques
Automatic model extraction
Performance modeling and analysis tools
Performance and software development processes/paradigms

Software performance patterns and anti-patterns
Software/performance tool interoperability (models and data interchange formats)
Performance-oriented design, implementation and configuration management
Software Performance Engineering and Model-Driven Development
Gathering, interpreting and exploiting software performance annotations and data
System sizing and capacity planning techniques
(Model-driven) Performance requirements engineering
Relationship between performance and architecture
Collaboration of development and operation (DevOps) for performance
Performance and agile methods
Performance in Service-Oriented Architectures (SOA)
Performance of micro-service architectures and containers
Performance measurement, monitoring and analysis

Performance measurement and monitoring techniques
Analysis of measured application performance data
Application tracing and profiling
Workload characterization techniques
Experimental design
Tools for performance testing, measurement, profiling and tuning
Benchmarking

Performance metrics and benchmark suites
Benchmarking methodologies
Development of parameterizable, flexible benchmarks
Benchmark workloads and scenarios
Use of benchmarks in industry and academia
Run-time performance management

Use of models at run-time
Online performance prediction
Autonomic resource management
Utility-based optimization
Capacity management
Power and performance, energy efficiency

Power consumption models and management techniques
Tradeoffs between performance and energy efficiency
Performance-driven resource and power management
Performance modeling and evaluation in different environments and application domains

Web-based systems, e-business, Web services
Big data systems, data analytics systems, and other data analysis systems
Internet of Things
Social networks
Cyber-physical systems
Industrial Internet (Industry 4.0)
Virtualization and cloud computing
Autonomous/adaptive systems
Transaction-oriented systems
Communication networks
Parallel and distributed systems
Embedded systems
Multi-core systems
Cluster and grid computing environments
High performance computing
Event-based systems
Real-time and multimedia systems
Peer-to-peer, mobile and wireless systems
All other topics related to performance of software and systems. 

 
