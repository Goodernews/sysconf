[1] S. Blagodurov et al., “A case for NUMA-aware contention management
on multicore systems,” in USENIX ATC, 2011.
[2] B. Lepers et al., “Thread and memory placement on NUMA systems:
Asymmetry matters,” in USENIX ATC, 2015.
[3] S. Srikanthan et al., “Data sharing or resource contention: Toward
performance transparency on multicore systems,” in USENIX ATC, 2015.
[4] Sharanyan et al., “Coherence stalls or latency tolerance: Informed cpu
scheduling for socket and core sharing,” in USENIX ATC, 2016.
[5] “Bullion(16-socket) System,” https://goo.gl/WTRoKn.
[6] M. Ferdman et al., “Clearing the clouds: A study of emerging scale-out
workloads on modern hardware,” in ASPLOS, 2012.
[7] J. B. Kotra et al., “Re-NUCA: A practical nuca architecture for reram
based last-level caches,” in IPDPS, 2016.
[8] Kislal et al., “Location-aware computation mapping for manycore processors,” in PACT, 2017.
[9] O. Kislal et al., “Cache-aware approximate computing for decision tree
learning,” in IPDPSW, 2016.
[10] H. Zhang et al., “Race-to-sleep + content caching + display caching: A
recipe for energy-efﬁcient video streaming on handhelds.”
[11] X. Tang et al., “Improving bank-level parallelism for irregular applications.”
[12] J. D. Booth et al., “Phase detection with hidden markov models for dvfs
on many-core processors,” in 2015 IEEE 35th International Conference
on Distributed Computing Systems, 2015.
[13] J. Liu et al., “Network footprint reduction through data access and
computation placement in noc-based manycores,” in DAC, 2015.
[14] K. Swaminathan et al., “Thermal-aware application scheduling on
device-heterogeneous embedded architectures,” in VLSID, 2015.
[15] P. Yedlapalli et al., “Meeting midway: Improving cmp performance with
memory-side prefetching,” in PACT, 2013.
[16] J. Kotra et al., “Quantifying the potential beneﬁts of on-chip near-data
computing in manycore processors,” in MASCOTS, 2017.
[17] L. Wang et al., “Bigdatabench: A big data benchmark suite from internet
services,” in HPCA, 2014.
[18] J. B. Kotra et al., “Hardware-software co-design to mitigate dram refresh
overheads: A case for refresh-aware process scheduling,” in ASPLOS,
2017.
[19] M. Liu et al., “Optimizing virtual machine consolidation performance
on NUMA server architecture for cloud workloads,” in ISCA, 2014.
[20] “AMD Bulldozer,” http://goo.gl/otbg9J.
[21] “Intel Haswell Processor,” http://goo.gl/xIiqKY.
[22] “Intel Westmere processor,” http://goo.gl/UGPBsI.
[23] “Westmere conﬁg,” https://goo.gl/CjGO0X.
[24] “NAS,” https://goo.gl/dA36i5.
[25] “SPEC CPU 2006,” http://www.spec.org/cpu2006.
[26] “SPEC OMP 2001,” https://www.spec.org/omp2001/,.
[27] “HPCCG,” https://mantevo.org/default.php.
[28] “SPECJBB,” https://www.spec.org/jbb2005/.
[29] G. Slota et al., “BFS and coloring-based parallel algorithms for strongly
connected components and related problems,” in IPDPS, 2014.
[30] “VMware ESX Server 2,” white paper.
[31] “JEDEC,” DDR4 SDRAM Standard, 2012.
[32] “JEDEC,” Low Power Double Data Rate 3 (LPDDR3), 2012.
[33] “AMD HBM,” http://goo.gl/iVHexT.
[34] “Intel MCDRAM,” https://goo.gl/iGQG32.
[35] “Intel 3D XPoint Memory,” http://goo.gl/04n7Ksl.
[36] “Phase-change Memory,” https://goo.gl/xOKMDF.
[37] “Intel performance analysis guide,” https://goo.gl/y21oEB,.
[38] N. Agarwal et al., “Thermostat: Application-transparent page management for two-tiered main memory,” in ASPLOS, 2017.
[39] J. Gandhi et al., “Badgertrap: A tool to instrument x86-64 tlb misses,”
in CAN, 2014.
[40] C. Villavieja et al., “Didi: Mitigating the performance impact of TLB
shootdowns using a shared tlb directory,” in PACT, 2011.
[41] “Linux AutoNUMA,” https://lwn.net/Articles/488709/.
[42] “Linux numactl,” https://goo.gl/FS9mHs.
[43] Q. Ali et al., “Power aware NUMA scheduler in vmware’s esxi hypervisor,” in IISWC, 2015.
[44] “PerfMon,” https://goo.gl/RvLxqE.
