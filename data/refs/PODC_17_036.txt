
[1] Dana Angluin, James Aspnes, Zoë Diamadi, Michael J. Fischer, and René Peralta.
2004. Computation in networks of passively mobile finite-state sensors. In Proc.
23rd Annual ACM Symposium on Principles of Distributed Computing (PODC).
290–299. https://doi.org/10.1145/1011767.1011810
[2] Dana Angluin, James Aspnes, Zoë Diamadi, Michael J. Fischer, and René Peralta. 2006. Computation in networks of passively mobile finite-state sensors. Distributed Computing 18, 4 (2006), 235–253. https://doi.org/10.1007/
s00446-005-0138-3
[3] Dana Angluin, James Aspnes, and David Eisenstat. 2006. Stably computable
predicates are semilinear. In Proc. 25th Annual ACM Symposium on Principles of
Distributed Computing (PODC). 292–299. https://doi.org/10.1145/1146381.1146425
[4] Dana Angluin, James Aspnes, David Eisenstat, and Eric Ruppert. 2007. The
computational power of population protocols. Distributed Computing 20, 4 (2007),
279–304. https://doi.org/10.1007/s00446-007-0040-2
[5] Konstantinos Athanasiou, Peizun Liu, and Thomas Wahl. 2016. UnboundedThread Program Verification using Thread-State Equations. In IJCAR (Lecture
Notes in Computer Science), Vol. 9706. Springer, 516–531.
[6] Ioannis Chatzigiannakis, Othon Michail, and Paul G. Spirakis. 2010. Algorithmic
Verification of Population Protocols. In Proc. 12th International Symposium on
Stabilization, Safety, and Security of Distributed Systems (SSS). 221–235.
[7] Ho-Lin Chen, Rachel Cummings, David Doty, and David Soloveichik. 2014. Speed
Faults in Computation by Chemical Reaction Networks. In DISC (Lecture Notes
in Computer Science), Vol. 8784. Springer, 16–30.
[8] Julien Clément, Carole Delporte-Gallet, Hugues Fauconnier, and Mihaela Sighireanu. 2011. Guidelines for the Verification of Population Protocols. In ICDCS. IEEE
Computer Society, 215–224.
[9] Leonardo Mendonça de Moura and Nikolaj Bjørner. 2008. Z3: An Efficient SMT
Solver. In TACAS (Lecture Notes in Computer Science), Vol. 4963. Springer, 337–340.
Z3 is available at https://github.com/Z3Prover/z3.
[10] Yuxin Deng and Jean-François Monin. 2009. Verifying Self-stabilizing Population
Protocols with Coq. In Proc. 3rd IEEE International Symposium on Theoretical
Aspects of Software Engineering (TASE). 201–208. https://doi.org/10.1109/TASE.
2009.9
[11] Jörg Desel and Javier Esparza. 1995. Free choice Petri nets. Cambridge University
Press.
[12] Shlomi Dolev, Mohamed G. Gouda, and Marco Schneider. 1999. Memory requirements for silent stabilization. Acta Informatica 36, 6 (1999), 447–462.
[13] Javier Esparza, Pierre Ganty, Jérôme Leroux, and Rupak Majumdar. 2015. Verification of Population Protocols. In Proc. 26th International Conference on Concurrency
Theory (CONCUR). 470–482.
[14] Javier Esparza, Pierre Ganty, Jérôme Leroux, and Rupak Majumdar. 2016. Model
Checking Population Protocols. In FSTTCS (LIPIcs), Vol. 65. 27:1–27:14.
[15] Javier Esparza, Ruslán Ledesma-Garza, Rupak Majumdar, Philipp J. Meyer, and
Filip Niksic. 2014. An SMT-Based Approach to Coverability Analysis. In CAV
(Lecture Notes in Computer Science), Vol. 8559. Springer, 603–619.
[16] Javier Esparza and Stephan Melzer. 2000. Verification of Safety Properties Using
Integer Programming: Beyond the State Equation. Formal Methods in System
Design 16, 2 (2000), 159–189.
[17] Othon Michail, Ioannis Chatzigiannakis, and Paul G. Spirakis. 2011. Mediated
population protocols. Theor. Comput. Sci. 412, 22 (2011), 2434–2450.
[18] Othon Michail, Ioannis Chatzigiannakis, and Paul G. Spirakis. 2012. Terminating Population Protocols via Some Minimal Global Knowledge Assumptions.
In Stabilization, Safety, and Security of Distributed Systems - 14th International
Symposium, SSS 2012, Toronto, Canada, October 1-4, 2012. Proceedings. 77–89.
[19] Saket Navlakha and Ziv Bar-Joseph. 2015. Distributed information processing
in biological and computational systems. Commun. ACM 58, 1 (2015), 94–102.
https://doi.org/10.1145/2678280
[20] Jun Pang, Zhengqin Luo, and Yuxin Deng. 2008. On Automatic Verification of SelfStabilizing Population Protocols. In Proc. 2nd IEEE/IFIP International Symposium
on Theoretical Aspects of Software Engineering (TASE). 185–192. https://doi.org/
10.1109/TASE.2008.8
[21] Christos H. Papadimitriou. 2007. Computational complexity. Academic Internet
Publ.
[22] Sylvain Schmitz. 2016. The complexity of reachability in vector addition systems.
SIGLOG News 3, 1 (2016), 4–21.
[23] Alexander Schrijver. 1986. Theory of Linear and Integer Programming. John Wiley
& Sons.
[24] Jun Sun, Yang Liu, Jin Song Dong, and Jun Pang. 2009. PAT: Towards Flexible
Verification under Fairness. In Proc. 21st International Conference on Computer
Aided Verification (CAV). 709–714. https://doi.org/10.1007/978-3-642-02658-4_59

