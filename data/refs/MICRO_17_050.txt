[1] Pierre-Antoine Absil. 2006. Continuous-time Systems that Solve
Computational Problems. IJUC 2 (2006), 291-304.

[2] Karsten Ahnert and Mario Mulansky. 2011. Odeint - Solving Ordinary Differential Equations in C++. AIP Conference Proceedings
1389, 1 (2011), 1586-1589. https: //doi-org/10.1063/1.3637934
[3] E.L. Allgower and K. Georg. 2012. Numerical Continuation
Methods: An Introduction. Springer Berlin Heidelberg. https:
/ /pooks.google.com/books?id=0-TtCAAAQBAJ

[4] Hartwig Anzt, Vincent Heuveline, and Bjérn Rocker. 2011. An Error Correction Solver for Linear Systems: Evaluation of Mixed Precision Implementations. In Proceedings of the 9th International
Conference on High Performance Computing for Computational
Science (VECPAR’10). Springer-Verlag, Berlin, Heidelberg, 58—
70. http://dl.acm.org/citation.cfm?id=1964238.1964248

[5] Marc Baboulin, Alfredo Buttari, Jack Dongarra, Jakub Kurzak,
Julie Langou, Julien Langou, Piotr Luszczek, and Stanimire Tomov. 2009. Accelerating scientific computations with mixed precision algorithms. Computer Physics Communications 180, 12
(12 2009), 2526-2533. https://doi.org/10.1016/j.cpc.2008.11.005
[6] G.A. Bekey and W.J. Karplus. 1968. Hybrid computation. Wiley.
[7] Olivier Bournez and Manuel L. Campagnolo. 2008. A Survey on
Continuous Time Computations. Springer New York, New York,
NY, 383-423. https://doi.org/10.1007/978-0-387-68546-5_17
[8] Alfredo Buttari, Jack Dongarra, Julie Langou, Julien Langou,
Piotr Luszczek, and Jakub Kurzak. 2007. Mixed Precision Iterative
Refinement Techniques for the Solution of Dense Linear Systems.
Int. J. High Perform. Comput. Appl. 21, 4 (Nov. 2007), 457-466.
https://doi.org/10.1177/1094342007084026

[9] Moody T. Chu. 1988. On the Continuous Realization of Iterative
Processes. SIAM Rev. 30, 3 (1988), 375-387. https://doi.org/10.
1137/1030090 arXiv:http://dx.doi.org/10.1137/1030090

[10] Moody T. Chu. 1994. A list of matrix flows with applications. In
in Hamiltonian and Gradients Flows, Algorithms and Control.
87-97.

[11] G.E.R. Cowan, R.C. Melville, and Y. Tsividis. 2005. A VLSI
analog computer/math co-processor for a digital computer. In
Solid-State Circuits Conference, 2005. Digest of Technical Papers. ISSCC. 2005 IEEE International. 82-586 Vol. 1. https:
//doi.org/10.1109/ISSCC.2005.1493879

[12] G.E.R. Cowan, R.C. Melville, and Y. Tsividis. 2006. A VLSI analog computer/digital computer accelerator. Solid-State Circuits,
IEEE Journal of 41, 1 (Jan 2006), 42-53. https://doi.org/10.
1109/JSSC.2005.858618

[13] E. P. DeBenedictis. 2016. Computational Complexity and New
Computing Approaches. Computer 49, 12 (Dec 2016), 76-79.
https://doi.org/10.1109/MC.2016.353

[14] Peter Deuflhard. 2011. Newton Methods for Nonlinear Problems:
Affine Invariance and Adaptive Algorithms. Springer Publishing
Company, Incorporated.

[15] S. Fifer. 1961. Analogue Computation: Theory, Techniques, and
Applications. Number v. 3 in Analogue Computation: Theory,
Techniques, and Applications. McGraw-Hill.

[16] C. Fletcher. 1991. Computational Techniques for Fluid Dynamics
1. Springer Berlin Heidelberg. https://books.google.com/books?
id=KplQ9VP--cwC

[17] W. Gautschi. 2011. Numerical Analysis. Birkhauser Boston.
https: //books.google.com/books?id=-fgjJF9yAIwC

[18] N. Guo, Y. Huang, T. Mai, S. Patil, C. Cao, M. Seok, S. Sethumadhavan, and Y. Tsividis. 2015. Continuous-time hybrid computation
with programmable nonlinearities. In European Solid-State Circuits Conference (ESSCIRC), ESSCIRC 2015 - 41st. 279-282.
https://doi.org/10.1109/ESSCIRC.2015.7313881

[19] N. Guo, Y. Huang, T. Mai, S. Patil, C. Cao, M. Seok, S. Sethumadhavan, and Y. Tsividis. 2016. Energy-Efficient Hybrid Analog/Digital Approximate Computation in Continuous Time. [EEE
Journal of Solid-State Circuits 51, 7 (July 2016), 1514-1524.
https://doi.org/10.1109/JSSC.2016.2543729

[20] John L. Hennessy and David A. Patterson. 2011. Computer
Architecture, Fifth Edition: A Quantitative Approach (5th ed.).
Morgan Kaufmann Publishers Inc., San Francisco, CA, USA.
[21] Steven M. Hetzler. 1997. A Continuous Version of Newton’s
Method. The College Mathematics Journal 28, 5 (1997), 348—
351. http://www.jstor.org/stable/2687062

[22] Y. Huang, N. Guo, M. Seok, Y. Tsividis, and $. Sethumadhavan.
2016. Evaluation of an Analog Accelerator for Linear Algebra.
In 2016 ACM/IEEE 48rd Annual International Symposium on
Computer Architecture (ISCA). 570-582.
1109/ISCA.2016.56

[23] Y. Huang, N. Guo, M. Seok, Y. Tsividis, and S. Sethumadhavan.
2017. Analog Computing in a Modern Context: A Linear Algebra
Accelerator Case Study. IEEE Micro 37, 3 (2017), 30-38. https:
//doi.org/10.1109/MM.2017.55

[24] A.S. Jackson. 1960. Analog computation. McGraw-Hill.

[25] Jon Jacobsen, Owen Lewis, and Bradley Tennis. 2007. Approximations of continuous Newton’s method: an extension of
Cayley’s problem. Electronic Journal of Differential Equations (EJDE) [electronic only] 2007 (2007), 163-173. http:
//eudml.org/doc/127842

[26] W.J. Karplus. 1958. Analog simulation: solution of field problems.
McGraw-Hill.

[27] W.J. Karplus and W.W. Soroka. 1959. Analog Methods: Computation and Simulation. McGraw-Hill.

[28] S. Leyffer, S. M. Wild, M. Fagan, M. Snir, K. Palem, K. Yoshii, and
H. Finkel. 2016. Doing Moore with Less — Leapfrogging Moore’s
Law with Inexactness for Supercomputing. ArXiv e-prints (Oct.
2016). arXiv:cs.OH/1610.02606

[29] F. Milano. 2009. Continuous Newton’s Method for Power Flow
Analysis. IEEE Transactions on Power Systems 24, 1 (Feb 2009),
50-57. https://doi.org/10.1109/TPWRS.2008.2004820

[30] A. Morgan. 1987. Solving polynomial systems using continuation
for engineering and scientific problems. Prentice-Hall. https:
//books.google.com/books?id=E3amAAAATAAJ

[31] J. W. Neuberger. 2007. The Continuous Newton’s Method, Inverse Functions, and Nash-Moser. The American Mathematical
Monthly 114, 5 (2007), 432-437. http://www.jstor.org/stable/
27642222

[32] J. Ortega and W. Rheinboldt. 2000. Iterative Solution of Nonlinear Equations in Several Variables. Society for Industrial and
Applied Mathematics. https://doi.org/10.1137/1.9780898719468
arXiv:http://epubs.siam.org/doi/pdf/10.1137/1.9780898719468
[33] F. Rothganger, C. D. James, and J. B. Aimone. 2016. Computing
with dynamical systems. In 2016 IEEE International Conference
on Rebooting Computing (ICRC). 1-3. https://doi.org/10.1109/
ICRC.2016.7738701

[34] Dietmar Saupe. 1989. Discrete Versus Continuous Newton’s
Method: A Case Study. Springer Netherlands, Dordrecht, 59-80.
https: //doi.org/10.1007/978-94-009-2281-5_2

[35] J. Schemmel, J. Fieres, and K. Meier. 2008. Wafer-scale integration of analog neural networks. In 2008 IEEE International
Joint Conference on Neural Networks (IEEE World Congress
on Computational Intelligence). 431-438. https://doi.org/10.
1109/IJCNN.2008.4633828

[36] R. Vichnevetsky. 1968. Analog/hybrid solution of partial differential equations in the nuclear industry. SIMULATION 11, 6
(1968), 269-281. https://doi.org/10.1177/003754976801100605
[37] arXiv:http://sim.sagepub.com/content/11/6/269.full.pdf+html
[38] James A. Walsh. 1995. The Dynamics of Newton’s Method for
Cubic Polynomials. The College Mathematics Journal 26, 1
(1995), 22-28. http://www.jstor.org/stable/2687287

[39] B.R. Wilkins. 1970. Analogue and iterative methods in computation, simulation, and control. Chapman and Hall.

https://doi.org/10.