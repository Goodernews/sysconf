[1] HSA Foundation, “HSA Platform System Architecture Specification,”
http://www.hsafoundation.com/?ddownload=4944, 2017.
[2] IntelPR, “Intel Discloses Newest Microarchitecture and 14 Nanometer
Manufacturing Process Technical Details,” Intel Newsroom, 2014.
[3] B. Hechtman, S. Che, D. Hower, Y. Tian, B. Beckmann, M. Hill,
S. Reinhardt, and D. Wood, “QuickRelease: A Throughput-Oriented
Approach to Release Consistency on GPUs,” in IEEE 20th International Symposium on High Performance Computer Architecture, 2014.
[4] M. D. Sinclair, J. Alsop, and S. V. Adve, “Efficient GPU Synchronization without Scopes: Saying No to Complex Consistency Models,” in
Proceedings of the 48th Annual IEEE/ACM International Symposium
on Microarchitecture, ser. MICRO, December 2015.
[5] ——, “Chasing Away RAts: Semantics and Evaluation for Relaxed
Atomics on Heterogeneous Systems,” in Proceedings of the 44th
Annual International Symposium on Computer Architecture, 2017.
[6] J. Alglave, M. Batty, A. F. Donaldson, G. Gopalakrishnan, J. Ketema,
D. Poetzl, T. Sorensen, and J. Wickerson, “GPU concurrency Weak
behaviours and programming assumptions,” in Proceedings of the
Twentieth International Conference on Architectural Support for Programming Languages and Operating Systems, 2015.
[7] T. Sorensen, J. Alglave, G. Gopalakrishnan, and V. Grover, “ICS: U:
Towards Shared Memory Consistency Models for GPUs,” in Towards
Shared Memory Consistency Models for GPUs, 2013, pp. 489–490.
[8] M. Batty, A. F. Donaldson, and J. Wickerson, “Overhauling SC
Atomics in C11 and OpenCL,” in Proceedings of the 43rd Annual
ACM SIGPLAN-SIGACT Symposium on Principles of Programming
Languages, 2016, pp. 634–648.
[9] “SPEC ACCEL,” https://www.spec.org/accel/, 2017.
[10] M. Burtscher, R. Nasre, and K. Pingali, “A quantitative study of
irregular programs on GPUs,” in IEEE International Symposium on
Workload Characterization, 2012, pp. 141–151.
[11] S. Che, B. Beckmann, S. Reinhardt, and K. Skadron, “Pannotia: Understanding Irregular GPGPU Graph Applications,” in IEEE International
Symposium on Workload Characterization, Sept 2013, pp. 185–195.
[12] D. R. Hower, B. A. Hechtman, B. M. Beckmann, B. R. Gaster, M. D.
Hill, S. K. Reinhardt, and D. A. Wood, “Heterogeneous-Race-Free
Memory Models,” in Proceedings of the 19th International Conference
on Architectural Support for Programming Languages and Operating
Systems, 2014, pp. 427–440.
[13] J. Y. Kim and C. Batten, “Accelerating Irregular Algorithms on
GPGPUs Using Fine-Grain Hardware Worklists,” in 47th Annual
IEEE/ACM International Symposium on Microarchitecture, 2014.
[14] M. S. Orr, S. Che, A. Yilmazer, B. M. Beckmann, M. D. Hill, and
D. A. Wood, “Synchronization Using Remote-Scope Promotion,” in
Proceedings of the Twentieth International Conference on Architectural
Support for Programming Languages and Operating Systems, 2015.
[15] J. A. Stuart and J. D. Owens, “Efficient Synchronization Primitives
for GPUs,” CoRR, vol. abs/1110.4623, 2011. [Online]. Available:
http://arxiv.org/abs/1110.4623
[16] I. Singh, A. Shriraman, W. W. L. Fung, M. O’Connor, and T. M.
Aamodt, “Cache Coherence for GPU Architectures,” in 19th International Symposium on High Performance Computer Architecture, 2013.
[17] J. Alsop, B. Beckmann, M. Orr, and D. Wood, “Lazy Release Consistency for GPUs,” in Proceedings of the 49th International Symposium
on Microarchitecture, 2016.
[18] K. Koukos, A. Ros, E. Hagersten, and S. Kaxiras, “Building Heterogeneous Unified Virtual Memories (UVMs) Without the Overhead,”
ACM Transactions on Architecture and Code Optimization, vol. 13,
no. 1, pp. 1:1–1:22, Mar. 2016.
[19] B. R. Gaster, D. Hower, and L. Howes, “HRF-Relaxed: Adapting HRF
to the Complexities of Industrial Heterogeneous Memory Models,”
ACM Transactions on Architecture and Code Optimizations, vol. 12,
no. 1, pp. 7:1–7:26, April 2015.
[20] D. Cederman, B. Chatterjee, and P. Tsigas, “Understanding the Performance of Concurrent Data Structures on Graphics Processors,” in
Proceeedings of 18th International Euro-Par Conference on Parallel
Processing, 2012, pp. 883–894.
[21] P. Misra and M. Chaudhuri, “Performance Evaluation of Concurrent
Lock-free Data Structures on GPUs,” in IEEE 18th International
Conference on Parallel and Distributed Systems, 2012, pp. 53–60.
[22] W. W. L. Fung, I. Singh, A. Brownsword, and T. M. Aamodt,
“Hardware Transactional Memory for GPU Architectures,” in Proceedings of the 44th Annual IEEE/ACM International Symposium on
Microarchitecture, ser. MICRO, 2011, pp. 296–307.
[23] W. W. L. Fung and T. M. Aamodt, “Energy Efficient GPU Transactional Memory via Space-time Optimizations,” in Proceedings of the
46th Annual IEEE/ACM International Symposium on Microarchitecture, 2013, pp. 408–420.
[24] Y. Xu, L. Gao, R. Wang, Z. Luan, W. Wu, and D. Qian, “Lock-based
Synchronization for GPU Architectures,” in Proceedings of the ACM
International Conference on Computing Frontiers, 2016, pp. 205–213.
[25] A. Li, G.-J. van den Braak, H. Corporaal, and A. Kumar, “Fine-Grained
Synchronizations and Dataflow Programming on GPUs,” in Proceedings of the 29th ACM on International Conference on Supercomputing,
2015, pp. 109–118.
[26] J. Gómez-Luna, I. El Hajj, L.-W. Chang, V. Garcı́a-Flores, S. G.
de Gonzalo, T. B. Jablin, A. J. Peña, and W.-m. Hwu, “Chai: Collaborative Heterogeneous Applications for Integrated-architectures,” in
IEEE International Symposium on Performance Analysis of Systems
and Software, ser. ISPASS, April 2017, pp. 43–54.
[27] Y. Sun, X. Gong, A. K. Ziabari, L. Yu, X. Li, S. Mukherjee,
C. Mccardwell, A. Villegas, and D. Kaeli, “Hetero-Mark, A Benchmark
Suite for CPU-GPU Collaborative Computing,” in IEEE International
Symposium on Workload Characterization, ser. IISWC, September
2016, pp. 1–10.
[28] S. V. Adve and H.-J. Boehm, “Memory Models: A Case for Rethinking
Parallel Languages and Hardware,” Communications of the ACM, pp.
90–101, August 2010.
[29] H.-J. Boehm and S. V. Adve, “Foundations of the C++ Concurrency
Memory Model,” in Proceedings of the 29th ACM SIGPLAN Conference on Programming Language Design and Implementation, 2008,
pp. 68–78.
[30] H. Sutter, “Atomic Weapons: The C++ Memory Model and Modern
Hardware,” in C++ and Beyond, 2012.
[31] T. Sorensen and A. F. Donaldson, “Exposing Errors Related to Weak
Memory in GPU Applications,” in Proceedings of the 37th ACM
SIGPLAN Conference on Programming Language Design and Implementation, 2016, pp. 100–113.
[32] NVIDIA, “CUDA SDK 3.1,” http://developer.nvidia.com/object/cuda
3 1 downloads.html.
[33] M. D. Sinclair, “Efficient Coherence and Consistency for Specialized
Memory Hierarchies,” Ph.D. dissertation, University of Illinois at
Urbana-Champaign, 2017.
[34] V.
Podlozhnyuk,
“Histogram
calculation
in
CUDA,”
http://developer.download.nvidia.com/compute/cuda/1.1-Beta/x86
website/projects/histogram64/doc/histogram.pdf, 2007.
[35] H.-J. Boehm, “Can Seqlocks Get Along with Programming Language
Memory Models?” in Proceedings of the 2012 ACM SIGPLAN Workshop on Memory Systems Performance and Correctness, 2012.
[36] P. McKenney, “Some Examples of Kernel-Hacker Informal Correctness
Reasoning,” in Proceedings of the Dagstuhl Workshop on Compositional Verification Methods for Next-Generation Concurrency, 2015.
[37] R. Komuravelli, M. D. Sinclair, J. Alsop, M. Huzaifa, P. Srivastava,
M. Kotsifakou, S. V. Adve, and V. S. Adve, “Stash: Have Your
Scratchpad and Cache it Too,” in Proceedings of the 42nd Annual
International Symposium on Computer Architecture, 2015, pp. 707–
719.
[38] M. M. K. Martin, D. J. Sorin, B. M. Beckmann, M. R. Marty, M. Xu,
A. R. Alameldeen, K. E. Moore, M. D. Hill, and D. A. Wood, “Multifacet’s General Execution-driven Multiprocessor Simulator (GEMS)
Toolset,” SIGARCH Computer Architecture News, 2005.
[39] A. Bakhoda, G. L. Yuan, W. W. L. Fung, H. Wong, and T. M. Aamodt,
“Analyzing CUDA Workloads Using a Detailed GPU Simulator,” in
IEEE International Symposium on Performance Analysis of Systems
and Software, 2009.
[40] N. Agarwal, T. Krishna, L.-S. Peh, and N. Jha, “GARNET: A Detailed
On-chip Network Model Inside a Full-system Simulator,” in IEEE

International Symposium on Performance Analysis of Systems and
Software, 2009.
[41] V. Gramoli, “More Than You Ever Wanted to Know About Synchronization: Synchrobench, Measuring the Impact of the Synchronization
on Concurrent Algorithms,” in Proceedings of the 20th ACM SIGPLAN
Symposium on Principles and Practice of Parallel Programming, ser.
PPoPP, 2015, pp. 1–10.
