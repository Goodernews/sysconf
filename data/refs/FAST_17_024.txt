[1] Boost Fiber. http://olk.github.io/libs/fiber/
doc/html.
[2] Completely Fair Queuing. https://www.kernel.org/
doc/Documentation/block/cfq-iosched.txt.
[3] Database checkpoints (SQL server). http://msdn.
microsoft.com/en-us/library/ms189573.aspx.
[4] Ext4 filesystem. https://www.kernel.org/doc/
Documentation/filesystems/ext4.txt.
[5] Facebook and the kernel. https://lwn.net/Articles/
591780.
[6] futex(2) - Linux man page. http://linux.die.net/man/
2/futex.
[7] ionice(1) - Linux man page. http://linux.die.net/
man/1/ionice.
[8] MongoDB. https://www.mongodb.org.
[9] MongoDB backup methods. https://docs.mongodb.
org/manual/core/backups.
[10] PostgreSQL. http://www.postgresql.org.
[11] PostgreSQL continuous archiving and point-in-time recovery. http://www.postgresql.org/docs/current/
static/continuous-archiving.html.
[12] PostgreSQL pain points. https://lwn.net/Articles/
591723.
[13] PostgreSQL routine vacuuming. http://
www.postgresql.org/docs/9.5/static/
routine-vacuuming.html.
[14] PostgreSQL WAL configuration. http://
www.postgresql.org/docs/9.5/static/
wal-configuration.html.
[15] semop(2) - Linux man page. http://linux.die.net/
man/2/semop.
[16] Serial ATA native comminad queueing: An exciting new performance feature for serial ATA. Intel Corporation and Seagate
Technology.
[17] The TPC-C benchmark. http://www.tpc.org/tpcc.
[18] AMVROS IADIS, G., AND BHADKAMKAR, M. Identifying trends
in enterprise data protection systems. In Proceedings of the 2015
USENIX Annual Technical Conference - USENIX ATC ’15.
[19] AVANTIKA MATHUR, MINGMING CAO, SUPARNA BHATTACHARYA, ANDREAS DILGER, ALEX TOMAS, LAURENT
VIVIER. The new ext4 filesystem: Current status and future
plans. In In Proceedings of the Ottawa Linux Symposium - OLS
’07.
[20] BLAGOJEVIC´, F., GUYOT, C., WANG, Q., TSAI, T., MATEESCU, R., AND BANDIC´, Z. Priority IO scheduling in the
Cloud. In Proceedings of the 5th USENIX Workshop on Hot Topics in Cloud Computing - HotCloud ’13.
[21] CHANG, F., DEAN, J., GHEMAWAT, S., HS IEH, W. C., WALLACH, D. A., BURROWS, M., CHANDRA, T., FIKES, A., AND
GRUBER, R. E. Bigtable: A distributed storage system for structured data. In Proceedings of the 7th Symposium on Operating
Systems Design and Implementation - OSDI ’06.
[22] CITRUSBYTE. Redis. http://redis.io/.
[23] CITRUSBYTE. Redis latency problems troubleshooting. http:
//redis.io/topics/latency.
[24] CITRUSBYTE. Redis persistence. http://redis.io/
topics/persistence.
[25] COOPER, B. F., SILBERSTEIN, A., TAM, E., RAMAKRISHNAN,
R., AND SEARS, R. Benchmarking cloud serving systems with
YCSB. In Proceedings of the 1st ACM Symposium on Cloud
computing - SoCC ’10.
[26] CORBET, J. No-I/O dirty throttling. https://lwn.net/
Articles/456904.
[27] CUCINOTTA, T. Priority inheritance on condition variables. In
Proceedings of the 5th International Workshop on Operating Systems Platforms for Embedded Real-Time Applications - OSPERT
’09.
[28] DIFALLAH, D. E., PAVLO, A., CURINO, C., AND CUDREMAUROUX, P. OLTP-Bench: An extensible testbed for benchmarking relational databases. In Proceedings of the VLDB Endowment - VLDB ’13.
[29] EDGE, JAKE. Finding system latency with LatencyTOP. http:
//lwn.net/Articles/266153/.
[30] GANGER, G. R., AND PATT, Y. N. The process-flow model:
Examining I/O performance from the system’s point of view. In
Proceedings of the 1993 ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems - SIGMETRICS
’93.
[31] GRAY, J., AND REUTER, A. Transaction Processing: Concepts
and Techniques. Morgan Kaufmann Publishers, Inc., 1992.
[32] JEONG, D., LEE, Y., AND KIM, J.-S. Boosting quasiasynchronous I/O for better responsiveness in mobile devices. In
Proceedings of the 13th USENIX Conference on File and Storage
Technologies - FAST ’15.
[33] KIM, S., KIM, H., KIM, S.-H., LEE, J., AND JEONG, J.
Request-oriented durable write caching for application performance. In Proceedings of the 2015 USENIX Annual Technical
Conference - USENIX ATC ’15.
[34] LAKSHMAN, A., AND MALIK, P. Cassandra: A decentralized
structured storage system. ACM SIGOPS Operating Systems Review 44, 2 (2010), 35.
[35] LAMPSON, B. W., AND REDELL, D. D. Experience with processes and monitors in Mesa. Communications of the ACM 23, 2
(Feb. 1980), 105–117.
[36] LOSH, M. W. I/O Scheduling in CAM. In Proceedings of the
Technical BSD Conference - BSDCan ’15.
[37] MENAGE, P. B. Adding generic process containers to the Linux
kernel. In Proceedings of the Ottawa Linux Symposium - OLS
’07.
[38] MIKHAIL BAUTIN, GUOQIANG JERRY CHEN, PRITAM DAMANIA, PRAKASH KHEMANI, KARTHIK RANGANATHAN, NICOLAS SP IEGELBERG, LIYIN TANG, M. V. Storage infrastructure
behind Facebook messages using HBase at scale. IEEE Data Engineering Bulletin 35, 2 (2012), 4–13.
[39] ROSENBLUM, M., AND OUSTERHOUT, J. K. The design and
implementation of a log-structured file system. In Proceedings
of the 13th ACM Symposium on Operating Systems Principles -
SOSP ’91.
[40] RUSS INOVICH, M. E., SOLOMON, D. A., AND IONESCU, A.
Windows Internals, Part 2: Covering Windows Server 2008 R2
and Windows 7, 6th ed. Microsoft Press, 2012.
[41] SWEENEY, A., DOUCETTE, D., HU, W., ANDERSON, C.,
NISHIMOTO, M., AND PECK, G. Scalability in the XFS file
system. In Proceedings of the 1996 USENIX Annual Technical
Conference - USENIX ATC ’96.
[42] TING YANG, TONGP ING LIU, EMERY D. BERGER, SCOTT F.
KAPLAN, J. ELIOT, B. M. Redline: First class support for interactivity in commodity operating systems. In Proceedings of
the 8th USENIX Conference on Operating Systems Design and
Implementation - OSDI ’08.
[43] YANG, S., HARTER, T., AGRAWAL, N., KOWSALYA, S. S.,
KRISHNAMURTHY, A., AL-KISWANY, S., KAUSHIK, R. T.,
ARPACI-DUSSEAU, A. C., AND ARPACI-DUSSEAU, R. H.
Split-level I/O scheduling. In Proceedings of the 25th Symposium
on Operating Systems Principles - SOSP ’15.
[44] YU, Y. J., SHIN, D. I., EOM, H., AND YEOM, H. Y. NCQ vs.
I/O scheduler. ACM Transactions on Storage 6, 1 (Mar. 2010),
1–37.
