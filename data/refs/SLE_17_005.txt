[1] Mikhail Auguston, Clinton Jeffery, and Scott Underwood. A Moni-
toring Language for Run Time and Post-Mortem Behavior Anal-
ysis and Visualization. In Proc. Fifth Intl. Wksp. on Automated
Debugging, 2003.

[2] Peter C. Bates. Debugging Heterogeneous Distributed Systems
Using Event-Based Models of Behavior. ACM Transactions on
Computer Systems 13(1), 1995.

[3] Erwan Bousse, Jonathan Corley, Benoit Combemale, Jeff Gray, and
Benoit Baudry. Supporting Efficient and Advanced Omniscient
Debugging for xDSMLs. In Proc. Software Language Engineering,
2015.

[4] Mark G. J. Van Den Brand, B. Cornelissen, Pieter A. Olivier, and
Jurgen J. Vinju. TIDE: A Generic Debugging Framework Ð Tool
Demonstration. Electronic Notes in Theoretical Computer Science
141(4), 2005.

[5] Stephen Chang, Alex Knauth, and Ben Greenman. Type Systems as
Macros. In Proc. ACM Sym. Principles of Programming Languages,
2017.

[6] Andrei Chis, Tudor Girba, and Oscar Nierstrasz. The Moldable
Debugger: a Framework for Developing Domain-Specific De-
buggers. Software Language Engineering 8706, 2014.

[7] Jonathan Corley, Brian P. Eddy, Eugene Syriani, and Jeff Gray. Effi-
cient and Scalable Omniscient Debugging for Model Transfor-
mations. Software Quality Journal 25(1), 2017.

[8] Julien Deantoni. Modeling the Behavioral Semantics of Heteroge-
neous Languages and their Coordination. In Proc. Architecture
Centric Virtual Integration, 2016.

[9] Arie van Deursen, Paul Klint, and Joost Visser. Domain-Specific
Languages: An Annotated Bibliography. ACM SIGPLAN Notices
35(6), 2000.

[10] Mireille Ducasse. Coca: An Automated Debugger for C. In Proc. Intl.

Conf. on Software Engineering, 1999.

[11] Matthias Felleisen, Robert Bruce Findler, Matthew Flatt, Shriram
Krishnamurthi, Eli Barzilay, Jay McCarthy, and Sam Tobin-
Hochstadt. The Racket Manifesto. In Proc. 1st Summit on Ad-
vances in Programming Languages, 2015.

[12] Mattias Felleisen and Daniel P. Friedman. A Calculus for Assign-
ments in Higher-Order Languages. In Proc. ACM Sym. Principles
of Programming Languages, 1987.

[13] Spencer P. Florence, Burke Fetscher, Matthew Flatt, William H.
Temps, Tina Kiguradze, Dennis P. West, Charlotte Niznik, Paul
R. Yarnold, Robert Bruce Findler, and Steven M. Belknap. POP-
PL: A Patient-Oriented Prescription Programming Language.
In Proc. Generative Programming and Component Engineering,
2015.

[14] Pedro Rangei Henriques, Maria Joao Varanda Pereira, Marjan
Mernik, Mitja Lenic, Jeff Gray, and Hui Wu. Automatic Gen-
eration of Language-Based Tools Using the LISA System. IEE
Proceedings - Software 152(2), 2005.

[15] Mark Scott Johnson. The Design of a High-Level, Language-
Independent Symbolic Debugging System. In Proc. ACM ’77
Annual Conf., 1977.

[16] Eugene Kohlbecker, Daniel P. Friedman, Matthias Felleisen, and
Bruce Duba. Hygienic Macro Expansion. In Proc. ACM Sym. on
Lisp and Functional Programming, 1986.

[17] Xiangqi Li and Matthew Flatt. Medic: Metaprogramming and Trace-
Oriented Debugging. In Proc. Wksp. on Future Programming,
2015.

[18] Ricky T. Lindeman, Lennart C. L. Kats, and Eelco Visser. Declara-
tively Defining Domain-Specific Language Debuggers. In Proc.
Generative Programming and Component Engineering, 2011.

[19] Guillaume Marceau, Gregory H. Cooper, Jonathan P. Spiro, Shri-
ram Krishnamurthi, and Steven P. Reiss. The Design and Imple-
mentation of a Dataflow Language for Scriptable Debugging.
Automated Software Engineering 14(1), 2006.

[20] Marjan Mernik, Jan Heering, and Anthony M. Sloane. When and
How to Develop Domain-Specific Languages. ACM Computing
Surveys 37(4), 2005.

[21] Simon Van Mierlo, Claudio Gomes, and Hans Vangheluwe. Explicit
Modelling and Synthesis of Debuggers for Hybrid Simulation
Languages. In Proc. Sym. on Theory of Modeling and Simulation,
2017.

[22] Ronald A. Olsson, Richard H. Crawford, and W. Wilson Ho. Dalek:
A GNU, Improved Programmable Debugger. In Proc. USENIX
Technical Conf., 1990.

[23] Sam Tobin-Hochstadt, Vincent St-Amour, Ryan Culpepper,
Matthew Flatt, and Matthias Felleisen. Languages as Libraries.
In Proc. ACM Conf. Programming Language Design and Imple-
mentation, 2011.

[24] Martin P. Ward. Language Oriented Programming. SoftwareÐ

Concepts and Tools 15(4), 1994.

[25] Hui Wu, Jeff Gray, and Marjan Mernik. Grammar-Driven Genera-
tion of Domain-Specific Language Debuggers. SoftwareÐPractice
& Experience 38(10), 2008.

[26] Hui Wu, Jeff Gray, Suman Roychoudhury, and Marjan Mernik.
Weaving a Debugging Aspect into Domain-Specific Language
Grammars. In Proc. Sym. on Applied Computing, 2005.
