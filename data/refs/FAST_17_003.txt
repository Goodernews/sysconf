[1] ALLU, Y., DOUGLIS, F., KAMAT, M., SHILANE,
P., PATTERSON, H., AND ZHU, B. Evolution of
the Data Domain file system. IEEE Computer. To
appear.
[2] AMVROSIADIS, G., AND BHADKAMKAR, M.
Identifying trends in enterprise data protection systems. In USENIX Annual Technical Conference
(ATC’15) (July 2015), pp. 151–164.
[3] BELAZZOUGUI, D., BOTELHO, F. C., AND DIETZFELBINGER, M. Hash, displace, and compress.
In Algorithms-ESA 2009. Springer, 2009, pp. 682–
693.
[4] BOTELHO, F. C., PAGH, R., AND ZIVIANI,
N. Practical perfect hashing in nearly optimal space. Information Systems (June 2012).
http://dx.doi.org/10.1016/j.is.2012.06.002.
[5] BOTELHO, F. C., SHILANE, P., GARG, N., AND
HSU, W. Memory efficient sanitization of a deduplicated storage system. In USENIX Conference
on File and Storage Technologies (FAST’13) (Feb
2013).
[6] CHAMNESS, M. Capacity forecasting in a backup
storage environment. In 25th Large Installation System Administration Conference (LISA’11)
(2011).
[7] EMC CORP. EMC® Data Domain® Operating
System, Version 5.7, Administration Guide, Mar.
2016. https://support.emc.com/docu61787_
Data-Domain-Operating-System-5.7.
1-Administration-Guide.pdf?language=
en_US.
[8] FU, M., FENG, D., HUA, Y., HE, X., CHEN, Z.,
XIA, W., HUANG, F., AND LIU, Q. Accelerating restore and garbage collection in deduplicationbased backup systems via exploiting historical information. In USENIX Annual Technical Conference (ATC’14) (2014).
[9] GUO, F., AND EFSTATHOPOULOS, P. Building a high-performance deduplication system. In
USENIX Annual Technical Conference (ATC’11)
(2011).
[10] HAO, M., SOUNDARARAJAN, G.,
KENCHAMMANA-HOSEKOTE, D., CHIEN,
A. A., AND GUNAWI, H. S. The tail at store:
a revelation from millions of hours of disk and
ssd deployments. In 14th USENIX Conference on
File and Storage Technologies (FAST’16) (2016),
pp. 263–276.
[11] HUTCHINSON, N. C., MANLEY, S., FEDERWISCH, M., HARRIS, G., HITZ, D., KLEIMAN,
S., AND O’MALLEY, S. Logical vs. physical file
system backup. In Third Symposium on Operating Systems Design and Implementation (OSDI’99)
(1999).
[12] KACZMARCZYK, M., BARCZYNSKI, M., KILIAN, W., AND DUBNICKI, C. Reducing impact of
data fragmentation caused by in-line deduplication.
In Proceedings of the 5th Annual International Systems and Storage Conference (2012), ACM, p. 15.
[13] LILLIBRIDGE, M., ESHGHI, K., AND BHAGWAT, D. Improving restore speed for backup systems that use inline chunk-based deduplication. In
USENIX Conference on File and Storage Technologies (FAST’13) (Feb 2013).
[14] MAJEWSKI, B. S., WORMALD, N. C., HAVAS,
G., AND CZECH, Z. J. A family of perfect hashing
methods. The Computer Journal 39, 6 (1996), 547–
554.
[15] MATTHEWS, J. N., ROSELLI, D., COSTELLO,
A. M., WANG, R. Y., AND ANDERSON, T. E. Improving the performance of log-structured file systems with adaptive methods. In 16th ACM Symposium on Operating Systems Principles (1997),
SOSP’97.
[16] MERKLE, R. C. A digital signature based on a
conventional encryption function. In Advances in
Cryptology CRYPTO’87 (1988), Springer, pp. 369–
378.
[17] PAULO, J., AND PEREIRA, J. A survey and classification of storage deduplication systems. ACM
Computing Surveys 47, 1 (2014).
[18] PUTZE, F., SANDERS, P., AND SINGLER, J.
Cache-, hash-and space-efficient bloom filters. In
Experimental Algorithms, 6th International Workshop, WEA 2007, Lecture Notes in Computer Science 4525. Springer, 2007, pp. 108–121.
[19] ROSELLI, D. S., LORCH, J. R., ANDERSON,
T. E., ET AL. A comparison of file system workloads. In USENIX Annual Technical Conference,
general track (ATC’00) (2000), pp. 41–54.
[20] ROSENBLUM, M., AND OUSTERHOUT, J. K. The
design and implementation of a log-structured file
system. ACM Transactions on Computer Systems
(TOCS) 10, 1 (1992), 26–52.
[21] SIMHA, D. N., LU, M., AND CHIUEH, T.-C.
A scalable deduplication and garbage collection
engine for incremental backup. In 6th International Systems and Storage Conference (SYSTOR’13) (2013).
[22] STRZELCZAK, P., ADAMCZYK, E., HERMANIZYCKA, U., SAKOWICZ, J., SLUSARCZYK, L.,
WRONA, J., AND DUBNICKI, C. Concurrent
deletion in a distributed content-addressable storage system with global deduplication. In USENIX
Conference on File and Storage Technologies
(FAST’13) (2013).
[23] TARASOV, V., MUDRANKIT, A., BUIK, W., SHILANE, P., KUENNING, G., AND ZADOK, E. Generating realistic datasets for deduplication analysis.
In USENIX Annual Technical Conference (ATC’12)
(Jun 2012).
[24] WALLACE, G., DOUGLIS, F., QIAN, H., SHILANE, P., SMALDONE, S., CHAMNESS, M., AND
HSU, W. Characteristics of backup workloads in
production systems. In USENIX Conference on File
and Storage Technologies (FAST’12) (2012).
[25] WEI, J., JIANG, H., ZHOU, K., AND FENG,
D. MAD2: A scalable high-throughput exact
deduplication approach for network backup services. In Massive Storage Systems and Technologies (MSST’10) (2010), IEEE, pp. 1–14.
[26] WILKES, J., GOLDING, R., STAELIN, C., AND
SULLIVAN, T. The HP AutoRAID hierarchical
storage system. ACM Transactions on Computer
Systems (TOCS) 14, 1 (1996), 108–136.
[27] WILSON, P. R. Uniprocessor garbage collection
techniques. In Memory Management. Springer,
1992, pp. 1–42.
[28] XIA, W., JIANG, H., FENG, D., DOUGLIS, F.,
SHILANE, P., HUA, Y., FU, M., ZHANG, Y., AND
ZHOU, Y. A comprehensive study of the past,
present, and future of data deduplication. Proceedings of the IEEE 104, 9 (Sept. 2016), 1681–1710.
[29] ZHU, B., LI, K., AND PATTERSON, H. Avoiding
the disk bottleneck in the Data Domain deduplication file system. In USENIX Conference on File and
Storage Technologies (FAST’08) (Feb 2008).
