[1] 2017. Concurrency model and Event Loop. (2017). https://developer.mozilla.org/ en- US/docs/Web/JavaScript/EventLoop.
[2] 2017. Dromaeo: JavaScript Performance Testing. (2017). http://dromaeo.com/.
[3] 2017. Mochitest. (2017). https://developer.mozilla.org/en-US/docs/Mozilla/
Projects/Mochitest.
[4] 2017. Tor Browser. (2017). https://www.torproject.org/projects/torbrowser.html.
en.
175
Session A4: Browsers
CCS’17, October 30-November 3, 2017, Dallas, TX, USA
[5] 2017. Using the Mozilla build VM. (2017). https://developer.mozilla.org/en-US/ docs/Mozilla/Developer_guide/Using_the_VM.
[6] Amittai Aviram, Sen Hu, Bryan Ford, and Ramakrishna Gummadi. 2010. Deter- minating Timing Channels in Compute Clouds. In Proceedings of the 2010 ACM Workshop on Cloud Computing Security Workshop (CCSW ’10). ACM, New York, NY, USA, 103–108. https://doi.org/10.1145/1866835.1866854
[7] Michael Backes, Goran Doychev, and Boris Köpf. 2013. Preventing Side-Channel Leaks in Web Traffic: A Formal Approach. In 20th Annual Network and Distributed System Security Symposium, NDSS 2013, San Diego, California, USA, February 24-27, 2013.
[8] Andrew Bortz and Dan Boneh. 2007. Exposing Private Information by Timing Web Applications. In Proceedings of the 16th International Conference on World Wide Web (WWW ’07). ACM, New York, NY, USA, 621–628. https://doi.org/10. 1145/1242572.1242656
[9] Pablo Buiras, Amit Levy, Deian Stefan, Alejandro Russo, and David Mazieres. 2013. A library for removing cache-based attacks in concurrent information flow systems. In International Symposium on Trustworthy Global Computing. Springer, 199–216.
[10] Serdar Cabuk, Carla E. Brodley, and Clay Shields. 2004. IP Covert Timing Chan- nels: Design and Detection. In Proceedings of the 11th ACM Conference on Com- puter and Communications Security (CCS ’04). ACM, New York, NY, USA, 178–187. https://doi.org/10.1145/1030083.1030108
[11] Yinzhi Cao, Xiang Pan, Yan Chen, and Jianwei Zhuge. 2014. JShield: Towards Real- time and Vulnerability-based Detection of Polluted Drive-by Download Attacks. In Proceedings of the 30th Annual Computer Security Applications Conference (ACSAC).
[12] Ang Chen, W. Brad Moore, Hanjun Xiao, Andreas Haeberlen, Linh Thi Xuan Phan, Micah Sherr, and Wenchao Zhou. 2014. Detecting Covert Timing Channels with Time-Deterministic Replay. In 11th USENIX Symposium on Operating Systems Design and Implementation (OSDI 14). USENIX Association, Broomfield, CO, 541– 554. https://www.usenix.org/conference/osdi14/technical-sessions/presentation/ chen_ang
[13] Shuo Chen, Rui Wang, XiaoFeng Wang, and Kehuan Zhang. 2010. Side-Channel Leaks in Web Applications: A Reality Today, a Challenge Tomorrow. In Proceed- ings of the 2010 IEEE Symposium on Security and Privacy (SP ’10). IEEE Computer Society, Washington, DC, USA, 191–206. https://doi.org/10.1109/SP.2010.20
[14] Heming Cui, Jiri Simsa, Yi-Hong Lin, Hao Li, Ben Blum, Xinan Xu, Junfeng Yang, Garth A. Gibson, and Randal E. Bryant. 2013. Parrot: a Practical Runtime for Deterministic, Stable, and Reliable Threads. In Proceedings of the 24th ACM Symposium on Operating Systems Principles (SOSP ’13).
[15] Heming Cui, Jingyue Wu, John Gallagher, Huayang Guo, and Junfeng Yang. 2011. Efficient Deterministic Multithreading through Schedule Relaxation. In Proceedings of the 23rd ACM Symposium on Operating Systems Principles (SOSP ’11). 337–351.
[16] Heming Cui, Jingyue Wu, Chia-Che Tsai, and Junfeng Yang. 2010. Stable Deter- ministic Multithreading through Schedule Memoization. In Proceedings of the Ninth Symposium on Operating Systems Design and Implementation (OSDI ’10).
[17] Charlie Curtsinger, Benjamin Livshits, Benjamin Zorn, and Christian Seifert. 2011. ZOZZLE: Fast and Precise In-browser JavaScript Malware Detection. In Proceedings of the 20th USENIX Conference on Security.
[18] Edward W. Felten and Michael A. Schneider. 2000. Timing Attacks on Web Privacy. In Proceedings of the 7th ACM Conference on Computer and Communications Security (CCS ’00). ACM, New York, NY, USA, 25–32. https://doi.org/10.1145/ 352600.352606
[19] Steven Gianvecchio and Haining Wang. 2007. Detecting covert timing channels: an entropy-based approach.. In ACM Conference on Computer and Communica- tions Security (2008-02-22), Peng Ning, Sabrina De Capitani di Vimercati, and Paul F. Syverson (Eds.). ACM, 307–316. http://dblp.uni-trier.de/db/conf/ccs/ ccs2007.html#GianvecchioW07
[20] Ben Gras, Kaveh Razavi, Erik Bosman, Herbert Bos, and Cristiano Giuffrida. 2017. ASLR on the Line: Practical Cache Attacks on the MMU. In Annual Network and Distributed System Security Symposium (NDSS).
[21] Wei-Ming Hu. 1992. Reducing Timing Channels with Fuzzy Time. Journal of Computer Security 1, 3-4 (May 1992), 233–254. http://dl.acm.org/citation.cfm?id= 2699806.2699810
[22] Marieke Huisman, Pratik Worah, and Kim Sunesen. 2006. A Temporal Logic Char- acterisation of Observational Determinism.. In CSFW. IEEE Computer Society, 3. http://dblp.uni- trier.de/db/conf/csfw/csfw2006.html#HuismanWS06
[23] Ralf Hund, Carsten Willems, and Thorsten Holz. 2013. Practical Timing Side Channel Attacks Against Kernel Space ASLR. In Proceedings of the 2013 IEEE Symposium on Security and Privacy (SP ’13). IEEE Computer Society, Washington, DC, USA, 191–205. https://doi.org/10.1109/SP.2013.23
[24] David R. Jefferson. 1985. Virtual Time. ACM Trans. Program. Lang. Syst. 7, 3 (July 1985), 404–425. https://doi.org/10.1145/3916.3988
[25] Paul C. Kocher. 1996. Timing Attacks on Implementations of Diffie-Hellman, RSA, DSS, and Other Systems. In Proceedings of the 16th Annual International Cryptology Conference on Advances in Cryptology (CRYPTO ’96). Springer-Verlag, London, UK, UK, 104–113. http://dl.acm.org/citation.cfm?id=646761.706156
[26] David Kohlbrenner and Hovav Shacham. 2016. Trusted Browsers for Uncertain Times. In 25th USENIX Security Symposium (USENIX Security 16). USENIX Associa- tion, Austin, TX, 463–480. https://www.usenix.org/conference/usenixsecurity16/ technical- sessions/presentation/kohlbrenner
[27] Robert Kotcher, Yutong Pei, Pranjal Jumde, and Collin Jackson. 2013. Cross-origin Pixel Stealing: Timing Attacks Using CSS Filters. In Proceedings of the 2013 ACM SIGSAC Conference on Computer &#38; Communications Security (CCS ’13). ACM, New York, NY, USA, 1055–1062. https://doi.org/10.1145/2508859.2516712
[28] Leslie Lamport. 1978. Time, Clocks, and the Ordering of Events in a Distributed System. Commun. ACM 21, 7 (July 1978), 558–565. https://doi.org/10.1145/359545. 359563
[29] Peng Li, Debin Gao, and Michael K. Reiter. 2013. Mitigating access-driven timing channels in clouds using StopWatch. In 2013 43rd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN), Budapest, Hungary, June 24-27, 2013. 1–12.
[30] Peng Li, Debin Gao, and Michael K. Reiter. 2014. StopWatch: A Cloud Architecture for Timing Channel Mitigation. ACM Trans. Inf. Syst. Secur. 17, 2, Article 8 (Nov. 2014), 28 pages. https://doi.org/10.1145/2670940
[31] Tongping Liu, Charlie Curtsinger, and Emery D Berger. 2011. Dthreads: efficient deterministic multithreading. In Proceedings of the Twenty-Third ACM Symposium on Operating Systems Principles. ACM, 327–336.
[32] Yali Liu, Dipak Ghosal, Frederik Armknecht, Ahmad-Reza Sadeghi, Steffen Schulz, and Stefan Katzenbeisser. 2009. Hide and Seek in Time - Robust Covert Timing Channels.. In ESORICS (Lecture Notes in Computer Science), Michael Backes and Peng Ning (Eds.), Vol. 5789. Springer, 120–135. http://dblp.uni-trier.de/db/conf/ esorics/esorics2009.html#LiuGASSK09
[33] Keaton Mowery, Dillon Bogenreif, Scott Yilek, and Hovav Shacham. 2011. Fin- gerprinting information in JavaScript implementations. In WEB 2.0 SECURITY & PRIVACY (W2SP).
[34] Martin Mulazzani, Philipp Reschl, Markus Huber, Manuel Leithner, Sebastian Schrittwieser, Edgar Weippl, and FC Wien. 2013. Fast and reliable browser identification with javascript engine fingerprinting. In WEB 2.0 SECURITY & PRIVACY (W2SP).
[35] Nick Nikiforakis, Wouter Joosen, and Benjamin Livshits. 2015. PriVaricator: Deceiving Fingerprinters with Little White Lies. In Proceedings of the 24th Inter- national Conference on World Wide Web (WWW ’15). ACM, New York, NY, USA, 820–830. https://doi.org/10.1145/2736277.2741090
[36] Peng Ning, Douglas S. Reeves, and Pai Peng. 2006. On the Secrecy of Timing- Based Active Watermarking Trace-Back Techniques. IEEE Symposium on Security and Privacy (2006).
[37] Marek Olszewski, Jason Ansel, and Saman Amarasinghe. 2009. Kendo: efficient deterministic multithreading in software. ACM Sigplan Notices 44, 3 (2009), 97–108.
[38] Yossef Oren, Vasileios P. Kemerlis, Simha Sethumadhavan, and Angelos D. Keromytis. 2015. The Spy in the Sandbox: Practical Cache Attacks in JavaScript and Their Implications. In Proceedings of the 22Nd ACM SIGSAC Conference on Computer and Communications Security (CCS ’15). ACM, New York, NY, USA, 1406–1418. https://doi.org/10.1145/2810103.2813708
[39] Xiang Pan, Yinzhi Cao, and Yan Chen. 2015. I Do Not Know What You Visited Last Summer - Protecting users from third-party web tracking with TrackingFree browser. In NDSS.
[40] Xiang Pan, Yinzhi Cao, Shuangping Liu, Yu Zhou, Yan Chen, and Tingzhe Zhou. 2016. CSPAutoGen: Black-box Enforcement of Content Security Policy Upon Real- world Websites. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS ’16). ACM, New York, NY, USA, 653–665. https://doi.org/10.1145/2976749.2978384
[41] Andrei Sabelfeld and David Sands. 2000. Probabilistic noninterference for multi- threaded programs. In Computer Security Foundations Workshop, 2000. CSFW-13. Proceedings. 13th IEEE. IEEE, 200–214.
[42] Geoffrey Smith and Dennis Volpano. 1998. Secure Information Flow in a Multi- threaded Imperative Language. In Proceedings of the 25th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL ’98). ACM, New York, NY, USA, 355–364. https://doi.org/10.1145/268946.268975
[43] Deian Stefan, Pablo Buiras, Edward Z Yang, Amit Levy, David Terei, Alejandro Russo, and David Mazières. 2013. Eliminating cache-based timing attacks with instruction-based scheduling. In European Symposium on Research in Computer Security. Springer, 718–735.
[44] Paul Stone. 2013. Pixel perfect timing attacks with HTML5 (White Paper). (2013).
[45] Tom Van Goethem, Wouter Joosen, and Nick Nikiforakis. 2015. The Clock is Still Ticking: Timing Attacks in the Modern Web. In Proceedings of the 22Nd ACM SIGSAC Conference on Computer and Communications Security (CCS ’15). ACM,
New York, NY, USA, 1382–1393. https://doi.org/10.1145/2810103.2813632
[46] Tom Van Goethem, Mathy Vanhoef, Frank Piessens, and Wouter Joosen. 2016. Request and Conquer: Exposing Cross-Origin Resource Size. In Proceedings of
the 21st USENIX Conference on Security Symposium (Security).
[47] Dennis Volpano and Geoffrey Smith. 1997. Eliminating covert flows with min- imum typings. In Computer Security Foundations Workshop, 1997. Proceedings.,
10th. IEEE, 156–168.
176

Session A4: Browsers
CCS’17, October 30-November 3, 2017, Dallas, TX, USA
[48] Weiyi Wu and Bryan Ford. 2015. Deterministically Deterring Timing Attacks in Deterland. In Conference on Timely Results in Operating Systems (TRIOS).
[49] Junfeng Yang, Heming Cui, Jingyue Wu, Yang Tang, and Gang Hu. 2014. Determin- ism Is Not Enough: Making Parallel Programs Reliable with Stable Multithreading. (2014).
[50] Steve Zdancewic and Andrew C. Myers. 2003. Observational Determinism for Concurrent Program Security. In 16th IEEE Computer Security Foundations Work- shop (CSFW-16 2003), 30 June - 2 July 2003, Pacific Grove, CA, USA. 29.
[51] Danfeng Zhang, Aslan Askarov, and Andrew C. Myers. 2012. Language-based control and mitigation of timing channels. In ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI ’12, Beijing, China - June 11 - 16, 2012. 99–110.
[52] Yinqian Zhang, Ari Juels, Alina Oprea, and Michael K. Reiter. 2011. HomeAlone: Co-residency Detection in the Cloud via Side-Channel Analysis. In Proceedings of the 2011 IEEE Symposium on Security and Privacy (SP ’11). IEEE Computer Society, Washington, DC, USA, 313–328. https://doi.org/10.1109/SP.2011.31
[53] Yinqian Zhang, Ari Juels, Michael K. Reiter, and Thomas Ristenpart. 2012. Cross- VM Side Channels and Their Use to Extract Private Keys. In Proceedings of the 2012 ACM Conference on Computer and Communications Security (CCS ’12). ACM, New York, NY, USA, 305–316. https://doi.org/10.1145/2382196.2382230
