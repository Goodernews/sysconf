[1] Ocean Cluster for Experimental Architectures in Networks
(OCEAN). http://ocean.cs.illinois.edu/.
[2] Project Floodlight.
floodlight/.

www.projectfloodlight.org/

[3] SciPass: IDS load balancer and science DMZ.
https://github.com/GlobalNOC/SciPass/
releases/tag/1.0.4.
[4] ONS 2014 Keynote: A. Greenberg, Microsoft Azure. http:
//www.youtube.com/watch?v=8Kyoj3bKepY,
2014.
[5] M. Ahamad, G. Neiger, J. E. Burns, P. Kohli, and P. W. Hutto.
Causal memory: Definitions, implementation, and programming. Distributed Computing, 9(1), 1995.

port, 2017. http://webhost.engr.illinois.edu/
˜ghorban2/papers/coconut_tr.pdf.
[20] S. Ghorbani, C. Schlesinger, M. Monaco, E. Keller, M. Caesar, J. Rexford, and D. Walker. Transparent, live migration of
a software-defined network. In SoCC, 2014.

[21] A. Greenberg, N. Jain, S. Kandula, C. Kim, P. Lahiri,
D. Maltz, P. Patel, and S. Sengupta. VL2: A scalable and
flexible data center network. In SIGCOMM, 2009.

[22] J. Gross, T. Sridhar, P. Garg, C. Wright, I. Ganga, P. Agarwal,
K. Duda, D. Dutt, and J. Hudson. Geneve: Generic network
virtualization encapsulation. IETF draft, 2014.

[23] N. Handigol, B. Heller, V. Jeyakumar, B. Lantz, and N. McKeown. Reproducible network experiments using containerbased emulation. In CONEXT, 2012.

[24] K. He, J. Khalid, S. Das, A. Akella, E. L. Li, and M. Thottan.
Mazu: Taming latency in software defined networks. Technical report, 2014. http://minds.wisconsin.edu/
handle/1793/ 68830.

[25] C.-Y. Hong, S. Kandula, R. Mahajan, M. Zhang, V. Gill,
M. Nanduri, and R. Wattenhofer. Achieving high utilization
with software-driven WAN. In SIGCOMM, 2013.

[26] D. Y. Huang, K. Yocum, and A. C. Snoeren. High-fidelity
switch models for software-defined network emulation. In
HotSDN, 2013.

[27] S. Jain, A. Kumar, S. Mandal, J. Ong, L. Poutievski, A. Singh,
S. Venkata, J. Wanderer, J. Zhou, M. Zhu, et al. B4: Experience with a globally-deployed software defined WAN. In
SIGCOMM, 2013.

[28] X. Jin, J. Gossels, J. Rexford, and D. Walker. Covisor: A
compositional hypervisor for software-defined networks. In
NSDI, 2015.

[29] X. Jin, H. H. Liu, R. Gandhi, S. Kandula, R. Mahajan,
M. Zhang, J. Rexford, and R. Wattenhofer. Dynamic scheduling of network updates. In SIGCOMM, 2014.

[30] J. P. John, E. Katz-Bassett, A. Krishnamurthy, T. Anderson,
and A. Venkataramani. Consensus routing: The Internet as a
distributed system. In NSDI, 2008.

[31] B. G. J6zsa and M. Makai. On the solution of reroute sequence
planning problem in mpls networks. Computer Networks,
42(2):199-210, 2003.

[32] N. P. Katta, O. Alipourfard, J. Rexford, and D. Walker. Infinite
cacheflow in software-defined networks. In HotSDN, 2014.

[33] N. P. Katta, J. Rexford, and D. Walker. Incremental consistent
updates. In HotSDN, 2013.

[34] P. Kazemian, M. Chan, H. Zeng, G. Varghese, N. McKeown,
and S. Whyte. Real time network policy checking using
header space analysis. In NSDI, 2013.

[35] A. Khurshid, X. Zou, W. Zhou, M. Caesar, and P. Godfrey.
VeriFlow: Verifying network-wide invariants in real time. In
NSDI, 2013.

[36] H. Kim, T. Benson, A. Akella, and N. Feamster. The evolution
of network configuration: a tale of two campuses. In IMC,
2011.

[37] T. Koponen, K. Amidon, P. Balland, M. Casado, A. Chanda,
B. Fulton, I. Ganichev, J. Gross, N. Gude, P. Ingram, et al.
Network virtualization in multi-tenant datacenters. In NSDI,
2014.

[38] L. Lamport. Time, clocks, and the ordering of events in a
distributed system. Communications of the ACM, 21(7):558565, 1978.

[39] W. Liu, R. B. Bobba, S. Mohan, and R. H. Campbell. Interflow consistency: Novel SDN update abstraction for supporting inter-flow constraints. In SENT, 2015.

[40] A. Ludwig, M. Rost, D. Foucard, and S. Schmid. Good network updates for bad packets: Waypoint enforcement beyond
destination-based routing policies. HotNets, 2014.

[41] N. Lynch, R. Segala, and F Vaandrager. Hybrid I/O automata.
Information and Computation, 185(1):105—-157, 2003.

[42] M Ciosi et al. Network functions virtualization. Technical
report, ETSI, 2013. http: //goo.g1/Q84Bxi.

[43] R. Mahajan and R. Wattenhofer. On consistent updates in
software-defined networks. In HotNets, 2013.

[44] J. McClurg, H. Hojjat, P. Cerny, and N. Foster. Efficient
synthesis of network updates. In PLDI, 2015.

[45] N. McKeown, T. Anderson, H. Balakrishnan, G. Parulkar,
L. Peterson, J. Rexford, S. Shenker, and J. Turner. OpenFlow:
enabling innovation in campus networks. CCR, 38(2), 2008.

[46] C. Monsanto, J. Reich, N. Foster, J. Rexford, D. Walker, et al.
Composing software defined networks. In NSDI, 2013.

[47] P. Patel, D. Bansal, L. Yuan, A. Murthy, A. Greenberg, D. A.
Maltz, R. Kern, H. Kumar, M. Zikos, H. Wu, et al. Ananta:
Cloud scale load balancing. In CCR, volume 43, 2013.

[48] I. Pepelnjak. DefenseFlow NetFlow and SDN based DDoS attack defense. http://www. radware.com/Products/
DefenseF low.

[49] I. Pepelnjak. Real-life SDN/OpenFlow  applications. http://blog.ipspace.net/2013/06/
real-life-sdnopenflow-applications.html.

[50] B. Pfaff, J. Pettit, T. Koponen, E. J. Jackson, A. Zhou, J. Rajahalme, J. Gross, A. Wang, J. Stringer, P. Shelar, et al. The
design and implementation of Open vSwitch. In NSDJ, 2015.

[51] B. Raghavan, M. Casado, T. Koponen, S. Ratnasamy, A. Ghodsi, and S. Shenker. Software-defined internet architecture: decoupling architecture from infrastructure. In HotSDN,
2012.

[52] S. Rajagopalan, D. Williams, H. Jamjoom, and A. Warfield.
Split/merge: System support for elastic execution in virtual
middleboxes. In NSDI, 2013.

[53] M. Reitblatt, N. Foster, J. Rexford, C. Schlesinger, and
D. Walker. Abstractions for network update. In SIGCOMM,
2012.

[54] Rob Sherwood. Modern OpenFlow and SDN.
http://bigswitch. com/blog/2014/06/02/
modern-openflow-and-sdn-part—ii, 2015.

[55] A. Roy, H. Zeng, J. Bagga, G. Porter, and A. C. Snoeren. In
side the social network’s (datacenter) network. In SIGCOMM,
2015.

[56] R. Schwarz and F. Mattern. Detecting causal relationships
in distributed computations: In search of the holy grail. Distributed computing, 73), 1994.

[57] SDN for the cloud. SIGCOMM 2015 Keynote: A. Greenberg,
Microsoft Azure, 2015.

[58] A. Sharma. Bro: Actively defending so that you can do other
stuff. In BroCon, 2014.

[59] N. Shelly, E. Jackson, T. Koponen, N. McKeown, and J. Rajahalme. Flow caching for high entropy packet fields. In
HotSDN, 2014.

[60] R. Sherwood, G. Gibb, K.-K. Yap, G. Appenzeller,
M. Casado, N. McKeown, and G. Parulkar. Can the production network be the testbed? In OSDI, 2010.

[61] D. B. Terry, A. J. Demers, K. Petersen, M. J. Spreitzer, M. M.
Theimer, and B. B. Welch. Session guarantees for weakly
consistent replicated data. In PDIS, 1994.

[62] M. Yu, J. Rexford, M. J. Freedman, and J. Wang. Scalable
flow-based networking with DIFANE. In SIGCOMM, 2011.

[63] M. Yu, Y. Yi, J. Rexford, and M. Chiang. Rethinking virtual
network embedding: substrate support for path splitting and
migration. CCR, 2008.