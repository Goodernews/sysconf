[1] N. Agrawal, V. Prabhakaran, T. Wobber, J. D. Davis,
M. Manasse, and R. Panigrahy. Design Tradeoffs for
SSD Performance. In USENIX 2008 Annual Technical
Conference, ATC’08, pages 57–70, 2008.
[2] D. G. Andersen, J. Franklin, M. Kaminsky,
A. Phanishayee, L. Tan, and V. Vasudevan. FAWN: A
Fast Array of Wimpy Nodes. In Proceedings of the
ACM SIGOPS 22nd symposium on Operating systems
principles, pages 1–14. ACM, 2009.
[3] A. Z. Broder. Some Applications of Rabin’s
Fingerprinting Method. In Sequences II, pages
143–152. Springer, 1993.
[4] P. Buschman. Deduplication and Incremental
Acceleration in Bacula with NetApp Technologies,
2012.
[5] F. Chang, J. Dean, S. Ghemawat, W. C. Hsieh, D. A.
Wallach, M. Burrows, T. Chandra, A. Fikes, and R. E.
Gruber. Bigtable: A Distributed Storage System for
Structured Data. ACM Transactions on Computer
Systems (TOCS), 26(2):4, 2008.
[6] F. Chen, T. Luo, and X. Zhang. CAFTL: A
Content-aware Flash Translation Layer Enhancing the
Lifespan of Flash Memory Based Solid State Drives.
In Proceedings of the 9th USENIX Conference on File
and Stroage Technologies, 2011.
[7] Z. Chen and K. Shen. Ordermergededup: Efficient,
Failure-Consistent Deduplication on Flash. In 14th
USENIX Conference on File and Storage Technologies
(FAST 16), pages 291–299, 2016.
[8] Y. Cui, Z. Lai, X. Wang, N. Dai, and C. Miao.
Quicksync: Improving Synchronization Efficiency for
Mobile Cloud Storage Services. In Proceedings of the
21st Annual International Conference on Mobile
Computing and Networking. ACM, 2015.
[9] B. Debnath, S. Sengupta, and J. Li. FlashStore: High
Throughput Persistent Key-Value Store. Proceedings
of the VLDB Endowment, 3(1-2):1414–1425, 2010.
[10] B. Debnath, S. Sengupta, and J. Li. SkimpyStash:
RAM Space Skimpy Key-Value Store on Flash-based
Storage. In Proceedings of the 2011 ACM SIGMOD
International Conference on Management of data,
pages 25–36. ACM, 2011.
[11] C. Dirik and B. Jacob. The Performance of PC
Solid-State Disks (SSDs) As a Function of Bandwidth,
Concurrency, Device Architecture, and System
Organization. In Proceedings of the 36th Annual
International Symposium on Computer Architecture,
ISCA ’09, pages 279–289. ACM, 2009.
[12] Facebook. RocksDB. http://rocksdb.org/, 2013.
[13] S. Ghemawat and J. Dean. Leveldb.
https://github.com/google/leveldb, 2011.
[14] W.-H. Kang, S.-W. Lee, B. Moon, Y.-S. Kee, and
M. Oh. Durable Write Cache in Flash Memory SSD
for Relational and NoSQL Databases. In Proceedings
of the 2014 ACM SIGMOD international conference
on Management of data, pages 529–540. ACM, 2014.
[15] J. Kim, C. Lee, S. Lee, I. Son, J. Choi, S. Yoon, H.-u.
Lee, S. Kang, Y. Won, and J. Cha. Deduplication in
SSDs: Model and Quantitative Analysis. In Mass
Storage Systems and Technologies (MSST), 2012
IEEE 28th Symposium on, pages 1–12. IEEE, 2012.

[16] E. Kruus, C. Ungureanu, and C. Dubnicki. Bimodal
Content Defined Chunking for Backup Streams. In
Proceedings of the 8th USENIX Conference on File
and Storage Technologies, FAST’10, pages 18–18,
Berkeley, CA, USA, 2010. USENIX Association.
[17] S.-W. Lee, B. Moon, C. Park, J.-M. Kim, and S.-W.
Kim. A Case for Flash Memory SSD in Enterprise
Database Applications. In Proceedings of the 2008
ACM SIGMOD international conference on
Management of data, pages 1075–1086. ACM, 2008.
[18] D. Meister and A. Brinkmann. dedupv1: Improving
Deduplication Throughput using Solid State Drives
(SSD). In Mass Storage Systems and Technologies
(MSST), 2010 IEEE 26th Symposium on, pages 1–6.
IEEE, 2010.
[19] J. Ouyang, S. Lin, S. Jiang, Z. Hou, Y. Wang, and
Y. Wang. SDF: Software-Defined Flash for Web-scale
Internet Storage Systems. SIGARCH Comput. Archit.
News, 42(1):471–484, Feb. 2014.
[20] P. Shetty, R. P. Spillane, R. Malpani, B. Andrews,
J. Seyster, and E. Zadok. Building
Workload-Independent Storage with VT-trees. In 11th
USENIX Conference on File and Storage Technologies
(FAST 16), pages 17–30. USENIX Association, 2013.
[21] G. Soundararajan, V. Prabhakaran, M. Balakrishnan,
and T. Wobber. Extending SSD Lifetimes with
Disk-based Write Caches. In Proceedings of the 8th
USENIX Conference on File and Storage
Technologies, FAST’10. USENIX Association, 2010.
[22] K. Srinivasan, T. Bisson, G. Goodson, and
K. Voruganti. iDedup: Latency-Aware, Inline Data
Deduplication for Primary Storage. In Proceedings of
the 10th USENIX Conference on File and Storage
Technologies, FAST’12, pages 24–24, Berkeley, CA,
USA, 2012. USENIX Association.
[23] V. Tarasov, D. Jain, G. Kuenning, S. Mandal,
K. Palanisami, P. Shilane, S. Trehan, and E. Zadok.
Dmdedup: Device Mapper Target for Data
Deduplication. In Ottawa Linux Symp., Ottawa,
Canada, 2014.
[24] G. Wu and X. He. Delta-FTL: Improving SSD
Lifetime via Exploiting Content Locality. In
Proceedings of the 7th ACM european conference on
Computer Systems, pages 253–266. ACM, 2012.
[25] X. Wu, Y. Xu, Z. Shao, and S. Jiang. LSM-trie: an
LSM-tree-based Ultra-Large Key-Value Store for
Small Data. In Proceedings of the 2015 USENIX
Conference on Usenix Annual Technical Conference,
pages 71–82. USENIX Association, 2015.
[26] W. Xia, H. Jiang, D. Feng, F. Douglis, P. Shilane,
Y. Hua, M. Fu, Y. Zhang, and Y. Zhou. A
Comprehensive Study of the Past, Present, and Future
of Data Deduplication. Proceedings of the IEEE,
104(9):1681–1710, 2016.
[27] W. Xia, H. Jiang, D. Feng, L. Tian, M. Fu, and
Y. Zhou. Ddelta: A Deduplication-inspired Fast Delta
Compression Approach. Performance Evaluation,
79:258–272, 2014.
[28] Q. Yang and J. Ren. I-CASH : Intelligently Coupled
Array of SSD and HDD. In High Performance
Computer Architecture (HPCA), 2011 IEEE 17th
International Symposium on. IEEE, 2011.
