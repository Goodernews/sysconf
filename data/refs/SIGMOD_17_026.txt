
[1] DBpedia. http://wiki.dbpedia.org/Downloads2014.
[2] Full version.

http://homepages.inf.ed.ac.uk/s1368930/inc-full.pdf.

[3] SNAP. http://snap.stanford.edu/data/index.html.
[4] S. Abiteboul, J. McHugh, M. Rys, V. Vassalos, and

J. L. Wiener. Incremental maintenance for
materialized views over semistructured data. In
VLDB, 1998.

[5] U. A. Acar. Self-Adjusting Computation. PhD thesis,

CMU, 2005.

[6] U. A. Acar, G. E. Blelloch, and R. Harper. Adaptive

functional programming. In POPL, 2002.

[7] V. M. Antimirov. Partial derivatives of regular

expressions and ﬁnite automaton constructions. TCS,
155(2), 1996.

[8] G. Bhalotia, A. Hulgeri, C. Nakhe, S. Chakrabarti,

and S. Sudarshan. Keyword searching and browsing in
databases using BANKS. In ICDE, 2002.

[9] P. Bhatotia, A. Wieder, R. Rodrigues, U. A. Acar,

and R. Pasquin. Incoop: MapReduce for incremental
computations. In SOCC, 2011.

[10] P. K. Bhatotia. Incremental Parallel and Distributed

Systems. PhD thesis, Saarland University, 2015.

[11] A. Bonifati, M. H. Goodfellow, I. Manolescu, and

D. Sileo. Algebraic incremental maintenance of XML
views. TODS, 38(3):14, 2013.

[12] R. Bramandia, B. Choi, and W. K. Ng. On

incremental maintenance of 2-hop labeling of graphs.
In WWW, 2008.

[13] P. Burkhardt and C. Waring. An NSA big graph

experiment. Technical Report
NSA-RD-2013-056002v1, U.S. National Security
Agency, 2013.

[14] L. S. Colby, T. Griﬃn, L. Libkin, I. S. Mumick, and

H. Trickey. Algorithms for deferred view maintenance.
In SIGMOD, 1996.

[15] L. P. Cordella, P. Foggia, C. Sansone, and M. Vento.

A (sub)graph isomorphism algorithm for matching
large graphs. IEEE Trans. Pattern Anal. Mach.
Intell., 26(10):1367–1372, 2004.

[16] C. Demetrescu, D. Eppstein, Z. Galil, and G. F.

Italiano. Dynamic graph algorithms. In Algorithms
and theory of computation handbook. Chapman &
Hall/CRC, 2010.

[17] W. Fan, X. Wang, and Y. Wu. Incremental graph

pattern matching. TODS, 38(3), 2013.

[18] W. Fan, X. Wang, and Y. Wu. Distributed graph
simulation: Impossibility and possibility. PVLDB,
7(12), 2014.

[19] W. Fan, X. Wang, and Y. Wu. Querying big graphs

within bounded resources. In SIGMOD, 2014.

[20] W. Fan, Y. Wu, and J. Xu. Functional dependencies

for graphs. In SIGMOD, 2016.

[21] W. Fan, J. Xu, Y. Wu, W. Yu, J. Jiang, Z. Zheng,

B. Zhang, Y. Cao, and C. Tian. Parallelizing
sequential graph computations. In SIGMOD, 2017.

[22] M. A. Gallego, J. D. Fern´andez, M. A.

Mart´ınez-Prieto, and P. de la Fuente. An empirical
study of real-world SPARQL queries. In USEWOD
workshop, 2011.

[23] I. Grujic, S. Bogdanovic-Dinic, and L. Stoimenov.
Collecting and analyzing data from e-government
facebook pages. In ICT Innovations, 2014.

[24] A. Gupta, H. V. Jagadish, and I. S. Mumick. Data

integration using self-maintainable views. In EDBT,
1996.

[25] A. Gupta, I. S. Mumick, and V. S. Subrahmanian.

Maintaining views incrementally. In SIGMOD, 1993.

[26] B. Haeupler, T. Kavitha, R. Mathew, S. Sen, and

R. E. Tarjan. Incremental cycle detection, topological
ordering, and strong component maintenance. ACM
Trans. Algorithms, 8(1):3, 2012.

[27] H. He, H. Wang, J. Yang, and P. S. Yu. Blinks: ranked

keyword searches on graphs. In SIGMOD, 2007.

[28] M. R. Henzinger and V. King. Maintaining minimum

spanning trees in dynamic graphs. In ICALP, 1997.
[29] J. Hromkovic, S. Seibert, and T. Wilke. Translating

regular expressions into small ε-free nondeterministic
ﬁnite automata. J. Comput. Syst. Sci., 62(4):565–588,
2001.

[30] V. Kacholia, S. Pandit, S. Chakrabarti, S. Sudarshan,

R. Desai, and H. Karambelkar. Bidirectional
expansion for keyword search on graph databases. In
VLDB, 2005.

[31] H. A. Kuno and E. A. Rundensteiner. Incremental

maintenance of materialized object-oriented views in
multiview: Strategies and performance evaluation.
TKDE, 10(5):768–792, 1998.

[32] J. Lacki. Improved deterministic algorithms for
decremental reachability and strongly connected
components. ACM Trans. Algorithms, 9(3):27, 2013.

[33] A. O. Mendelzon and P. T. Wood. Finding regular
simple paths in graph databases. SICOMP, 24(6),
1995.

[34] A. Ntoulas, J. Cho, and C. Olston. What’s new on the

Web? The evolution of the Web from a search engine
perspective. In WWW, 2004.

[35] C. H. Papadimitriou. Computational Complexity.

Addison-Wesley, 1994.

[36] W. Pugh and T. Teitelbaum. Incremental

computation via function caching. In POPL, 1989.

[37] L. Qin, J. X. Yu, L. Chang, H. Cheng, C. Zhang, and
X. Lin. Scalable big graph processing in mapreduce. In
SIGMOD, 2014.

[38] G. Ramalingam and T. Reps. On the computational

complexity of dynamic graph problems. TCS,
158(1-2), 1996.

[39] G. Ramalingam and T. W. Reps. An incremental
algorithm for a generalization of the shortest-path
problem. J. Algorithms, 21(2):267–305, 1996.

[40] L. Roditty and U. Zwick. A fully dynamic reachability

algorithm for directed graphs with an almost linear
update time. In STOC, 2004.

[41] D. Saha. An incremental bisimulation algorithm. In

FSTTCS, 2007.

[42] A. Stotz, R. Nagi, and M. Sudit. Incremental graph

matching for situation awareness. FUSION, 2009.

[43] R. Tarjan. Depth-ﬁrst search and linear graph

algorithms. SICOMP, 1(2):146–160, 1972.

[44] T. Teitelbaum and T. W. Reps. The cornell program

synthesizer: A syntax-directed programming
environment. Commun. ACM, 24(9):563–573, 1981.
