[1] N. Shavit, “Data structures in the multicore age,’ Commun. ACM,
vol. 54, no. 3, pp. 76-84, 2011.

[2] A. Natarajan and N. Mittal, “Fast concurrent lock-free binary search
trees,” PPoPP, pp. 317-328, 2014.

[3] D. Drachsler, M. Vechev, and E. Yahav, “Practical concurrent binary
search trees via logical ordering,’ PPoPP, pp. 343-356, 2014.

[4] T. Crain, V. Gramoli, and M. Raynal, “A contention-friendly binary
search tree,” in ICPP, pp. 229-240, 2013.

[5] FE Ellen, P. Fatourou, E. Ruppert, and F. van Breugel, “Non-blocking
binary search trees,’ PODC, pp. 131-140, 2010.

[6] N. G. Bronson, J. Casper, H. Chafi, and K. Olukotun, “A practical
concurrent binary search tree,’ PPoPP, pp. 257-268, 2010.

[7] T. H. Cormen, C. E. Leiserson, R. L. Rivest, and C. Stein, Introduction
to Algorithms. The MIT Press, 3rd ed., 2009.

[8] V. Gramoli, “More than you ever wanted to know about synchronization: Synchrobench, measuring the impact of the synchronization on
concurrent algorithms,” PPoPP, pp. 1-10, 2015.

[9] T. J. Lehman and M. J. Carey, “A study of index structures for main
memory database management systems,” VLDB, pp. 294-303, 1986.

[10] http://docs.oracle.com/java7/api/.

[11] M. Herlihy and N. Shavit, The Art of Multiprocessor Programming.
Morgan Kaufmann Publishers, 2008.

[12] M. P. Herlihy and J. M. Wing, “Linearizability: A correctness condition
for concurrent objects,’ ACM Trans. Program. Lang. Syst., vol. 12, no. 3,
pp. 463-492, 1990.

[13] “Synchrobench.” https://github.com/gramoli/synchrobench.

[14] “perf tool.” https://perf.wiki.kernel.org/index.php.

[15] J. Jobson, “Multiple linear regression,” in Applied Multivariate Data
Analysis, vol. 53 of Springer Texts in Statistics, pp. 219-398, 1991.

[16] A. Fedorova, S. Blagodurov, and S. Zhuravlev, “Managing contention
for shared resources on multicore processors,” Commun. ACM, vol. 53,
no. 2, pp. 49-57, 2010.