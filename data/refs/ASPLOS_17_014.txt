[1] Message — android developers. https://developer.
android. com/reference/android/os/Message . htm1#
setAsynchronous (boolean). [Online; accessed 2016-0815].

[2] Ui/application exerciser monkey android studio.
https: //developer.android.com/studio/test/
monkey. html, . [Online; accessed 2016-08-15].

[3] droidracer - software engineering and analysis lab (seal), iisc
bangalore. http://www.iisc-seal.net/droidracer, .
[Online; accessed 2016-08-15].

[4] Event racer for android. http: //eventracer.org/
android/, . [Online; accessed 2016-08-15].

[5] S. V. Adve, M. D. Hill, B. P. Miller, and R. H. B. Netzer.
Detecting data races on weak memory systems. SIGARCH
Comput. Archit. News, 19(3):234—243, Apr. 1991. ISSN 01635964. doi: 10.1145/115953.115976. URLhttp://doi.acm.
org/10.1145/115953.115976.

[6] P. Bielik, V. Raychev, and M. Vechev. Scalable race detection for android applications. In Proceedings of the 2015
ACM SIGPLAN International Conference on Object-Oriented
Programming, Systems, Languages, and Applications, OOPSLA 2015, pages 332-348, New York, NY, USA, 2015. ACM.
ISBN 978-1-4503-3689-5. doi: 10.1145/2814270.2814303.
URL http: //doi.acm. org/10.1145/2814270 . 2814303.

[7] M. Christiaens and K. Bosschere. Euro-Par 2001 Parallel
Processing: 7th International Euro-Par Conference Manchester, UK, August 28-31, 2001 Proceedings, chapter Accordion Clocks: Logical Clocks for Data Race Detection,
pages 494-503. Springer Berlin Heidelberg, Berlin, Heidelberg, 2001. ISBN 978-3-540-44681-1. doi: 10.1007/
3-540-44681-8_73. URL http://dx.doi.org/10.1007/
3-540-44681-8_73.

[8] D. Dimitrov, V. Raychev, M. Vechev, and E. Koskinen. Commutativity race detection. In Proceedings of the 35th ACM
SIGPLAN Conference on Programming Language Design and
Implementation, PLDI ’14, pages 305-315, New York, NY,
USA, 2014. ACM. ISBN 978-1-4503-2784-8. doi: 10.1145/
2594291.2594322. URL http: //doi.acm.org/10.1145/
2594291 . 2594322.

205

[9] D. R. Engler and K. Ashcraft. RacerX: Effective, Static
Detection of Race Conditions and Deadlocks. In SOSP, pages
237-252, 2003.

[10] C. Flanagan and S. N. Freund. FastTrack: Efficient and Precise
Dynamic Race Detection. In PLDI, pages 121-133, 2009.

[11] C.-H. Hsiao, J. Yu, S. Narayanasamy, Z. Kong, C. L. Pereira,
G. A. Pokam, P. M. Chen, and J. Flinn. Race detection
for event-driven mobile applications. In Proceedings of the
35th ACM SIGPLAN Conference on Programming Language
Design and Implementation, PLDI ’14, pages 326-336, New
York, NY, USA, 2014. ACM. ISBN 978-1-4503-2784-8. doi:
10.1145/2594291.2594330. URL http://doi.acm.org/
10.1145/2594291 . 2594330.

[12] H. V. Jagadish. A compression technique to materialize transitive closure. ACM Trans. Database Syst., 15(4):558-598, Dec.
1990. ISSN 0362-5915. doi: 10.1145/99935.99944. URL
http://doi.acm.org/10.1145/99935.99944,

[13] P. Maiya, A. Kanade, and R. Majumdar. Race detection
for android applications. In Proceedings of the 35th ACM
SIGPLAN Conference on Programming Language Design and
Implementation, PLDI ’14, pages 316-325, New York, NY,
USA, 2014. ACM. ISBN 978-1-4503-2784-8. doi: 10.1145/
2594291.2594311. URL http: //doi.acm.org/10.1145/
2594291 . 2594311.

[14] F Mattern. Virtual time and global states of distributed systems. In Parallel and Distributed Algorithms, pages 215-226.
North-Holland, 1989.

[15] R. H. B. Netzer. Optimal Tracing and Replay for Debugging
Shared-Memory Parallel Programs. In Workshop on Parallel
and Distributed Debugging, pages 1-11, 1993.

[16] B. Petrov, M. T. Vechev, M. Sridharan, and J. Dolby. Race
detection for web applications. In PLDI, pages 251-262,
2012.

[17] V. Raychev, M. T. Vechev, and M. Sridharan. Effective race
detection for event-driven programs. In OOPSLA, pages 151166, 2013.

[18] J. W. Voung, R. Jhala, and S. Lerner. RELAY: Static Race
Detection on Millions of Lines of Code. In ESEC/SIGSOFT
FSE, pages 205-214, 2007.