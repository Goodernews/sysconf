[1] Apktool.
Apktool/.

[2] GPU Debugger. http://tools.android.com/
tech-docs/gpu-profiler.

https://ibotpeaches.github.io/

[3] Hierarchy Viewer. https://developer.android.
com/studio/profile/hierarchy-viewer.html.

[4] Material Design for Android. https://developer.
android.com/design/material/index.html.

[5] OpenGL ES Tracer. https://developer.android.
com/studio/profile/gltracer.html.

[6] Profile GPU Rendering. https://
developer.android.com/studio/profile/
dev-options-rendering.html.

[7] Systrace. https://developer.android.com/
studio/profile/systrace-commandline.html.

[8] Xcode OpenGL ES _ Tools. https://
developer.apple.com/library/content/
documentation/3DDrawing/Conceptual/
OpenGLES_ProgrammingGuide/ToolsOverview/
ToolsOverview.html.

[9] P. Bielik, V. Raychev, and M. Vechev. Scalable race detection
for android applications. In Proc. of OOPSLA, 2015.

[10] Q. A. Chen, H. Luo, S. Rosen, Z. M. Mao, K. Iyer, J. Hui,
K. Sontineni, and K. Lau. Qoe doctor: Diagnosing mobile
app qoe with automated ui control and cross-layer analysis.
In Proc. of IMC, 2014.

[11] S. L. Graham, P. B. Kessler, and M. K. McKusick. gprof: A
call graph execution profiler. In Proc. of ACM PLDI, 1982.

[12] S. Hao, B. Liu, S$. Nath, W. G. Halfond, and R. Govindan.
Puma: Programmable ui-automation for large-scale dynamic
analysis of mobile apps. In Proc. of MobiSys, 2014.

[13] C.-H. Hsiao, J. Yu, S. Narayanasamy, Z. Kong, C. L. Pereira,
G. A. Pokam, P. M. Chen, and J. Flinn. Race detection for
event-driven mobile applications. In Proc. of PLDI, 2014.

[14] G. Hu, X. Yuan, Y. Tang, and J. Yang. Efficiently, effectively
detecting mobile app bugs with appdoctor. In Proc. of EuroSys, 2014.

[15] C. H. P. Kim, D. Kroening, and M. Kwiatkowska. Static
program analysis for identifying energy bugs in graphicsintensive mobile apps. In Proc. of MASCOTS, 2016.

[16] Y. G. Kim, M. Kim, J. M. Kim, M. Sung, and S. W. Chung.
A novel gpu power model for accurate smartphone power
breakdown. ETRI Journal, 37(1):157-164, 2015.

[17] K. Lee, J. Flinn, T. Giuli, B. Noble, and C. Peplin. Amc:
Verifying user interface properties for vehicular applications.
In Proc. of MobiSys, 2013.

[18] M. Linares-Vasquez, G. Bavota, C. Bernal-Cardenas,
R. Oliveto, M. Di Penta, and D. Poshyvanyk. Mining energygreedy api usage patterns in android apps: An empirical
study. In Proc. of MSR, 2014.

[19] P. Maiya, A. Kanade, and R. Majumdar. Race detection for
android applications. In Proc. of PLDI, 2014.

[20] D. T. Milano. Android Application Testing Guide. Packt
Publishing, 2011.

[21] R. Mittal, A. Kansal, and R. Chandra. Empowering developers to estimate app energy consumption. In Proc. of ACM
MobiCom, 2012.

[22] C. Pang, A. Hindle, B. Adams, and A. E. Hassan. What
do programmers know about software energy consumption?
IEEE Software, 33(3):83-89, May 2016.

[23] A. Pathak, Y. C. Hu, and M. Zhang. Where is the energy
spent inside my app? fine grained energy accounting on smartphones with eprof. In Proc. of EuroSys, 2012.

[24] L. Ravindranath, S. Nath, J. Padhye, and H. Balakrishnan. Automatic and scalable fault detection for mobile applications. In
Proc. of MobiSys, 2014.

[25] L. Ravindranath, J. Padhye, S. Agarwal, R. Mahajan, I. Obermiller, and S. Shayandeh. Appinsight: Mobile app performance monitoring in the wild. In Proc. of OSDI, 2012.

[26] A. Shye, B. Scholbrock, and G. Memik. Into the wild: studying real user activity patterns to guide power optimizations for
mobile architectures. In MICRO, 2009.

[27] F Xu, Y. Liu, Q. Li, and Y. Zhang. V-edge: Fast selfconstructive power modeling of smartphones based on battery
voltage dynamics. In Proc. of NSDI, 2013.

[28] C. Yoon, D. Kim, W. Jung, C. Kang, and H. Cha. Appscope:
Application energy metering framework for android smartphones using kernel activity monitoring. In Proc. of USENIX
ATC, 2012.

[29] L. Zhang, D. R. Bild, R. P. Dick, Z. M. Mao, and P. Dinda.
Panappticon: Event-based tracing to measure mobile application and platform performance. In Proc. of CODES+ISSS,
2013.

[30] L. Zhang, B. Tiwana, Z. Qian, Z. Wang, R. Dick, Z. Mao, and
L. Yang. Accurate Online Power Estimation and Automatic
Battery Behavior Based Power Model Generation for Smartphones. In Proc. of CODES+ISSS, 2010.