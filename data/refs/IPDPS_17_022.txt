[1] A. Benali, L. Shulenburger, N. A. Romero, J. Kim, and O. A. von Lilien- feld, “Application of diffusion monte carlo to materials dominated by van der waals interactions,” Journal of chemical theory and computation, vol. 10, no. 8, pp. 3417–3422, 2014.
[2] H. Shin, S. Kang, J. Koo, H. Lee, J. Kim, and Y. Kwon, “Cohesion energetics of carbon allotropes: Quantum monte carlo study,” The Journal of chemical physics, vol. 140, no. 11, p. 114702, 2014.
[3] P. Ganesh, J. Kim, C. Park, M. Yoon, F. A. Reboredo, and P. R. Kent, “Binding and diffusion of lithium in graphite: quantum monte carlo benchmarks and validation of van der waals density functional methods,” Journal of Chemical Theory and Computation, vol. 10, no. 12, pp. 5318– 5323, 2014.
[4] L. Shulenburger, A. D. Baczewski, Z. Zhu, J. Guan, and D. Tomanek, “The nature of the interlayer interaction in bulk and few-layer phospho- rus,” Nano letters, vol. 15, no. 12, pp. 8170–8175, 2015.
[5] J. A. Santana, J. T. Krogel, J. Kim, P. R. Kent, and F. A. Reboredo, “Structural stability and defect energetics of zno from diffusion quantum monte carlo,” The Journal of chemical physics, vol. 142, no. 16, p. 164705, 2015.
[6] K. Foyevtsova, J. T. Krogel, J. Kim, P. Kent, E. Dagotto, and F. A. Reboredo, “Ab initio quantum monte carlo calculations of spin superex- change in cuprates: The benchmarking case of ca 2 cuo 3,” Physical Review X, vol. 4, no. 3, p. 031003, 2014.
[7] L. Shulenburger and T. R. Mattsson, “Quantum monte carlo applied to solids,” Physical Review B, vol. 88, no. 24, p. 245117, 2013.
[8] “Knights landing (knl): 2nd generation intel⃝R xeon phiTM processor.” [Online]. Available: http://www.hotchips.org/
[9] “Top 500, june 2013.” [Online]. Available: http://www.top500.org/lists/ 2013/06/
[10] M. Deserno and C. Holm, “How to mesh up ewald sums. i. a theoretical and numerical comparison of various particle mesh routines,” The Journal of chemical physics, vol. 109, no. 18, pp. 7678–7693, 1998.
[11] “Intel⃝R mathkernellibrary(intel⃝R mkl).”[Online].Available: https://software.intel.com/en- us/intel- mkl
[12] J. Kim, K. P. Esler, J. McMinis, M. A. Morales, B. K. Clark, L. Shulenburger, and D. M. Ceperley, “Hybrid algorithms in quantum monte carlo,” Journal of Physics: Conference Series, vol. 402, no. 1, p. 012008, 2012. [Online]. Available: http: //stacks.iop.org/1742- 6596/402/i=1/a=012008
[13] K. P. Esler, “Einspline b-spline library.” [Online]. Available: http: //einspline.sf.net
[14] Q. Niu, J. Dinan, S. Tirukkovalur, A. Benali, J. Kim, L. Mitas, L. Wagner, and P. Sadayappan, “Global-view coefficients: a data management solution for parallel quantum monte carlo applications,” Concurrency and Computation: Practice and Experience, pp. n/a–n/a, 2016, cpe.3748. [Online]. Available: http://dx.doi.org/10.1002/cpe.3748
[15] Y. Luo, A. Benali, and V. Morozov, “Accelerating the b- spline evaluation in quantum monte carlo,” 2015. [Online]. Available: http://sc15.supercomputing.org/sites/all/themes/SC15images/ tech poster/tech poster pages/post337.html
[16] K. P. Esler, J. Kim, L. Shulenburger, and D. M. Ceperley, “Fully accelerating quantum monte carlo simulations of real materials on gpu clusters,” Computing in Science and Engineering, vol. 14, p. 40, 2012. [Online]. Available: http://doi.ieeecomputersociety.org/10.1109/MCSE. 2010.122
[17] “Qmcpack.” [Online]. Available: http://www.qmcpack.org
[18] J. Jeffers and J. Reinders, Eds., High Performance Parallelism Pearls: Multicore and Many-core Programming Approaches. Boston, MA,
USA: Morgan Kaufmann Publishers Inc., 2015, vol. 1.
[19] J. Reinders and J. Jeffers, Eds., High Performance Parallelism Pearls: Multicore and Many-core Programming Approaches. Boston, MA, USA: Morgan Kaufmann Publishers Inc., 2015, vol. 2.
[20] “Intel⃝R simd data layout templates (intel⃝R sdlt).” [Online]. Available: https://software.intel.com/en- us/node/600110
[21] A. Wells, “Simd building block.” [Online]. Available: unpublished
[22] D. Alfe` and M. J. Gillan, “An efficient localized basis set for quantum Monte Carlo calculations on condensed matter,” Physical Review B,
vol. 70, no. 16, p. 161101, 2004.
[23] “Coral collaboration, benchmark codes.” [Online]. Available: http:
//https://asc.llnl.gov/CORAL- benchmarks/
[24] “Intel compiler options: -g -ip -restrict -unroll -o3 -qopenmp -
std=c++11”, with -march=core-avx2 (bdw), -mmic (knc) and -xmic-
avx512 (knl).”
[25] “Ibm compiler options: -g -o3 -qinline=auto:level=10 -qarch=qp -
qsmp=omp -qthreaded -qstrict -qhot=level=1 -qtune=qp -qsimd=auto.”
[26] “Intel⃝R vtuneTM amplifier 2016.” [Online]. Available: https://software.
intel.com/en- us/intel- vtune- amplifier- xe
[27] “Hpctoolkit.” [Online]. Available: http://www.hpctoolkit.org
[28] M. Frigo and S. G. Johnson, “The design and implementation of
FFTW3,” Proceedings of the IEEE, vol. 93, no. 2, pp. 216–231, 2005, special issue on “Program Generation, Optimization, and Platform Adaptation”.
[29] S. Williams, A. Waterman, and D. Patterson, “Roofline: An insightful visual performance model for floating-point programs and multicore architectures,” Communications of the ACM, 2009.
[30] A. Ilic, F. Pratas, and L. Sousa, “Cache-aware roofline model: Upgrading the loft,” IEEE Computer Architecture Letters, vol. 13, no. 1, pp. 21–24, 2014.
[31] “Intel⃝R advisor 2017.” [Online]. Available: https://software.intel.com/ en- us/articles/getting- started- with- intel- advisor- roofline- feature
