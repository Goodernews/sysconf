[1] A. Abou-Rjeili and G. Karypis. Multilevel algorithms for partitioning power-law graphs. In Proceedings of the 20th IEEE International Parallel & Distributed Processing Symposium, pages 10–pp. IEEE, 2006.
[2] G. Ananthanarayanan, S. Kandula, A. G. Greenberg, I. Stoica, Y. Lu, B. Saha, and E. Harris. Reining in the outliers in map-reduce clusters using mantri. In OSDI, volume 10, page 24, 2010.
[3] Q. Chen, J. Yao, and Z. Xiao. Libra: Lightweight data skew mitigation in mapreduce. IEEE Transactions on Parallel and Distributed Systems, 26(9):2520– 2533, 2015.
[4] R. Chen, J. Shi, Y. Chen, and H. Chen. Powerlyra: Differentiated graph computation and partitioning on skewed graphs. In Proceedings of the Tenth European Conference on Computer Systems, page 1. ACM, 2015.
[5] J. Dean and S. Ghemawat. Mapreduce: simplified data processing on large clusters. In OSDI. USENIX Association, 2004.
[6] C. Dubach, P. Cheng, R. Rabbah, D. F. Bacon, and S. J. Fink. Compiling a high- level language for gpus:(via language support for architectures and compilers). In ACM SIGPLAN Notices, volume 47, pages 1–12. ACM, 2012.
[7] F. Franchetti, F. de Mesmay, D. McFarlin, and M. Püschel. Operator language: A program generation framework for fast kernels. In Domain-Specific Languages, pages 385–409. Springer, 2009.
[8] J. E. Gonzalez, Y. Low, H. Gu, D. Bickson, and C. Guestrin. Powergraph: Distributed graph-parallel computation on natural graphs. In OSDI, pages 17– 30, 2012.
[9] B. Gufler, N. Augsten, A. Reiser, and A. Kemper. Load balancing in mapreduce based on scalable cardinality estimates. In 2012 IEEE 28th International Conference on Data Engineering, pages 522–533. IEEE, 2012.
[10] Y. Guo, J. Rao, C. Jiang, and X. Zhou. Flexslot: Moving hadoop into the cloud with flexible slot management. In High Performance Computing, Networking, Storage and Analysis, SC14: International Conference for, pages 959–969. IEEE, 2014.
[11] Y. Guo, J. Rao, C. Jiang, and X. Zhou. Moving mapreduce into the cloud with flexible slot management and speculative execution. IEEE Transactions on Parallel and Distributed Systems, 2016.
[12] K. Hou, H. Wang, and W.-c. Feng. Aspas: A framework for automatic simdiza- tion of parallel sorting on x86-based many-core processors. In Proceedings of the 29th ACM on International Conference on Supercomputing, pages 383–392. ACM, 2015.
[13] Y. Huai, A. Chauhan, A. Gates, G. Hagleitner, E. N. Hanson, O. O’Malley, J. Pandey, Y. Yuan, R. Lee, and X. Zhang. Major technical advancements in apache hive. In Proceedings of the 2014 ACM SIGMOD international conference on Management of data, pages 1235–1246. ACM, 2014.
[14] W. Jiang, V. T. Ravi, and G. Agrawal. A map-reduce system with an alternate api for multi-core environments. In Proceedings of the 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing, pages 84–93. IEEE Computer Society, 2010.
[15] T. Kaldewey, E. J. Shekita, and S. Tata. Clydesdale: structured data processing on mapreduce. In Proceedings of the 15th international conference on extending database technology, pages 15–25. ACM, 2012.
[16] Z. Khayyat, K. Awara, A. Alonazi, H. Jamjoom, D. Williams, and P. Kalnis. Mizan: a system for dynamic load balancing in large-scale graph processing. In Proceedings of the 8th ACM European Conference on Computer Systems, pages 169–182. ACM, 2013.
[17] Y. Kwon, M. Balazinska, B. Howe, and J. Rolia. Skew-resistant parallel processing of feature-extracting scientific user-defined functions. In Proceedings of the 1st ACM symposium on Cloud computing, pages 75–86. ACM, 2010.
[18] Y. Kwon, M. Balazinska, B. Howe, and J. Rolia. Skewtune: mitigating skew in mapreduce applications. In Proceedings of the 2012 ACM SIGMOD International Conference on Management of Data, pages 25–36. ACM, 2012.
[19] D. LaSalle and G. Karypis. Multi-threaded graph partitioning. In Parallel & Distributed Processing (IPDPS), 2013 IEEE 27th International Symposium on, pages 225–236. IEEE, 2013.
[20] H. Lin, X. Ma, W. Feng, and N. F. Samatova. Coordinating Computation and I/O in Massively Parallel Sequence Search. IEEE Transactions on Parallel and Distributed Systems, 22(4):529–543, 2011.
[21] W. Liu and B. Vinter. Csr5: An efficient storage format for cross-platform sparse matrix-vector multiplication. In Proceedings of the 29th ACM on International Conference on Supercomputing, pages 339–350. ACM, 2015.
[22] Y. Low, D. Bickson, J. Gonzalez, C. Guestrin, A. Kyrola, and J. M. Hellerstein. Distributed graphlab: a framework for machine learning and data mining in the cloud. Proceedings of the VLDB Endowment, 5(8):716–727, 2012.
[23] M. Niemenmaa, A. Kallio, A. Schumacher, P. Klemelä, E. Korpelainen, and K. Heljanko. Hadoop-bam: directly manipulating next generation sequencing data in the cloud. Bioinformatics, 28(6):876–877, 2012.
[24] S. J. Plimpton and K. D. Devine. Mapreduce in mpi for large-scale graph algorithms. Parallel Computing, 37(9):610–632, 2011.
[25] S. R. Ramakrishnan, G. Swart, and A. Urmanov. Balancing reducer skew in mapreduce workloads using progressive sampling. In Proceedings of the Third ACM Symposium on Cloud Computing, page 16. ACM, 2012.
[26] S. N. A. Project. Stanford Large Network Dataset Collection. http://snap. stanford.edu/data/.
[27] N. Sedaghati, T. Mu, L.-N. Pouchet, S. Parthasarathy, and P. Sadayappan. Automatic Selection of Sparse Matrix Representation on GPUs. In Proceedings of the 29th ACM International Conference on Supercomputing, ICS ’15. ACM, 2015.
[28] S. Sehrish, G. Mackey, J. Wang, and J. Bent. MRAP: A Novel MapReduce- based Framework to Support HPC Analytics Applications with Access Patterns. In Proceedings of the 19th ACM International Symposium on High Performance Distributed Computing, pages 107–118. ACM, 2010.
[29] S. Tang, B.-S. Lee, and B. He. Dynamic job ordering and slot configurations for mapreduce workloads. IEEE Transactions on Services Computing, 9(1):4–17, 2016.
[30] H. Wang, W. Liu, K. Hou, and W.-c. Feng. Parallel transposition of sparse data structures. In Proceedings of the 2016 International Conference on Supercomputing, page 33. ACM, 2016.
[31] Y. Wang, W. Jiang, and G. Agrawal. SciMATE: A Novel MapReduce-like Framework for Multiple Scientific Data Formats. In Cluster, Cloud and Grid Computing (CCGrid), 2012 12th IEEE/ACM International Symposium on, pages 443–450. IEEE, 2012.
[32] Y. Wang, A. Nandi, and G. Agrawal. SAGA: Array Storage as a DB with Support for Structural Aggregations. In Proceedings of the 26th international conference on scientific and statistical database management, page 9. ACM, 2014.
[33] Y. Yuan, R. Lee, and X. Zhang. The yin and yang of processing data warehousing queries on gpu devices. Proceedings of the VLDB Endowment, 6(10):817–828, 2013.
[34] M. Zaharia, A. Konwinski, A. D. Joseph, R. H. Katz, and I. Stoica. Improving mapreduce performance in heterogeneous environments. In OSDI, volume 8, page 7, 2008.
[35] J. Zhang, S. Misra, H. Wang, and W.-c. Feng. mublastp: database-indexed protein sequence search on multicore cpus. BMC bioinformatics, 17(1):443, 2016.
[36] J. Zhang, S. Misra, H. Wang, and W.-c. Feng. Eliminating Irregularities of
Protein Sequence Search on Multicore Architectures. In Proceedings of the 31st
IEEE International Parallel & Distributed Processing Symposium. IEEE, 2017.
[37] K. Zhang, R. Chen, and H. Chen. Numa-aware graph-structured analytics. In
ACM SIGPLAN Notices, volume 50, pages 183–193. ACM, 2015.
