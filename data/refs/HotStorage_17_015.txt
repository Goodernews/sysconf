[1] NVM Express 1.2.1 specification
http://www.nvmexpress.org

[2] Storage Performance Development Kit.
http://www.spdk.io/

[3] M. Bjerling et al., “Linux block IO: introducing
multi-queue SSD access on multi-core systems,” in
Proc. of the 6th Int. Systems and Storage Conf., 2013.
[4] Block IO priorities,
https://www.kernel.org/doc/Documentation/block/ioprio
txt

[5] Ionice utility, https://linux.die.net/man/1/ionice

[6] Suli Yang et al., “Split-level I/O scheduling”, SOSP,
2015.

[7] FIO, http://freecode.com/projects/fio

[8] nvme-cli, https://github.com/linux-nvme/nvme-cli
[9] Towards multi-threaded device emulation in
QEMU, https://vmsplice.net/~stefan/stefanha-kvmforum-2014.pdf

[10] “A tail of latency, IOPS & IO priority”
http://events. linuxfoundation.org/sites/events/files/slides
/LinuxFast_Vault_2017_v2.pdf

[11] ATA/ATAPI command set,
http://www.t13.org/Documents/UploadedDocuments/do

¢s2013/d2161r5-ATAATAPI_ Command. Set_- 3.pdf
[12] Hyeong-Jun Kim et al., “NVMeDirect: A user
space I/O framework for application specific optimization on NVMe SSDs, in HotStorage, 2016.

[13] Cgroups,
https://www.kernel.org/doc/Documentation/cgroupv2.txt
[14] Sungyong Ahn et al., “Improving I/O resource
sharing of linux cgroup for NVMe SSDs on multi-core
systems”, in Hotstorage, 2016.