[1] A BOU -R JEILI , A., AND K ARYPIS , G. Multilevel algorithms
for partitioning power-law graphs. In Parallel and Distributed
Processing Symposium, 2006. IPDPS 2006. 20th International
(2006), IEEE, pp. 10–pp.
[2] AVERY, C. Giraph: Large-scale graph processing infrastructure
on hadoop. Proceedings of the Hadoop Summit. Santa Clara 11
(2011).
[3] BAKHODA , A., Y UAN , G. L., F UNG , W. W., W ONG , H., AND
A AMODT, T. M. Analyzing cuda workloads using a detailed
gpu simulator. In Performance Analysis of Systems and Software,
2009. ISPASS 2009. IEEE International Symposium on (2009),
IEEE, pp. 163–174.
[4] B OLDI , P., C ODENOTTI , B., S ANTINI , M., AND V IGNA , S.
Ubicrawler: A scalable fully distributed web crawler. Software:
Practice & Experience 34, 8 (2004), 711–726.
[5] B OLDI , P., M ARINO , A., S ANTINI , M., AND V IGNA , S. BUbiNG: Massive crawling for the masses. In Proceedings of the
Companion Publication of the 23rd International Conference on
World Wide Web (2014), International World Wide Web Conferences Steering Committee, pp. 227–228.
[6] C HEN , R., D ING , X., WANG , P., C HEN , H., Z ANG , B., AND
G UAN , H. Computation and communication efficient graph processing with distributed immutable view. In Proceedings of the
23rd international symposium on High-performance parallel and
distributed computing (2014), ACM, pp. 215–226.
2013), ACM, pp. 472–488.
[7] C HEN , R., S HI , J., C HEN , Y., AND C HEN , H. Powerlyra: Differentiated graph computation and partitioning on skewed graphs.
In Proceedings of the Tenth European Conference on Computer
Systems (2015), ACM, p. 1.
[8] G HARAIBEH , A., R EZA , T., S ANTOS -N ETO , E., C OSTA , L. B.,
S ALLINEN , S., AND R IPEANU , M. Efficient large-scale graph
processing on hybrid cpu and gpu systems. arXiv preprint arXiv:1312.3018 (2013).

[9] G OMEZ -L UNA , J., G ONZALEZ -L INARES , J. M., B ENITEZ , J.
I. B., AND M ATA , N. G. Performance modeling of atomic additions on gpu scratchpad memory. IEEE Transactions on Parallel
and Distributed Systems 24, 11 (2013), 2273–2282.
[10] G ONZALEZ , J. E., L OW, Y., G U , H., B ICKSON , D., AND
G UESTRIN , C. Powergraph: Distributed graph-parallel computation on natural graphs. In OSDI (2012), vol. 12, p. 2.
[11] G ONZALEZ , J. E., X IN , R. S., DAVE , A., C RANKSHAW, D.,
F RANKLIN , M. J., AND S TOICA , I. Graphx: Graph processing
in a distributed dataflow framework. In OSDI (2014), vol. 14,
pp. 599–613.
[12] H AN , W., M IAO , Y., L I , K., W U , M., YANG , F., Z HOU , L.,
P RABHAKARAN , V., C HEN , W., AND C HEN , E. Chronos: a
graph engine for temporal graph analysis. In Proceedings of the
Ninth European Conference on Computer Systems (2014), ACM,
p. 1.
[13] H ARRIS , M., ET AL . Optimizing parallel reduction in cuda.
NVIDIA Developer Technology 2, 4 (2007).
[14] I NTEL. Intel ssd dc p3608 series product brief. Tech. rep., 2015.
[15] K HAYYAT, Z., AWARA , K., A LONAZI , A., JAMJOOM , H.,
W ILLIAMS , D., AND K ALNIS , P. Mizan: a system for dynamic
load balancing in large-scale graph processing. In Proceedings of
the 8th ACM European Conference on Computer Systems (2013),
ACM, pp. 169–182.
[16] K HORASANI , F., VORA , K., G UPTA , R., AND B HUYAN , L. N.
Cusha: vertex-centric graph processing on gpus. In Proceedings
of the 23rd international symposium on High-performance parallel and distributed computing (2014), ACM, pp. 239–252.
[17] KYROLA, A., BLELLOCH, G. E., GUESTRIN, C., ET AL.
Graphchi: Large-scale graph computation on just a pc. In OSDI (2012), vol. 12, pp. 31–46.
[18] LEHMBERG, O., MEUSEL, R., AND BIZER, C. Graph structure
in the web: Aggregated by pay-level domain. In Proceedings of
the 2014 ACM conference on Web science (2014), ACM, pp. 119–
128.
[19] LESKOVEC, J., AND KREVL, A. SNAP Datasets: Stanford large
network dataset collection. http://snap.stanford.edu/
data, June 2014.
[20] LESKOVEC, J., LANG, K. J., DASGUPTA, A., AND MAHONEY,
M. W. Community structure in large networks: Natural cluster sizes and the absence of large well-defined clusters. Internet
Mathematics 6, 1 (2009), 29–123.
[21] LOW, Y., BICKSON, D., GONZALEZ, J., GUESTRIN, C., KYROLA, A., AND HELLERSTEIN, J. M. Distributed graphlab: a
framework for machine learning and data mining in the cloud.
Proceedings of the VLDB Endowment 5, 8 (2012), 716–727.
[22] MALEWICZ, G., AUSTERN, M. H., BIK, A. J., DEHNERT,
J. C., HORN, I., LEISER, N., AND CZAJKOWSKI, G. Pregel:
a system for large-scale graph processing. In Proceedings of the
2010 ACM SIGMOD International Conference on Management
of data (2010), ACM, pp. 135–146.
[23] MISLOVE, A., MARCON, M., GUMMADI, K. P., DRUSCHEL,
P., AND BHATTACHARJEE, B. Measurement and Analysis of
Online Social Networks. In Proceedings of the 5th ACM/Usenix
Internet Measurement Conference (IMC’07) (San Diego, CA,
October 2007).
[24] NVIDIA. Kepler gk110 architecture whitepaper, v1.0. Tech. rep.,
2012.
[25] NVIDIA. CUDA C Programming Guide. nvidia, 2017.
[26] PAGE, L., BRIN, S., MOTWANI, R., AND WINOGRAD, T. The
pagerank citation ranking: Bringing order to the web. Tech. rep.,
Stanford InfoLab, 1999.
[27] PINGALI, K., NGUYEN, D., KULKARNI, M., BURTSCHER, M.,
HASSAAN, M. A., KALEEM, R., LEE, T.-H., LENHARTH, A.,
MANEVICH, R., MENDEZ ´ -LOJO, M., ET AL. The tao of parallelism in algorithms. In ACM Sigplan Notices (2011), vol. 46,
ACM, pp. 12–25.
[28] ROY, A., BINDSCHAEDLER, L., MALICEVIC, J., AND
ZWAENEPOEL, W. Chaos: Scale-out graph processing from secondary storage. In Proceedings of the 25th Symposium on Operating Systems Principles (2015), ACM, pp. 410–424.
[29] ROY, A., MIHAILOVIC, I., AND ZWAENEPOEL, W. X-stream:
edge-centric graph processing using streaming partitions. In Proceedings of the Twenty-Fourth ACM Symposium on Operating
Systems Principles (2013), ACM, pp. 472–488.
[30] SALIHOGLU, S., AND WIDOM, J. Gps: A graph processing
system. In Proceedings of the 25th International Conference on
Scientific and Statistical Database Management (2013), ACM,
p. 22.
[31] SEO, H., KIM, J., AND KIM, M.-S. Gstream: A graph streaming processing method for large-scale graphs on gpus. In ACM
SIGPLAN Notices (2015), vol. 50, ACM, pp. 253–254.
[32] SHUN, J., AND BLELLOCH, G. E. Ligra: a lightweight graph
processing framework for shared memory. In ACM Sigplan Notices (2013), vol. 48, ACM, pp. 135–146.
[33] WANG, Y., DAVIDSON, A., PAN, Y., WU, Y., RIFFEL, A., AND
OWENS, J. D. Gunrock: A high-performance graph processing
library on the gpu. In Proceedings of the 21st ACM SIGPLAN
Symposium on Principles and Practice of Parallel Programming
(2016), ACM, p. 11.
[34] ZHANG, T., ZHANG, J., SHU, W., WU, M.-Y., AND LIANG, X.
Efficient graph computation on hybrid cpu and gpu systems. The
Journal of Supercomputing 71, 4 (2015), 1563–1586.
[35] ZHONG, J., AND HE, B. Medusa: Simplified graph processing
on gpus. IEEE Transactions on Parallel and Distributed Systems
25, 6 (2014), 1543–1552.
[36] ZHU, X., CHEN, W., ZHENG, W., AND MA, X. Gemini: A
computation-centric distributed graph processing system. In 12th
USENIX Symposium on Operating Systems Design and Implementation (OSDI 16)(Savannah, GA (2016).
[37] ZHU, X., HAN, W., AND CHEN, W. Gridgraph: Large-scale
graph processing on a single machine using 2-level hierarchical
partitioning. In USENIX Annual Technical Conference (2015),
pp. 375–386.
