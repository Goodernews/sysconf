[1] University of Florida (2011) UF sparse matrix collection.Available at:(http://www.cise.ufl.edu/research/sparse /matrices/groups.html).

[2] Asanovic, Krste, et al. The landscape of parallel computing
research: A view from berkeley. Vol. 2. Technical Report
UCB/EECS-2006-183, EECS Department, University of California, Berkeley, 2006.

[3] Intel Math Kernel Library, https://software.intel.com/en
us/articles/intel-mk1/.

[4] Nvidia sparse matrix library(cuSPARSE), http://developer.
nvidia.com/cusparse.

[5] Wangdong Yang, Kenli Li, and Keqin Li. A hybrid computing
method of SpMV on CPU-GPU heterogeneous computing systems, in Proc. of Journal of Parallel and Distributed Computing
(2017), volume 104, 49-60.

[6] Kiran Kumar Matam, Siva Rama Krishna Bharadwaj, and
Kishore Kothapalli. Sparse Matrix Matrix Multiplication on
Hybrid CPU+GPU Platforms, in Proc. of 19th Annual International Conference on High Performance Computing (HiPC),
Pune, India, 2012, 1-10.

[7] Emmanuel Agullo, Alfredo Buttari, Mikko Byckling, Abdou
Guermouche, Ian Masliah. Achieving high-performance with
a sparse direct solver on Intel KNL. [Research Report] RR9035, Inria Bordeaux Sud-Ouest; CNRS-IRIT; Intel corporation; Universit of Bordeaux. 2017, pp. 15.

[8] Kiran Raj Ramamoorthy, Dip Sankar, Kannan Srinathan and
Kishore Kothapalli, A Novel Heterogeneous Algorithm for
Multiplying Scale-Free Sparse Matrices, in Proc. of IPDPS
Workshops, 2016, 637-646.

[9] Dharma Teja Vooturi and Kishore Kothapalli, Parallel Algorithm for Quasi-Band Matrix-Matrix Multiplication, in Proc.
of Parallel Processing and Applied Mathematics 2015, 106115.

[10] Aydin Buluc and John Gilbert. Challenges and advances in
parallel sparse matrix-matrix multiplication. In Proc. ICPP
2008, 503-510.

[11] Wangdong Yang, Kenli Li, Yan Liu, Lin Shi and Lanjun Wan.
Optimization of quasi-diagonal matrix-vector multiplication on
GPU. International Journal On High Performance Computing
Applications, Vol. 28(2) 2014, 183-195.

[12] Michael Hines. Efficient computation of branched nerve equations. International journal of bio-medical computing 15.1
(1984): 69-76.

[13] Michael Mascagni. A parallelizing algorithm for computing
solutions to arbitrarily branched cable neuron models. Journal
of Neuroscience Methods 1990, vol 36, 105-114.

[14] Osep-Lluis Larriba-Pey, Michael Mascagni, Angel Jorba, Juan
J. Navarro. An Analysis of the Parallel Computation of Arbitrarily Branched Cable Neuron Models. In PPSC 1995, (373378).

[15] Michael L. Hines, Hubert Eichner and Felix Schurmann.
Neuron splitting in compute-bound parallel network simulations enables runtime scaling with twice as many processors.
Journal of Computational Neuroscience. 2008;25(1):203-210.
doi: 10.1007/s 10827-007-0073-3.

[16] Michael L. Hines, Henry Markram and Felix Schurmann.
Fully implicit parallel simulation of single neurons. Journal
of computational neuroscience 25.3 (2008): 439-448.
[17] Ben-Shalom, Roy, Gilad Liberman, and Alon Korngreen. Accelerating compartmental modeling on a graphical processing
unit. Frontiers in neuroinformatics 7 (2013): 4.

[18] Harold S. Stone. An efficient parallel algorithm for the solution
of a tridiagonal linear system of equations. JACM 1973, 20:2738.

[19] Hodgkin AL, Huxley AF. A quantitative description of membrane current and its application to conduction and excitation
in nerve. The Journal of Physiology. 1952;117(4):500-544.
[19] James M. Bowe, Beeman David. Compartmental modeling,
The Book of GENESIS: Exploring Realistic Neural Models
with the GEneral NEural SImulation System. 1998, New York:
Springer-Verlag, 7-16.

[20] Ascoli A. Giorgio, Duncan E. Donohue, and Maryam Halavi.
”*NeuroMorpho. Org: A central resource for neuronal morphologies.” Journal of Neuroscience 27.35 (2007): 9247-9251.
[21] NEURON (https://www.neuron.yale.edu/neuron/).
[22] MOOSE(Multiscale Object-Oriented Simulation Environment)
neuron simulator, (https://moose.ncbs.res.in).