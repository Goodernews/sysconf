[1] Remzi H. Arpaci-Dusseau and Andrea C. ArpaciDusseau. Operating Systems: Three Easy Pieces.
Arpaci-Dusseau Books, 0.9 edition, 2014.
[2] Andrew D. Birrell. An Introduction to Programming with Threads. Technical Report SRC-RR-35,
January 1989.
[3] James Bornholt, Antoine Kaufmann, Jialin
Li, Arvind Krishnamurthy, Emina Torlak, and
Xi Wang. Specifying and Checking File System
Crash-Consistency Models. In Proceedings of the
21st International Conference on Architectural
Support for Programming Languages and Operating Systems (ASPLOS 21), Atlanta, Georgia, April
2016.
[4] Nathan C. Burnett. Information and Control in File
System Buffer Management. PhD thesis, University
of Wisconsin-Madison, October 2006.
[5] Vijay Chidambaram, Thanumalayan Sankaranarayana Pillai, Andrea C. Arpaci-Dusseau, and
Remzi H. Arpaci-Dusseau. Optimistic Crash Consistency. In Proceedings of the 24th ACM Symposium on Operating Systems Principles (SOSP ’13),
Nemacolin Woodlands Resort, Farmington, Pennsylvania, October 2013.
[6] Vijay Chidambaram, Tushar Sharma, Andrea C.
Arpaci-Dusseau, and Remzi H. Arpaci-Dusseau.
Consistency Without Ordering. In Proceedings of
the 10th USENIX Symposium on File and Storage
Technologies (FAST ’12), pages 101–116, San Jose,
California, February 2012.
[7] Sailesh Chutani, Owen T. Anderson, Michael L.
Kazar, Bruce W. Leverett, W. Anthony Mason, and
Robert N. Sidebotham. The Episode File System.
In Proceedings of the USENIX Winter Technical
Conference (USENIX Winter ’92), pages 43–60,
San Francisco, California, January 1992.
[8] Jeremy Condit, Edmund B. Nightingale, Christopher Frost, Engin Ipek, Benjamin Lee, Doug
Burger, and Derrick Coetzee. Better I/O Through
Byte-addressable, Persistent Memory. In Proceedings of the 22nd ACM Symposium on Operating
Systems Principles (SOSP ’09), Big Sky, Montana,
October 2009.
[9] Jonathan Corbet. Better than POSIX?,
March 2009. Retrieved April 2016 from
https://lwn.net/Articles/323752/.
[10] Christian Czezatke and M. Anton Ertl. LinLogFS:
A Log-structured Filesystem for Linux. In Proceedings of the USENIX Annual Technical Conference (FREENIX Track), San Diego, California,
June 2000.
[11] Linux Documentation. XFS Delayed Logging Design. Retrieved April 2016 from
https://www.kernel.org/doc/Documentation
/filesystems/xfs-delayed-logging-design.txt.
[12] Filebench. Filebench. Retrieved March 2016 from
https://github.com/filebench/filebench/wiki.
[13] Christopher Frost, Mike Mammarella, Eddie
Kohler, Andrew de los Reyes, Shant Hovsepian,
Andrew Matsuoka, and Lei Zhang. Generalized
File System Dependencies. In Proceedings of
the 21st ACM Symposium on Operating Systems
Principles (SOSP ’07), pages 307–320, Stevenson,
Washington, October 2007.
[14] Gregory R. Ganger, Marshall Kirk McKusick,
Craig A. N. Soules, and Yale N. Patt. Soft Updates:
A Solution to the Metadata Update Problem in File
Systems. ACM Transactions on Computer Systems
(TOCS), 18(2), May 2000.
[15] Gregory R. Ganger and Yale N. Patt. Metadata Update Performance in File Systems. In Proceedings
of the 1st Symposium on Operating Systems Design and Implementation (OSDI ’94), pages 49–60,
Monterey, California, November 1994.
[16] Kourosh Gharachorloo, Daniel Lenoski, James
Laudon, Phillip Gibbons, Anoop Gupta, and John
Hennessy. Memory Consistency and Event Ordering in Scalable Shared-Memory Multiprocessors.
In Proceedings of the 17th Annual International
Symposium on Computer Architecture (ISCA ’90),
Seattle, Washington, May 1992.
[17] Jim Gray and Andreas Reuter. Transaction Processing: Concepts and Techniques. Morgan Kaufmann, 1993.
[18] Robert Hagmann. Reimplementing the Cedar File
System Using Logging and Group Commit. In Proceedings of the 11th ACM Symposium on Operating Systems Principles (SOSP ’87), Austin, Texas,
November 1987.
[19] Timothy L. Harris. A Pragmatic Implementation of
Non-blocking Linked-lists. DISC, 2001.
[20] Tyler Harter, Chris Dragga, Michael Vaughn, Andrea C. Arpaci-Dusseau, and Remzi H. ArpaciDusseau. A File is Not a File: Understanding the I/O Behavior of Apple Desktop Applications. In
Proceedings of the 23rd ACM Symposium on Operating Systems Principles (SOSP ’11), Cascais, Portugal, October 2011.
[21] Maurice Herlihy. Wait-Free Synchronization.
Transactions on Programming Languages, 11(1),
January 1991.
[22] D. M. Jacobson and J. Wilkes. Disk Scheduling Algorithms Based on Rotational Position. Technical
Report HPL-CSP-91-7, Hewlett Packard Laboratories, 1991.
[23] Jaeho Kim, Jongmoo Choi, Yongseok Oh, Donghee
Lee, Eunsam Kim, and Sam H. Noh. Disk Schedulers for Solid State Drives. In EMSOFT, Grenoble,
France, October 2009.
[24] Lanyue Lu, Thanumalayan Sankaranarayana Pillai,
Andrea C. Arpaci-Dusseau, and Remzi H. ArpaciDusseau. WiscKey: Separating Keys from Values in SSD-conscious Storage. In Proceedings of
the 14th USENIX Conference on File and Storage
Technologies (FAST ’16), Santa Clara, California,
February 2016.
[25] Lanyue Lu, Yupu Zhang, Thanh Do, Samer
Al-Kiswany, Andrea C. Arpaci-Dusseau, and
Remzi H. Arpaci-Dusseau. Physical Disentanglement in a Container-Based File System. In
Proceedings of the 11th Symposium on Operating
Systems Design and Implementation (OSDI ’14),
Broomfield, Colorado, October 2014.
[26] MariaDB. Fusion-io NVMFS Atomic
Write Support. Retrieved April 2016 from
https://mariadb.com/kb/en/mariadb/fusion-ionvmfs-atomic-write-support/.
[27] Mercurial. Dealing with Repository
and Dirstate Corruption. Retrieved
April 2016 from https://www.mercurialscm.org/wiki/RepositoryCorruption.
[28] Microsoft. Alternatives to using Transactional NTFS. Retrieved April 2016
from https://msdn.microsoft.com/enus/library/hh802690.aspx.
[29] Changwoo Min, Woon-Hak Kang, Taesoo Kim,
Sang-Won Lee, and Young Ik Eom. Lightweight
Application-Level Crash Consistency on Transactional Flash Storage. In Proceedings of the USENIX
Annual Technical Conference (USENIX ATC ’15),
Santa Clara, CA, July 2015.
[30] C. Mohan, D. Haderle, B. Lindsay, H. Pirahesh,
and P. Schwarz. ARIES: A Transaction Recovery Method Supporting Fine-Granularity Locking
and Partial Rollbacks Using Write-Ahead Logging.
ACM Transactions on Database Systems, 17(1):94–
162, March 1992.
[31] Edmund B. Nightingale, Kaushik Veeraraghavan,
Peter M Chen, and Jason Flinn. Rethink the Sync.
In Proceedings of the 7th Symposium on Operating
Systems Design and Implementation (OSDI ’06),
pages 1–16, Seattle, Washington, November 2006.
[32] Patrick ONeil, Edward Cheng, Dieter Gawlick,
and Elizabeth ONeil. The Log-Structured MergeTree (LSM-tree). Acta Informatica, 33(4):351–385,
1996.
[33] Stan Park, Terence Kelly, and Kai Shen. FailureAtomic Msync (): a Simple and Efficient Mechanism for Preserving the Integrity of Durable Data.
In Proceedings of the EuroSys Conference (EuroSys
’13), Prague, Czech Republic, April 2013.
[34] Steven Pelley, Peter M. Chen, and Thomas F.
Wenisch. Memory Persistency. In Proceedings
of the 41st International Symposium on Computer
Architecture (ISCA ’14), Minneapolis, MN, USA,
June 2014.
[35] Thanumalayan Sankaranarayana Pillai, Vijay
Chidambaram, Ramnatthan Alagappan, Samer
Al-Kiswany, Andrea C. Arpaci-Dusseau, and
Remzi H. Arpaci-Dusseau. All File Systems Are
Not Created Equal: On the Complexity of Crafting
Crash-Consistent Applications. In Proceedings of
the 11th Symposium on Operating Systems Design
and Implementation (OSDI ’14), Broomfield,
Colorado, October 2014.
[36] Thanumalayan Sankaranarayana Pillai, Vijay
Chidambaram, Ramnatthan Alagappan, Samer
Al-Kiswany, Andrea C. Arpaci-Dusseau, and
Remzi H. Arpaci-Dusseau. Crash Consistency.
Communications of the ACM, 58(10), October
2015.
[37] Donald E. Porter, Owen S. Hofmann, Christopher J.
Rossbach, Alexander Benn, and Emmett Witchel.
Operating Systems Transactions. In Proceedings of
the 8th Symposium on Operating Systems Design
and Implementation (OSDI ’08), San Diego, California, December 2008.
[38] Vijayan Prabhakaran, Thomas L. Rodeheffer, and
Lidong Zhou. Transactional Flash. In Proceedings
of the 8th Symposium on Operating Systems Design
and Implementation (OSDI ’08), San Diego, California, December 2008.
[39] B. Recht, C. Re, S. Wright, and F. Niu. Hogwild!:
A Lock-free Approach to Parallelizing Stochastic
Gradient Descent. Advances in Neural Information
Processing, 2011.
[40] Mendel Rosenblum and John Ousterhout. The Design and Implementation of a Log-Structured File
System. ACM Transactions on Computer Systems,
10(1):26–52, February 1992.
[41] Chris Ruemmler and John Wilkes. An Introduction to Disk Drive Modeling. IEEE Computer,
27(3):17–28, March 1994.
[42] Margo Seltzer, Keith Bostic, Marshall Kirk McKusick, and Carl Staelin. An Implementation of a
Log-Structured File System for UNIX. In Proceedings of the USENIX Winter Technical Conference
(USENIX Winter ’93), pages 307–326, San Diego,
California, January 1993.
[43] Margo Seltzer, Peter Chen, and John Ousterhout.
Disk Scheduling Revisited. In Proceedings of the
USENIX Winter Technical Conference (USENIX
Winter ’90), pages 313–324, Washington, D.C, January 1990.
[44] Margo I. Seltzer. File System Performance and
Transaction Support. PhD thesis, EECS Department, University of California, Berkeley, Jun 1993.
[45] Margo I. Seltzer, Gregory R. Ganger, M. Kirk
McKusick, Keith A. Smith, Craig A. N. Soules, and
Christopher A. Stein. Journaling Versus Soft Updates: Asynchronous Meta-data Protection in File
Systems. In Proceedings of the USENIX Annual
Technical Conference (USENIX ’00), pages 71–84,
San Diego, California, June 2000.
[46] Ji-Yong Shin, Mahesh Balakrishnan, Tudor Marian, and Hakim Weatherspoon. Isotope: Transactional Isolation for Block Storage. In Proceedings
of the 14th USENIX Conference on File and Storage Technologies (FAST ’16), Santa Clara, California, February 2016.
[47] Daniel J. Sorin, Mark D. Hill, and David A. Wood.
A Primer on Memory Consistency and Cache Coherence. Synthesis Lectures on Computer Architecture, November 2011.
[48] Richard P. Spillane, Sachin Gaikwad, Manjunath
Chinni, Erez Zadok, and Charles P. Wright. Enabling Transactional File Access via Lightweight
Kernel Extensions. In Proceedings of the 7th
USENIX Symposium on File and Storage Technologies (FAST ’09), San Francisco, California, February 2009.
[49] SQLite. Isolation In SQLite. Retrieved Dec 2016
from https://www.sqlite.org/isolation.html.
[50] SQLite. SQL As Understood By SQLite. Retrieved
Dec 2016 from https://www.sqlite.org/lang.html.
[51] Vasily Tarasov, Erez Zadok, and Spencer Shepler.
Filebench: A Flexible Framework for File System
Benchmarking. ;login: The USENIX Magazine,
41(1), June 2016.
[52] Linus Torvalds. Linux 2.6.29. Retrieved April 2016
from https://lkml.org/lkml/2009/3/25/632.
[53] Theodore Ts’o. ext4: remove calls
to ext4 jbd2 file inode() from delalloc
write path. Retrieved April 2016 from
http://lists.openwall.net/linux-ext4/2012/11/16/9.
[54] Rajat Verma, Anton Ajay Mendez, Stan Park,
Sandya Srivilliputtur Mannarswamy, Terence P.
Kelly, and Charles B. Morrey III. Failure-Atomic
Updates of Application Data in a Linux File System. In Proceedings of the 13th USENIX Conference on File and Storage Technologies (FAST ’15),
Santa Clara, California, February 2015.
[55] Charles P. Wright, Richard Spillane, Gopalan Sivathanu, and Erez Zadok. Extending ACID Semantics to the File System Via Ptrace. ACM Transactions on Storage (TOS), 3(2):1–42, June 2007.
[56] Junfeng Yang, Can Sar, and Dawson Engler. EXPLODE: A Lightweight, General System for Finding Serious Storage System Errors. In Proceedings
of the 7th Symposium on Operating Systems Design
and Implementation (OSDI ’06), Seattle, Washington, November 2006.
[57] Mai Zheng, Joseph Tucek, Dachuan Huang, Feng
Qin, Mark Lillibridge, Elizabeth S. Yang, Bill W
Zhao, and Shashank Singh. Torturing Databases for
Fun and Profit. In Proceedings of the 11th Symposium on Operating Systems Design and Implementation (OSDI ’14), Broomfield, Colorado, October
2014.
