[1] M. J. Kavis, Architecting the Cloud: Design Decisions for Cloud
Computing Service Models (SaaS, PaaS, and IaaS). John Wiley &
Sons, 2014.
[2] B. P. Rimal, E. Choi, and I. Lumb, “A taxonomy and survey of
cloud computing systems,” in INC, IMS and IDC, 2009. NCM’09. Fifth
International Joint Conference on. IEEE, 2009, pp. 44–51.
[3] P. Patros, S. A. MacKay, K. B. Kent, and M. Dawson, “Investigating resource interference and scaling on multitenant PaaS clouds,” in
Proceedings of the 26th Annual International Conference on Computer
Science and Software Engineering. IBM Corp., 2016, pp. 166–177.
[4] “Java Platform, Standard Edition 7 API Speciﬁcation.” [Online].
Available: http://w3.java.ibm.com/java/docs/java7/api/
[5] N. Grcevski, A. Kielstra, K. Stoodley, M. G. Stoodley, and V. Sundaresan, “Java just-in-time compiler and virtual machine improvements for
server and middleware applications.” in Virtual Machine Research and
Technology Symposium, 2004, pp. 151–162.
[6] Y. Gao, X. R. Guerin, and G. Johnson, “High performance, distributed,
shared, data grid for distributed Java virtual machine runtime artifacts,”
May 3 2016, uS Patent 9,332,083.
[7] A. Richard, L. Nguyen, P. Shipton, K. B. Kent, A. Bierbrauer,
K. Nasartschuk, and M. Dombrowski, “Inter-JVM Sharing,” Software:
Practice and Experience, 2015.
[8] A. Bierbrauer, “Real-world application improvement with user controlled object sharing,” 2017.
[9] D. Bhattacharya, “Enhancing the usage of the shared class cache,” 2017.
[10] M. Jendrosch, G. W. Dueck, C. Gracie, and A. Hinkenjann, “Pc based
escape analysis in the java virtual machine,” Lecture Notes on Software
Engineering, vol. 2, no. 1, p. 16, 2014.
[11] T. Eimouri, K. B. Kent, A. Micic, and K. Taylor, “Object layout
optimization in the JVM based on afﬁnity,” in Electrical and Computer
Engineering (CCECE), 2016 IEEE Canadian Conference on. IEEE,
2016, pp. 1–5.
[12] T. Eimouri, K. B. Kent, and A. Micic, “Effects of false sharing and
locality on object layout optimization for multi-threaded applications,” in
Electrical and Computer Engineering (CCECE), 2016 IEEE Canadian
Conference on. IEEE, 2016, pp. 1–5.
[13] T. Eimouri, K. B. Kent, A. Micic, and K. Taylor, “Using ﬁeld access
frequency to optimize layout of objects in the JVM,” in Proceedings of
the 31st Annual ACM Symposium on Applied Computing. ACM, 2016,
pp. 1815–1818.
[14] P. Patros, E. Aubanel, D. Bremner, and M. Dawson, “A Java util concurrent park contention tool,” in Proceedings of the Sixth International
Workshop on Programming Models and Applications for Multicores and
Manycores. ACM, 2015, pp. 106–111.
[15] L. DeMichiel and B. Shannon, “Java Platform, Enterprise Edition 7 (Java
EE 7) Speciﬁcation,” JSR, JCP, 2013.
[16] K. Ogata and T. Onodera, “Increasing the Transparent Page Sharing in
Java,” in Performance Analysis of Systems and Software (ISPASS), 2013
IEEE International Symposium on. IEEE, 2013, pp. 34–44.
[17] P. Patros, D. Dilli, K. B. Kent, M. Dawson, and T. Watson, “Multitenancy
beneﬁts in application servers,” in Proceedings of the 25th Annual International Conference on Computer Science and Software Engineering.
IBM Corp., 2015, pp. 111–118.
[18] K. Kawachiya, K. Ogata, D. Silva, T. Onodera, H. Komatsu, and
T. Nakatani, “Cloneable JVM: a new approach to start isolated java
applications faster,” in Proceedings of the 3rd international conference
on Virtual execution environments. ACM, 2007, pp. 1–11.
[19] S. William, Computer Security: Principles And Practice.
Pearson
Education India, 2008.
[20] S. Kächele and F. J. Hauck, “Component-based scalability for cloud
applications,” in Proceedings of the 3rd International Workshop on
Cloud Data and Platforms. ACM, 2013, pp. 19–24.
[21] S. R. Seelam, P. Dettori, P. Westerink, and B. B. Yang, “Polyglot
application auto scaling service for platform as a service cloud,” in Cloud
Engineering (IC2E), 2015 IEEE International Conference on. IEEE,
2015, pp. 84–91.
[22] M. Fokaefs, C. Barna, R. Veleda, M. Litoiu, J. Wigglesworth, and R. Mateescu, “Enabling devops for containerized data-intensive applications:
an exploratory study,” in Proceedings of the 26th Annual International
Conference on Computer Science and Software Engineering. IBM
Corp., 2016, pp. 138–148.
[23] R. Krebs, C. Momm, and S. Kounev, “Metrics and techniques for
quantifying performance isolation in cloud environments,” Science of
Computer Programming, vol. 90, pp. 116–134, 2014.
[24] W. Wang, X. Huang, X. Qin, W. Zhang, J. Wei, and H. Zhong,
“Application-level cpu consumption estimation: Towards performance
isolation of multi-tenancy web applications,” in Cloud computing
(cloud), 2012 IEEE 5th International Conference on. IEEE, 2012,
pp. 439–446.
[25] X. Chen, L. Rupprecht, R. Osman, P. Pietzuch, F. Franciosi, and
W. Knottenbelt, “Cloudscope: Diagnosing and managing performance
interference in multi-tenant clouds,” in Modeling, Analysis and Simulation of Computer and Telecommunication Systems (MASCOTS), 2015
IEEE 23rd International Symposium on. IEEE, 2015, pp. 164–173.
[26] T. Ristenpart, E. Tromer, H. Shacham, and S. Savage, “Hey, you, get
off of my cloud: exploring information leakage in third-party compute
clouds,” in Proceedings of the 16th ACM conference on Computer and
communications security. ACM, 2009, pp. 199–212.
[27] “IBM WebSphere Application Server Liberty Buildpack,” [Online].
https://github.com/cloudfoundry/ibm-websphere-liberty-buildpack,
2015, [Accessed: Feb-2016].
[28] “IBM J9 Virtual Machine (JVM),” [Online]. https://www.ibm.com/
support/knowledgecenter/SSYKE2 7.0.0/com.ibm.java.win.70.doc/user/
java jvm.html, [Accessed: Feb-2016].
[29] “About WebSphere Liberty,” [Online]. https://developer.ibm.com/
wasdev/websphere-liberty/, [Accessed: Feb-2016].
[30] A. Field, Discovering statistics using IBM SPSS statistics. Sage, 2013.