[1] C. K. Birdsall and A. B. Langdon, Plasma Physics via Computer
simulations. 1991.
[2] C. K. Birdsall and L. Fellow, “Particle-in-Cell charged-particle simulations, Plus Monte Carlo collision with neutral atom, PIC-MCC,” IEEE
Transactions on Plasma Science, vol. 19, no. 2, pp. 65–85, 1991.
[3] H. C. Kim et. al., “Particle and ﬂuid simulations of low temperature
plasma discharges,” J. Phys. D: Appl. Phys., vol. 38, p. R283, 2005.
[4] J. P. Verboncoeur, “Particle simulation of plasmas: review and advances,”
Plasma Physics and Controlled Fusion, vol. 47, no. 5A, p. A231, 2005.
[5] M. F. Adams, S. Ethier, and N. Wichmann, “Performance of particle in
cell methods on highly concurrent computational architectures,” Journal
of Physics: Conference Series, vol. 78, p. 012001, 2007.
[6] H. Burau, R. Widera, W. Honig, G. Juckeland, A. Debus, T. Kluge,
U. Schramm, T. E. Cowan, R. Sauerbrey, and M. Bussmann, “PIConGPU: A Fully Relativistic Particle-in-Cell Code for a GPU Cluster,”
IEEE Transactions on Plasma Science, vol. 38, no. 10, p. 2831, 2010.
[7] J. Claustre, B. Chaudhury, G. Fubiani, M. Paulin, and J. P. Boeuf,
“Particle-in-cell monte carlo collision model on GPU-application to
a low-temperature magnetized plasma,” IEEE Transactions on Plasma
Science, vol. 41, no. 2, pp. 391–399, 2013.
[8] V. K. Decyk and T. V. Singh, “Particle-in-Cell algorithms for emerging
computer architectures,” Computer Physics Communications, vol. 185,
no. 3, pp. 708–719, 2014.
[9] F. Hariri, T. M. Tran, A. Jocksch, E. Lanti, J. Progsch, P. Messmer,
S. Brunner, C. Gheller, and L. Villard, “A portable platform for
accelerated PIC codes and its application to GPUs using OpenACC,”
Computer Physics Communications, vol. 207, pp. 69–82, 2016.
[10] J. P. Boeuf, B. Chaudhury, and L. Garrigues, “Physics of a magnetic
ﬁlter for negative ion sources. I. Collisional transport across the ﬁlter in
an ideal, 1D ﬁlter,” Physics of Plasmas, vol. 19, no. 11, 2012.
[11] “Tuning CUDA Applications for Kepler (http://docs.nvidia.com),” 2017.
[12] “NVIDIA’s Next Generation CUDA Compute Architecture: Kepler
GK110,” 2012.
[13] Y. Chen and R. B. White, “Collisional δf method Collisional f method,”
Physics of Plasmas, vol. 4, no. 1997, p. 3591, 2012.
[14] J. M. Dawson, “Particle simulation of plasmas,” Reviews of Modern
Physics, vol. 55, no. 2, pp. 403–447, 1983.
[15] O. Schenk and K. Gartner, “Solving unsymmetric sparse systems of
linear equations with PARDISO,” Future Generation Computer Systems,
vol. 20, no. 3, pp. 475–487, 2004.
[16] J. P. Boris, “Relativistic Plasma Simulation-Optimization,” 4th Conference on Numerical Simulation of Plasma, no. Nov. 1970, p. 3, 1970.
[17] M M Turner, “Veriﬁcation of particle-in-cell simulations with Monte
Carlo collisions,” Plasma Sources Sci. and Tech., vol. 25, no. 5, 2016.
[18] J. Demouth, “Kepler’s SHUFFLE (SHFL): Tips Tricks, GTC,” 2013.
[19] Justin Luitjens, “Faster Parallel Reductions on Kepler,” 2014.
[20] C. G. Petra, O. Schenk, and M. Anitescu, “Real-time stochastic optimization of complex energy systems on high-performance computers,”
IEEE Computing in Science & Engineering, vol. 16, no. 5, pp. 32–42,
2014.
[21] E. Sintorn and U. Assarsson, “Fast parallel GPU-sorting using a hybrid
algorithm,” Journal of Parallel and Distributed Computing, vol. 68,
no. 10, pp. 1381–1388, 2008.
[22] Hoeﬂer Torsten and Belli Roberto, “Scientiﬁc benchmarking of parallel
computing systems: twelve ways to tell the masses when reporting
performance results,” in Proceedings of the International Conference
for High Performance Computing, Networking, Storage and Analysis,
p. 73, 2015.