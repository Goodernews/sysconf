[1] H. Fu, J. Liao, J. Yang, and et al., “The Sunway TaihuLight
supercomputer: system and applications,” Science China Information
Sciences, vol. 59, no. 7, pp. 072 001–16, Jun. 2016.
[2] J. Dongarra, “Report on the Sunway TaihuLight system,” University
of Tennessee, Tech. Rep., June 2016.
[3] C. Yang, W. Xue, H. Fu, and et al., “10m-core scalable fully-implicit
solver for nonhydrostatic atmospheric dynamics,” in The International
Conference for High Performance Computing, Networking, Storage
and Analysis, 2016.
[4] J. Zhang, C. Zhou, Y. Wang, and et al., “Extreme-scale phase ﬁeld
simulations of coarsening dynamics on the sunway taihulight supercomputer,” in The International Conference for High Performance
Computing, Networking, Storage and Analysis, 2016.
[5] F. Qiao, W. Zhao, X. Yin, and et al., “A highly effective global surface
wave numerical simulation with ultra-high resolution,” in The International Conference for High Performance Computing, Networking,
Storage and Analysis, 2016.
[6] N. Satish, C. Kim, J. Chhugani, and et al., “Can traditional programming bridge the ninja performance gap for parallel computing applications?” in ACM SIGARCH Computer Architecture News, vol. 40,
no. 3. IEEE Computer Society, 2012, pp. 440–451.
[7] J. D. McCalpin, “Stream benchmark,” URL: http://www. cs. virginia.
edu/stream/stream2, 2002.
[8] Z. D. Xu, J. Lin, and S. Matsuoka, “Benchmarking sw26010 manycore processor,” in Parallel and Distributed Processing Symposium
Workshops, 2017 IEEE International [in press]. IEEE, 2017.
[9] H. Fu, J. Liao, W. Xue, and et al., “Refactoring and optimizing
the community atmosphere model (cam) on the sunway taihulight
supercomputer,” in Proceedings of the International Conference for
High Performance Computing, Networking, Storage and Analysis.
IEEE Press, 2016, p. 83.
[10] J. J. Dongarra, J. Du Croz, S. Hammarling, and I. S. Duff, “A set
of level 3 basic linear algebra subprograms,” ACM Transactions on
Mathematical Software (TOMS), vol. 16, no. 1, pp. 1–17, 1990.
[11] S. Williams, A. Waterman, and D. Patterson, “Rooﬂine: an insightful
visual performance model for multicore architectures,” Communications of the ACM, vol. 52, no. 4, pp. 65–76, 2009.
[12] K. Goto and R. A. Geijn, “Anatomy of high-performance matrix multiplication,” ACM Transactions on Mathematical Software (TOMS),
vol. 34, no. 3, p. 12, 2008.
[13] T. Hoeﬂer, W. Gropp, W. Kramer, and M. Snir, “Performance modeling for systematic performance tuning,” in International Conference
for High Performance Computing, Networking, Storage and Analysis
(SC11), 2011, pp. 1–12.
[14] “Fast inverse square root.” [Online]. Available: https://en.wikipedia.
org/wiki/Fast inverse square root
[15] J. Kurzak, D. A. Bader, and J. Dongarra, Scientiﬁc computing with
multicore and accelerators. CRC Press, 2010.
[16] G. Tan, L. Li, S. Triechle, E. Phillips, Y. Bao, and N. Sun, “Fast
implementation of dgemm on fermi gpu,” in Proceedings of 2011
International Conference for High Performance Computing, Networking, Storage and Analysis. ACM, 2011, p. 35.
[17] A. Heinecke, K. Vaidyanathan, M. Smelyanskiy, and et al., “Design
and Implementation of the Linpack Benchmark for Single and MultiR Xeon PhiTM Coprocessor,” in IPDPS
node Systems Based on Intel
’13: Proceedings of the 2013 IEEE 27th International Symposium on
Parallel and Distributed Processing. IEEE Computer Society, May
2013, pp. 126–137.
[18] S. Williams, J. Shalf, L. Oliker, S. Kamil, P. Husbands, and K. Yelick,
“The potential of the cell processor for scientiﬁc computing,” in
CF ’06: Proceedings of the 3rd conference on Computing frontiers,
Lawrence Berkeley National Laboratory. ACM, May 2006.
[19] L. Nyland, M. Harris, and J. Prins, “Fast N-Body Simulation with
CUDA,” GPU Gems3, 2007.
[20] R. Yokota and M. Abduljabbar, High Performance Parallelism Pearls:
Multicore and Many-core Programming Approaches. Morgan Kaufmann, 2014, vol. One, ch. N-body Methods.
[21] N. Arora, A. Shringarpure, and R. W. Vuduc, “Direct n-body kernels
for multicore platforms,” in 2009 International Conference on Parallel
Processing, Sept 2009, pp. 379–387.
[22] A. Duran and L. Meadows, High Performance Parallelism Pearls:
Multicore and Many-core Programming Approaches. Morgan Kaufmann, 2014, vol. One, ch. A Many-core Implementaton of the Direct
N-body Problem.
[23] Intel Xeon Phi Processor High Performance Programming (Knights
Landing Edition). Morgan Kaufmann, 2016, ch. 23.
[24] A. Karp, “Speeding up N-body Calculations on Machines without
Hardware Square Root,” pp. 1–20, May 2001.
[25] N. Maruyama, T. Nomura, K. Sato, and S. Matsuoka, “Physis:
An implicitly parallel programming model for stencil computations
on large-scale gpu-accelerated supercomputers,” in Proceedings of
2011 International Conference for High Performance Computing,
Networking, Storage and Analysis, 2011.
