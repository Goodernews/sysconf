[1] J. Koomey, S. Berard, M. Sanchez, and H. Wong, “Implications of
historical trends in the electrical efficiency of computing,” IEEE Annals
of the History of Computing, vol. 33, no. 3, pp. 46–54, 2011.
[2] S. Murugesan and G. Gangadharan, Harnessing green IT: Principles and
practices. Wiley Publishing, 2012.
[3] M. Mills, “The cloud begins with coal. digital power group,” 2013.
[4] S. Mittal, “A survey of techniques for improving energy efficiency
in embedded computing systems,” International Journal of Computer
Aided Engineering and Technology, vol. 6, no. 4, pp. 440–459, 2014.
[5] A. P. Chandrakasan, S. Sheng, and R. W. Brodersen, “Low-power cmos
digital design,” IEICE Transactions on Electronics, vol. 75, no. 4, pp.
371–382, 1992.
[6] S. Mutoh, T. Douseki, Y. Matsuya, T. Aoki, S. Shigematsu, and
J. Yamada, “1-v power supply high-speed digital circuit technology
with multithreshold-voltage cmos,” IEEE Journal of Solid-state circuits,
vol. 30, no. 8, pp. 847–854, 1995.
[7] T. D. Burd and R. W. Brodersen, “Energy efficient cmos microprocessor
design,” in System Sciences, 1995. Proceedings of the Twenty-Eighth
Hawaii International Conference on, vol. 1. IEEE, 1995, pp. 288–297.
[8] T. D. Burd, T. A. Pering, A. J. Stratakos, and R. W. Brodersen, “A
dynamic voltage scaled microprocessor system,” IEEE Journal of solidstate circuits, vol. 35, no. 11, pp. 1571–1580, 2000.
[9] J. B. Burr and A. M. Peterson, “Energy considerations in multichipmodule based multiprocessors,” in Computer Design: VLSI in Computers
and Processors, 1991. ICCD’91. Proceedings, 1991 IEEE International
Conference on. IEEE, 1991, pp. 593–600.
[10] J. Burr, L. Gal, R. Haddad, J. Rabaey, and B. Wooley, “Which has greater
potential power impact: High-level design and algorithms or innovative
low power technology?(panel),” in Proceedings of the 1996 international
symposium on Low power electronics and design. IEEE Press, 1996,
p. 175.
[11] C. Bunse, H. Höpfner, E. Mansour, and S. Roychoudhury, “Exploring
the energy consumption of data sorting algorithms in embedded and
mobile environments,” in Mobile Data Management: Systems, Services
and Middleware, 2009. MDM’09. Tenth International Conference on.
IEEE, 2009, pp. 600–607.
[12] S. Götz, C. Wilke, S. Richly, and U. Aßmann, “Approximating quality
contracts for energy auto-tuning software,” in Proceedings of the First
International Workshop on Green and Sustainable Software. IEEE
Press, 2012, pp. 8–14.
[13] S. Götz, C. Wilke, M. Schmidt, S. Cech, and U. Aßmann, “Towards
energy auto tuning,” 2010.
[14] S. Abdulsalam, D. Lakomski, Q. Gu, T. Jin, and Z. Zong, “Program
energy efficiency: The impact of language, compiler and implementation
choices,” in Green Computing Conference (IGCC), 2014 International.
IEEE, 2014, pp. 1–6.
[15] I. Manotas, L. Pollock, and J. Clause, “Seeds: a software engineer’s
energy-optimization decision support framework,” in Proceedings of the
36th International Conference on Software Engineering. ACM, 2014,
pp. 503–514.
[16] O. Shacham, M. Vechev, and E. Yahav, “Chameleon: adaptive selection
of collections,” in ACM Sigplan Notices, vol. 44, no. 6. ACM, 2009,
pp. 408–418.
[17] G. Pinto, F. Castor, and Y. D. Liu, “Understanding energy behaviors of
thread management constructs,” ACM SIGPLAN Notices, vol. 49, no. 10,
pp. 345–360, 2014.
[18] J. Michanan, R. Dewri, and M. J. Rutherford, “Predicting data structures
for energy efficient computing,” in Green Computing Conference and
Sustainable Computing Conference (IGSC), 2015 Sixth International.
IEEE, 2015, pp. 1–8.
[19] G. Pinto, K. Liu, F. Castor, and Y. D. Liu, “A comprehensive study on
the energy efficiency of java thread-safe collections,” Journal of Systems
and Software, 2016.
[20] S. Hasan, Z. King, M. Hafiz, M. Sayagh, B. Adams, and A. Hindle,
“Energy profiles of java collections classes,” in Proceedings of the 38th
International Conference on Software Engineering. ACM, 2016, pp.
225–236.
[21] G. Pinto, F. Castor, and Y. D. Liu, “Mining questions about software
energy consumption,” in Proceedings of the 11th Working Conference
on Mining Software Repositories. ACM, 2014, pp. 22–31.
[22] J. Shirazi, Java performance tuning. ” O’Reilly Media, Inc. ”, 2003.
