[1] GlusterFS on RDMA. "https://gluster.readthedocs.io
/en/latest/AdministratorGuide/RDMATransport/".
[2] Accelio. "http://www.accelio.org", 2013.
[3] Ceph over Accelio. "https://www.cohortfs.com/ceph-o
ver-accelio", 2014.
[4] Support ext4 on NV-DIMMs. "https://lwn.net/Articles
/588218", 2014.
[5] Supporting filesystems in persistent memory. "https://lwn.
net/Articles/610174", 2014.
[6] Alluxio on RDMA. "https://community.mellanox.com
/docs/DOC-2128", 2015.
[7] Introducing Intel Optane technology - bringing 3D
XPoint memory to storage and memory products.
"https://newsroom.intel.com/press-kits/introd
ucing-intel-optane-technology-bringing-3d-xpoin
t-memory-to-storage-and-memory-products/", 2016.
[8] SAP HANA, in-memory computing and real time analytics. "http://go.sap.com/product/technology-platf
orm/hana.html", 2016.
[9] Crail: A Fast Multi-tiered Distributed Direct Access File System.
https://github.com/zrlio/crail, 2017.
[10] ASSOCIATION, I. T., ET AL. InfiniBand Architecture Specification: Release 1.3. InfiniBand Trade Association, 2009.
[11] CONDIT, J., NIGHTINGALE, E. B., FROST, C., IPEK, E., LEE,
B., BURGER, D., AND COETZEE, D. Better I/O through byteaddressable, persistent memory. In Proceedings of the 22nd ACM
SIGOPS Symposium on Operating Systems Principles (SOSP)
(New York, NY, USA, 2009), ACM, pp. 133–146.
[12] DOUGLAS, C. RDMA with PMEM: software mechanisms for
enabling access to remote persistent memory. http://www.sn
ia.org/sites/default/files/SDC15_presentations/
persistant_mem/ChetDouglas_RDMA_with_PM.pdf, 2015.
[13] DRAGOJEVIC´, A., NARAYANAN, D., CASTRO, M., AND HODSON, O. Farm: fast remote memory. In 11th USENIX Symposium
on Networked Systems Design and Implementation (NSDI 14)
(2014), pp. 401–414.
[14] DULLOOR, S. R., KUMAR, S., KESHAVAMURTHY, A., LANTZ,
P., REDDY, D., SANKARAN, R., AND JACKSON, J. System
software for persistent memory. In Proceedings of the Ninth
European Conference on Computer Systems (EuroSys) (New
York, NY, USA, 2014), ACM, pp. 15:1–15:15.
[15] HONDA, M., EGGERT, L., AND SANTRY, D. Paste: Network
stacks must integrate with nvmm abstractions. In Proceedings
of the 15th ACM Workshop on Hot Topics in Networks (2016),
ACM, pp. 183–189.
[16] ISLAM, N. S., WASI-UR RAHMAN, M., LU, X., AND PANDA,
D. K. High performance design for hdfs with byte-addressability
of nvm and rdma. In Proceedings of the 2016 International
Conference on Supercomputing (2016), ACM, p. 8.
[17] JOSEPHSON, W. K., BONGO, L. A., FLYNN, D., AND LI, K.
DFS: A file system for virtualized flash storage. In Proceedings
of the 8th USENIX Conference on File and Storage Technologies
(FAST) (Berkeley, CA, 2010), USENIX.
[18] KALIA, A., KAMINSKY, M., AND ANDERSEN, D. G. Using
rdma efficiently for key-value services. In SIGCOMM (2014).
[19] KALIA, A., KAMINSKY, M., AND ANDERSEN, D. G. Design
guidelines for high performance rdma systems. In 2016 USENIX
Annual Technical Conference (USENIX ATC 16) (2016).
[20] KALIA, A., KAMINSKY, M., AND ANDERSEN, D. G. Fasst:
fast, scalable and simple distributed transactions with two-sided
(rdma) datagram rpcs. In 12th USENIX Symposium on Operating
Systems Design and Implementation (OSDI 16) (2016), USENIX
Association, pp. 185–201.
[21] LEE, B. C., IPEK, E., MUTLU, O., AND BURGER, D. Architecting phase change memory as a scalable dram alternative.
In Proceedings of the 36th annual International Symposium on
Computer Architecture (ISCA) (New York, NY, USA, 2009),
ACM, pp. 2–13.
[22] LEE, C., SIM, D., HWANG, J., AND CHO, S. F2FS: A
new file system for flash storage. In Proceedings of the 13th
USENIX Conference on File and Storage Technologies (FAST)
(Santa Clara, CA, Feb. 2015), USENIX.
[23] LI, H., GHODSI, A., ZAHARIA, M., SHENKER, S., AND
STOICA, I. Tachyon: Reliable, memory speed storage for cluster
computing frameworks. In Proceedings of the ACM Symposium
on Cloud Computing (2014).
[24] LIM, H., HAN, D., ANDERSEN, D. G., AND KAMINSKY, M.
Mica: A holistic approach to fast in-memory key-value storage.
management 15, 32 (2014), 36.
[25] LU, Y., SHU, J., AND SUN, L. Blurred persistence in transactional persistent memory. In Proceedings of the 31st Conference
on Massive Storage Systems and Technologies (MSST) (2015),
IEEE, pp. 1–13.
[26] LU, Y., SHU, J., SUN, L., AND MUTLU, O. Loose-ordering
consistency for persistent memory. In Proceedings of the IEEE
32nd International Conference on Computer Design (ICCD)
(2014), IEEE.
[27] LU, Y., SHU, J., AND WANG, W. ReconFS: A reconstructable
file system on flash storage. In Proceedings of the 12th USENIX
Conference on File and Storage Technologies (FAST) (Berkeley,
CA, 2014), USENIX, pp. 75–88.
[28] LU, Y., SHU, J., AND ZHENG, W. Extending the lifetime of
flash-based storage through reducing write amplification from
file systems. In Proceedings of the 11th USENIX Conference
on File and Storage Technologies (FAST) (Berkeley, CA, 2013),
USENIX.
[29] MITCHELL, C., GENG, Y., AND LI, J. Using one-sided rdma
reads to build a fast, cpu-efficient key-value store. In Presented as
part of the 2013 USENIX Annual Technical Conference (USENIX
ATC 13) (2013), pp. 103–114.
[30] MITCHELL, C., MONTGOMERY, K., NELSON, L., SEN, S.,
AND LI, J. Balancing cpu and network in the cell distributed
b-tree store. In 2016 USENIX Annual Technical Conference
(USENIX ATC 16) (2016).
[31] NARRAVULA, S., MARNIDALA, A., VISHNU, A.,
VAIDYANATHAN, K., AND PANDA, D. K. High performance
distributed lock management services using network-based
remote atomic operations. In Seventh IEEE International
Symposium on Cluster Computing and the Grid (CCGrid’07)
(2007), IEEE, pp. 583–590.
[32] OU, J., SHU, J., AND LU, Y. A high performance file system
for non-volatile main memory. In Proceedings of the Eleventh
European Conference on Computer Systems (2016), ACM, p. 12.
[33] PELLEY, S., CHEN, P. M., AND WENISCH, T. F. Memory
persistency. In Proceedings of the 41st ACM/IEEE International
Symposium on Computer Architecture (ISCA) (2014), pp. 265–
276.
[34] QURESHI, M. K., SRINIVASAN, V., AND RIVERS, J. A.
Scalable high performance main memory system using phasechange memory technology. In Proceedings of the 36th annual
International Symposium on Computer Architecture (ISCA) (New
York, NY, USA, 2009), ACM, pp. 24–33.
[35] SHVACHKO, K., KUANG, H., RADIA, S., AND CHANSLER, R.
The hadoop distributed file system. In IEEE 26th symposium
on mass storage systems and technologies (MSST) (2010), IEEE,
pp. 1–10.
[36] STRUKOV, D. B., SNIDER, G. S., STEWART, D. R., AND
WILLIAMS, R. S. The missing memristor found. nature 453,
7191 (2008), 80–83.
[37] STUEDI, P., TRIVEDI, A., METZLER, B., AND PFEFFERLE, J.
DaRPC: Data center rpc. In Proceedings of the ACM Symposium
on Cloud Computing (SoCC) (2014), ACM, pp. 1–13.
[38] SWANSON, S., AND CAULFIELD, A. M. Refactor, reduce,
recycle: Restructuring the i/o stack for the future of storage.
Computer 46, 8 (2013), 52–59.
[39] TALPEY, T. Remote Access to ultra-low-latency storage.
http://www.snia.org/sites/default/files/SDC15_pr
esentations/persistant_mem/Talpey-Remote_Access
_Storage.pdf, 2015.
[40] WANG, Y., ZHANG, L., TAN, J., LI, M., GAO, Y., GUERIN,
X., MENG, X., AND MENG, S. Hydradb: a resilient rdmadriven key-value middleware for in-memory cluster computing.
In Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis (2015),
ACM, p. 22.
[41] WEI, X., SHI, J., CHEN, Y., CHEN, R., AND CHEN, H. Fast
in-memory transaction processing using rdma and htm. In Proceedings of the 25th Symposium on Operating Systems Principles
(2015), ACM, pp. 87–104.
[42] WU, X., AND REDDY, A. L. N. SCMFS: A file system for
storage class memory. In Proceedings of 2011 International Conference for High Performance Computing, Networking, Storage
and Analysis (SC) (New York, NY, USA, 2011), ACM, pp. 39:1–
39:11.
[43] XU, J., AND SWANSON, S. Nova: a log-structured file system
for hybrid volatile/non-volatile main memories. In 14th USENIX
Conference on File and Storage Technologies (FAST 16) (2016),
pp. 323–338.
[44] ZHANG, J., SHU, J., AND LU, Y. Parafs: A log-structured file
system to exploit the internal parallelism of flash devices. In 2016
USENIX Annual Technical Conference (USENIX ATC 16) (2016).
[45] ZHANG, Y., YANG, J., MEMARIPOUR, A., AND SWANSON,
S. Mojim: A reliable and highly-available non-volatile memory
system. In Proceedings of the Twentieth International Conference on Architectural Support for Programming Languages and
Operating Systems (New York, NY, USA, 2015), ASPLOS ’15,
ACM, pp. 3–18.
[46] ZHOU, P., ZHAO, B., YANG, J., AND ZHANG, Y. A durable
and energy efficient main memory using phase change memory
technology. In Proceedings of the 36th annual International
Symposium on Computer Architecture (ISCA) (New York, NY,
USA, 2009), ACM, pp. 14–23.

