
[1] R. Avnur and J. M. Hellerstein. Eddies: Continuously
adaptive query processing. In SIGMOD, 2000.

[2] S. Babu and P. Bizarro. Adaptive query processing in the
looking glass. In CIDR, 2005.

[3] S. Babu, P. Bizarro, and D. J. DeWitt. Proactive
re-optimization. In SIGMOD, 2005.

[4] R. Borovica-Gajic, S. Idreos, A. Ailamaki, M. Zukowski,
and C. Fraser. Smooth scan: Statistics-oblivious access paths.
In ICDE, 2015.

[5] T. H. Cormen, C. E. Leiserson, R. L. Rivest, and C. Stein.
Introduction to Algorithms (3. ed.). 2009.

[6] A. Deshpande, Z. G. Ives, and V. Raman. Adaptive query
processing. Foundations and Trends in Databases, 1(1),
2007.

[7] A. Dutt and J. R. Haritsa. Plan bouquets: query processing
without selectivity estimation. In SIGMOD, 2014.

[8] P. Fender and G. Moerkotte. Counter strike: Generic
top-down join enumeration for hypergraphs. PVLDB, 6(14),
2013.

[9] S. Ganguly, P. B. Gibbons, Y. Matias, and A. Silberschatz.
Bifocal sampling for skew-resistant join size estimation. In
SIGMOD, 1996.

[10] G. Graefe. A generalized join algorithm. In BTW, 2011.

[11] Y. E. Ioannidis and S. Christodoulakis. On the propagation of
errors in the size of join results. In SIGMOD, 1991.

[12] R. A. Kader, P. A. Boncz, S. Manegold, and M. van Keulen.
ROX: run-time optimization of XQueries. In SIGMOD, 2009.

[13] S. Karthik, J. R. Haritsa, S. Kenkre, and V. Pandit.
Platform-independent robust query processing. In ICDE,
2016.

[14] V. Leis, P. Boncz, A. Kemper, and T. Neumann.
Morsel-driven parallelism: A NUMA-aware query evaluation
framework for the many-core age. In SIGMOD, 2014.

[15] V. Leis, A. Gubichev, A. Mirchev, P. Boncz, A. Kemper, and
T. Neumann. How good are query optimizers, really?
PVLDB, 9(3), 2015.

[16] V. Leis, A. Kemper, and T. Neumann. The adaptive radix
tree: ARTful indexing for main-memory databases. In ICDE,
2013.

[17] V. Leis, K. Kundhikanjana, A. Kemper, and T. Neumann.
Efficient processing of window functions in analytical SQL
queries. PVLDB, 8(10), 2015.

[18] V. Leis, F. Scheibner, A. Kemper, and T. Neumann. The ART
of practical synchronization. In DaMoN, 2016.

[19] R. J. Lipton, J. F. Naughton, and D. A. Schneider. Practical
selectivity estimation through adaptive sampling. In
SIGMOD, 1990.

[20] G. Lohman. Is query optimization a “solved” problem?
http://wp.sigmod.org/?p=1075, 2014.

[21] V. Markl, N. Megiddo, M. Kutsch, T. M. Tran, P. J. Haas, and.
U. Srivastava. Consistently estimating the selectivity of
conjuncts of predicates. In VLDB, 2005.

[22] V. Markl, V. Raman, D. E. Simmen, G. M. Lohman, and
H. Pirahesh. Robust query processing through progressive
optimization. In SIGMOD, 2004.

[23] G. Moerkotte and T. Neumann. Dynamic programming
strikes back. In SIGMOD, 2008.

[24] I. Miiller, P. Sanders, A. Lacurie, W. Lehner, and F. Farber.
Cache-efficient aggregation: Hashing is sorting. In SIGMOD,
2015.

[25] T. Neumann. Query simplification: graceful degradation for
join-order optimization. In SIGMOD, 2009.

[26] T. Neumann and C. A. Galindo-Legaria. Taking the edge off
cardinality estimation errors using incremental execution. In
BTW, 2013.

[27] T. Neumann and V. Leis. Compiling database queries into
machine code. IEEE Data Eng. Bull., 37(1), 2014.

[28] F. Olken and D. Rotem. Random sampling from database
files: A survey. In SSDBM, 1990.

[29] M. Stillger, G. M. Lohman, V. Markl, and M. Kandil. LEO DB2’s learning optimizer. In VLDB, 2001.

[30] W. Wu, J. F Naughton, and H. Singh. Sampling-based query
re-optimization. In SIGMOD, 2016.

[31] F. Yu, W. Hou, C. Luo, D. Che, and M. Zhu. CS2: a new
database synopsis for query estimation. In SIGMOD, 2013.


