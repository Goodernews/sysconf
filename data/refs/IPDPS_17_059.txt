[1] T. White, Hadoop: The Deﬁnitive Guide, 1st ed. O’Reilly Media, Inc.,

2009.

604

[2] M. Zaharia, M. Chowdhury, M. J. Franklin, S. Shenker, and I. Stoica,
“Spark: Cluster computing with working sets,” in HotCloud’10, 2010.
[3] R. E. Wunderlich, T. F. Wenisch, B. Falsaﬁ, and J. C. Hoe, “Smarts:
Accelerating microarchitecture simulation via rigorous statistical sam-
pling,” in ISCA ’03, 2003.

[4] T. Sherwood, E. Perelman, G. Hamerly, and B. Calder, “Automatically

characterizing large scale program behavior,” in ASPLOS X, 2002.

[5] R. Hariharan, N. Sun, and S. Microsystems, “Workload characterization

of specweb2005,” 2006.

[6] T. F. Wenisch, R. E. Wunderlich, M. Ferdman, A. Ailamaki, B. Falsaﬁ,
and J. C. Hoe, “Simﬂex: Statistical sampling of computer system
simulation,” IEEE Micro, vol. 26, no. 4, pp. 18–31, Jul. 2006.

[7] P. Lotﬁ-Kamran, B. Grot, M. Ferdman, S. Volos, O. Kocberber, J. Pi-
corel, A. Adileh, D. Jevdjic, S. Idgunji, E. Ozer, and B. Falsaﬁ, “Scale-
out processors,” in ISCA ’12, 2012.

[8] D. Jevdjic, S. Volos, and B. Falsaﬁ, “Die-stacked dram caches for
servers: Hit ratio, latency, or bandwidth? have it all with footprint cache,”
in ISCA ’13, 2013.

[9] E. PARSA, Rigorous and Practical Server Design Evaluation, Georgia

Institute of Technology, 2015.

[10] Oracle, “JVM TI Reference,” WWW page, 2007.
[11] M. Odersky and M. Zenger, “Scalable component abstractions,” in

OOPSLA ’05, 2005.

[12] M. Bach, M. Charney, R. Cohn, T. Devor, E. Demikovsky, K. Hazel-
wood, A. Jaleel, C.-K. Luk, G. Lyons, H. Patil, and A. Tal, “Analyzing
parallel programs with pin,” vol. 43, no. 3, pp. 34–41, March 2010.

[13] M. Annavaram, R. Rakvic, M. Polito, J.-Y. Bouguet, R. Hankins,
and B. Davies, “The fuzzy correlation between code and performance
predictability,” in MICRO-37, Dec 2004, pp. 93–104.

[14] “The four v’s of big data,” in IBM big data & analytics hub.
[15] C. M. Bishop, Pattern Recognition and Machine Learning (Information
Science and Statistics). Secaucus, NJ, USA: Springer-Verlag New York,
Inc., 2006.

[16] S. Wikipedia and L. Books, Sampling (Statistics): Census, Sample, Strat-
iﬁed Sampling, Sampling Bias, Statistical Unit, Opinion Poll, Statistical
Survey, Margin of Erro. General Books LLC, 2011.

[17] L. W. et al., “Bigdatabench: A big data benchmark suite from internet

services,” in HPCA, 2014.

[18] C. A. Curino, D. E. Difallah, A. Pavlo, and P. Cudre-Mauroux,
“Benchmarking OLTP/Web databases in the cloud: The OLTP-bench
framework,” in CloudDB ’12, 2012.

[19] J. Leskovec and R. Sosiˇc, “SNAP: A general purpose network analysis
and graph mining library in C++,” http://snap.stanford.edu/, Jun. 2014.
[20] J. Leskovec, D. Chakrabarti, J. Kleinberg, C. Faloutsos, and Z. Ghahra-
mani, “Kronecker graphs: An approach to modeling networks,” J. Mach.
Learn. Res., vol. 11, pp. 985–1042, Mar. 2010.

[21] H. Patil, R. S. Cohn, M. Charney, R. Kapoor, A. Sun, and
A. Karunanidhi, “Pinpointing representative portions of large Intel
Itanium programs with dynamic instrumentation,” in MICRO-37, 2004.
[22] E. Perelman, G. Hamerly, and B. Calder, “Picking statistically valid and

early simulation points,” ser. PACT ’03, 2003.

[23] E. K. Ardestani and J. Renau, “ESESC: A fast multicore simulator using

time-based sampling,” in HPCA, 2013.

[24] T. Carlson, W. Heirman, and L. Eeckhout, “Sampled simulation of multi-

threaded applications,” in ISPASS, 2013.

[25] T. Carlson, W. Heirman, K. Van Craeynest, and L. Eeckhout, “Barrier-
point: Sampled simulation of multi-threaded applications,” in ISPASS,
2014.

[26] J. J. Yi, S. V. Kodakara, R. Sendag, D. J. Lilja, and D. M. Hawkins,
“Characterizing and comparing prevailing simulation techniques,” in
HPCA, 2005.

[27] R. E. Wunderlich, T. F. Wenisch, B. Falsaﬁ, and J. C. Hoe, “An
evaluation of stratiﬁed sampling of microarchitecture simulations,” in
WDDD, 2004.

[28] L. Eeckhout, H. Vandierendonck, and K. D. Bosschere, “Workload

design: Selecting representative program-input pairs,” in PACT, 2002.

[29] M. B. Breughe and L. Eeckhout, “Selecting representative benchmark
inputs for exploring microprocessor design spaces,” ACM Trans. Archit.
Code Optim., vol. 10, no. 4, pp. 37:1–37:24, Dec. 2013.

[30] W. C. Hsu, H. Chen, P. C. Yew, and H. Chen, “On the predictability
of program behavior using different input data sets,” in InterACT, 2002,
pp. 45–53.

