[1] H. Anzt et al. “Acceleration of GPU-based Krylov Solvers via Data Transfer Reduction”. In: Int. J. High Perform. Comput. Appl. 29.3 (Aug. 2015), pp. 366– 383. ISSN: 1094-3420.
[2] A. Ashari et al. “Fast Sparse Matrix-vector Multiplication on GPUs for Graph Applications”. In: Proc. of the ACM/IEEE Supercomputing. SC ’14. 2014, pp. 781–792. ISBN: 978-1-4799-5500-8. DOI: 10.1109/SC.2014.69.
[3] S. Beamer et al. “Direction-optimizing breadth-first search”. In: Scientific Programming 21.3-4 (2013), pp. 137–148.
[4] A. Buluc ̧ et al. “The Combinatorial BLAS: Design, Implementation, and Applications”. In: Intl. J. High Perform. Comput. Appl. 25.4 (Nov. 2011), pp. 496–509.
[5] A. Buluc ̧ and K. Madduri. “Parallel breadth-first search on distributed memory systems”. In: ACM/IEEE Supercomputing. 2011, p. 65.
[6] Y. Cheng et al. “Understanding the SIMD Efficiency of Graph Traversal on GPU”. In: Intl. Conf. on Alg. and Arch. for Par. Proc. 2014, pp. 42–56.
[7] T. H. Cormen et al. Introduction to Algorithms. 2nd. McGraw-Hill Higher
Education, 2001. ISBN: 0070131511.
[8] M. Daga and J. L. Greathouse. “Structural agnostic SpMV: Adapting CSR-
adaptive for irregular matrices”. In: Intl. Conf on High Perf. Comp. (HiPC).
IEEE. 2015, pp. 64–74.
[9] Y. S. Deng et al. “Taming irregular EDA applications on GPUs”. In: Proc. of
the Intl. Conf. on Comp. Aid. Des. ACM. 2009, pp. 539–546.
[10] P. Erdo ̋s and A. Re ́nyi. “On the evolution of random graphs”. In: Selected
Papers of Alfre ́d Re ́nyi 2 (1976), pp. 482–525.
[11] D. Gregor et al. “The parallel BGL: A generic library for distributed graph
computations”. In: Par. Obj.-Or. Sc. Comp. (POOSC) 2 (2005), pp. 1–18.
[12] P. Harish and P. Narayanan. “Accelerating large graph algorithms on the GPU
using CUDA”. In: Intl. Conf. on High-Perf. Comp. 2007, pp. 197–208.
[13] J. Kepner and J. Gilbert. Graph algorithms in the language of linear algebra.
Vol. 22. SIAM, 2011.
[14] M. Kreutzer et al. “A unified sparse matrix data format for efficient general
sparse matrix-vector multiplication on modern processors with wide SIMD
units”. In: SIAM Journal on Scientific Comp. 36.5 (2014), pp. C401–C423.
[15] C. E. Leiserson and T. B. Schardl. “A work-efficient parallel breadth-first search algorithm (or how to cope with the nondeterminism of reducers)”. In: Proc. of the ACM Symp. on Par. in Alg and Arch. (SPAA). 2010, pp. 303–314.
[16] J. Leskovec et al. “Kronecker graphs: An approach to modeling networks”.
In: J. of M. Learn. Res. 11 (2010), pp. 985–1042.
[17] X. Liu et al. “Efficient sparse matrix-vector multiplication on x86-based many-
core processors”. In: Intl. Conf. on Super. (ICS). ACM. 2013, pp. 273–282.
[18] C. Lomont. “Introduction to Intel advanced vector extensions”. In: Intel White
Paper (2011).
[19] A. Lumsdaine et al. “Challenges in parallel graph processing”. In: Par. Proc.
L. 17.01 (2007), pp. 5–20.
[20] G. Malewicz et al. “Pregel: a system for large-scale graph processing”. In:
Proc. of the ACM SIGMOD Intl. Conf. on Manag. of Data. 2010, pp. 135–146.
[21] T. Mattson et al. “Standards for graph algorithm primitives”. In: arXiv preprint
arXiv:1408.0393 (2014).
[22] D. Merrill, M. Garland, and A. Grimshaw. “High-performance and scalable
GPU graph traversal”. In: ACM Trans. on Par. Comp. 1.2 (2015), p. 14.
[23] A. Monakov et al. “Automatically tuning sparse matrix-vector multiplication for GPU architectures”. In: Intl. Conf. on High-Perf. Emb. Arch. and Comp.
Springer. 2010, pp. 111–125.
[24] R. C. Murphy et al. “Introducing the Graph 500”. In: Cray User’s Group
(CUG) (2010).
[25] M. Paredes, G. Riley, and M. Luja ́n. “Breadth first search vectorization on the
Intel Xeon Phi”. In: Proc. of ACM Intl. Conf. on Comp. Fron. 2016, pp. 1–10.
[26] M. Raab et al. ““Balls into bins”—A simple and tight analysis”. In: Intl. Work.
on Rand. and Approx. Techniques in CS. Springer. 1998, pp. 159–170.
[27] T. Suzumura et al. “Performance characteristics of Graph500 on large-scale distributed environment”. In: IEEE Intl. Symp on. Work. Char. (IISWC). 2011,
pp. 149–158.
[28] Y. Wang et al. “Gunrock: A high-performance graph processing library on the
GPU”. In: ACM Symp. on Prin. and Prac. of Par. Prog. (PPoPP). 2016, p. 11.
[29] C. Yang, Y. Wang, and J. D. Owens. “Fast sparse matrix and sparse vector multiplication algorithm on the GPU”. In: Par. and Dist. Proc. Symp. Work.
(IPDPSW), IEEE Intl. IEEE. 2015, pp. 841–847.
[30] J. Yang et al. “Defining and evaluating network communities based on ground-
truth”. In: Knowledge and Inf. Systems 42.1 (2015), pp. 181–213.
[31] X. Yang et al. “Fast sparse matrix-vector multiplication on GPUs: implications
for graph mining”. In: Proc. of VLDB End. 4.4 (2011), pp. 231–242.
