[1] Advanced Micro Devices Inc. 2017. CodeXL. (2017). http://gpuopen.com/
compute-product/codexl/
[2] Muhammed Al Kadi, Benedikt Janssen, and Michael Huebner. 2016. FGPU:
An SIMT-Architecture for FPGAs. In ACM/SIGDA International Symposium on
Field-Programmable Gate Arrays (FPGA). ACM, New York, NY, USA, 254–263.
https://doi.org/10.1145/2847263.2847273
[3] Altera Corp. 2014. Altera SDK for OpenCL. Programming Guide. (2014).
[4] K. Andryc, M. Merchant, and R. Tessier. 2013. FlexGrip: A soft GPGPU for FPGAs.
In International Conference on Field-Programmable Technology (FPT). 230–237.
https://doi.org/10.1109/FPT.2013.6718358
[5] Raghuraman Balasubramanian, Vinay Gangadhar, Ziliang Guo, Chen-Han Ho,
Cherin Joseph, Jaikrishnan Menon, Mario Paulo Drumond, Robin Paul, Sharath
Prasad, Pradip Valathol, and Karthikeyan Sankaralingam. 2015. Enabling GPGPU
Low-Level Hardware Explorations with MIAOW: An Open-Source RTL Implementation of a GPGPU. ACM Transactions on Architecture and Code Optimization
(TACO) 12, 2, Article 21 (June 2015), 21:1–21:25 pages. https://doi.org/10.1145/
2764908
[6] A. Bourd. 2016. The OpenCL Speci�cation: Version 2.2. (March 2016). khronos.
org/registry/cl/specs/opencl-2.2.pdf
[7] S. Che, M. Boyer, J. Meng, D. Tarjan, J. W. Shea�er, S. H. Lee, and K. Skadron. 2009.
Rodinia: A benchmark suite for heterogeneous computing. In IEEE International
Symposium on Workload Characterization (IISWC). 44–54. https://doi.org/10.1109/
IISWC.2009.5306797
[8] Shuai Che, Michael Boyer, Jiayuan Meng, David Tarjan, Jeremy W. Shea�er, and
Kevin Skadron. 2008. A Performance Study of General-purpose Applications on
Graphics Processors Using CUDA. Journal of Parallel and Distributed Computing
(JPDC) 68, 10 (Oct. 2008), 1370–1380. https://doi.org/10.1016/j.jpdc.2008.05.014
[9] Hari Cherupalli, Henry Duwe, Weidong Ye, Rakesh Kumar, and John Sartori.
2017. Bespoke Processors for Applications with Ultra-low Area and Power
Constraints. In Proceedings of the 44th Annual International Symposium on
Computer Architecture (ISCA’17). ACM, New York, NY, USA, 41–54. https:
//doi.org/10.1145/3079856.3080247
[10] T. S. Czajkowski, U. Aydonat, D. Denisenko, J. Freeman, M. Kinsner, D. Neto, J.
Wong, P. Yiannacouras, and D. P. Singh. 2012. From OpenCL to high-performance
hardware on FPGAS. In 22nd International Conference on Field Programmable
Logic and Applications (FPL). 531–534. https://doi.org/10.1109/FPL.2012.6339272
[11] J. Deng, W. Dong, R. Socher, L. J. Li, Kai Li, and Li Fei-Fei. 2009. ImageNet: A largescale hierarchical image database. In IEEE Conference on Computer Vision and
Pattern Recognition (CVPR). 248–255. https://doi.org/10.1109/CVPR.2009.5206848
[12] G. Falcao, M. Owaida, D. Novo, M. Purnaprajna, N. Bellas, C. D. Antonopoulos,
G. Karakonstantis, A. Burg, and P. Ienne. 2012. Shortening Design Time through
Multiplatform Simulations with a Portable OpenCL Golden-model: The LDPC
Decoder Case. In IEEE 20th International Symposium on Field-Programmable
Custom Computing Machines (FCCM). 224–231. https://doi.org/10.1109/FCCM.
2012.46
[13] G. Falcao, V. Silva, L. Sousa, and J. Andrade. 2012. Portable LDPC Decoding
on Multicores Using OpenCL [Applications Corner]. IEEE Signal Processing
Magazine 29, 4 (July 2012), 81–109. https://doi.org/10.1109/MSP.2012.2192212
[14] V. Gangadhar, R. Balasubramanian, M. Drumond, Z. Guo, J. Menon, C. Joseph, R.
Prakash, S. Prasad, P. Vallathol, and K. Sankaralingam. 2015. MIAOW: An open
source GPGPU. In IEEE Hot Chips 27 Symposium (HCS). 1–43. https://doi.org/10.
1109/HOTCHIPS.2015.7477460
[15] K. He, X. Zhang, S. Ren, and J. Sun. 2015. Delving Deep into Recti�ers: Surpassing
Human-Level Performance on ImageNet Classi�cation. In IEEE/CVF International
Conference on Computer Vision (ICCV). 1026–1034. https://doi.org/10.1109/ICCV.
2015.123
[16] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. 2016. Deep residual
learning for image recognition. In Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition (CVPR). 770–778.
[17] Advanced Micro Devices Inc. 2012. Southern Islands Series Instruction Set
Architecture Reference Guide. (2012).
[18] Advanced Micro Devices Inc. 2016. Accelerated Parallel Processing (APP) Software Development Kit (SDK). (2016). http://developer.amd.com/sdks/amdappsdk/
[19] Alex Krizhevsky, Ilya Sutskever, and Geo�rey E. Hinton. 2012. ImageNet Classi�cation with Deep Convolutional Neural Networks. In 25th International Conference on Neural Information Processing Systems (NIPS). Curran Associates Inc.,
USA, 1097–1105. http://dl.acm.org/citation.cfm?id=2999134.2999257
[20] K. Krommydas, A. E. Helal, A. Verma, and W. C. Feng. 2016. Bridging the
Performance-Programmability Gap for FPGAs via OpenCL: A Case Study
with OpenDwarfs. In IEEE 24th Annual International Symposium on FieldProgrammable Custom Computing Machines (FCCM). 198–198. https://doi.org/10.
1109/FCCM.2016.56
[21] Min Lin, Qiang Chen, and Shuicheng Yan. 2013. Network in network. arXiv
preprint arXiv:1312.4400 (2013).
[22] Jose Marques, Jose Andrade, and Gabriel Falcao. 2017. Unreliable Memory Operation on a Convolutional Neural Network Processor. In Proceedings of the 2017
IEEE International Workshop on Signal Processing Systems (SiPS) (SiPS’17). IEEE,
New York, NY, USA, 1–6.
[23] Sparsh Mittal and Je�rey S Vetter. 2015. A survey of methods for analyzing and
improving GPU energy e�ciency. ACM Computing Surveys (CSUR) 47, 2 (2015),
19.
[24] A. Momeni, H. Tabkhi, G. Schirner, and D. Kaeli. 2016. Hardware thread reordering to boost OpenCL throughput on FPGAs. In IEEE 34th International Conference
on Computer Design (ICCD). 257–264. https://doi.org/10.1109/ICCD.2016.7753288
[25] N. Neves, N. Sebasti ao, D. Matos, P. Tomás, P. Flores, and N. Roma. 2015. Multicore
SIMD ASIP for Next-Generation Sequencing and Alignment Biochip Platforms.
IEEE Transactions on Very Large Scale Integration (VLSI) Systems 23, 7 (July 2015),
1287–1300. https://doi.org/10.1109/TVLSI.2014.2333757
[26] N. Neves, P. Tomás, and N. Roma. 2017. Adaptive In-Cache Streaming for E�cient
Data Management. IEEE Transactions on Very Large Scale Integration (VLSI)
Systems 25, 7 (July 2017), 2130–2143. https://doi.org/10.1109/TVLSI.2017.2671405
[27] NVIDIA. 2017. CUDA C Programming Guide 8.0. NVIDIA.
[28] Y. Pang, M. Sun, X. Jiang, and X. Li. 2017. Convolution in Convolution for
Network in Network. IEEE Transactions on Neural Networks and Learning Systems
PP, 99 (2017), 1–11. https://doi.org/10.1109/TNNLS.2017.2676130
[29] Human Brain Project. 2017. Human Brain Project. (June 2017). https://www.
humanbrainproject.eu/en/

[30] Andrew Putnman, Adrian M Caul�eld, Eric S Chung, Derek Chiou, Kypros Constantinides, John Demme, Hadi Esmaeilzadeh, Jeremy Fowers, Gopi Prashanth
Gopal, Jan Gray, et al. 2014. A Recon�gurable Fabric for Accelerating Large-scale
Datacenter Services. In ACM/IEEE 41st International Symposium on Computer
Architecture (ISCA). 13–24.
[31] Brandon Reagen, Paul Whatmough, Robert Adolf, Saketh Rama, Hyunkwang Lee,
Sae Kyu Lee, José Miguel Hernández-Lobato, Gu-Yeon Wei, and David Brooks.
2016. Minerva: Enabling low-power, highly-accurate deep neural network accelerators. In 43rd International Symposium on Computer Architecture (ISCA). IEEE
Press, 267–278.
[32] Timothy G Rogers, Daniel R Johnson, Mike O’Connor, and Stephen W Keckler. 2015. A variable warp size architecture. In ACM/IEEE 42nd International
Symposium on Computer Architecture (ISCA). IEEE, 489–501.
[33] Olga Russakovsky, Jia Deng, Hao Su, Jonathan Krause, Sanjeev Satheesh, Sean Ma,
Zhiheng Huang, Andrej Karpathy, Aditya Khosla, Michael Bernstein, Alexander C.
Berg, and Li Fei-Fei. 2015. ImageNet Large Scale Visual Recognition Challenge.
International Journal of Computer Vision (IJCV) 115, 3 (2015), 211–252. https:
//doi.org/10.1007/s11263-015-0816-y
[34] Muhammad Husni Santriaji and Henry Ho�mann. 2016. GRAPE: Minimizing
energy for GPU applications with performance requirements. In 49th Annual
IEEE/ACM International Symposium on Microarchitecture (MICRO). IEEE, 1–13.
[35] Ankit Sethia, Ganesh Dasika, Mehrzad Samadi, and Scott Mahlke. 2013. APOGEE:
Adaptive prefetching on GPUs for energy e�ciency. In 22nd International Conference on Parallel Architectures and Compilation Techniques. IEEE Press, 73–82.
[36] Ankit Sethia and Scott Mahlke. 2014. Equalizer: Dynamic tuning of GPU resources
for e�cient execution. In IEEE/ACM 47th Annual International Symposium on
Microarchitecture (MICRO). IEEE Computer Society, 647–658.
[37] Christian Szegedy, Wei Liu, Yangqing Jia, Pierre Sermanet, Scott Reed, Dragomir
Anguelov, Dumitru Erhan, Vincent Vanhoucke, and Andrew Rabinovich. 2015.
Going deeper with convolutions. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR). 1–9.
[38] Rafael Ubal, Byunghyun Jang, Perhaad Mistry, Dana Schaa, and David Kaeli.
2012. Multi2Sim: A Simulation Framework for CPU-GPU Computing. In Proceedings of the ACM/IEEE 21st International Conference on Parallel Architectures and Compilation Techniques (PACT). ACM, New York, NY, USA, 335–344.
https://doi.org/10.1145/2370816.2370865
[39] Yaman Umuroglu, Nicholas J. Fraser, Giulio Gambardella, Michaela Blott, Philip
Leong, Magnus Jahre, and Kees Vissers. 2017. FINN: A Framework for Fast, Scalable Binarized Neural Network Inference. In Proceedings of the 2017 ACM/SIGDA
International Symposium on Field-Programmable Gate Arrays (FPGA). ACM, New
York, NY, USA, 65–74. https://doi.org/10.1145/3020078.3021744
[40] Kizheppatt Vipin and Suhaib A Fahmy. 2014. ZyCAP: E�cient partial recon�guration management on the Xilinx Zynq. IEEE Embedded Systems Letters 6, 3
(2014), 41–44.
[41] Xilinx. 2015. Zynq-7000 All Programmable SoC and 7 Series Devices Memory
Interface Solutions v2.3 User Guide. (June 2015). http://www.xilinx.com/support/
documentation/ip_documentation/mig_7series/v2_3/ug586_7Series_MIS.pdf
[42] Xilinx Inc. 2014. The Xilinx SDAccel Development Environment. (2014). https:
//www.xilinx.com/publications/prod_mktg/sdnet/sdaccel-backgrounder.pdf
[43] Xilinx Inc. 2015. Vivado Design Suite: AXI Reference Guide. (2015).
http://www.xilinx.com/support/documentation/ip_documentation/axi_ref_
guide/latest/ug1037-vivado-axi-reference-guide.pdf
[44] Xilinx Inc. 2017. MicroBlaze Soft Processor Core. (2017). https://www.xilinx.
com/products/design-tools/microblaze.html
