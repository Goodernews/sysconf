[1] M. Stonebraker, U. Çetintemel, and S. Zdonik, “The 8 requirements of
real-time stream processing,” ACM SIGMOD Record, vol. 34, no. 4, pp.
42–47, 2005.
[2] G. Hesse and M. Lorenz, “Conceptual survey on data stream processing
systems,” in Parallel and Distributed Systems (ICPADS), 2015 IEEE
21st International Conference on. IEEE, 2015, pp. 797–802.
[3] R. Eidenbenz and T. Locher, “Task Allocation for Distributed Stream
Processing,” in IEEE INFOCOM 2016 - The 35th Annual IEEE International Conference on Computer Communications, 2016, pp. 1–9.
[4] V. Cardellini, V. Grassi, F. Lo Presti, and M. Nardelli, “Optimal operator
placement for distributed stream processing applitions,” in Proceedings
of the 10th ACM International Conference on Distributed and Eventbased Systems. ACM, 2016, pp. 69–80.
[5] B. Lohrmann, P. Janacik, and O. Kao, “Elastic stream processing with
latency guarantees,” in Distributed Computing Systems (ICDCS), 2015
IEEE 35th International Conference on. IEEE, 2015, pp. 399–410.
[6] B. Babcock, S. Babu, M. Datar, R. Motwani, and J. Widom, “Models
and issues in data stream systems,” in Proceedings of the twenty-ﬁrst
ACM SIGMOD-SIGACT-SIGART symposium on Principles of database
systems. ACM, 2002, pp. 1–16.
[7] A. Toshniwal, S. Taneja, A. Shukla, K. Ramasamy, J. M. Patel,
S. Kulkarni, J. Jackson, K. Gade, M. Fu, J. Donham et al., “Storm@
twitter,” in Proceedings of the 2014 ACM SIGMOD international conference on Management of data. ACM, 2014, pp. 147–156.
[8] H. Li, J. Wu, Z. Jiang, X. Li, and X. Wei, “Minimum backups
for stream processing with recovery latency guarantees,” IEEE Transactions on Reliability, vol. PP, no. 99, pp. 1–12, 2017. DOI:
10.1109/TR.2017.2712563.
[9] H. Li, X. Wei, Q. Fu, and Y. Luo, “Mapreduce delay scheduling
with deadline constraint,” Concurrency and Computation: Practice and
Experience, vol. 26, no. 3, pp. 766–778, 2014.
[10] Z. Qian, Y. He, C. Su, Z. Wu, H. Zhu, T. Zhang, L. Zhou, Y. Yu,
and Z. Zhang, “Timestream: Reliable stream computation in the cloud,”
in Proceedings of the 8th ACM European Conference on Computer
Systems. ACM, 2013, pp. 1–14.
[11] J.-H. Hwang, M. Balazinska, A. Rasin, U. Cetintemel, M. Stonebraker,
and S. Zdonik, “High-availability algorithms for distributed stream
processing,” in Data Engineering, 2005. ICDE 2005. Proceedings. 21st
International Conference on. IEEE, 2005, pp. 779–790.
[12] R. Castro Fernandez, M. Migliavacca, E. Kalyvianaki, and P. Pietzuch,
“Integrating scale out and fault tolerance in stream processing using
operator state management,” in Proceedings of the 2013 ACM SIGMOD
international conference on Management of data. ACM, 2013, pp.
725–736.
[13] L. Su and Y. Zhou, “Tolerating correlated failures in massively parallel
stream processing engines,” in Data Engineering (ICDE), 2016 IEEE
32nd International Conference on. IEEE, 2016, pp. 517–528.
[14] T. Heinze, M. Zia, R. Krahn, Z. Jerzak, and C. Fetzer, “An adaptive
replication scheme for elastic data stream processing systems,” in
Proceedings of the 9th ACM International Conference on Distributed
Event-Based Systems. ACM, 2015, pp. 150–161.
[15] A. Salama, C. Binnig, T. Kraska, and E. Zamanian, “Cost-based faulttolerance for parallel data processing,” in Proceedings of the 2015 ACM
SIGMOD International Conference on Management of Data. ACM,
2015, pp. 285–297.
[16] D. S. Johnson, “Approximation algorithms for combinatorial problems,”
Journal of computer and system sciences, vol. 9, no. 3, pp. 256–278,
1974.
[17] E. G. Coffman Jr, J. Csirik, G. Galambos, S. Martello, and D. Vigo,
“Bin packing approximation algorithms: survey and classiﬁcation,” in
Handbook of Combinatorial Optimization. Springer, 2013, pp. 455–
531.
[18] J. Wu, Distributed system design. CRC press, 1998.