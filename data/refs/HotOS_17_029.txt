[1] M. Abadi, M. Budiu, U. Erlingsson, and J. Ligatti. Control-flow integrity. In 12th ACM Conference on Computer and Communications Security, pages
340-353, Nov. 2005. ISBN 1-59593-226-7. doi:
10.1145/1102120.1102165.

[2] K. Adams and O. Agesen. A comparison of software and hardware techniques for x86 virtualization.
In 12th International Conference on Architectural Support for Programming Languages and Operating Systems, pages 2-13, 2006. ISBN 1-59593-451-0. doi:
10.1145/1168857.1168860.

[3] N. Amit, D. Tsafrir, A. Schuster, A. Ayoub, and
E. Shlomo. Virtual CPU validation. In 25th ACM
Symposium on Operating Systems Principles, pages
311-327, 2015. ISBN 978-1-4503-3834-9. doi:

10.1145/2815400.28 15420.
[4]

Building a Secure System using TrustZone Technology.
ARM Limited, Apr. 2009. Ref. PRD29-GENC-009492C.

[5] S. Arnautov, B. Trach, F. Gregor, T. Knauth, A. Martin, C. Priebe, J. Lind, D. Muthukumaran, D. O’ Keeffe,
M. L. Stillwell, D. Goltzsche, D. Eyers, R. Kapitza,
P. Pietzuch, and C. Fetzer. SCONE: Secure Linux
containers with Intel SGX. In /2th USENIX Symposium on Operating Systems Design and Implemen
tation, pages 689-703, 2016. ISBN 978-1-931971
33-1. URL httos:/Awww.usenix.org/conference/osdi1 6/
technical-sessions/presentation/arnautov.

[6] A. Baumann, M. Peinado, and G. Hunt. Shielding applications from an untrusted cloud with Haven. In J/th
USENIX Symposium on Operating Systems Design and
Implementation, Oct. 2014.

[7] S. Brenner, C. Wulf, D. Goltzsche, N. Weichbrodt,
M. Lorenz, C. Fetzer, P. Pietzuch, and R. Kapitza. SecureKeeper: Confidential ZooKeeper using Intel SGX.
In 17th International Middleware Conference, pages

14:1-14:13, 2016. ISBN 978-1-4503-4300-8. doi:
10.1145/2988336.2988350.

[8] N. Carlini, A. Barresi, M. Payer, D. Wagner,
and T. R. Gross. Control-flow bending: On
the effectiveness of control-flow integrity. In
24th USENIX Security Symposium, pages 161176, 2015. ISBN 978-1-931971-232. URL

https ://www.usenix.org/conference/usenixsecurity15/
technical-sessions/presentation/carlini.

[9] V. Costan and S. Devadas. Intel SGX explained. Cryptology ePrint Archive, Report 2016/086, Feb. 2016. http:
/feprint.iacr.org/2016/086.

[10] V. Costan, I. Lebedev, and S. Devadas. Sanctum:
Minimal hardware extensions for strong software isolation. In 25th USENIX Security Symposium, pages
857-874, Aug. 2016. ISBN 978-1-931971-32-4. URL
https ://www.usenix.org/conference/usenixsecurity 16/
technical-sessions/presentation/costan.

[11] S. Crosby. Using Intel SGX to protect on-line credentials, Aug. 2016. URL https://blogs.bromium.com/2016/
08/09/using-intel-sgx-to-protect-on-line-credentials/.

[12] I. Cutress. Intel’s “‘Tick-Tock’ seemingly dead, becomes
‘Process-Architecture-Optimization’. AnandTech, Mar.
2016. URL http://www.anandtech.com/show/10183.

[13] J. C. Dehnert, B. K. Grant, J. P. Banning, R. Johnson,
T. Kistler, A. Klaiber, and J. Mattson. The Transmeta
Code Morphing Software: Using speculation, recovery,
and adaptive retranslation to address real-life challenges.
In International Symposium on Code Generation and Optimization, pages 15-24, Mar. 2003. ISBN 0-7695-1913X. doi: 10.1109/CGO.2003.1191529.

[14] PALcode for Alpha Microprocessors System Design
Guide. Digital Equipment Corp., May 1996. Order
No. EC-QFGLC-TE.

[15] A. Goel, S. Krstié, R. Leslie, and M. R. Tuttle. SMTbased system verification with DVF. In 10th International
Workshop on Satisfiability Modulo Theories, pages 32-43,
2012. URL http://smt2012 loria.fr/paper2.pdf.

[16] C. Hawblitzel, J. Howell, J. R. Lorch, A. Narayan,
B. Parno, D. Zhang, and B. Zill. Ironclad apps: Endto-end security via automated full-system verification. In
Lith USENIX Symposium on Operating Systems Design
and Implementation, Oct. 2014.

[17] T. Hunt, Z. Zhu, Y. Xu, S. Peter, and E. Witchel.
Ryoan: A distributed sandbox for untrusted computation on secret data. In 12th USENIX Symposium on Operating Systems Design and Implementation, pages 533-549, 2016. ISBN 978-1-93197133-1. URL https:/Awww.usenix.org/conference/osdi16/
technical-sessions/presentation/hunt.

[18] Intel 80386 Programmer’s Reference Manual. Intel Corp.,
May 1987.

[19] Software Guard Extensions Programming  Reference. Intel Corp., Oct. 2014. Ref. #329298-002
https://software.intel.com/sites/default/files/managed/
48/88/329298-002.pdf.

[20] SGX Tutorial at ISCA 2015. Intel Corp., June
2015. Ref. #332680-002 https://software.intel.com/sites/
default/files/332680-002. pdf.

[21] Control-flow Enforcement Technology Preview. Intel Corp., June 2016. Ref. #334525-001 https:
//software.intel.com/sites/default/files/managed/4d/2a/
control-flow-enforcement-technology- preview. pdf.

[22] Intel 64 and IA-32 Architectures Software Developer’s
Manual. Intel Corp., Dec. 2016. Ref. #325462-061US.

[23] S. P. Johnson, U. R. Savagaonkar, V. R. Scarlata, F. X. McKeen, and C. V. Rozas. Technique for supporting multiple
secure enclaves, Dec. 2010. US Patent 8,972,746.

[24] D. Kaplan, J. Powell, and T. Woller. AMD memory
encryption. http://developer.amd.com/wordpress/
media/2013/12/AMD_Memory_Encryption_Whitepaper_
v7-Public.pdf, Apr. 2016.

[25] G. Klein, J. Andronick, K. Elphinstone, T. Murray,
T. Sewell, R. Kolanski, and G. Heiser. Comprehensive formal verification of an OS microkernel. ACM Transactions
on Computer Systems, 32(1):2:1-2:70, Feb. 2014. ISSN
0734-2071. doi: 10.1145/2560537.

[26] R. Leslie-Hurd, D. Caspi, and M. Fernandez. Verifying
linearizability of Intel software guard extensions. In 27th
International Conference on Computer Aided Verification,
pages 144-160, July 2015. ISBN 978-3-319-21668-3. doi:
10.1007/978-3-3 19-21668-3_9.

[27] B. C. Lopes, R. Auler, L. Ramos, E. Borin, and
R. Azevedo. SHRINK: Reducing the ISA complexity via
instruction recycling. In 42nd International Symposium
on Computer Architecture, pages 311-322, 2015. ISBN
978-1-4503-3402-0. doi: 10.1145/2749469.2750391.

[28] FE X. McKeen, C. V. Rozas, U. R. Savagaonkar, S. P.
Johnson, V. Scarlata, M. A. Goldsmith, E. Brickell, et al.
Method and apparatus to provide secure application execution, Dec. 2009. US Patent 9,087,200.

[29] J.C. Mogul, A. Baumann, T. Roscoe, and L. Soares. Mind
the gap: Reconnecting architecture and OS research. In
13th Workshop on Hot Topics in Operating Systems, May
2011.

[30] O. Ohrimenko, F. Schuster, C. Fournet, A. Mehta,
S. Nowozin, K. Vaswani, and M. Costa. Oblivious
multi-party machine learning on trusted processors. In 25th USENIX Security Symposium, pages
619-636, 2016. ISBN 978-1-931971-32-4. URL
https ://www.usenix.org/conference/usenixsecurity 16/
technical-sessions/presentation/ohrimenko.

[31] R. Pires, M. Pasin, P. Felber, and C. Fetzer. Secure
content-based routing using Intel software guard extensions. In 17th International Middleware Conference,
pages 10:1-10:10, 2016. ISBN 978-1-4503-4300-8. doi:
10.1145/2988336.2988346.

[32] H. Rotithor. Postsilicon validation methodology for
microprocessors. IEEE Design & Test of Computers, 17(4):77-88, Oct. 2000. ISSN 0740-7475. doi:
10.1109/54.895008.

[33] F. Schuster, M. Costa, C. Fournet, C. Gkantsidis,
M. Peinado, G. Mainar-Ruiz, and M. Russinovich. VC3:
Trustworthy data analytics in the cloud using SGX. In
IEEE Symposium on Security and Privacy, May 2015. doi:
10.1109/SP.2015.10.

[34] M.-W. Shih, S. Lee, T. Kim, and M. Peinado. — TSGX: Eradicating controlled-channel attacks against enclave programs. In Annual Network and Distributed System Security Symposium (NDSS), Feb. 2017.

[35] S. Shinde, Z. L. Chua, V. Narayanan, and P. Saxena. Preventing page faults from telling your secrets. In //th ACM
Asia Conference on Computer and Communications Security, pages 317-328, 2016. ISBN 978-1-4503-4233-9.
doi: 10.1145/2897845.2897885.

[36] T. Simonite. Intel puts the brakes on Moore’s Law.
MIT Technology Review, Mar. 2016. URL https:/Awww.
technologyreview.com/s/601 102.

[37] TPM Main Specification Level 2. Trusted Computing
Group, Mar. 2011. Version 1.2, Revision 116.

[38] M. Walton. Intel will release 8th-gen Coffee Lake
chips this year—still at 14nm. Ars Technica, Feb.
2017. URL hitps://arstechnica.com/gadgets/201 7/02/
intel-coffee-lake-14nm-release-date/.
[39] A. Waterman, Y. Lee, R. Avizienis, D. A. Patterson, and
K. Asanovié. The RISC-V instruction set manual volume
Il: Privileged architecture version 1.7. Technical Report
UCB/EECS-2015-49, UC Berkeley EECS, May 2015.

[40] Wikipedia. Transistor count. Retrieved 2017-01-12. URL

https://en.wikipedia.org/wiki/Transistor_count.

[41] Y. Xu, W. Cui, and M. Peinado. Controlled-channel attacks: Deterministic side-channels for untrusted operating
systems. In JEEE Symposium on Security and Privacy,
May 2015. doi: 10.1109/SP.2015.45.