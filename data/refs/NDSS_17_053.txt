[1] “bzip2 man pages,” http://www.bzip.org/1.0.5/bzip2.txt.
[2] “Open cores,” http://opencores.org/.

[3] D. Agrawal, B. Archambeault, J. R. Rao, and P. Rohatgi, “The em
sidechannel (s),” in International Workshop on Cryptographic Hardware
and Embedded Systems. Springer, 2002, pp. 29–45.

[4] B. Barak, O. Goldreich, R. Impagliazzo, S. Rudich, A. Sahai, S. P.
Vadhan, and K. Yang, “On the (im)possibility of obfuscating programs,”
in CRYPTO, 2001.

[5] N. Bitansky, R. Canetti, S. Goldwasser, S. Halevi, Y. T. Kalai, and G. N.
Rothblum, “Program obfuscation with leaky hardware,” in Advances in
Cryptology–ASIACRYPT 2011. Springer, 2011, pp. 722–739.

[6] N. Bitansky, S. Garg, H. Lin, R. Pass, and S. Telang, “Succinct
randomized encodings and their applications,” in Proceedings of the
Forty-Seventh Annual ACM on Symposium on Theory of Computing.
ACM, 2015, pp. 439–448.

[7] A. Bittau, A. Belay, A. Mashtizadeh, D. Mazi`eres, and D. Boneh,

“Hacking blind,” in IEEE S&P, 2014.

[8] D. Boneh, R. A. DeMillo, and R. J. Lipton, “On the importance of
checking cryptographic protocols for faults,” in International Confer-
ence on the Theory and Applications of Cryptographic Techniques,
1997.

[9] Z. Brakerski, C. Gentry, and V. Vaikuntanathan, “(Leveled) Fully

Homomorphic Encryption without Bootstrapping,” in ITCS, 2012.

[10] R. Canetti, “Universally composable security: A new paradigm for

cryptographic protocols,” in FOCS, 2001.

[11] R. Canetti, J. Holmgren, A. Jain, and V. Vaikuntanathan, “Succinct
garbling and indistinguishability obfuscation for RAM programs,” in
Proceedings of the Forty-Seventh Annual ACM on Symposium on Theory
of Computing. ACM, 2015, pp. 429–437.

[12] C. Celio and E. Love, “The sodor processor collection,” http://riscv.org/

download.html#tab sodor.

[13] D. Champagne and R. B. Lee, “Scalable architectural support for trusted

software,” in HPCA, 2010.

[14] J. H. Cheon, K. Han, C. Lee, H. Ryu, and D. Stehl´e, “Cryptanalysis of
the multilinear map over the integers,” in EUROCRYPT, 2015.

[15] K.-M. Chung, J. Katz, and H.-S. Zhou, “Functional encryption from

(small) hardware tokens,” in ASIACRYPT, 2013.
[16] J. Dean and S. Ghemawat, “Mapreduce: simpliﬁed data processing on
large clusters,” Communications of the ACM, 2008.


[17] N. D¨ottling, T. Mie, J. M¨uller-Quade, and T. Nilges, “Basing obfusca-
tion on simple tamper-proof hardware assumptions.” IACR Cryptology
ePrint Archive, 2011.

[18] C. W. Fletcher, M. v. Dijk, and S. Devadas, “A secure processor
architecture for encrypted computation on untrusted programs,” in STC,
2012.

[19] C. W. Fletcher, L. Ren, A. Kwon, M. van Dijk, and S. Devadas,
“Freecursive oram:[nearly] free recursion and integrity veriﬁcation for
position-based oblivious ram,” in ASPLOS, 2015.

[20] C. W. Fletcher, L. Ren, A. Kwon, M. Van Dijk, E. Stefanov, D. Ser-
panos, and S. Devadas, “A low-latency, low-area hardware oblivious
ram controller,” in FCCM, 2015.

IEEE, 2015.

[21] S. Garg, “Program obfuscation via multilinear maps,” in Security and

Cryptography for Networks, 2014.

[22] S. Garg, C. Gentry, S. Halevi, M. Raykova, A. Sahai, and B. Waters,
“Candidate indistinguishability obfuscation and functional encryption
for all circuits,” in FOCS, 2013.

[23] C. Gentry, S. Halevi, S. Lu, R. Ostrovsky, M. Raykova, and D. Wichs,
“Garbled ram revisited,” in Annual International Conference on the
Theory and Applications of Cryptographic Techniques, 2014.

[24] C. Gentry, S. Halevi, and N. P. Smart, “Homomorphic evaluation of the

aes circuit,” in Advances in Cryptology–CRYPTO 2012, 2012.

[25] O. Goldreich, “Towards a theory of software protection and simulation
by oblivious rams,” in ACM symposium on Theory of computing
(STOC), 1987.

[26] O. Goldreich and R. Ostrovsky, “Software protection and simulation on

oblivious rams,” J. ACM, 1996.

[27] V. Goyal, Y. Ishai, A. Sahai, R. Venkatesan, and A. Wadia, “Founding

cryptography on tamper-proof hardware tokens,” in TCC, 2010.

[28] D. Grawrock, Dynamics of a Trusted Platform: A Building Block

Approach, 1st ed.

Intel Press, 2009.

[29] S. Hada, “Zero-knowledge and code obfuscation,” in ASIACRYPT 2000,

2000.

[30] K. J¨arvinen, V. Kolesnikov, A.-R. Sadeghi, and T. Schneider, “Garbled
circuits for leakage-resilience: Hardware implementation and evaluation
of one-time programs,” in CHES 2010, 2010.


[31] M. Kainth, L. Krishnan, C. Narayana, S. G. Virupaksha, and R. Tessier,
“Hardware-assisted code obfuscation for fpga soft microprocessors,” in
Design, Automation & Test in Europe Conference & Exhibition, 2015.
[13] J. Katz, “Universally composable multi-party computation using
tamper-proof hardware,” in Annual International Conference on the
Theory and Applications of Cryptographic Techniques, 2007.
[33] A. Kiss and T. Schneider, “Valiant’s universal circuit is practical,” in
EUROCRYPT, 2016.


[34] P. C. Kocher, J. Jaffe, and B. Jun, “Differential power analysis,” in

CRYPTO’99, 1999.

[35] V. Kolesnikov and T. Schneider, “A practical universal circuit construc-

tion and secure evaluation of private functions,” in FCDS, 2008.

[36] V. Koppula, A. B. Lewko, and B. Waters, “Indistinguishability obfus-
cation for turing machines with unbounded memory,” in Proceedings of
the Forty-Seventh Annual ACM on Symposium on Theory of Computing.
ACM, 2015, pp. 419–428.

[37] K. Lewi, A. J. Malozemoff, D. Apon, B. Carmer, A. Foltzer, D. Wagner,
D. W. Archer, D. Boneh, J. Katz, and M. Raykova, “5gen: A framework
for prototyping applications using multilinear maps and matrix branch-
ing programs,” in Proceedings of the 2016 ACM SIGSAC Conference on
Computer and Communications Security. ACM, 2016, pp. 981–992.
[38] D. Lie, C. Thekkath, M. Mitchell, P. Lincoln, D. Boneh, J. Mitchell,
and M. Horowitz, “Architectural support for copy and tamper resistant
software,” ACM SIGPLAN Notices, 2000.

[39] H. Lipmaa, P. Mohassel, and S. Sadeghian, “Valiant’s universal circuit:

Improvements, implementation, and applications,” Cryptology ePrint
Archive, Report 2016/017, 2016, http://eprint.iacr.org/2016/017.

[40] C. Liu, A. Harris, M. Maas, M. Hicks, M. Tiwari, and E. Shi,
“Ghostrider: A hardware-software system for memory trace oblivious
computation,” in ASPLOS, 2015.

[41] M. Maas, E. Love, E. Stefanov, M. Tiwari, E. Shi, K. Asanovic, J. Ku-
biatowicz, and D. Song, “Phantom: Practical oblivious computation in
a secure processor,” in CCS, 2013.

[42] F. McKeen, I. Alexandrovich, A. Berenzon, C. V. Rozas, H. Shaﬁ,
V. Shanbhogue, and U. R. Savagaonkar, “Innovative instructions and
software model for isolated execution.” in HASP@ ISCA, 2013.

[43] O. Ohrimenko, M. Costa, C. Fournet, C. Gkantsidis, M. Kohlweiss, and
D. Sharma, “Observing and preventing leakage in mapreduce,” in CCS,
2015.

[44] R. Pass, E. Shi, and F. Tramr, “Formal abstractions for attested execution

secure processors.”

[45] A. Rane, C. Lin, and M. Tiwari, “Raccoon: Closing digital side-channels

through obfuscated execution,” in USENIX Security, 2015.

[46] L. Ren, X. Yu, C. Fletcher, M. van Dijk, and S. Devadas, “Design
space exploration and optimization of path oblivious ram in secure
processors,” in Symposium on Computer Architecture, 2013.

[47] S. Schrittwieser and S. Katzenbeisser, “Code obfuscation against static

and dynamic reverse engineering,” in Information Hiding, 2011.

[48] F. Schuster, M. Costa, C. Fournet, C. Gkantsidis, M. Peinado,
G. Mainar-Ruiz, and M. Russinovich, “Vc3: Trustworthy data analytics
in the cloud using sgx,” in IEEE S&P, 2015.

[49] E. Shi, T.-H. H. Chan, E. Stefanov, and M. Li, “Oblivious ram with

O(log3 N ) worst-case cost,” in ASIACRYPT, 2011.

[50] V. Shoup et al., “Ntl: A library for doing number theory,” 2001.
[51] E. M. Songhori, S. Zeitouni, G. Dessouky, T. Schneider, A.-R. Sadeghi,
and F. Koushanfar, “Garbledcpu: A mips processor for secure compu-
tation in hardware,” in DAC, 2016.

[52] E. Stefanov, M. van Dijk, E. Shi, C. Fletcher, L. Ren, X. Yu, and S. De-
vadas, “Path ORAM – an extremely simple oblivious ram protocol,” in
CCS, 2013.

[53] G. E. Suh, D. Clarke, B. Gassend, M. Van Dijk, and S. Devadas, “Aegis:
architecture for tamper-evident and tamper-resistant processing,” in
Conference on Supercomputing, 2003.

[54] L. Tan, “The worst case execution time tool challenge 2006: The ex-
ternal test,” in Leveraging Applications of Formal Methods, Veriﬁcation
and Validation, 2006. ISoLA 2006., 2006.

[55] L. G. Valiant, “Universal circuits (preliminary report),” in STOC, 1976.
[56] X. S. Wang, S. D. Gordon, A. McIntosh, and J. Katz, “Secure compu-

tation of mips machine code,” ePrint 2015/547, Tech. Rep., 2015.

[57] X. Yu, C. W. Fletcher, L. Ren, M. v. Dijk, and S. Devadas,
“Generalized external interaction with tamper-resistant hardware with
bounded information leakage,” in Proceedings of
the 2013 ACM
Workshop on Cloud Computing Security Workshop, ser. CCSW ’13.
New York, NY, USA: ACM, 2013, pp. 23–34. [Online]. Available:
http://doi.acm.org/10.1145/2517488.2517498

[58] X. Zhuang, T. Zhang, and S. Pande, “Hide: an infrastructure for
efﬁciently protecting information leakage on the address bus,” in ACM
SIGPLAN Notices, 2004.