[1] D.J Abadi, Y. Ahmad, M. Balazinska, U. Cetintemel, M.
Cherniack, J-H. Hwang, W. Lindner, A. Maskey, A. Rasin,
E. Ryvkina, et al. The design of the borealis stream processing
engine. In CIDR, volume 5, pages 277-289, 2005.

[2] R. Ananthanarayanan, V. Basker, $. Das, A. Gupta, H. Jiang, T.
Qiu, A. Reznichenko, D. Ryabkov, M. Singh, and S. Venkataraman. Photon: Fault-tolerant and scalable joining of continuous
data streams. In SIGMOD, pages 577-588, 2013.

[3] L. Backstrom, D. Huttenlocher, J. Kleinberg, and X. Lan.
Group formation in large social networks: Membership,
growth, and evolution. In KDD, pages 44-54, 2006.

[4] H. Balakrishnan, M. Balazinska, D. Carney, U. Cetintemel, M.
Cherniack, C. Convey, E. Galvez, J. Salz, M. Stonebraker, N.
Tatbul, R. Tibbetts, and S. Zdonik. Retrospective on aurora.
The VLDB Journal, 13(4):370-383, 2004.

[5] P. Boldi and S. Vigna. The WebGraph framework I: Compression techniques. In WWW, pages 595-601, 2004.

[6] M. Cha, H. Haddadi, F Benevenuto, and PK. Gummadi.
Measuring user influence in twitter: The million follower
fallacy. ICWSM, 10(10-17):30, 2010.

[7] R. Chen, J. Shi, Y. Chen, and H. Chen. PowerLyra: Differentiated graph computation and partitioning on skewed graphs. In
EuroSys, pages 1:1-1:15, 2015.

[8] R. Cheng, J. Hong, A. Kyrola, Y. Miao, X. Weng, M. Wu, FE
Yang, L. Zhou, F, Zhao, and E. Chen. Kineograph: Taking
the pulse of a fast-changing and connected world. In EuroSys,
pages 85-98, 2012.

[9] U. Demiryurek, B. Pan, F. Banaei-Kashani, and C. Shahabi.
Towards modeling the traffic data on road networks. In International Workshop on Computational Transportation Science,
pages 13-18, 2009.

[10] D. Ediger, J. Riedy, D.A. Bader, and H. Meyerhenke. Tracking
structure of streaming social networks. In JEEE IPDPS
Workshops and Phd Forum, pages 1691-1699, May 2011.

[11] D. Ediger, K. Jiang, J. Riedy, and D.A. Bader. Massive streaming data analytics: A case study with clustering coefficients, In
IEEE IPDPSW, pages 1-10, 2010.

[12] D. Ediger, R. Mccoll, J. Riedy, and D.A. Bader. Stinger: High
performance data structure for streaming graphs, In HPEC,
Sept. 2012.

[13] Friendster network dataset, 2015.

[14] J.-E. Gonzalez, R.S. Xin, A. Dave, D. Crankshaw, M.J. Franklin,
and I. Stoica. GraphX: Graph processing in a distributed
dataflow framework. In OSDI, pages 599-613, 2014.

[15] STREAM Group et al. Stream: The stanford stream data
manager. IEEE Data Engineering Bulletin, http://www-db.
stanford. edu/stream, 2(003), 2003.

[16] W. Han, Y. Miao, K. Li, M. Wu, F. Yang, L. Zhou, V. Prabhakaran, W. Chen, and E. Chen. Chronos: A graph engine for
temporal graph analysis. In EuroSys, pages 1:1-1:14, 2014.

[17] M.R. Henzinger, V. King, and T. Warnow. Constructing
a tree from homeomorphic subtrees, with applications to
computational evolutionary biology. Algorithmica, 24(1):1-13,
1999.

[18] A.P. Iyer, L-E. Li, T. Das, and I. Stoica. Time-evolving graph
processing at scale. In International Workshop on Graph Data

Management Experiences and Systems, pages 5:1-5:6, 2016.

[19] E. Kanoulas, Y. Du, T. Xia, and D. Zhang. Finding fastest
paths on a road network with speed patterns. In ICDE, page
10, April 2006.

[20] H. Kwak, C. Lee, H. Park, and S. Moon. What is Twitter, a
social network or a news media? In WWW, pages 591-600,
2010.

[21] Y. Low, D. Bickson, J. Gonzalez, C. Guestrin, A. Kyrola,
and J.M. Hellerstein. Distributed graphlab: A framework for
machine learning and data mining in the cloud. Proc. VLDB
Endow., 5(8):716â€”-727, April 2012.

[22] G. Malewicz, M.H. Austern, A.J. C. Bik, J.C. Dehnert, I. Horn,
N. Leiser, G. Czajkowski, and Google Inc. Pregel: A system
for large-scale graph processing. In SIGMOD, pages 135-146,
2010.

[23] D.G. Murray, F McSherry, R. Isaacs, M. Isard, P. Barham, and.
M. Abadi. Naiad: A timely dataflow system. In SOSP, pages
439-455, 2013.

[24] D. Nguyen, A. Lenharth, and K. Pingali. A lightweight
infrastructure for graph analytics. In SOSP, pages 456-471,
2013.

[25] F. Reiss, K. Stockinger, K. Wu, A. Shoshani, and J.M. Hellerstein. Enabling real-time querying of live and historical stream
data. In SSDM, page 28, 2007.

[26] C. Ren, E. Lo, B. Kao, X. Zhu, and R. Cheng. On querying
historical evolving graph sequences, In Proc. VLDB Endow.,
Vo. 4, No. 11, 2011.

[27] J. Riedy and H. Meyerhenke. Scalable algorithms for analysis
of massive, streaming graphs, In SIAM Parallel Processing for
Scientific Computing, 2012.

[28] L. Roditty and U. Zwick. A fully dynamic reachability
algorithm for directed graphs with an almost linear update
time. SIAM Journal on Computing, 45(3):712-733, 2016.

[29] A. Roy, L. Bindschaedler, J. Malicevic, and W. Zwaenepoel.
Chaos: Scale-out graph processing from secondary storage. In
SOSP, pages 410-424, 2015.

[30] A. Roy, I. Mihailovic, and W. Zwaenepoel. X-Stream: Edgecentric graph processing using streaming partitions. In SOSP,
pages 472-488, 2013.

[31] P. Roy, A. Khan, and G. Alonso. Augmented sketch: Faster
and more accurate stream processing. In STGMOD, pages
1449-1463, 2016.

[32] S. Salihoglu and J. Widom. GPS: A graph processing system.
In SSDBM, pages 22:1-22:12, 2013.

[33] X. Shi, B. Cui, Y. Shao, and Y. Tong. Tornado: A system for
real-time iterative analysis over evolving data. In SIGMOD,
pages 417-430, 2016.

[34] Y. Shiloach and S. Even. An on-line edge-deletion problem.
Journal of the ACM, 28(1):1-, 1981.

[35] J. Shun and G.E. Blelloch. Ligra: A lightweight graph processing framework for shared memory. In PPoPP, pages 135-146,
2013.

[36] I. Stanton and G. Kliot. Streaming graph partitioning for large
distributed graphs. In SIGKDD, pages 1222-1230, 2012.

[37] T. Suzumura, S. Nishii, and M. Ganse. Towards large-scale
graph stream processing platform. In WWW Companion, pages
1321-1326, 2014.
[38] A. Toshniwal, S. Taneja, A. Shukla, K. Ramasamy, J.M Patel,
S. Kulkarni, J. Jackson, K. Gade, M. Fu, J. Donham, et al.
Storm@ twitter. In SIGMOD, pages 147-156, 2014.

[39] C. Tsourakakis, C. Gkantsidis, B. Radunovic, and M. Vojnovic.
Fennel: Streaming graph partitioning for massive scale graphs.
In WSDM, pages 333-342, 2014.

[40] K. Vora, G. Xu, and R. Gupta. Load the edges you need: A
generic I/O optimization for disk-based graph processing. In
USENIX ATC, pages 507-522, 2014.

[41] K. Vora, S-C. Koduru, and R. Gupta. ASPIRE: Exploiting
Asynchronous Parallelism in Iterative Algorithms using a
Relaxed Consistency based DSM. In OOPSLA, pages 861878, 2014.

[42] K. Wang, A. Hussain, Z. Zuo, G. Xu, and A. A. Sani. Graspan:
A single-machine disk-based graph system for interprocedural
static analyses of large-scale systems code. In ASPLOS, 2017.

[43] K. Wang, G. Xu, Z. Su, and Y. D. Liu. GraphQ: Graph query
processing with abstraction refinement. In USENIX ATC, pages
387-401, 2015.

[44] M. Wu, F. Yang, J. Xue, W. Xiao, Y. Miao, L. Wei, H. Lin,
Y. Dai, and L. Zhou. Gram: Scaling graph computation to the

trillions. In SoCC, pages 408-421, 2015.

[45] M. Yuan, K-L. Wu, G. Jacques-Silva, and Y. Lu. Efficient
processing of streaming graphs for evolution-aware clustering.
In CIKM, pages 319-328, 2013.

[46] M. Zaharia, M. Chowdhury, M.J Franklin, S. Shenker, and
I. Stoica. Spark: cluster computing with working sets. In
HotCloud, 2010.

[47] M. Zaharia, T. Das, H. Li, S. Shenker, and I. Stoica. Discretized
streams: an efficient and fault-tolerant model for stream processing on large clusters. In HotCloud, 2012.

[48] E. Zeitler and T. Risch. Massive scale-out of expensive
continuous queries, In Proceedings of the VLDB Endowment,
Vol. 4, No. 11, 2011.

[49] X. Zhang, N. Gupta, and R. Gupta. Pruning dynamic slices
with confidence. In PLDI, pages 169-180, 2006.

[50] X. Zhang, R. Gupta, and Y. Zhang. Precise dynamic slicing
algorithms. In ICSE, pages 319-329, 2003.

[51] X. Zhu, W. Han, and W. Chen. GridGraph: Large scale graph
processing on a single machine using 2-level hierarchical
partitioning. In USENIX ATC, pages 375-386, 2015.