[1] J. Arnold and M. F. Kaashoek. Ksplice: Automatic rebootless
kernel updates. In Proceedings of the 4th ACM European
conference on Computer systems, pages 187-198. ACM, 2009.

[2] A. R. Bernat and B. P. Miller. Anywhere, any-time binary
instrumentation. In Proceedings of the 10th ACM SIGPLANSIGSOFT workshop on Program analysis for software tools,
pages 9-16. ACM, 2011.

[3] D. M. Berris, A. Veitch, N. Heintze, E. Anderson, and N. Wang.
Xray: A function call tracing system. 2016.

[4] G. Bonfante, J. Fernandez, J.-Y. Marion, B. Rouxel, F. Sabatier,
and A. Thierry. Codisasm: medium scale concatic disassembly
of self-modifying binaries with overlapping instructions. In
Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security, pages 745-756. ACM,
2015.

[5] D. Bruening, T. Garnett, and S. Amarasinghe. An infrastructure
for adaptive dynamic optimization. In Code Generation and
Optimization, 2003. CGO 2003. International Symposium on,
pages 265-275. IEEE, 2003.

[6] B. Chamith, B. J. Svensson, L. Dalessandro, and R. R. Newton. Living on the edge: Rapid-toggling probes with crossmodification on x86. SIGPLAN Not., 51(6):16—26, June 2016.

[7] F. B. Cohen. Operating system protection through program
evolution. Computers & Security, 12(6):565-584, 1993.

[8] F. C. Elgler, V. Prasad, W. Cohen, H. Nguyen, M. Hunt,
J. Keniston, and B. Chen. Architecture of systemtap: a linux
trace/probe tool, 2005.

[9] B. Gregg and J. Mauro. DTrace: Dynamic Tracing in Oracle
Solaris, Mac OS X, and FreeBSD. Prentice Hall Professional,
2011.

[10] I. Intel. and ia-32 architectures software developer’s manual.
Volume 3A: System Programming Guide, Part, 1, 64.

[11] M. Laurenzano, M. Tikir, L. Carrington, and A. Snavely.
Pebil: Efficient static binary instrumentation for linux. In
Performance Analysis of Systems Software (ISPASS), 2010
IEEE International Symposium on, pages 175-183, March
2010.

[12] N. Nethercote and J. Seward. Valgrind: A framework for
heavyweight dynamic binary instrumentation. SIGPLAN Not.,
42(6):89-100, June 2007.

[13] M. Probst, A. Krall, and B. Scholz. Register liveness analysis for optimizing dynamic binary translation. In Reverse
Engineering, 2002. Proceedings. Ninth Working Conference
on, pages 35-44. TEEE, 2002.

[14] M. Saleh, E. P. Ratazzi, and S. Xu. Instructions-based detection
of sophisticated obfuscation and packing. In 2014 IEEE
Military Communications Conference, pages 1-6. IEEE, 2014.

[15] X. Xie, F Liu, B. Lu, and F Xiang. Mixed obfuscation of
overlapping instruction and self-modify code based on hyperchaotic opaque predicates. In Computational Intelligence and
Security (CIS), 2014 Tenth International Conference on, pages
524-528, Nov 2014.

