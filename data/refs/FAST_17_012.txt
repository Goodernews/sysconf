[1] Apache HBase. http://hbase.apache.org.
[2] Apache HBase Coprocessor Introduction. https:
//blogs.apache.org/hbase/entry/coprocessor_
introduction.
[3] Apache Phoenix. https://phoenix.apache.org.
[4] Apache Zookeeper. http://zookeeper.apache.org.
[5] CockroachDB. https://github.com/cockroachdb/
cockroach/blob/master/docs/design.md.
[6] Tephra: Transactions for Apache HBase. https://
tephra.io.
[7] AGUILERA, M. K., LENERS, J. B., AND WALFISH, M.
Yesquel: Scalable sql storage for web applications. In
Proceedings of the 25th Symposium on Operating Systems Principles (2015), SOSP ’15, pp. 245–262.
[8] AGUILERA, M. K., MERCHANT, A., SHAH, M.,
VEITCH, A., AND KARAMANOLIS, C. Sinfonia: A
new paradigm for building scalable distributed systems.
SIGOPS Oper. Syst. Rev. 41, 6 (Oct. 2007), 159–174.
[9] BAKER, J., BOND, C., CORBETT, J. C., FURMAN,
J., KHORLIN, A., LARSON, J., LEON, J.-M., LI, Y.,
LLOYD, A., AND YUSHPRAKH, V. Megastore: Providing scalable, highly available storage for interactive services. In Proceedings of the Conference on Innovative
Data system Research (CIDR) (2011), pp. 223–234.
[10] BALAKRISHNAN, M., MALKHI, D., DAVIS, J. D.,
PRABHAKARAN, V., WEI, M., AND WOBBER, T.
CORFU: A distributed shared log. ACM Trans. Comput.
Syst. 31, 4 (2013), 10.
[11] BALAKRISHNAN, M., MALKHI, D., WOBBER, T., WU,
M., PRABHAKARAN, V., WEI, M., DAVIS, J. D., RAO,
S., ZOU, T., AND ZUCK, A. Tango: Distributed data
structures over a shared log. In Proceedings of the
Twenty-Fourth ACM Symposium on Operating Systems
Principles (2013), SOSP ’13, pp. 325–340.
[12] BERENSON, H., BERNSTEIN, P. A., GRAY, J.,
MELTON, J., O’NEIL, E. J., AND O’NEIL, P. E. A critique of ANSI SQL isolation levels. In Proceedings of the
1995 ACM SIGMOD International Conference on Management of Data, San Jose, California, May 22-25, 1995.
(1995), pp. 1–10.
[13] BERNSTEIN, P. A., REID, C. W., AND DAS, S. Hyder -
a transactional record manager for shared flash. In CIDR
(January 2011), pp. 9–20.
[14] CAHILL, M. J., ROHM, U., AND FEKETE, A. Serializable isolation for snapshot databases. In SIGMOD (2008),
pp. 729–738.
[15] CAMARGOS, L. Sprint: a middleware for highperformance transaction processing. In In EuroSys 07:
Proceedings of the ACM SIGOPS/EuroSys Eu Conference
on Computer Systems 2007 (2007), ACM, pp. 385–398.
[16] CHANG, F., DEAN, J., GHEMAWAT, S., HSIEH, W. C.,
WALLACH, D. A., BURROWS, M., CHANDRA, T.,
FIKES, A., AND GRUBER, R. E. Bigtable: A distributed
storage system for structured data. ACM Trans. Comput.
Syst. 26, 2 (June 2008), 4:1–4:26.
[17] CORBETT, J. C., DEAN, J., EPSTEIN, M., FIKES, A.,
FROST, C., FURMAN, J., GHEMAWAT, S., GUBAREV,
A., HEISER, C., HOCHSCHILD, P., HSIEH, W., KANTHAK, S., KOGAN, E., LI, H., LLOYD, A., MELNIK,
S., MWAURA, D., NAGLE, D., QUINLAN, S., RAO, R.,
ROLIG, L., SAITO, Y., SZYMANIAK, M., TAYLOR, C.,
WANG, R., AND WOODFORD, D. Spanner: Google’s
globally-distributed database. In 10th USENIX Symposium on Operating Systems Design and Implementation
(OSDI 12) (2012), pp. 261–264.
[18] COWLING, J., AND LISKOV, B. Granola: Low-overhead
distributed transaction coordination. In Proceedings of
the 2012 USENIX Conference on Annual Technical Conference (2012), USENIX ATC’12, pp. 21–21.
[19] DRAGOJEVIC´, A., NARAYANAN, D., CASTRO, M.,
AND HODSON, O. Farm: Fast remote memory. In 11th
USENIX Symposium on Networked Systems Design and
Implementation (NSDI 14) (Apr. 2014), pp. 401–414.
[20] DRAGOJEVIC´, A., NARAYANAN, D., NIGHTINGALE,
E. B., RENZELMANN, M., SHAMIS, A., BADAM, A.,
AND CASTRO, M. No compromises: Distributed transactions with consistency, availability, and performance.
In Proceedings of the 25th Symposium on Operating Systems Principles (2015), SOSP ’15, pp. 54–70.
[21] ESCRIVA, R., WONG, B., AND SIRER, E. G. Hyperdex: A distributed, searchable key-value store. In Proceedings of the ACM SIGCOMM 2012 Conference on
Applications, Technologies, Architectures, and Protocols
for Computer Communication (2012), SIGCOMM ’12,
pp. 25–36.
[22] ESCRIVA, R., WONG, B., AND SIRER, E. G. Warp:
Lightweight multi-key transactions for key-value stores.
CoRR abs/1509.07815 (2015).
[23] EYAL, I., BIRMAN, K., KEIDAR, I., AND VAN RENESSE, R. Ordering transactions with prediction in distributed object stores. In LADIS (2013).
[24] FEKETE, A., LIAROKAPIS, D., O’NEIL, E., NEIL,
P. O., AND SHASHA, D. Making snapshot isolation serializable. ACM TODS 30 (2005), 492–528.
[25] FERRO, D. G., JUNQUEIRA, F., KELLY, I., REED, B.,
AND YABANDEH, M. Omid: Lock-free transactional
support for distributed data stores. In IEEE 30th International Conference on Data Engineering, Chicago, ICDE
2014, IL, USA, March 31 - April 4, 2014 (2014), pp. 676–
687.
[26] GRAY, J., HELLAND, P., O’NEIL, P. E., AND SHASHA,
D. The dangers of replication and a solution. In Proceedings of the 1996 ACM SIGMOD International Conference
on Management of Data, Montreal, Quebec, Canada,
June 4-6, 1996. (1996), pp. 173–182.
[27] GRAY, J., AND REUTER, A. Transaction Processing:
Concepts and Techniques, 1st ed. Morgan Kaufmann
Publishers Inc., San Francisco, CA, USA, 1992.
[28] KRASKA, T., PANG, G., FRANKLIN, M. J., MADDEN,
S., AND FEKETE, A. Mdcc: Multi-data center consistency. In Proceedings of the 8th ACM European Conference on Computer Systems (2013), EuroSys ’13, pp. 113–
126.
[29] LAMPORT, L. The part-time parliament. ACM Trans.
Comput. Syst. 16, 2 (May 1998), 133–169.
[30] PATTERSON, S., ELMORE, A. J., NAWAB, F.,
AGRAWAL, D., AND ABBADI, A. E. Serializability,
not serial: Concurrency control and availability in multidatacenter datastores. In PVLDB (2012), vol. 5, pp. 1459–
1470.
[31] PENG, D., AND DABEK, F. Large-scale incremental processing using distributed transactions and notifications.
In 9th USENIX Symposium on Operating Systems Design
and Implementation (OSDI 10) (2010).
[32] THOMSON, A., DIAMOND, T., WENG, S.-C., REN, K.,
SHAO, P., AND ABADI, D. J. Calvin: Fast distributed
transactions for partitioned database systems. In Proceedings of the 2012 ACM SIGMOD International Conference
on Management of Data (2012), SIGMOD ’12, pp. 1–12.
[33] WEI, X., SHI, J., CHEN, Y., CHEN, R., AND CHEN, H.
Fast in-memory transaction processing using RDMA and
HTM. In Proceedings of the 25th Symposium on Operating Systems Principles (2015), SOSP ’15, pp. 87–104.
[34] WELSH, M. An Architecture for Highly Concurrent,
Well-Conditioned Internet Services. PhD thesis, University of California, Berkeley, 2002.
[35] YABANDEH, M., AND GOMEZ-FERRO, D. A critique of
snapshot isolation. In Proceedings of the 7th ACM European Conference on Computer Systems (2012), EuroSys
’12, pp. 155–168.
[36] ZHANG, I., SHARMA, N. K., SZEKERES, A., KRISHNAMURTHY, A., AND PORTS, D. R. K. Building consistent transactions with inconsistent replication. In Proceedings of the 25th Symposium on Operating Systems
Principles, SOSP 2015, Monterey, CA, USA, October 4-
7, 2015 (2015), E. L. Miller and S. Hand, Eds., ACM,
pp. 263–278.
