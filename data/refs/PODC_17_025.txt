[1] Yehuda Afek, Haim Kaplan, Boris Korenfeld, Adam Morrison, and Robert E. Tarjan. Cbtree: A practical concurrent self-adjusting search tree. In Proceedings of the 26th International Conference on Distributed Computing, DISC’12, pages 1–15, Berlin, Heidelberg, 2012. Springer-Verlag.
[2] DanAlistarh,JamesAspnes,KerenCensor-illel,SethGilbert,andRachidGuer- raoui. Tight bounds for asynchronous renaming. J. ACM, 61(3):18:1–18:51, June 2014.
[3] Dan Alistarh, Justin Kopinsky, Jerry Li, and Nir Shavit. The spraylist: A scalable relaxed priority queue. In 20th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, PPoPP 2015, San Francisco, CA, USA, 2015. ACM.
[4] Yossi Azar, Andrei Z Broder, Anna R Karlin, and Eli Upfal. Balanced allocations. SIAM journal on computing, 29(1):180–200, 1999.
[5] Dmitry Basin, Rui Fan, Idit Keidar, Ofer Kiselov, and Dmitri Perelman. CafÉ: Scalable task pools with adjustable fairness and contention. In Proceedings of the 25th International Conference on Distributed Computing, DISC’11, pages 475–488, Berlin, Heidelberg, 2011. Springer-Verlag.
[6] Petra Berenbrink, Artur Czumaj, Angelika Steger, and Berthold Vöcking. Bal- anced allocations: The heavily loaded case. In Proceedings of the Thirty-second Annual ACM Symposium on Theory of Computing, STOC ’00, pages 745–754, New York, NY, USA, 2000. ACM.
[7] PetraBerenbrink,TomFriedetzky,ZengjianHu,andRussellMartin.Onweighted balls-into-bins games. Theor. Comput. Sci., 409(3):511–520, December 2008.
[8] Trevor Brown, Faith Ellen, and Eric Ruppert. A general technique for non-
blocking trees. SIGPLAN Not., 49(8):329–342, February 2014.
[9] Faith Ellen, Danny Hendler, and Nir Shavit. On the inherent sequentiality of
concurrent objects. SIAM J. Comput., 41(3):519–536, 2012.
[10] Panagiota Fatourou and Nikolaos D. Kallimanis. Revisiting the combining synchronization technique. SIGPLAN Not., 47(8):257–266, February 2012.
[11] Panagiota Fatourou and Nikolaos D. Kallimanis. Highly-efficient wait-free synchronization. Theory Comput. Syst., 55(3):475–520, 2014.
[12] Mikhail Fomitchev and Eric Ruppert. Lock-free linked lists and skip lists. In Proceedings of the 23rd annual ACM symposium on Principles of Distributed Computing
(PODC’ 04), pages 50–59, New York, NY, USA, 2004. ACM Press.
[13] Jakob Gruber, Jesper Larsson Träff, and Martin Wimmer. Brief announcement: Benchmarking concurrent priority queues. In Proceedings of the 28th ACM Symposium on Parallelism in Algorithms and Architectures, SPAA ’16, pages 361–362, New York, NY, USA, 2016. ACM.
[14] Andreas Haas, Michael Lippautz, Thomas A. Henzinger, Hannes Payer, Ana
Sokolova, Christoph M. Kirsch, and Ali Sezgin. Distributed queues in shared memory: multicore performance and scalability through quantitative relaxation. In Computing Frontiers Conference, CF’13, Ischia, Italy, May 14 - 16, 2013, pages 17:1–17:9, 2013.
[15] Tim L. Harris. A pragmatic implementation of non-blocking linked-lists. In Proceedings of the International Conference on Distributed Computing (DISC), pages 300–314, 2001.
[16] ThomasA.Henzinger,ChristophM.Kirsch,HannesPayer,AliSezgin,andAna Sokolova. Quantitative relaxation of concurrent data structures. SIGPLAN Not., 48(1):317–328, January 2013.
[17] MauriceHerlihy,YossiLev,VictorLuchangco,andNirShavit.Asimpleoptimistic skiplist algorithm. In Proceedings of the 14th international conference on Structural information and communication complexity, SIROCCO’07, pages 124–138, Berlin, Heidelberg, 2007. Springer-Verlag. http://dl.acm.org/citation.cfm?id=1760631. 1760646.
[18] Maurice Herlihy, Nir Shavit, and Moran Tzafrir. Hopscotch hashing. In Proceedings of the 22nd international symposium on Distributed Computing, DISC ’08, pages 350–364, Berlin, Heidelberg, 2008. Springer-Verlag. http://dl.acm.org/ citation.cfm?id=1432316.
[19] R. M. Karp and Y. Zhang. Parallel algorithms for backtrack search and branch- and-bound. Journal of the ACM, 40(3):765–789, 1993.
[20] Doug Lea, 2007. http://java.sun.com/javase/6/docs/api/java/util/concurrent/ ConcurrentSkipListMap.html.
[21] Jure Leskovec and Andrej Krevl. SNAP Datasets: Stanford large network dataset collection. http://snap.stanford.edu/data, June 2014.
[22] Justin J Levandoski, David B Lomet, and Sudipta Sengupta. The bw-tree: A b-tree for new hardware platforms. In Data Engineering (ICDE), 2013 IEEE 29th International Conference on, pages 302–313. IEEE, 2013.
[23] Jonatan Lindén and Bengt Jonsson. A skiplist-based concurrent priority queue with minimal memory contention. In International Conference On Principles Of Distributed Systems, pages 206–220. Springer, 2013.
[24] Maged M Michael. High performance dynamic lock-free hash tables and list- based sets. In Proceedings of the fourteenth annual ACM symposium on Parallel algorithms and architectures, pages 73–82. ACM, 2002.
[25] Michael Mitzenmacher. The power of two choices in randomized load balancing. IEEE Transactions on Parallel and Distributed Systems, 12(10):1094–1104, 2001.
[26] AdamMorrison.Scalingsynchronizationinmulticoreprograms.Commun.ACM, 59(11):44–51, October 2016.
[27] Adam Morrison and Yehuda Afek. Fast concurrent queues for x86 processors. SIGPLAN Not., 48(8):103–112, February 2013.
[28] DonaldNguyen,AndrewLenharth,andKeshavPingali.Alightweightinfrastruc- ture for graph analytics. In Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles, SOSP ’13, pages 456–471, New York, NY, USA, 2013. ACM.
[29] Yuval Peres, Kunal Talwar, and Udi Wieder. Graphical balanced allocations and the 1 + beta-choice process. Random Struct. Algorithms, 47(4):760–775, December 2015.
[30] Andrea W Richa, M Mitzenmacher, and R Sitaraman. The power of two random choices: A survey of techniques and results. Combinatorial Optimization, 9:255– 304, 2001.
[31] Hamza Rihani, Peter Sanders, and Roman Dementiev. Brief announcement: Multiqueues: Simple relaxed concurrent priority queues. In Proceedings of the 27th ACM Symposium on Parallelism in Algorithms and Architectures, SPAA ’15, pages 80–82, New York, NY, USA, 2015. ACM.
[32] P. Sanders. Randomized priority queues for fast parallel access. Journal Par- allel and Distributed Computing, Special Issue on Parallel and Distributed Data Structures, 49:86–97, 1998.
[33] Nir Shavit. Data structures in the multicore age. Commun. ACM, 54(3):76–84, 2011.
[34] Nir Shavit and Itay Lotan. Skiplist-based concurrent priority queues. In Par- allel and Distributed Processing Symposium, 2000. IPDPS 2000. Proceedings. 14th International, pages 263–268. IEEE, 2000.
[35] Kunal Talwar and Udi Wieder. Balanced allocations: The weighted case. In Proceedings of the Thirty-ninth Annual ACM Symposium on Theory of Computing, STOC ’07, pages 256–265, New York, NY, USA, 2007. ACM.
[36] Martin Wimmer, Jakob Gruber, Jesper Larsson Träff, and Philippas Tsigas. The lock-free k-lsm relaxed priority queue. In ACM SIGPLAN Notices, volume 50, pages 277–278. ACM, 2015.
