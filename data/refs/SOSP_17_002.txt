

[1] Gautam Altekar and Ion Stoica. 2009. ODR: Output-deterministic
Replay for Multicore Debugging. In Proceedings of the ACM SIGOPS
22nd Symposium on Operating Systems Principles (SOSP’09). 193-206.

[2] Joy Arulraj, Guoliang Jin, and Shan Lu. 2014. Leveraging the Shortterm Memory of Hardware to Diagnose Production-run Software
Failures. In Proceedings of the 19th International Conference on Architectural Support for Programming Languages and Operating Systems
(ASPLOS’14), 207-222,

[3] Nicolas Bettenburg, Sascha Just, Adrian Schréter, Cathrin Weiss, Rahul
Premraj, and Thomas Zimmermann. 2008. What Makes a Good Bug
Report?. In Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of Software Engineering (SIGSOFT ’08/FSE-16).
308-318.

[4] T Britton, L Jeng, G Carver, and P Cheak. 2013. Reversible debugging
software. Judge Business School (2013).

[5] Cristian Cadar, Daniel Dunbar, and Dawson Engler. 2008. KLEE: Unassisted and Automatic Generation of High-coverage Tests for Complex
Systems Programs. In Proceedings of the 8th USENIX Conference on
Operating Systems Design and Implementation (OSDI’08). 209-224.

[6] chord 2015. Chord: Java Bytecode Analysis. https://code.google.com/
p/jchord/. (2015).

[7] Heming Cui, Jiri Simsa, Yi-Hong Lin, Hao Li, Ben Blum, Xinan Xu,
Junfeng Yang, Garth A. Gibson, and Randal E. Bryant. 2013. Parrot:
A Practical Runtime for Deterministic, Stable, and Reliable Threads.
In Proceedings of the Twenty-Fourth ACM Symposium on Operating
Systems Principles (SOSP’13). 388-405.

[8] Leonardo De Moura and Nikolaj Bjorner. 2008. Z3: An Efficient SMT
Solver. In Proceedings of the Theory and Practice of Software, 14th International Conference on Tools and Algorithms for the Construction and
Analysis of Systems (TACAS’08/ETAPS’08). 337-340.

[9] David Devecsery, Michael Chow, Xianzheng Dou, Jason Flinn, and
Peter M. Chen. 2014. Eidetic Systems. In Proceedings of the 11th USENIX
Conference on Operating Systems Design and Implementation (OSDI’ 14).
525-540.

[10] George W. Dunlap, Samuel T. King, Sukru Cinar, Murtaza A. Basrai,
and Peter M. Chen. 2002. ReVirt: Enabling Intrusion Analysis Through
Virtual-machine Logging and Replay. In Proceedings of the 5th symposium on Operating systems design and implementation (OSDI’02).
211-224,

[11] Wei Jin and Alessandro Orso. 2012. BugRedux: Reproducing field
failures for in-house debugging. In 34th International Conference on
Software Engineering (ICSE’12). 474-484.

[12] jvmti 2017. JVM TI: Java Virtual Machine Tool Interface. http://docs.
oracle.com/javase/7/docs/technotes/guides/jvmti/. (2017).

[13] Leslie Lamport. 1978. Time, Clocks, and the Ordering of Events in a
Distributed System. Commun. ACM 21, 7 (July 1978), 558-565.

[14] Kaituo Li, Pallavi Joshi, Aarti Gupta, and Malay K. Ganai. 2014. ReproLite: A Lightweight Tool to Quickly Reproduce Hard System Bugs.
In Proceedings of the ACM Symposium on Cloud Computing (SOCC’14).
25:1-25:13.

[15] Tongping Liu, Charlie Curtsinger, and Emery D. Berger. 2011.
DTHREADS: Efficient Deterministic Multithreading. In Proceedings
of the Twenty-Third ACM Symposium on Operating Systems Principles
(SOSP’11), 327-336.

[16] Karthik Nagaraj, Charles Killian, and Jennifer Neville. 2012. Structured Comparative Analysis of Systems Logs to Diagnose Performance
Problems. In Proceedings of the 9th USENIX Conference on Networked
Systems Design and Implementation (NSDI’12). 26-26.

[17] Satish Narayanasamy, Gilles Pokam, and Brad Calder. 2005. BugNet:
Continuously Recording Program Execution for Deterministic Replay

SOSP °17, October 28, 2017, Shanghai, China

Debugging. In Proceedings of the 32Nd Annual International Symposium
on Computer Architecture (ISCA’05). 284-295.

[18] Soyeon Park, Yuanyuan Zhou, Weiwei Xiong, Zuoning Yin, Rini
Kaushik, Kyu H. Lee, and Shan Lu. 2009. PRES: Probabilistic Replay with Execution Sketching on Multiprocessors. In Proceedings
of the ACM SIGOPS 22Nd Symposium on Operating Systems Principles
(SOSP’09), 177-192.

[19] Dinesh Subhraveti and Jason Nieh. 2011. Record and Transplay: Partial
Checkpointing for Replay Debugging Across Heterogeneous Systems.
In Proceedings of the ACM SIGMETRICS International Conference on
Measurement and Modeling of Computer Systems (SIGMETRICS’11).
109-120.

[20] H. Thane and H. Hansson. 2000. Using deterministic replay for debugging of distributed real-time systems. In Proceedings of the 12th
Euromicro Conference on Real-Time Systems (ECRTS’00). 265-272.

[21] Frank Tip. 1995. A survey of program slicing techniques. Journal of
Programming Languages 3, 3 (1995), 121-189.

[22] Kaushik Veeraraghavan, Dongyoon Lee, Benjamin Wester, Jessica
Ouyang, Peter M. Chen, Jason Flinn, and Satish Narayanasamy. 2011.
DoublePlay: Parallelizing Sequential Logging and Replay. In Proceedings of the Sixteenth International Conference on Architectural Support
for Programming Languages and Operating Systems (ASPLOS’11). 1526.

[23] Mark Weiser. 1981. Program Slicing. In Proceedings of the 5th International Conference on Software Engineering (ICSE’81). 439-449.

[24] Baowen Xu, Ju Qian, Xiaofang Zhang, Zhongqiang Wu, and Lin Chen.
2005. A brief survey of program slicing. ACM SIGSOFT Software
Engineering Notes 30, 2 (2005), 1-36.

[25] Wei Xu, Ling Huang, Armando Fox, David Patterson, and Michael I.
Jordan. 2009. Detecting large-scale system problems by mining console
logs. In Proceedings of the ACM SIGOPS 22nd Symposium on Operating
Systems Principles (SOSP’09). 117-132.

[26] Ding Yuan, Yu Luo, Xin Zhuang, Guilherme Renna Rodrigues, Xu Zhao,
Yongle Zhang, Pranay Jain, and Michael Stumm. 2014. Simple Testing
Can Prevent Most Critical Failures: An Analysis of Production Failures in Distributed Data-Intensive Systems. In Proceedings of the 11th
USENIX Symposium on Operating Systems Design and Implementation
(OSDI’ 14), 249-265.

[27] Ding Yuan, Haohui Mai, Weiwei Xiong, Lin Tan, Yuanyuan Zhou, and
Shankar Pasupathy. 2010. SherLog: error diagnosis by connecting
clues from run-time logs. In Proceedings of the 15th edition of ASPLOS
on Architectural Support for Programming Languages and Operating
Systems (ASPLOS’10). 143-154.

[28] Cristian Zamfir and George Candea. 2010. Execution synthesis: a
technique for automated software debugging. In European Conference
on Computer Systems, Proceedings of the 5th European conference on
Computer systems (EuroSys’10). 321-334.

[29] Andreas Zeller. 1999. Yesterday, My Program Worked. Today, It Does
Not. Why?. In Proceedings of the 7th European Software Engineering
Conference Held Jointly with the 7th ACM SIGSOFT International Symposium on Foundations of Software Engineering (ESEC/FSE-7). 253-267.

[30] Xu Zhao, Kirk Rodrigues, Yu Luo, Ding Yuan, and Michael Stumm.
2016. Non-intrusive Performance Profiling for Entire Software Stacks
Based on the Flow Reconstruction Principle. In Proceedings of the 12th
USENIX Conference on Operating Systems Design and Implementation
(OSDI’16). 603-618,

[31] Xu Zhao, Yongle Zhang, David Lion, Muhammad FaizanUllah, Yu
Luo, Ding Yuan, and Michael Stumm. 2014. Iprof: A Non-intrusive
Request Flow Profiler for Distributed Systems. In Proceedings of the
Third Symposium on Operating Systems Design and Implementation
(OSDI’ 14), 629-644,
