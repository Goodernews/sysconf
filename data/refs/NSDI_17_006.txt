[1] Amazon. https://www.amazon.com.
[2] AMD A10-7860K-AD786KYBJCSBX. https://www.
amazon.com/AMD-Processors-Radeon-GraphicsA10-7860K-AD786KYBJCSBX/dp/B01BF377W4.
[3] ConnectX-4 Lx EN Cards. http://www.mellanox.com/
page/products_dyn?product_family=219&mtag=
connectx_4_lx_en_card.
[4] DPDK: Data Plane Development Kit.
org/.

http://dpdk.

[5] GeForce GTX 980 Specifications.
http://www.
geforce.com/hardware/desktop-gpus/geforcegtx-980/specifications.
[6] Intel Advanced Encryption Standard Instruction
(AES-NI).
https://software.intel.com/enus/articles/intel-advanced-encryptionstandard-instructions-aes-ni.
[7] ModSecurity: Open Source Web Application Firewall.
https://www.modsecurity.org.
[8] NGINX. https://www.nginx.com.
[9] OpenCL 2.0 Shared Virtual Memory Overview. https:
//software.intel.com/en-us/articles/opencl20-shared-virtual-memory-overview.
http://shader.kaist.edu/
[10] Packet I/O Engine.
packetshader/io_engine/.
[11] Performance Application Programming Interface. http:
//icl.cs.utk.edu/papi/.
[12] Phasing out Certificates with 1024-bit RSA Keys.
https://blog.mozilla.org/security/2014/09/08/
phasing-out-certificates-with-1024-bit-rsakeys/.
[13] Public-Key Cryptography Standards (PKCS) 1: RSA Cryptography Specifications Version 2.1. https://tools.
ietf.org/html/rfc3447.
[14] Researchers Warn Against Continuing Use Of SHA1 Crypto Standard.
http://www.darkreading.
com/vulnerabilities---threats/researcherswarn-against-continuing-use-of-sha-1-cryptostandard/d/d-id/1322565.
[15] Suricata Open Source IDS/IPS/NSM engine. http://
suricata-ids.org/.
[16] Using OpenCL 2.0 Atomics. https://software.intel.
com/en-us/articles/using-opencl-20-atomics.
[17] White Paper. AMD Graphics Core Next (GCN) Architecture. https://www.amd.com/Documents/GCN_
Architecture_whitepaper.pdf.
[18] Aho, Alfred V. and Corasick, Margaret J. Efficient String
Matching: An Aid to Bibliographic Search. Communications of the ACM, 18(6):333–340, June 1975.
[19] A. Ashari, N. Sedaghati, J. Eisenlohr, S. Parthasarathy, and
P. Sadayappan. Fast Sparse Matrix-Vector Multiplication
on GPUs for Graph Applications. In Proceedings of the International Conference for High Performance Computing,
Networking, Storage and Analysis (SC), 2014.
[20] D. Bouvier and B. Sander.
Applying AMD’s
“Kaveri” APU for Heterogeneous Computing.
https://www.hotchips.org/wp-content/uploads/
hc_archives/hc26/HC26-11-day1-epub/HC26.11-2Mobile-Processors-epub/HC26.11.220-BouvierKaveri-AMD-Final.pdf.
[21] T. Chen, M. Li, Y. Li, M. Lin, N. Wang, M. Wang, T. Xiao,
B. Xu, C. Zhang, and Z. Zhang. MXNet: A Flexible
and Efficient Machine learning Library for Heterogeneous
Distributed Systems. In Proceedings of the NIPS Workshop
on Machine Learning Systems (LearningSys), 2016.
[22] B. Choi, J. Chae, A. Jamshed, K. Park, and D. Han. DFC:
Accelerating Pattern Matching for Network Applications.
In Proceedings of the USENIX Symposium on Networked
Systems Design and Implementation (NSDI), 2016.
[23] R. Collobert, K. Kavukcuoglu, and C. Farabet. Torch7:
A Matlab-like Environment for Machine Learning. In
Proceedings of the NIPS Workshop BigLearn, 2011.
[24] H. Cui, H. Zhang, G. R. Ganger, P. B. Gibbons, and E. P.
Xing. GeePS: Scalable deep learning on distributed GPUs
with a GPU-specialized parameter server. In Proceedings
of the European Conference on Computer Systems (EuroSys), 2016.
[25] D. J. Bernstein. A state-of-the-art message-authentication
code. https://cr.yp.to/mac.html.
[26] D. J. Bernstein. The ChaCha family of stream ciphers.
https://cr.yp.to/chacha.html.
[27] B. Dipak. Question about Fine grain and Coarse grain
in OpenCL 2.0. https://community.amd.com/thread/
169688.
[28] M. Dobrescu, N. Egi, K. Argyraki, B.-G. Chun, K. Fall,
G. Iannaccone, A. Knies, M. Manesh, and S. Ratnasamy.
RouteBricks: Exploiting Parallelism To Scale Software
Routers. In Proceedings of the ACM SIGOPS Symposium
on Operating Systems Principles (SOSP), 2009.
[29] S. Han, K. Jang, K. Park, and S. B. Moon. PacketShader:
a GPU-accelerated Software Router. In Proceedings of
the ACM Special Interest Group on Data Communication
(SIGCOMM), 2010.
[30] M. Jamshed, J. Lee, S. Moon, I. Yun, D. Kim, S. Lee, Y. Yi,
and K. Park. Kargus: a Highly-scalable Software-based
Intrusion Detection System. In Proceedings of the ACM
Conference on Computer and Communications Security
(CCS), 2012.
[31] K. Jang, S. Han, S. Han, S. Moon, and K. Park. SSLShader:
Cheap SSL Acceleration with Commodity Processors. In
Proceedings of the USENIX Symposium on Networked Systems Design and Implementation (NSDI), 2011.
[32] A. Kalia, D. Zhou, M. Kaminsky, and D. G. Andersen.
Raising the Bar for Using GPUs in Software Packet Processing. In Proceedings of the USENIX Symposium on
Networked Systems Design and Implementation (NSDI),
2015.
[33] J. Kim, S. Huh, K. Jang, K. Park, and S. Moon. The Power
of Batching in the Click Modular Router. In Proceedings
of the Asia-Pacific Workshop on Systems (APSys), 2012.
[34] J. Kim, K. Jang, K. Lee, S. Ma, J. Shim, and S. Moon. NBA
(Network Balancing Act): A High-performance Packet
Processing Framework for Heterogeneous Processors. In
Proceedings of the European Conference on Computer
Systems (EuroSys), 2015.
[35] E. Kohler, R. Morris, B. Chen, J. Jannotti, and M. F.
Kaashoek. The Click Modular Router. ACM Transactions on Computer Systems (TOCS), 18(3):263–297, August 2000.
[36] V. Krasnov. It takes two to ChaCha (Poly). https://blog.
cloudflare.com/it-takes-two-to-chacha-poly/.
[37] H. Lim, D. Han, D. G. Andersen, and M. Kaminsky. MICA:
A Holistic Approach to Fast In-Memory Key-Value Storage. In Proceedings of the USENIX Symposium on Networked Systems Design and Implementation (NSDI), 2014.
[38] H. Liu and H. H. Huang. Enterprise: Breadth-First Graph
Traversal on GPUs. In Proceedings of the International
Conference for High Performance Computing, Networking,
Storage and Analysis (SC), 2015.
[39] N. Maruyama, T. Nomura, K. Sato, and S. Matsuoka. Physis: An Implicitly Parallel Programming Model for Stencil
Computations on Large-Scale GPU-Accelerated Supercomputers. In Proceedings of the International Conference for
High Performance Computing, Networking, Storage and
Analysis (SC), 2011.
[40] O. Matz. Patchwork [dpdk-dev,v3,22/35] mempool: support no hugepage mode. http://www.dpdk.org/dev/
patchwork/patch/12854/.
[41] Mellanox Technologies. Introduction to InfiniBand.
http://www.mellanox.com/pdf/whitepapers/IB_
Intro_WP_190.pdf.
[42] J. Park, W. Jung, G. Jo, I. Lee, and J. Lee. PIPSEA: A Practical IPsec Gateway on Embedded APUs. In Proceedings
of the ACM Conference on Computer and Communications
Security (CCS), 2016.
[43] M. Roesch. Snort - Lightweight Intrusion Detection for
Networks. In Proceedings of the USENIX Large Installation System Administration Conference (LISA), 1999.
[44] SAPPHIRE Technology. AMD Merlin Falcon DB-FP4. http://www.sapphiretech.com/
productdetial.asp?pid=F3F349C0-5835-407E92C3-C19DEAB6B708&lang=eng.
[45] J. Tseng, R. Wang, J. Tsai, S. Edupuganti, A. W. Min,
S. Woo, S. Junkins, and T.-Y. C. Tai. Exploiting Integrated GPUs for Network Packet Processing Workloads.
In Proceedings of the IEEE Conference on Network Softwarization (NetSoft), 2016.
[46] G. Vasiliadis and L. Koromilas. GASPP: A GPUAccelerated Stateful Packet Processing Framework. In
Proceedings of the USENIX Annual Technical Conference
(USENIX ATC), 2014.
[47] G. Vasiliadis, M. Polychronakis, and S. Ioannidis. MIDeA:
A Multi-Parallel Intrusion Detection Architecture. In Proceedings of the ACM Conference on Computer and Communications Security (CCS), 2011.
[48] W3Techs. Usage of SSL certificate authorities
for websites. https://w3techs.com/technologies/
overview/ssl_certificate/all.

