[1] A. Baumann, P. Barham, P.-E. Dagand, T. Harris, R. Isaacs,
S. Peter, T. Roscoe, A. Schiipbach, and A. Singhania. The
multikernel: a new OS architecture for scalable multicore
systems. In Proceedings of the ACM SIGOPS 22nd symposium
on Operating systems principles, pages 29-44. ACM, 2009.

[2] A. B. Brown and M. I. Seltzer. Operating system benchmarking in the wake of Imbench: A case study of the performance
of netbsd on the intel x86 architecture. In Proceedings of the
1997 ACM SIGMETRICS International Conference on Measurement and Modeling of Computer Systems, SIGMETRICS
97, pages 214-224, New York, NY, USA, 1997. ACM.

[3] S. Doeraene. Scala.js: Type-Directed Interoperability with
Dynamically Typed Languages. Technical report, Ecole polytechnique fédérale de Lausanne, 2013.

[4] J. R. Douceur, J. Elson, J. Howell, and J. R. Lorch. Leveraging
legacy code to deploy desktop applications on the web. In
Proceedings of the 8th USENIX Conference on Operating
Systems Design and Implementation, OSD?’ 08, pages 339354, Berkeley, CA, USA, 2008. USENIX Association.

[5] M. Fogleman. fogleman/gg: Go Graphics - 2D rendering in Go
with a simple API, 2016. https: //github.com/fogleman/
gg.

[6] L. T. Hansen and J. Fairbank. ECMAScript Shared Memory
and Atomics, 2016. https: //tc39. github. io/ecmascript_
sharedmen/shmen .html.

[7] H. Hartig, M. Hohmuth, J. Liedtke, J. Wolter, and S. Schénberg.
The performance of p-kernel-based systems. In Proceedings
of the Sixteenth ACM Symposium on Operating Systems Principles, SOSP ’97, pages 66-77, New York, NY, USA, 1997.
ACM.
[8] R. Hickey. Clojurescript. http://clojurescript.org/
about /rationale, 2016.

[9] J. Howell, B. Parno, and J. R. Douceur. Embassies: Radically
refactoring the web. In Proceedings of the 10th USENIX
Conference on Networked Systems Design and Implementation,
nsdi’ 13, pages 529-546, Berkeley, CA, USA, 2013. USENIX
Association.

[10] T. Mauro. Adopting Microservices at Netflix: Lessons for
Architectural Design, 2015.

https: //www.nginx.com/blog/microservices-atnetflix-architectural-best-practices/.

[11] R. Musiol. gopherjs/gopherjs: A compiler from Go to
JavaScript for running Go code in a browser, 2016. https:
//github.com/gopher js/gopher js.

[12] S. Tang, H. Mai, and S. T. King. Trust and protection in
the illinois browser operating system. In Proceedings of the
9th USENIX Conference on Operating Systems Design and
Implementation, OSDI’10, pages 17-31, Berkeley, CA, USA,
2010. USENIX Association.

[13] J. Vilk and E. D. Berger. DopPio: Breaking the browser language barrier. In Proceedings of the 2014 ACM SIGPLAN
Conference on Programming Language Design and Implementation (PLDI 2014), pages 508-518. ACM, 2014.

[14] J. Vouillon and V. Balat. From bytecode to JavaScript: the
Js_of_ocaml compiler. Software: Practice and Experience,
44(8):95 1-972, 2014.

[15] D. Yoo and S. Krishnamurthi. Whalesong: running racket in
the browser. In DLS’13, Proceedings of the 9th Symposium on
Dynamic Languages, part of SPLASH 2013, Indianapolis, IN,
USA, October 26-31, 2013, pages 97-108, 2013.

[16] A. Zakai. Emscripten: an LLVM-to-JavaScript compiler. In
OOPSLA Companion, pages 301-312, 2011.