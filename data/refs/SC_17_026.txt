[1] Gerris Flow Solver. http://gfs.sourceforge.net/wiki/index.php/Main_Page.
[2] The Kamiak Cluster at WSU. https://hpc.wsu.edu.
[3] pmem.io: Persistent Memory Programming. http://pmem.io/nvml/.
[4] 2003. Gerris: a tree-based adaptive solver for the incompressible Euler equations
in complex geometries. J. Comput. Phys. 190, 2 (2003), 572 – 600.
[5] 2009. An accurate adaptive solver for surface-tension-driven interfacial flows. J.
Comput. Phys. 228, 16 (2009), 5838 – 5866.
[6] Dmytro Apalkov, Alexey Khvalkovskiy, Steven Watts, Vladimir Nikitin, Xueti
Tang, Daniel Lottis, Kiseok Moon, Xiao Luo, Eugene Chen, Adrian Ong, Alexander Driskill-Smith, and Mohamad Krounbi. 2013. Spin-transfer Torque Magnetic
Random Access Memory (STT-MRAM). J. Emerg. Technol. Comput. Syst. 9, 2
(May 2013).
[7] Malcolm P. Atkinson and O. Peter Buneman. 1987. Types and Persistence in
Database Programming Languages. ACM Comput. Surv. 19, 2 (June 1987).
[8] John Bent, Garth Gibson, Gary Grider, Ben McClelland, Paul Nowoczynski,
James Nunez, Milo Polte, and Meghan Wingate. 2009. PLFS: A Checkpoint
Filesystem for Parallel Applications. In Proceedings of the Conference on High
Performance Computing Networking, Storage and Analysis (SC ’09).
[9] Hans-Juergen Boehm and Mark Weiser. 1988. Garbage Collection in an Uncooperative Environment. Softw. Pract. Exper. 18, 9 (Sept. 1988).
[10] Geoffrey W Burr, Matthew J Breitwisch, Michele Franceschini, Davide Garetto,
Kailash Gopalakrishnan, Bryan Jackson, Bülent Kurdi, Chung Lam, Luis A
Lastras, Alvaro Padilla, and others. 2010. Phase change memory technology.
Journal of Vacuum Science & Technology B 28, 2 (2010), 223–262.
[11] Adrian M. Caulfield, Joel Coburn, Todor Mollov, Arup De, Ameen Akel, Jiahua
He, Arun Jagatheesan, Rajesh K. Gupta, Allan Snavely, and Steven Swanson.
2010. Understanding the Impact of Emerging Non-Volatile Memories on HighPerformance, IO-Intensive Computing. In Proceedings of the 2010 ACM/IEEE
International Conference for High Performance Computing, Networking, Storage
and Analysis (SC ’10).
[12] Shimin Chen and Qin Jin. 2015. Persistent B+-trees in Non-volatile Main Memory.
Proc. VLDB Endow. 8, 7 (Feb. 2015).
[13] Joel Coburn, Adrian Caulfield, Laura Grupp, Ameen Akel, and Steven J Swanson.
2009. NVTM: A transactional interface for next-generation non-volatile memories.
(2009).
[14] Joel Coburn, Adrian M. Caulfield, Ameen Akel, Laura M. Grupp, Rajesh K.
Gupta, Ranjit Jhala, and Steven Swanson. 2011. NV-Heaps: Making Persistent
Objects Fast and Safe with Next-generation, Non-volatile Memories. SIGPLAN
Not. 46, 3 (March 2011).
[15] Jeremy Condit, Edmund B. Nightingale, Christopher Frost, Engin Ipek, Benjamin Lee, Doug Burger, and Derrick Coetzee. 2009. Better I/O Through Byteaddressable, Persistent Memory. In Proceedings of the ACM SIGOPS 22Nd Symposium on Operating Systems Principles (SOSP ’09). 133–146.
[16] James R. Driscoll, Neil Sarnak, Daniel D. Sleator, and Robert E. Tarjan. 1989.
Making Data Structures Persistent. J. Comput. Syst. Sci. 38, 1 (Feb. 1989).
[17] B. V. Essen, H. Hsieh, S. Ames, and M. Gokhale. 2012. DI-MMAP: A High
Performance Memory-Map Runtime for Data-Intensive Applications. In High
Performance Computing, Networking, Storage and Analysis (SCC), 2012 SC
Companion:. 731–735.
[18] C. Faloutsos and S. Roseman. 1989. Fractals for Secondary Key Retrieval. In Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles
of Database Systems (PODS ’89).
[19] Jorge Guerra, Leonardo Marmol, Daniel Campello, Carlos Crespo, Raju Rangaswami, and Jinpeng Wei. 2012. Software Persistent Memory. In Presented as
part of the 2012 USENIX Annual Technical Conference (USENIX ATC 12).
[20] R. Hagmann. 1987. Reimplementing the Cedar File System Using Logging and
Group Commit. In Proceedings of the Eleventh ACM Symposium on Operating
Systems Principles (SOSP ’87).
[21] Stephen D. Hoath. 2016. Fundamentals of inkjet printing: the science of inkjet
and droplets. Wiley-VCH Verlag GmbH &Co.
[22] Jian Huang, Karsten Schwan, and Moinuddin K. Qureshi. 2014. NVRAM-aware
Logging in Transaction Systems. Proc. VLDB Endow. 8, 4 (Dec. 2014).
[23] Tong Jin, Fan Zhang, Qian Sun, Hoang Bui, Manish Parashar, Hongfeng Yu,
Scott Klasky, Norbert Podhorszki, and Hasan Abbasi. 2013. Using Cross-layer
Adaptations for Dynamic Data Management in Large Scale Coupled Scientific
Workflows. In Proceedings of the International Conference on High Performance
Computing, Networking, Storage and Analysis (SC ’13).
[24] C. Josserand and S.T. Thoroddsen. 2016. Drop Impact on a Solid Surface. Annual
Review of Fluid Mechanics 48, 1 (2016), 365–391.
[25] S. Kannan, A. Gavrilovska, K. Schwan, and D. Milojicic. 2013. Optimizing
Checkpoints Using NVM as Virtual Memory. In Parallel Distributed Processing
(IPDPS), 2013 IEEE 27th International Symposium on. 29–40.
[26] E. Kim, J. Bielak, O. Ghattas, and J. Wang. 2002. Octree-based finite element
method for large-scale earthquake ground motion modeling in heterogeneous
basins. AGU Fall Meeting Abstracts (Dec. 2002).
[27] Wook-Hee Kim, Jinwoong Kim, Woongki Baek, Beomseok Nam, and Youjip
Won. 2016. NVWAL: Exploiting NVRAM in Write-Ahead Logging. In Proceedings of the Twenty-First International Conference on Architectural Support for
Programming Languages and Operating Systems (ASPLOS ’16).
[28] Aasheesh Kolli, Steven Pelley, Ali Saidi, Peter M. Chen, and Thomas F. Wenisch.
2016. High-Performance Transactions for Persistent Memories. In Proceedings
of the Twenty-First International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS ’16).
[29] Benjamin C. Lee, Engin Ipek, Onur Mutlu, and Doug Burger. 2009. Architecting
Phase Change Memory As a Scalable Dram Alternative. In Proceedings of the
36th Annual International Symposium on Computer Architecture (ISCA ’09).
[30] Dinesh P. Mehta and Sartaj Sahni. 2004. Handbook of Algorithms and Data
Structures. Chapman and Hall/CRC.
[31] C. Mohan. 1999. Repeating History Beyond ARIES. In Proceedings of the 25th
International Conference on Very Large Data Bases (VLDB ’99).
[32] Dushyanth Narayanan and Orion Hodson. 2012. Whole-system Persistence. In
Proceedings of the Seventeenth International Conference on Architectural Support
for Programming Languages and Operating Systems (ASPLOS XVII).
[33] Jiaxin Ou, Jiwu Shu, and Youyou Lu. 2016. A High Performance File System for
Non-volatile Main Memory. In Proceedings of the Eleventh European Conference
on Computer Systems (EuroSys ’16).
[34] Carey P.V. 2008. Liquid-vapor phase-change phenomena. CRC press, New York.
[35] Moinuddin K. Qureshi, Vijayalakshmi Srinivasan, and Jude A. Rivers. 2009.
Scalable High Performance Main Memory System Using Phase-change Memory
Technology. In Proceedings of the 36th Annual International Symposium on
Computer Architecture (ISCA ’09).
[36] V. A. Sartakov and R. Kapitza. 2014. NV-Hypervisor: Hypervisor-Based Persistence for Virtual Machines. In 2014 44th Annual IEEE/IFIP International
Conference on Dependable Systems and Networks.
[37] David Schwalb, Markus Dreseler, Matthias Uflacker, and Hasso Plattner. 2015.
NVC-Hashmap: A Persistent and Concurrent Hashmap For Non-Volatile Memories. In Proceedings of the 3rd VLDB Workshop on In-Memory Data Mangement
and Analytics (IMDM ’15). Article 4, 4:1–4:8 pages.
[38] Q. Shi and J. JaJa. 2006. Isosurface Extraction and Spatial Filtering using Persistent Octree (POT). IEEE Transactions on Visualization and Computer Graphics
12, 5 (Sept 2006), 1283–1290. DOI:https://doi.org/10.1109/TVCG.2006.157
[39] Suman Nath Shimin Chen, Phillip B. Gibbons. 2011. Rethinking Database
Algorithms for Phase Change Memory. In CIDR’11: 5th Biennial Conference on
Innovative Data Systems Research.
[40] Abraham Silberschatz, Peter Baer Galvin, and Greg Gagne. 2008. Operating
System Concepts (8th ed.). Wiley Publishing.
[41] H. Sundar, R. S. Sampath, S. S. Adavani, C. Davatzikos, and G. Biros. 2007. Lowconstant parallel algorithms for finite element simulations using linear octrees. In
Supercomputing, 2007. SC ’07. Proceedings of the 2007 ACM/IEEE Conference
on. 1–12.
[42] Hari Sundar, Rahul S Sampath, and George Biros. 2008. Bottom-up construction
and 2: 1 balance refinement of linear octrees in parallel. SIAM Journal on Scientific
Computing 30, 5 (2008), 2675–2708.
[43] H. Tan, E. Torniainen, D. P. Markel, and R. N. K. Browning. 2015. Numerical
simulation of droplet ejection of thermal inkjet printheads. International Journal
for Numerical Methods in Fluids 77 (March 2015), 544–570.
[44] T. Tu, J. Lopez, and D. O’Hallaron. 2003. The Etree Library: A System for Manipulating Large Octrees on Disk. Technical Report CMU-CS-03-174. Carnegie
Mellon School of Computer Science.
[45] Tiankai Tu and D. R. O’Hallaron. 2004. A Computational Database System
for Generatinn Unstructured Hexahedral Meshes with Billions of Elements. In
Supercomputing, 2004. Proceedings of the ACM/IEEE SC2004 Conference. 25–
25.
[46] Tiankai Tu, D. R. O’Hallaron, and O. Ghattas. 2005. Scalable Parallel Octree
Meshing for TeraScale Applications. In Supercomputing, 2005. Proceedings of the
ACM/IEEE SC 2005 Conference. 4–4. DOI:https://doi.org/10.1109/SC.2005.61
[47] T. Tu, H. Yu, L. Ramirez-Guzman, J. Bielak, O. Ghattas, K. l. Ma, and D. R.
O’Hallaron. 2006. From Mesh Generation to Scientific Visualization: An End-toEnd Approach to Parallel Supercomputing. In SC 2006 Conference, Proceedings
of the ACM/IEEE.
[48] Shyh-Kuang Ueng, C. Sikorski, and Kwan-Liu Ma. 1997. Out-of-core streamline
visualization on large unstructured meshes. IEEE Transactions on Visualization
and Computer Graphics 3, 4 (1997), 370–380.
[49] P. J. Varman and R. M. Verma. 1997. An efficient multiversion access structure.
IEEE Transactions on Knowledge and Data Engineering 9, 3 (May 1997), 391–
409. DOI:https://doi.org/10.1109/69.599929
[50] Shivaram Venkataraman, Niraj Tolia, Parthasarathy Ranganathan, and Roy H.
Campbell. 2011. Consistent and Durable Data Structures for Non-volatile Byteaddressable Memory. In Proceedings of the 9th USENIX Conference on File and
Stroage Technologies (FAST’11).
[51] J. S. Vetter and S. Mittal. 2015. Opportunities for Nonvolatile Memory Systems in
Extreme-Scale High-Performance Computing. Computing in Science Engineering
17, 2 (2015), 73–82.
[52] Haris Volos, Sanketh Nalli, Sankarlingam Panneerselvam, Venkatanathan
Varadarajan, Prashant Saxena, and Michael M. Swift. 2014. Aerie: Flexible
File-system Interfaces to Storage-class Memory. In Proceedings of the Ninth
European Conference on Computer Systems (EuroSys ’14).
[53] Haris Volos, Andres Jaan Tack, and Michael M. Swift. 2011. Mnemosyne:
Lightweight Persistent Memory. SIGPLAN Not. 47, 4 (March 2011), 91–104.
[54] W. X. Wang, Z. Lin, W. M. Tang, W. W. Lee, S. Ethier, J. L. V. Lewandowski, G.
Rewoldt, T. S. Hahm, and J. Manickam. 2006. Gyro-Kinetic simulation of global
turbulent transport properties in tokamak experiments. Physics of Plasmas 13, 9,
092505.
[55] Xingbo Wu, Fan Ni, Li Zhang, Yandong Wang, Yufei Ren, Michel Hack, Zili
Shao, and Song Jiang. 2016. NVMcached: An NVM-based Key-Value Cache. In
Proceedings of the 7th ACM SIGOPS Asia-Pacific Workshop on Systems (APSys
’16).
[56] Xiaojian Wu and A. L. Narasimha Reddy. 2011. SCMFS: A File System for
Storage Class Memory. In Proceedings of 2011 International Conference for High
Performance Computing, Networking, Storage and Analysis (SC ’11).
[57] Jun Yang, Qingsong Wei, Cheng Chen, Chundong Wang, Khai Leong Yong, and
Bingsheng He. 2015. NV-Tree: Reducing Consistency Cost for NVM-based
Single Level Systems. In Proceedings of the 13th USENIX Conference on File
and Storage Technologies (FAST’15).
[58] J. Joshua Yang and R. Stanley Williams. 2013. Memristive Devices in Computing
System: Promises and Challenges. J. Emerg. Technol. Comput. Syst. 9, 2 (May
2013).
[59] A.L. Yarin. 2006. DROP IMPACT DYNAMICS: Splashing, Spreading, Receding,
Bouncing. Annual Review of Fluid Mechanics 38, 1 (2006), 159–192.
[60] X. Zhang, K. Davis, and S. Jiang. 2010. IOrchestrator: Improving the Performance of Multi-node I/O Systems via Inter-Server Coordination. In Proceedings
of the ACM/IEEE International Conference for High Performance Computing,
Networking, Storage, and Analysis (SC’10).
[61] X. Zhang, K. Davis, and S. Jiang. 2011. QoS Support for End Users of I/Ointensive Applications using Shared Storage Systems. In Proceedings of the
ACM/IEEE International Conference for High Performance Computing, Networking, Storage, and Analysis (SC’11).
[62] X. Zhang, K. Davis, and S. Jiang. 2012. iTransformer: Using SSD to Improve
Disk Scheduling for High-performance I/O. In Parallel Distributed Processing
Symposium (IPDPS), 2012 IEEE 26th International. 715–726.
[63] X. Zhang, S. Jiang, and K. Davis. 2009. Making resonance a common case: A highperformance implementation of collective I/O on parallel file systems. In Parallel
Distributed Processing, 2009. IPDPS 2009. IEEE International Symposium on.
1–12.
[64] Ping Zhou, Bo Zhao, Jun Yang, and Youtao Zhang. A Durable and Energy Efficient
Main Memory Using Phase Change Memory Technology. In Proceedings of the
36th Annual International Symposium on Computer Architecture.
