[1] Erratic performance problems in _ oracle >
8.0.x. http://www.wikiguga.com/topic/
c67f177136f542809da3106c5£875e68.

[2] Mariadb source repository. https: //github.com/

MariaDB /server /pull/248.

[3] Google on latency tolerant systems: Making a
predictable whole out of unpredictable parts.
http: //highscalability.com/blog/2012/6/18/


[4] Understanding flash: | Unpredictable write _performance. http: //flashdba.com/2014/12/10/

understanding-flash- unpredictable-write-performance/,
2004.

[5] Server unpredictable random performance _hiccups. https: //www.percona.com/forums/
questions-discussions/mysql-and-percona-server /
401-server-unpredictable-random-performance-hiccups,
2006.

[6] Erratic performance of SQL
http://www. bigresource.com/MS_
SQL-Erratic-Performance-of-SQL-Server-6rJpQdOC.
html, 2007.

[7] Query execution time is unpredictable. https: //community.
oracle.com/thread/961135?start=0&tstart=0, 2009.

[8] Mt Iru flusher. https:/ /blueprints.launchpad.net/
percona-server/+spec/mt-lru, 2011.

[9] Parallel doublewrite buffer. https://blueprints.launchpad.
net /percona-server /+-spec/parallel-doublewrite, 2011.

[10] Xtradb performance improvements for  i/o-bound
highly-concurrent — workloads. https: //www.
percona.com/doc/percona-server/5.7/performance/
xtradb_performance_improvements_for_io-bound_
highly-concurrent_workloads. html, 2011.

Server.

[11] Unpredictable performance and slowness between our azure
website and a sql server running on an azure vm. http:
//tinyurl.com/qzleb43, 2015.

[12] Percona server 5.7: moulti-threaded tru flushing.
https: //www.percona.com/blog/2016/05/05/
percona-server-5-7-multi-threaded-lru-flushing/,

2016.

[13] M. K. Aguilera, J. C. Mogul, J. L. Wiener, P. Reynolds, and

A. Muthitacharoen. Performance debugging for distributed
systems of black boxes. In ACM SIGOPS Operating Systems
Review, 2003.

[14] J. Arulraj, A. Pavlo, and S. R. Dulloor. Let’s talk about
storage; recovery methods for non-volatile memory database
systems. In ACM Special Interest Groups on Management of
Data (SIGMOD), 2015.

[15] S. Arumugam, A. Dobra, C. M. Jermaine, N. Pansare, and
L. Perez. The datapath system: a data-centric analytic processing engine for large data warehouses. In ACM Special
Interest Groups on Management of Data (SIGMOD), 2010.

[16] M. Attariyan, M. Chow, and J. Flinn. X-ray: Automating rootcause diagnosis of performance anomalies in production software. In USENIX Symposium on Operating Systems Design
and Implementation (OSDI), 2012.

[17] P. Barham, A. Donnelly, R. Isaacs, and R. Mortier. Using
magpie for request extraction and workload modelling. In
USENIX Symposium on Operating Systems Design and Implementation (OSDI), 2004.

[18] P. Barham, R. Isaacs, R. Mortier, and D. Narayanan. Magpie:
Online modelling and performance-aware systems. In Hot

google-on-latency-tolerant-systems-making-a-predictable-whol. Topics in Operating Systems (HotOS), 2003.

html, 2002.

[19] A. R. Bernat and B. P. Miller. Incremental call-path profiling. Concurrency and Computation: Practice and Experience,
2007.

[20] S. Bhatia, A. Kumar, M. E. Fiuczynski, and L. L. Peterson.
Lightweight, high-resolution monitoring for troubleshooting
production systems. In USENIX Symposium on Operating
Systems Design and Implementation (OSDI), 2008.

[21] S. Browne, J. Dongarra, N. Garner, G. Ho, and P. Mucci. A
portable programming interface for performance evaluation
on modern processors. International Journal of High Performance Computing Applications (IJHPCA), 2000.

[22] A. Chanda, A. L. Cox, and W. Zwaenepoel. Whodunit: Transactional profiling for multi-tier applications. ACM SIGOPS
Operating Systems Review, 2007.

[23] M. Y. Chen, E. Kiciman, E. Fratkin, A. Fox, and E. Brewer.
Pinpoint: Problem determination in large, dynamic internet
services. In Dependable Systems and Networks (DSN), 2002.

[24] S. Chen. Flashlogging: exploiting flash devices for syn
chronous logging performance. In ACM Special Interest
Groups on Management of Data (SIGMOD), 2009.

[25] D.S. Daniels, A. Z. Spector, and D. S. Thompson. Distributed
logging for transaction processing. In ACM Special Interest
Groups on Management of Data (SIGMOD), 1987.

[26] L. De Rose, Y. Zhang, and D. A. Reed. Svpablo: A multilanguage performance analysis system. In Computer Performance Evaluation. Springer, 1998.

[27] J. Dean and S. Ghemawat. Mapreduce: simplified data processing on large clusters. Communications of the ACM, 2008.

[28] C. Delimitrou and C. Kozyrakis. ibench: Quantifying interference for datacenter applications. In Workload Characterization (IISWC), 2013 IEEE International Symposium on, 2013.

[29] D. E. Difallah, A. Pavlo, C. Curino, and P. Cudre-Mauroux.
Oltp-bench: An extensible testbed for benchmarking relational databases.
(PVLDB), 7, 2013.

[30] T. Do, M. Hao, T. Leesatapornwongsa, T. Patana-anake, and
H. S. Gunawi. Limplock: understanding the impact of limpware on scale-out cloud systems. In ACM Symposium on
Cloud Computing (SoCC), 2013.

[31] U. Erlingsson, M. Peinado, S. Peter, M. Budiu, and G. MainarRuiz. Fay: extensible distributed tracing from kernels to
clusters. In ACM Symposium on Operating Systems Principles
(SOSP), 2011.

[32] D. Florescu and D. Kossmann. Rethinking cost and performance of database systems. ACM Special Interest Groups on
Management of Data (SIGMOD), 2009.

[33] N. Froyd, J. Mellor-Crummey, and R. Fowler. Low-overhead.
call path profiling of unmodified, optimized code. In International Conference on Supercomputing (ICS), 2005.

[34] S. L. Graham, P. B. Kessler, and M. K. Mckusick. Gprof: A
call graph execution profiler. In ACM Sigplan Notices, 1982.

[35] B. Gregg. DTrace pid Provider return. http://tinyurl.com/
jzpphne, 2011.

Proceedings of the VLDB Endowment

[36] B. Gregg. Dtrace tools. http://www.brendangregg.com/
dtrace.html, 2011.

[37] R. J. Hall. Call path profiling. In International Conference on
Software Engineering (ICSE), 1992.

[38] S. Harizopoulos, V. Shkapenyuk, and A. Ailamaki. Qpipe:
a simultaneously pipelined relational query engine. In ACM
Special Interest Groups on Management of Data (SIGMOD),
2005.

[39] J. M. Hill, S. A. Jarvis, C. Siniolakis, and V. P. Vasilev.
Analysing an sql application with a bsplib call-graph profiling tool. In Euro-Par98 Parallel Processing, 1998.

[40] J. Huang, B. Mozafari, G. Schoenebeck, and T. Wenisch. A
top-down approach to achieving performance predictability
in database systems. In ACM Special Interest Groups on
Management of Data (SIGMOD), 2017.

[41] J. Joyce, G. Lomow, K. Slind, and B. Unger. Monitoring
distributed systems. ACM Transactions on Computer Systems
(TOCS), 1987.

[42] J. Li, N. K. Sharma, D. R. Ports, and S. D. Gribble. Tales
of the tail: Hardware, os, and application-level sources of tail
latency. In ACM Symposium on Cloud Computing (SoCC),
2014.

[43] J. Mace, R. Roelke, and R. Fonseca. Pivot tracing: dynamic
causal monitoring for distributed systems. In ACM Symposium on Operating Systems Principles (SOSP), 2015.

[44] M. L. Massie, B. N. Chun, and D. E. Culler. The ganglia
distributed monitoring system: design, implementation, and
experience. Parallel Computing, 2004.

[45] B. P. Miller, M. D. Callaghan, J. M. Cargille, J. K.
Hollingsworth, R. B. Irvin, K. L. Karavanic, K. Kunchithapadam, and T. Newhall. The paradyn parallel performance
measurement tool. Computer, 1995.

[46] B. Mozafari, C. Curino, A. Jindal, and S. Madden. Performance and resource modeling in highly-concurrent OLTP

workloads. In ACM Special Interest Groups on Management
of Data (SIGMOD), 2013.

[47] B. Mozafari, C. Curino, and S. Madden. DBSeer: Resource
and performance prediction for building a next generation
database cloud. In Conference on Innovative Data Systems
Research (CIDR), 2013.

[48] B. Mozafari, E. Z. Y. Goh, and D. Y. Yoon. CliffGuard:
A principled framework for finding robust database designs.
In ACM Special Interest Groups on Management of Data
(SIGMOD), 2015.

[49] B. Mozafari, E. Z. Y. Goh, and D. Y. Yoon. Cliffguard: An
extended report. Technical report, University of Michigan,
Ann Arbor, 2015.

[50] W. E. Nagel, A. Arnold, M. Weber, H.-C. Hoppe, and
K. Solchenbach. Vampir: Visualization and analysis of mpi
resources. 1996.

[51] S. Pelley, T. F. Wenisch, B. T. Gold, and B. Bridge. Storage
management in the nvram era. Proceedings of the VLDB
Endowment (PVLDB), 2013.

[52] L. Qiao, V. Raman, F. Reiss, P. Haas, and G. Lohman. Mainmemory scan sharing for multi-core cpus. Proceedings of the
VLDB Endowment (PVLDB), 2008.

[53] F. Raab. Tpc benchmark c, standard specification revision 3.0.
Transaction Processing Performance Council, 1995.

[54] V. Raman, G. Swart, L. Qiao, F. Reiss, V. Dialani, D. Kossmann, I. Narang, and R. Sidle. Constant-time query processing. In International Conference on Data Engineering
(ICDE), 2008.

[55] L. Ravindranath, J. Padhye, S. Agarwal, R. Mahajan, I. Obermiller, and S. Shayandeh. Appinsight: mobile app performance monitoring in the wild. In USENIX Symposium on
Operating Systems Design and Implementation (OSDI), 2012.

[56] D. A. Reed, P. C. Roth, R. A. Aydt, K. A. Shields, L. F Tavera,
R. J. Noe, and B. W. Schwartz. Scalable performance analysis:
The pablo performance analysis environment. In Scalable
Parallel Libraries Conference (SPLC), 1993.

[57] M. Sadoghi, K. A. Ross, M. Canim, and B. Bhattacharjee.
Making updates disk-i/o friendly using ssds. Proceedings of
the VLDB Endowment (PVLDB), 2013.

[58] R. R. Sambasivan and G. R. Ganger. Automated diagnosis
without predictability is a recipe for failure. In USENIX
Workshop on Hot Topics in Cloud Computing (HotCloud),
2012.

[59] R. R. Sambasivan, A. X. Zheng, M. De Rosa, E. Krevat,
S. Whitman, M. Stroucken, W. Wang, L. Xu, and G. R.
Ganger. Diagnosing performance changes by comparing request flows. In USENIX Symposium on Networked Systems
Design and Implementation (NSDI), 2011.

[60] K. Shen, C. Stewart, C. Li, and X. Li. Reference-driven
performance anomaly identification. In ACM SIGMETRICS
Performance Evaluation Review, 2009.

[61] S. Shende, A. D. Malony, J. Cuny, P. Beckman, S. Karmesin,
and K. Lindlan. Portable profiling and tracing for parallel,
scientific applications using c++. In Proceedings of the SIGMETRICS symposium on Parallel and distributed tools, 1998.
[62] B. H. Sigelman, L. A. Barroso, M. Burrows, P. Stephenson,
M. Plakal, D. Beaver, S. Jaspan, and C. Shanbhag. Dapper, a
large-scale distributed systems tracing infrastructure. Technical report, Google, Inc., 2010.

[63] M. J. Sottile and R. G. Minnich. Supermon: A high-speed.
cluster monitoring system. In International Conference on
Cluster Computing (CLUSTER), 2002.

[64] J. M. Spivey. Fast, accurate call graph profiling. Software:
Practice and Experience, 2004.

[65] Z. Szebenyi, F. Wolf, and B. J. Wylie. Space-efficient timeseries call-path profiling of parallel applications. In Proceedings of the Conference on High Performance Computing Networking, Storage and Analysis, 2009.

[66] A. Thusoo, J. S. Sarma, N. Jain, Z. Shao, P. Chakka, S. Anthony, H. Liu, P. Wyckoff, and R. Murthy. Hive: a warehousing solution over a map-reduce framework. Proceedings of
the VLDB Endowment (PVLDB), 2009.

[67] B. Tierney, W. Johnston, B. Crowley, G. Hoo, C. Brooks, and.
D. Gunter. The netlogger methodology for high performance
distributed systems performance analysis. In High Performance Distributed Computing (HPDC), 1998.

[68] A. Traeger, I. Deras, and E. Zadok. Darc: Dynamic analysis
of root causes of latency distributions. In ACM SIGMETRICS
Performance Evaluation Review, 2008.

[69] P. Unterbrunner, G. Giannikis, G. Alonso, D. Fauser, and
D. Kossmann. Predictable performance for unpredictable
workloads. Proceedings of the VLDB Endowment (PVLDB),
2009.

[70] J. Vetter. Dynamic statistical profiling of communication
activity in distributed applications. In ACM SIGMETRICS
Performance Evaluation Review, 2002.

[71] M. Wainwright. Chapter 2: Basic tail and concentration bounds. http://www.stat.berkeley.edu/~mjwain/
stat210b/Chap2_TailBounds_Jan22_2015.pdf.

[72] T. Wang and R. Johnson. Scalable logging through emerging
non-volatile memory. Proceedings of the VLDB Endowment
(PVLDB), 2014.

[73] J. C. Yan. Performance tuning with aims/spl minus/an automated instrumentation and monitoring system for multicomputers. In Twenty-Seventh Hawaii International Conference
(HICSS), 1994.

[74] R. J. Yang and Q. Luo. PTL: Partitioned logging for database
storage on flash solid state drives. In Web-Age Information
Management (WAIM). 2012.

[75] D. Y. Yoon, B. Mozafari, and D. P. Brown. DBSeer: Painfree database administration through workload intelligence.
Proceedings of the VLDB Endowment (PVLDB), 2015.

[76] D. Y. Yoon, N. Niu, and B. Mozafari. DBSherlock: A performance diagnostic tool for transactional databases. In ACM
Special Interest Groups on Management of Data (SIGMOD),
2016.

[77] M. Zaharia, M. Chowdhury, M. J. Franklin, S. Shenker, and
I. Stoica. Spark: Cluster computing with working sets.
USENIX Workshop on Hot Topics in Cloud Computing (HotCloud), 2010.