[1] M. J. Berger and J. Oliger, “Adaptive mesh reﬁnement for hyperbolic
partial differential equations,” Journal of computational Physics, vol. 53,
no. 3, pp. 484–512, 1984.
[2] J. Rantakokko and M. Thuné, “Parallel structured adaptive mesh reﬁnement,” in Parallel computing, pp. 147–173, Springer, 2009.
[3] M. J. Berger and P. Colella, “Local adaptive mesh reﬁnement for
shock hydrodynamics,” Journal of computational Physics, vol. 82, no. 1,
pp. 64–84, 1989.
[4] J. Bell, A. Almgren, V. Beckner, M. Day, M. Lijewski, A. Nonaka,
and W. Zhang, “Boxlib users guide,” github. com/BoxLib-Codes/BoxLib,
2012.
[5] C. Burstedde, L. C. Wilcox, and O. Ghattas, “p4est: Scalable algorithms
for parallel adaptive mesh reﬁnement on forests of octrees,” SIAM
Journal on Scientiﬁc Computing, vol. 33, no. 3, pp. 1103–1133, 2011.
[6] P. MacNeice, K. M. Olson, C. Mobarry, R. De Fainchtein, and C. Packer,
“Paramesh: A parallel adaptive mesh reﬁnement community toolkit,”
Computer physics communications, vol. 126, no. 3, pp. 330–354, 2000.
[7] G. Saxena, P. K. Jimack, and M. A. Walkley, “A Cache-aware approach
to Domain Decomposition for Stencil-based Codes,” in International
Conference on High Performance Computing and Simulation (HPCS
2016), pp. 875–885, 2016.
[8] Message Passing Interface Forum., “MPI: A Message-Passing Interface
Standard, Version 3.0.,” September 2012.
[9] A. Dubey, A. Almgren, J. Bell, M. Berzins, S. Brandt, G. Bryan,
P. Colella, D. Graves, M. Lijewski, F. Löfﬂer, et al., “A survey of
high level frameworks in block-structured adaptive mesh reﬁnement
packages,” Journal of Parallel and Distributed Computing, vol. 74,
no. 12, pp. 3217–3227, 2014.
[10] W. L. Briggs, S. F. McCormick, et al., A multigrid tutorial. Siam, 2000.
[11] L. F. Diachin, R. Hornung, P. Plassmann, and A. Wissink, “Parallel
adaptive mesh reﬁnement,” Parallel processing for scientiﬁc computing,
vol. 20, p. 143, 2006.
[12] P. Colella, D. Graves, T. Ligocki, D. Martin, D. Modiano, D. Seraﬁni,
and B. Van Straalen, “Chombo software package for amr applicationsdesign document,” 2000.
[13] A. M. Wissink, R. D. Hornung, S. R. Kohn, S. S. Smith, and N. Elliott,
“Large scale parallel structured amr calculations using the samrai
framework,” in Supercomputing, ACM/IEEE 2001 Conference, pp. 22–
22, IEEE, 2001.
[14] “BoxLib Case Study.” http://www.nersc.gov/users/computationalsystems/cori/application-porting-and-performance/application-casestudies/boxlib-case-study/. Accessed: 2017-04-31.
[15] W. Zhang, A. Almgren, M. Day, T. Nguyen, J. Shalf, and D. Unat,
“Boxlib with tiling: An adaptive mesh reﬁnement software framework,”
SIAM Journal on Scientiﬁc Computing, vol. 38, no. 5, pp. S156–S172,
2016.
[16] “MAESTRO.” https://ccse.lbl.gov/Research/MAESTRO/.
Accessed:
2017-04-16.
[17] “CASTRO.” https://ccse.lbl.gov/Research/CASTRO/. Accessed: 201704-10.
[18] “LMC.” https://ccse.lbl.gov/Research/Combustion/. Accessed: 2017-0411.
[19] “GitHub - BoxLib-Codes/BoxLib: Block-Structured AMR Framework.”
https://github.com/BoxLib-Codes/BoxLib. Accessed: 2017-04-22.
[20] G. Saxena, P. K. Jimack, and M. A. Walkley, “A quasi-cache-aware
model for optimal domain partitioning in parallel geometric multigrid,”
Concurrency and Computation: Practice and Experience, 2017. In Press.