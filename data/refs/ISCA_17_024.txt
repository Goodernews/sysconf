[1] FreePDK process design kit. http://www.eda.ncsu.edu/wiki/FreePDK.

[2] GPGPU-sim manual. http://gpgpu-sim.org/manual

[3] Mohammad Abdel-Majeed, Hyeran Jeon, Alireza Shafaei, Massoud Pedram,
and Murali Annavaram. 2017. Pilot Register File: Energy Efficient Partitioned
Register File for GPUs. In IEEE International Symposium on High Performance
Computer Architecture (HPCA ’17).

[4] AMD. AMD Graphics Cores Next (GCN) Architecture.

[5] Ali Bakhoda, George Yuan, Wilson W. L. Fung, Henry Wong, and Tor M. Aamodt.
2009. Analyzing CUDA Workloads Using a Detailed GPU Simulator. In JEEE
International Symposium on Performance Analysis of Systems and Software
(ISPASS 09). 163-174. https://doi.org/10.1109/ISPASS.2009.49 19648

[6] Martin Burtscher, Rupesh Nasre, and Keshav Pingali. 2012. A Quantitative
Study of Irregular Programs on GPUs. In Proceedings of the IEEE International
Symposium on Workload Characterization (IISWC ’ 12). TEEE Computer Society,
Washington, DC, USA, 141-151. https://doi.org/10.1109/IISWC.2012.6402918
[7] Shuai Che, Michael Boyer, Jiayuan Meng, David Tarjan, Jeremy W. Sheaffer,
Sang-Ha Lee, and Kevin Skadron. 2009. Rodinia: A Benchmark Suite for Heterogeneous Computing. In Proceedings of the 2009 IEEE International Symposium
on Workload Characterization (IISWC ’09). TEEE Computer Society, Washington,
DC, USA, 44-54. https://doi.org/10.1109/IISWC.2009.5306797

[8] Shuai Che and Kevin Skadron. 2014. BenchFriend: Correlating the Performance
of GPU Benchmarks. Int. J. High Perform. Comput. Appl. 28, 2 (May 2014),
238-250. https://doi.org/10.1177/1094342013507960

[9] Xuhao Chen, Li-Wen Chang, Christopher I. Rodrigues, Jie Lv, Zhiying Wang,
and Wen-Mei Hwu. 2014. Adaptive Cache Management for Energy-Efficient
GPU Computing. In Proceedings of the IEEE/ACM International Symposium on
Microarchitecture (MICRO-47). TEEE Computer Society, Washington, DC, USA,
343-355. https://doi.org/10.1109/MICRO.2014.11

[10] Hyojin Choi, Jaewoo Ahn, and Wonyong Sung. 2012. Reducing Off-chip Memory
Traffic by Selective Cache Management Scheme in GPGPUs. In Proceedings of
the Workshop on General Purpose Processing with Graphics Processing Units
(GPGPU-5). ACM, New York, NY, USA, 110-119. https://doi.org/10.1145/
2159430.2159443

[11] Anthony Danalis, Gabriel Marin, Collin McCurdy, Jeremy S. Meredith, Philip C.
Roth, Kyle Spafford, Vinod Tipparaju, and Jeffrey S. Vetter. 2010. The Scalable
Heterogeneous Computing (SHOC) Benchmark Suite. In Proceedings of the Workshop on General-Purpose Computation on Graphics Processing Units (GPGPU3), ACM, New York, NY, USA, 63-74. https://doi.org/10.1145/1735688.1735702
[12] Nam Duong, Dali Zhao, Taesu Kim, Rosario Cammarota, Mateo Valero, and
Alexander V. Veidenbaum. 2012. Improving Cache Management Policies Using
Dynamic Reuse Distances. In Proceedings of the 45th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO-45). TEEE Computer Society,
Washington, DC, USA, 389-400. https://doi.org/10.1109/MICRO.2012.43
[13] Kayvon Fatahalian and Mike Houston. 2008. A Closer Look at GPUs. Communication of the ACM 51, 10 (Oct. 2008), 50-57. https://doi.org/10.1145/1400181.
1400197

[14] Wilson W. L. Fung, Ivan Sham, George Yuan, and Tor M. Aamodt. 2007. Dynamic
Warp Formation and Scheduling for Efficient GPU Control Flow. In Proceedings
of the Annual IEEE/ACM International Symposium on Microarchitecture (MICRO40), TEEE Computer Society, Washington, DC, USA, 407-420. https://doi.org/10.
1109/MICRO.2007.12

[15] Bingsheng He, Wenbin Fang, Qiong Luo, Naga K. Govindaraju, and Tuyong Wang. 2008. Mars: A MapReduce Framework on Graphics Processors.
In Proceedings of the International Conference on Parallel Architectures and
Compilation Techniques (PACT ’08). ACM, New York, NY, USA, 260-269.
https://doi.org/10.1145/1454115.1454152

[16] Hynix. 1Gb GDDRS SGRAM HSGQ1H24AFR Specification. http://www.hynix.
com/datasheet/pdf/graphics/HSGQ1H24AFR(Rev1.0).pdf

[17] Aamer Jaleel, Kevin B. Theobald, Simon C. Steely, Jr., and Joel Emer. 2010.
High Performance Cache Replacement Using Re-reference Interval Prediction
(RRIP). In Proceedings of the 37th Annual International Symposium on Computer
Architecture (ISCA ’10). ACM, New York, NY, USA, 60-71. https://doi.org/10.
1145/1815961.1815971

[18] Wenhao Jia, Kelly A. Shaw, and Margaret Martonosi. 2012. Characterizing and
Improving the Use of Demand-fetched Caches in GPUs. In Proceedings of the
ACM International Conference on Supercomputing (ICS ’12), ACM, New York,
NY, USA, 15-24. https://doi.org/10.1145/2304576.2304582

[19] Onur Kayiran, Adwait Jog, Mahmut Taylan Kandemir, and Chita Ranjan Das.
2013. Neither More nor Less: Optimizing Thread-level Parallelism for GPGPUs.
In Proceedings of the 22nd International Conference on Parallel Architectures and
Compilation Techniques (PACT 13). TEEE Press, Piscataway, NJ, USA, 157-166.
http://dl.acm.org/citation.cfm?id=2523721.2523745

[20] Mazen Kharbutli and Yan Solihin. 2008. Counter-Based Cache Replacement
and Bypassing Algorithms. IEEE Trans. Comput. 57, 4 (April 2008), 433-447.
https://doi.org/10.1109/TC.2007.70816

[21] Gunjae Koo, Hyeran Jeon, and Murali Annavaram. 2015. Revealing Critical
Loads and Hidden Data Locality in GPGPU Applications. In Proceedings of the
IEEE International Symposium on Workload Characterization (IISWC ’15). TEEE
Computer Society, Washington, DC, USA, 120-129. https://doi.org/10.1109/
TISWC.2015.23

[22] Jaekyu Lee, Nagesh B. Lakshminarayana, Hyesoon Kim, and Richard Vuduc.
2010. Many-Thread Aware Prefetching Mechanisms for GPGPU Applications. In
Proceedings of the 2010 43rd Annual IEEE/ACM International Symposium on
Microarchitecture (MICRO-43). IEEE Computer Society, Washington, DC, USA,
213-224. https://doi.org/10.1109/MICRO.2010.44

[23] Minseok Lee, Seokwoo Song, Joosik Moon, John Kim, Woong Seo, Yeongon
Cho, and Soojung Ryu. 2014. Improving GPGPU resource utilization through
alternative thread block scheduling. In JEEE International Symposium on High
Performance Computer Architecture (HPCA ’14). 260-271. https://doi.org/10.
1109/HPCA.2014.6835937

[24] Jingwen Leng, Tayler Hetherington, Ahmed ElTantawy, Syed Gilani, Nam Sung
Kim, Tor M. Aamodt, and Vijay Janapa Reddi. 2013. GPUWattch: Enabling Energy Optimizations in GPGPUs. In Proceedings of the 40th Annual International
Symposium on Computer Architecture (ISCA ’13). ACM, New York, NY, USA,
487-498. https://doi.org/10.1145/2485922.2485964

[25] Chao Li, Shuaiwen Leon Song, Hongwen Dai, Albert Sidelnik, Siva Kumar Sastry
Hari, and Huiyang Zhou. 2015. Locality-Driven Dynamic GPU Cache Bypassing.
In Proceedings of the 29th ACM on International Conference on Supercomputing
(ICS ’15). ACM, New York, NY, USA, 67-77. https://doi.org/10.1145/275120S.
2751237

[26] Dong Li, Minsoo Rhu, Daniel R. Johnson, Mike O’Connor, Mattan Erez, Doug
Burger, Donald S. Fussell, and Stephen W. Keckler. 2015. Priority-Based Cache
Allocation in Throughput Processors. In JEEE International Symposium on High
Performance Computer Architecture (HPCA ’15). 89-100. https://doi.org/10.
1109/HPCA.2015.7056024

[27] Naveen Muralimanohar, Rajeev Balasubramonian, and Norman P. Jouppi. 2009.
CACTI 6.0: A Tool to Model Large Caches. Technical Report. HP Laboratories.
NVIDIA. NVIDIA CUDA C Programming Guide.

[28] NVIDIA. NVIDIA’s Next Generation CUDA Compute Architecture: Fermi.
NVIDIA. NVIDIA’s Next Generation CUDA Compute Architecture: Kepler
GK110.

[29] Yunho Oh, Keunsoo Kim, Myung Kuk Yoon, Jong Hyun Park, Yongjun Park,
Won Woo Ro, and Murali Annavaram. 2016. APRES: Improving Cache Efficiency
by Exploiting Load Characteristics on GPUs. In Proceedings of the 43rd International Symposium on Computer Architecture (ISCA ’16). IEEE Press, Piscataway,
NJ, USA, 191-203. https://doi.org/10.1109/ISCA.2016.26

[30] Minsoo Rhu, Michael Sullivan, Jingwen Leng, and Mattan Erez. 2013. A Localityaware Memory Hierarchy for Energy-efficient GPU Architectures. In Proceedings
of the IEEE/ACM International Symposium on Microarchitecture (MICRO-46).
ACM, New York, NY, USA, 86-98. https://doi.org/10.1145/2540708.2540717
[31] Timothy G. Rogers, Mike O’Connor, and Tor M. Aamodt. 2012. Cache-Conscious
Wavefront Scheduling. In Proceedings of the IEEE/ACM International Symposium
on Microarchitecture (MICRO-45). IEEE Computer Society, Washington, DC,
USA, 72-83. https://doi.org/10.1109/MICRO.2012.16

[32] Timothy G. Rogers, Mike O’Connor, and Tor M. Aamodt. 2013. Divergence-aware
Warp Scheduling. In Proceedings of the IEEE/ACM International Symposium
on Microarchitecture (MICRO-46). ACM, New York, NY, USA, 99-110. https:
/Aoi.org/10.1145/2540708.2540718

[33] Ankit Sethia, Ganesh Dasika, Mehrzad Samadi, and Scott Mahlke. 2013.
APOGEE: Adaptive Prefetching on GPUs for Energy Efficiency. In Proceedings of the 22nd International Conference on Parallel Architectures and Compilation Techniques (PACT ’13). IEEE Press, Piscataway, NJ, USA, 73-82.
http://dl.acm.org/citation.cfim ?id=2523721.2523735

[34] John A. Stratton, Christopher Rodrigues, I-Jui Sung, Nady Obeid, Li-Wen Chang,
Nasser Anssari, Geng Daniel Liu, and Wen-mei W. Hwe. 2012. Parboil: A Revised
Benchmark Suite for Scientific and Commercial Throughput Computing. Technical
Report. Center for Reliable and High-Performance Computing, University of
Illinois at Urbana-Champaign.

[35] Yingying Tian, Sooraj Puthoor, Joseph L. Greathouse, Bradford M. Beckmann,
and Daniel A. Jimenez. 2015. Adaptive GPU Cache Bypassing Categories and
Subject Descriptors. In Proceedings of the Workshop on General Purpose Processing Using GPUs (GPGPU-8). 36-47.

[36] Steven J. E. Wilton and Norman P. Jouppi. 1996. CACTI: An Enhanced Cache
Access and Cycle Time Model. JEEE Journal of Solid-State Circuits 31, 5 (May
1996), 677-688.

[37] Xiaolong Xie, Yun Liang, Guangyu Sun, and Deming Chen. 2013. An Efficient
Compiler Framework for Cache Bypassing on GPUs. In Proceedings of the International Conference on Computer-Aided Design (ICCAD ’13). TEEE Press, Piscataway, NJ, USA, 516-523. http://dl.acm.org/citation.cfm?id=2561828.2561929
[38] Xiaolong Xie, Yun Liang, Yu Wang, Guangyu Sun, and Tao Wang. 2015. Coordinated static and dynamic cache bypassing for GPUs. In JEEE International
Symposium on High Performance Computer Architecture (HPCA ’15). 76-88.
https://doi.org/10.1109/HPCA.2015.7056023

[39] Qiumin Xu, Hyeran Jeon, and Murali Annavaram. 2014. Graph processing on
GPUs: Where are the bottlenecks?. In Proceedings of the IEEE International
Symposium on Workload Characterization (IISWC ’14). 140-149. https://doi.org/
10.1109/TISWC.2014.6983053

[40] George L. Yuan, Ali Bakhoda, and Tor M. Aamodt. 2009. Complexity Effective Memory Access Scheduling for Many-core Accelerator Architectures.
In Proceedings of the 42Nd Annual IEEE/ACM International Symposium on
Microarchitecture (MICRO-42). ACM, New York, NY, USA, 34-44. https:
/doi.org/10.1145/1669112.1669119

[41] Mohammed Zackriya V and Harish M. Kittur. 2016. Precharge-Free, Low-Power
Content-Addressable Memory. IEEE Transactions on Very Large Scale Integration
(VLSI) Systems PP, 99 (2016), 1-8. https://doi.org/10.1109/TVLSI.2016.2518219