[1] Libcuckoo library. https://github.com/efficient/libcuckoo.
[2] Symantec. 2010 State of the Data Center Global Data. http://www.symantec.com/content/en/us/about/media /pdfs/Symantec DataCenter10 Report Global.pdf (Jan. 2010).
[3] Traces and Snapshots Public Archive.
http://tracer.filesystems.org (July 2014).
[4] Bag-of-words data set. http://archive.ics.uci.edu/ml/datasets
/Bag+of+Words (Mar. 2008).
[5] A` LVAREZ, C., BLESA, M., AND SERNA, M. Universal
Stability of Undirected Graphs in the Adversarial Queueing
Model. In Proceedings of the fourteenth annual ACM symposium
on Parallel algorithms and architectures (2002), ACM, pp. 183–
197.
[6] ARMBRUST, M., FOX, A., GRIFFITH, R., JOSEPH, A. D.,
KATZ, R., KONWINSKI, A., LEE, G., PATTERSON, D.,
RABKIN, A., STOICA, I., ET AL. A View of Cloud Computing.
Communications of the ACM 53, 4 (2010), 50–58.
[7] BELL, G., HEY, T., AND SZALAY, A. Beyond the Data Deluge.
Science 323, 5919 (2009), 1297–1298.
[8] BRESLOW, A. D., ZHANG, D. P., GREATHOUSE, J. L.,
JAYASENA, N., TULLSEN, D. M., XU, L., CAVAZOS, J.,
ALVAREZ, M. A., MORALES, J. A., AGUILERA, P., ET AL.
Horton Tables: Fast Hash Tables for In-Memory Data-Intensive
Computing. USENIX Association, pp. 281–294.
[9] BUTTCHER ¨ , S., AND CLARKE, C. L. A Security Model for FullText File System Search in Multi-User Environments. In Proc.
FAST (2005).
[10] BYKOV, S., GELLER, A., KLIOT, G., LARUS, J. R., PANDYA,
R., AND THELIN, J. Orleans: Cloud Computing for Everyone.
In Proc. SOCC (2011), ACM, p. 16.
[11] COOPER, B. F., SILBERSTEIN, A., TAM, E., RAMAKRISHNAN,
R., AND SEARS, R. Benchmarking Cloud Serving Systems with
YCSB. In Proc. SoCC (2010), ACM, pp. 143–154.
[12] DAVID, T., GUERRAOUI, R., AND TRIGONAKIS, V. Asynchronized Concurrency: The Secret to Scaling Concurrent Search
Data Structures. ACM SIGARCH Computer Architecture News
43, 1 (2015), 631–644.
[13] DEBNATH, B. K., SENGUPTA, S., AND LI, J. ChunkStash:
Speeding up Inline Storage Deduplication using Flash Memory.
In Proc. USENIX ATC (2010).
[14] DEVROYE, L., AND MORIN, P. Cuckoo hashing: Further
analysis. Information Processing Letters 86, 4 (2003), 215–219.
[15] ERLINGSSON, U., MANASSE, M., AND MCSHERRY, F. A Cool
and Practical Alternative to Traditional Hash Tables. In Proc.
WDAS (2006).
[16] FAN, B., ANDERSEN, D. G., AND KAMINSKY, M. MemC3:
Compact and Concurrent MemCache with Dumber Caching and
Smarter Hashing. In Proc. NSDI (2013).
[17] FAN, B., ANDERSEN, D. G., KAMINSKY, M., AND MITZENMACHER, M. D. Cuckoo Filter: Practically Better Than Bloom.
In Proc. CoNext (2014), ACM, pp. 75–88.
[18] FAN, L., CAO, P., ALMEIDA, J., AND BRODER, A. Z. Summary
Cache: A Scalable Wide-Area Web Cache Sharing Protocol.
IEEE/ACM Transactions on Networking (TON) 8, 3 (2000), 281–
293.
[19] FRIEZE, A., MELSTED, P., AND MITZENMACHER, M. An
Analysis of Random-Walk Cuckoo Hashing. In Approximation,
Randomization, and Combinatorial Optimization. Algorithms
and Techniques. Springer, 2009, pp. 490–503.
[20] GABOW, H. N., AND WESTERMANN, H. H. Forests, frames,
and games: Algorithms for matroid sums and applications.
Algorithmica 7, 1 (1992), 465–497.
[21] GANTZ, J., AND REINSEL, D. The digital universe in 2020: Big
data, bigger digital shadows, and biggest growth in the far east.
IDC iView: IDC Analyze the Future 2007 (2012), 1–16.
[22] HSU, C.-H., ZHANG, Y., LAURENZANO, M. A., MEISNER, D.,
WENISCH, T., MARS, J., TANG, L., AND DRESLINSKI, R. G.
Adrenaline: Pinpointing and Reining in Tail Queries with Quick
Voltage Boosting. In Proc. HPCA (2015), IEEE, pp. 271–282.
[23] HUA, Y., JIANG, H., ZHU, Y., FENG, D., AND TIAN,
L. Smartstore: A New Metadata Organization Paradigm with
Semantic-Awareness for Next-Generation File Systems. In Proc.
SC (2009), ACM.
[24] HUA, Y., XIAO, B., AND LIU, X. Nest: Locality-aware
Approximate Query Service for Cloud Computing. In Proc.
INFOCOM (2013), IEEE, pp. 1303–1311.
[25] HUANG, H. H., ZHANG, N., WANG, W., DAS, G., AND
SZALAY, A. S. Just-in-Time Analytics on Large File Systems.
IEEE Transactions on Computers 61, 11 (2012), 1651–1664.
[26] HUSTON, L., SUKTHANKAR, R., WICKREMESINGHE, R.,
SATYANARAYANAN, M., GANGER, G. R., RIEDEL, E., AND
AILAMAKI, A. Diamond: A Storage Architecture for Early
Discard in Interactive Search. In Proc. FAST (2004), pp. 73–86.
[27] JANAPA REDDI, V., LEE, B. C., CHILIMBI, T., AND VAID, K.
Web Search Using Mobile Cores: Quantifying and Mitigating the
Price of Efficiency. In Proc. ISCA (2010), pp. 314–325.
[28] KIRSCH, A., AND MITZENMACHER, M. The Power of Qne
Move: Hashing Schemes for Hardware. IEEE/ACM Transactions
on Networking 18, 6 (2010), 1752–1765.
[29] KIRSCH, A., MITZENMACHER, M., AND WIEDER, U. More
Robust Hashing: Cuckoo Hashing with a Stash. SIAM Journal
on Computing 39, 4 (2009), 1543–1561.
[30] KNUTH, D. E. The Art of Computer Programming: Sorting and
Searching, vol. 3. Pearson Education, 1998.
[31] KRUSKAL, C. P., RUDOLPH, L., AND SNIR, M. Efficient
parallel algorithms for graph problems. Algorithmica 5, 1 (1990),
43–64.
[32] KUTZELNIGG, R. Bipartite Random Graphs and Cuckoo
Hashing. In Fourth Colloquium on Mathematics and Computer
Science Algorithms, Trees, Combinatorics and Probabilities
(2006), Discrete Mathematics and Theoretical Computer Science,
pp. 403–406.
[33] LAM, H., LIU, Z., MITZENMACHER, M., SUN, X., AND
WANG, Y. Information Dissemination via Random Walks in dDimensional Space. In Proc. SODA (2012), SIAM, pp. 1612–
1622.
[34] LEUNG, A. W., SHAO, M., BISSON, T., PASUPATHY, S., AND
MILLER, E. L. Spyglass: Fast, Scalable Metadata Search for
Large-Scale Storage Systems. In Proc. FAST (2009), pp. 153–
166.
[35] LI, Q., HUA, Y., HE, W., FENG, D., NIE, Z., AND SUN,
Y. Necklace: An Efficient Cuckoo Hashing Scheme for Cloud
Storage Services. In Proc. IWQoS (2014), IEEE, pp. 153–158.
[36] LI, X., ANDERSEN, D. G., KAMINSKY, M., AND FREEDMAN,
M. J. Algorithmic Improvements for Fast Concurrent Cuckoo
Hashing. In Proc. EuroSys (2014), ACM.
[37] LILLIBRIDGE, M., ESHGHI, K., BHAGWAT, D., DEOLALIKAR,
V., TREZIS, G., AND CAMBLE, P. Sparse Indexing: Large Scale,
Inline Deduplication Using Sampling and Locality. In Proc. FAST
(2009), pp. 111–123.
[38] LIU, L., XU, L., WU, Y., YANG, G., AND GANGER, G. R.
SmartScan: Efficient Metadata Crawl for Storage Management
Metadata Querying in Large File Systems. Parallel Data
Laboratory (2010), 1–17.
[2] Symantec. 2010 State of the Data Center Global Data. http://www.symantec.com/content/en/us/about/media /pdfs/Symantec DataCenter10 Report Global.pdf (Jan. 2010).
[3] Traces and Snapshots Public Archive.
http://tracer.filesystems.org (July 2014).
[4] Bag-of-words data set. http://archive.ics.uci.edu/ml/datasets
/Bag+of+Words (Mar. 2008).
[5] A` LVAREZ, C., BLESA, M., AND SERNA, M. Universal
Stability of Undirected Graphs in the Adversarial Queueing
Model. In Proceedings of the fourteenth annual ACM symposium
on Parallel algorithms and architectures (2002), ACM, pp. 183–
197.
[6] ARMBRUST, M., FOX, A., GRIFFITH, R., JOSEPH, A. D.,
KATZ, R., KONWINSKI, A., LEE, G., PATTERSON, D.,
RABKIN, A., STOICA, I., ET AL. A View of Cloud Computing.
Communications of the ACM 53, 4 (2010), 50–58.
[7] BELL, G., HEY, T., AND SZALAY, A. Beyond the Data Deluge.
Science 323, 5919 (2009), 1297–1298.
[8] BRESLOW, A. D., ZHANG, D. P., GREATHOUSE, J. L.,
JAYASENA, N., TULLSEN, D. M., XU, L., CAVAZOS, J.,
ALVAREZ, M. A., MORALES, J. A., AGUILERA, P., ET AL.
Horton Tables: Fast Hash Tables for In-Memory Data-Intensive
Computing. USENIX Association, pp. 281–294.
[9] BUTTCHER ¨ , S., AND CLARKE, C. L. A Security Model for FullText File System Search in Multi-User Environments. In Proc.
FAST (2005).
[10] BYKOV, S., GELLER, A., KLIOT, G., LARUS, J. R., PANDYA,
R., AND THELIN, J. Orleans: Cloud Computing for Everyone.
In Proc. SOCC (2011), ACM, p. 16.
[11] COOPER, B. F., SILBERSTEIN, A., TAM, E., RAMAKRISHNAN,
R., AND SEARS, R. Benchmarking Cloud Serving Systems with
YCSB. In Proc. SoCC (2010), ACM, pp. 143–154.
[12] DAVID, T., GUERRAOUI, R., AND TRIGONAKIS, V. Asynchronized Concurrency: The Secret to Scaling Concurrent Search
Data Structures. ACM SIGARCH Computer Architecture News
43, 1 (2015), 631–644.
[13] DEBNATH, B. K., SENGUPTA, S., AND LI, J. ChunkStash:
Speeding up Inline Storage Deduplication using Flash Memory.
In Proc. USENIX ATC (2010).
[14] DEVROYE, L., AND MORIN, P. Cuckoo hashing: Further
analysis. Information Processing Letters 86, 4 (2003), 215–219.
[15] ERLINGSSON, U., MANASSE, M., AND MCSHERRY, F. A Cool
and Practical Alternative to Traditional Hash Tables. In Proc.
WDAS (2006).
[16] FAN, B., ANDERSEN, D. G., AND KAMINSKY, M. MemC3:
Compact and Concurrent MemCache with Dumber Caching and
Smarter Hashing. In Proc. NSDI (2013).
[17] FAN, B., ANDERSEN, D. G., KAMINSKY, M., AND MITZENMACHER, M. D. Cuckoo Filter: Practically Better Than Bloom.
In Proc. CoNext (2014), ACM, pp. 75–88.
[18] FAN, L., CAO, P., ALMEIDA, J., AND BRODER, A. Z. Summary
Cache: A Scalable Wide-Area Web Cache Sharing Protocol.
IEEE/ACM Transactions on Networking (TON) 8, 3 (2000), 281–
293.
[19] FRIEZE, A., MELSTED, P., AND MITZENMACHER, M. An
Analysis of Random-Walk Cuckoo Hashing. In Approximation,
Randomization, and Combinatorial Optimization. Algorithms
and Techniques. Springer, 2009, pp. 490–503.
[20] GABOW, H. N., AND WESTERMANN, H. H. Forests, frames,
and games: Algorithms for matroid sums and applications.
Algorithmica 7, 1 (1992), 465–497.
[21] GANTZ, J., AND REINSEL, D. The digital universe in 2020: Big
data, bigger digital shadows, and biggest growth in the far east.
IDC iView: IDC Analyze the Future 2007 (2012), 1–16.
[22] HSU, C.-H., ZHANG, Y., LAURENZANO, M. A., MEISNER, D.,
WENISCH, T., MARS, J., TANG, L., AND DRESLINSKI, R. G.
Adrenaline: Pinpointing and Reining in Tail Queries with Quick
Voltage Boosting. In Proc. HPCA (2015), IEEE, pp. 271–282.
[23] HUA, Y., JIANG, H., ZHU, Y., FENG, D., AND TIAN,
L. Smartstore: A New Metadata Organization Paradigm with
Semantic-Awareness for Next-Generation File Systems. In Proc.
SC (2009), ACM.
[24] HUA, Y., XIAO, B., AND LIU, X. Nest: Locality-aware
Approximate Query Service for Cloud Computing. In Proc.
INFOCOM (2013), IEEE, pp. 1303–1311.
[25] HUANG, H. H., ZHANG, N., WANG, W., DAS, G., AND
SZALAY, A. S. Just-in-Time Analytics on Large File Systems.
IEEE Transactions on Computers 61, 11 (2012), 1651–1664.
[26] HUSTON, L., SUKTHANKAR, R., WICKREMESINGHE, R.,
SATYANARAYANAN, M., GANGER, G. R., RIEDEL, E., AND
AILAMAKI, A. Diamond: A Storage Architecture for Early
Discard in Interactive Search. In Proc. FAST (2004), pp. 73–86.
[27] JANAPA REDDI, V., LEE, B. C., CHILIMBI, T., AND VAID, K.
Web Search Using Mobile Cores: Quantifying and Mitigating the
Price of Efficiency. In Proc. ISCA (2010), pp. 314–325.
[28] KIRSCH, A., AND MITZENMACHER, M. The Power of Qne
Move: Hashing Schemes for Hardware. IEEE/ACM Transactions
on Networking 18, 6 (2010), 1752–1765.
[29] KIRSCH, A., MITZENMACHER, M., AND WIEDER, U. More
Robust Hashing: Cuckoo Hashing with a Stash. SIAM Journal
on Computing 39, 4 (2009), 1543–1561.
[30] KNUTH, D. E. The Art of Computer Programming: Sorting and
Searching, vol. 3. Pearson Education, 1998.
[31] KRUSKAL, C. P., RUDOLPH, L., AND SNIR, M. Efficient
parallel algorithms for graph problems. Algorithmica 5, 1 (1990),
43–64.
[32] KUTZELNIGG, R. Bipartite Random Graphs and Cuckoo
Hashing. In Fourth Colloquium on Mathematics and Computer
Science Algorithms, Trees, Combinatorics and Probabilities
(2006), Discrete Mathematics and Theoretical Computer Science,
pp. 403–406.
[33] LAM, H., LIU, Z., MITZENMACHER, M., SUN, X., AND
WANG, Y. Information Dissemination via Random Walks in dDimensional Space. In Proc. SODA (2012), SIAM, pp. 1612–
1622.
[34] LEUNG, A. W., SHAO, M., BISSON, T., PASUPATHY, S., AND
MILLER, E. L. Spyglass: Fast, Scalable Metadata Search for
Large-Scale Storage Systems. In Proc. FAST (2009), pp. 153–
166.
[35] LI, Q., HUA, Y., HE, W., FENG, D., NIE, Z., AND SUN,
Y. Necklace: An Efficient Cuckoo Hashing Scheme for Cloud
Storage Services. In Proc. IWQoS (2014), IEEE, pp. 153–158.
[36] LI, X., ANDERSEN, D. G., KAMINSKY, M., AND FREEDMAN,
M. J. Algorithmic Improvements for Fast Concurrent Cuckoo
Hashing. In Proc. EuroSys (2014), ACM.
[37] LILLIBRIDGE, M., ESHGHI, K., BHAGWAT, D., DEOLALIKAR,
V., TREZIS, G., AND CAMBLE, P. Sparse Indexing: Large Scale,
Inline Deduplication Using Sampling and Locality. In Proc. FAST
(2009), pp. 111–123.
[38] LIU, L., XU, L., WU, Y., YANG, G., AND GANGER, G. R.
SmartScan: Efficient Metadata Crawl for Storage Management
Metadata Querying in Large File Systems. Parallel Data
Laboratory (2010), 1–17.
