REFERENCES
[1] L. S. Blackford et al, “An updated set of basic linear
algebra subprograms (BLAS),” ACM Trans. Math. Softw.,
vol. 28, no. 2, pp. 135-151, Jun. 2002. [Online]. Available:
http://doi.acm.org/10.1145/567806.567807

[2] E. Anderson et al., LAPACK Users’ guide, 3rd ed. SIAM,
1999.

[3] Y. Saad, Iterative Methods for Sparse Linear Systems, 2nd ed.
SIAM, 2003.

[4] H. Anzt, J. Dongarra, G. Flegar, and E. S. Quintana-Orti,
“Batched Gauss-Jordan elimination for block-Jacobi preconditioner generation on GPUs,” in 8th Int. Workshop Programming Models & Appl. for Multicores & Manycores, set.
PMAM, 2017, pp. 1-10.

[5] E. Chow and J. Scott, “On the use of iterative methods and
blocking for solving sparse triangular systems in incomplete
factorization preconditioning,” Rutherford Appleton Laboratory, Tech. Rep. Technical Report RAL-P-2016-006, 2016.

[6] G. Golub and C. V. Loan, Matrix Computations, 3rd ed.
Baltimore: The Johns Hopkins University Press, 1996.

[7] H. Anzt, J. Dongarra, G. Flegar, E. S. Quintana-Orti, and
A. E. Tomas, “Variable-size batched gauss-huard for blockjacobi preconditioning,” Procedia Computer Science, vol.
108, pp. 1783 — 1792, 2017, International Conference on
Computational Science (CCS 2017).

[8] P. Huard, “La méthode simplex sans inverse explicite,” EDB
Bull, Direction Etudes Rech. Sér. C Math, Inform. 2, pp. 7998, 1979.

[9] CUDA Toolkit v8.0, NVIDIA Corporation, March 2017.

[10] Innovative Computing Lab, “Software distribution of
MAGMA version 2.0,” http://icl.cs.utk.edu/magma/, 2016.

[11] H. Anzt, J. Dongarra, M. Kreutzer, G. Wellein, and
M. Koehler, “Efficiency of General Krylov Methods on
GPUs — An Experimental Study,” in 2016 IEEE International
Parallel and Distributed Processing Symposium Workshops
(IPDPSW), 2016, pp. 683-691.

[12] T. A. Davis and Y. Hu, “The University of Florida Sparse
Matrix Collection,’ ACM Trans. on Mathematical Software,
vol. 38, no. 1, pp. 1-25, 2011.

[13] T. J. Dekker, W. Hoffmann, and K. Potma, “Stability of the
Gauss-Huard algorithm with partial pivoting,” Computing,
vol. 58, pp. 225-244, 1997.