[1] Wei-Ngan Chin, Cristina David, Huu Hai Nguyen, and Shengchao Qin. 2012. Automated Verification of Shape, Size and

Bag Properties via User-defined Predicates in Separation Logic. Sci. Comput. Program. (2012), 1006-1036.



[2] Adam Chlipala. 2011. Mostly-automated Verification of Low-level Programs in Computational Separation Logic. In Proceedings of the 32nd ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’11). ACM,

New York, NY, USA, 234-245. https://doi.org/10.1145/1993498.1993526



[3] Ernie Cohen, Markus Dahlweid, Mark A. Hillebrand, Dirk Leinenbach, Michal Moskal, Thomas Santen, Wolfram Schulte,

and Stephan Tobies. 2009. VCC: A Practical System for Verifying Concurrent C. In TPHOLs’09 (LNCS), Vol. 5674. Springer,

Berlin, Heidelberg, 23-42.



[4] Benjamin Delaware, Clément Pit-Claudel, Jason Gross, and Adam Chlipala. 2015. Fiat: Deductive Synthesis of Abstract

Data Types in a Proof Assistant. In Proceedings of the 42nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of

Programming Languages (POPL ’15). ACM, New York, NY, USA, 689-700. https://doi.org/10.1145/2676726.2677006



[5] Ankush Desai, Pranav Garg, and P. Madhusudan. 2014. Natural Proofs for Asynchronous Programs Using Almostsynchronous Reductions. In Proceedings of the 2014 ACM International Conference on Object Oriented Programming Systems Languages &amp; Applications (OOPSLA ’14). ACM, New York, NY, USA, 709-725. https://doi.org/10.1145/2660193.

2660211



[6] John K. Feser, Swarat Chaudhuri, and Isil Dillig. 2015. Synthesizing Data Structure Transformations from Input-output

Examples. In Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation

(PLDI ’15), ACM, New York, NY, USA, 229-239. https://doi.org/10.1145/2737924.2737977



[7] Peter Hawkins, Alex Aiken, Kathleen Fisher, Martin Rinard, and Mooly Sagiv. 2011. Data Representation Synthesis. In

Proceedings of the 32Nd ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’11).

ACM, New York, NY, USA, 38-49. https://doi.org/10.1145/1993498,1993504



[8] Radu Iosif, Adam Rogalewicz, and Jiri Simacek. 2013. The Tree Width of Separation Logic with Recursive Definitions. In

CADE-24, Springer, Berlin, Heidelberg, 21-38.



[9] Bart Jacobs, Jan Smans, Pieter Philippaerts, Frédéric Vogels, Willem Penninckx, and Frank Piessens. 2011. VeriFast: a

powerful, sound, predictable, fast verifier for C and Java. In NFM’11. Springer, Berlin, Heidelberg, 41-55.



[10] Etienne Kneuss, Ivan Kuraj, Viktor Kuncak, and Philippe Suter. 2013. Synthesis Modulo Recursive Functions. In Proceedings of the 2013 ACM SIGPLAN International Conference on Object Oriented Programming Systems Languages &amp;#38;

Applications (OOPSLA ’13). ACM, New York, NY, USA, 407-426. https://doi.org/10.1145/2509136.2509555



[11] Tal Lev-Ami, Thomas Reps, Mooly Sagiv, and Reinhard Wilhelm. 2000. Putting Static Analysis to Work for Verification: A

Case Study. In Proceedings of the 2000 ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA

’00). ACM, New York, NY, USA, 26-38. https://doi.org/10.1145/347324.348031



[12] Tal Lev-Ami and Shmuel Sagiv. 2000. TVLA: A System for Implementing Static Analyses. In SAS ’00 (LNCS), Vol. 1824.

Springer, Berlin, Heidelberg, 280-301. https://doi.org/10.1007/978-3-540-45099-3_15



[13] P. Madhusudan, Gennaro Parlato, and Xiaokang Qiu. 2011. Decidable Logics Combining Heap Structures and Data. In

Proceedings of the 38th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL ’11).

ACM, New York, NY, USA, 611-622. https://doi.org/10.1145/1926385.1926455



[14] P, Madhusudan, Xiaokang Qiu, and Andrei Stefanescu. 2012. Recursive Proofs for Inductive Tree Data-structures. In Proceedings of the 39th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL ’12). ACM,

New York, NY, USA, 123-136. https://doi.org/10.1145/2103656.2103673



[15] Zohar Manna and Richard Waldinger. 1979. Synthesis: Dreams => Programs. IEEE Transactions on Software Engineering 5,

4 (1979), 294-328,



[16] Peter W. O’Hearn, John C. Reynolds, and Hongseok Yang. 2001. Local Reasoning about Programs that Alter Data Structures.

In CSL’01 (LNCS), Vol. 2142. Springer, Berlin, Heidelberg, 1-19.



[17] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 65. Publication date: October 2017.

65:28 Xiaokang Qiu and Armando Solar-Lezama



[18] Edgar Pek, Xiaokang Qiu, and P. Madhusudan. 2014. Natural Proofs for Data Structure Manipulation in C Using Separation

Logic. In Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI

’14), ACM, New York, NY, USA, 440-451. https://doi.org/10.1145/2594291.2594325



[19] Nadia Polikarpova, Ivan Kuraj, and Armando Solar-Lezama. 2016. Program Synthesis from Polymorphic Refinement Types.

In Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’16).

ACM, New York, NY, USA, 522-538. https://doi.org/10.1145/2908080.2908093



[20] Xiaokang Qiu, Pranav Garg, Andrei $tefanescu, and Parthasarathy Madhusudan. 2013. Natural Proofs for Structure, Data,

and Separation. In Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’13). ACM, New York, NY, USA, 231-242. https://doi.org/10.1145/2491956.2462169



[21] John C. Reynolds. 2002. Separation logic: a logic for shared mutable data structures. In Proceedings 17th Annual IEEE

Symposium on Logic in Computer Science. IEEE, 55-74. https://doi.org/10.1109/LICS.2002.1029817



[22] Rishabh Singh and Armando Solar-Lezama. 2011. Synthesizing Data Structure Manipulations from Storyboards. In Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering

(ESEC/FSE ’11). ACM, New York, NY, USA, 289-299. https://doi.org/10.1145/2025113.2025153



[23] Armando Solar-Lezama, Liviu Tancau, Rastislav Bodik, Sanjit Seshia, and Vijay Saraswat. 2006. Combinatorial Sketching for

Finite Programs. In Proceedings of the 12th International Conference on Architectural Support for Programming Languages

and Operating Systems (ASPLOS XII). ACM, New York, NY, USA, 404-415. https://doi.org/10.1145/1168857.1168907



[24] Saurabh Srivastava, Sumit Gulwani, and Jeffrey S. Foster. 2010. From Program Verification to Program Synthesis. In Proceedings of the 37th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL 10). ACM,

New York, NY, USA, 313-326. https://doi.org/10.1145/1706299.1706337



[25] Philippe Suter, Ali Sinan Kéksal, and Viktor Kuncak. 2011. Satisfiability Modulo Recursive Programs. In SAS’11 (LNCS),

Eran Yahav (Ed.), Vol. 6887. Springer, Berlin, Heidelberg, 298-315.



[26] Emina Torlak and Rastislav Bodik. 2014. A Lightweight Symbolic Virtual Machine for Solver-aided Host Languages. In

Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’14). ACM,

New York, NY, USA, 530-541. https://doi.org/10.1145/2594291.2594340



[27] Martin Vechev and Eran Yahav. 2008. Deriving Linearizable Fine-grained Concurrent Objects. In Proceedings of the 29th

ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’08). ACM, New York, NY, USA,

125-135. https://doi.org/10.1145/1375581.1375598



[28] Martin T. Vechev, Eran Yahav, David F. Bacon, and Noam Rinetzky. 2007. CGCExplorer: A Semi-automated Search Procedure for Provably Correct Concurrent Collectors. In Proceedings of the 28th ACM SIGPLAN Conference on Programming

Language Design and Implementation (PLDI ’07). ACM, New York, NY, USA, 456-467. https://doi.org/10.1145/1250734.

1250787



[29] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 65. Publication date: October 2017.
