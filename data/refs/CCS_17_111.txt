[1] 2015. ChaCha20 and Poly1305 for IETF Protocols. IETF RFC 7539. (2015).
[2] 2016. Elliptic Curves for Security. IETF RFC 7748. (2016).
[3] 2017. Edwards-Curve Digital Signature Algorithm (EdDSA) . IETF RFC 8032.

[4] 2017. The Transport Layer Security (TLS) Protocol Version 1.3. IETF Internet

(2017).

Draft 20. (2017).

[5] Danel Ahman, Cătălin Hriţcu, Kenji Maillard, Guido Martínez, Gordon Plotkin,
Jonathan Protzenko, Aseem Rastogi, and Nikhil Swamy. 2017. Dijkstra Monads for
Free. In 44th ACM SIGPLAN Symposium on Principles of Programming Languages
(POPL). ACM, 515–529. https://doi.org/10.1145/3009837.3009878

[6] José Bacelar Almeida, Manuel Barbosa, Gilles Barthe, and François Dupres-
soir. 2015. Verifiable side-channel security of cryptographic implementations:
constant-time MEE-CBC.
IACR Cryptology ePrint Archive 2015 (2015), 1241.
http://eprint.iacr.org/2015/1241

[7] José Bacelar Almeida, Manuel Barbosa, Gilles Barthe, François Dupressoir, and
Michael Emmi. 2016. Verifying Constant-Time Implementations. In USENIX
Security Symposium. 53–70.

[8] Andrew W Appel. 2015. Verification of a cryptographic primitive: SHA-256. ACM
Transactions on Programming Languages and Systems (TOPLAS) 37, 2 (2015), 7.
[9] Gilles Barthe, Gustavo Betarte, Juan Campo, Carlos Luna, and David Pichardie.
2014. System-level non-interference for constant-time cryptography. In Pro-
ceedings of the 2014 ACM SIGSAC Conference on Computer and Communications
Security. ACM, 1267–1279.

[10] Gilles Barthe, Benjamin Grégoire, Sylvain Heraud, and Santiago Zanella Béguelin.
2011. Computer-aided security proofs for the working cryptographer. In Annual
Cryptology Conference. 71–90.

[11] David Benjamin. 2016. poly1305-x86.pl produces incorrect output. https://mta.

openssl.org/pipermail/openssl-dev/2016-March/006161. (2016).

[12] Lennart Beringer, Adam Petcher, Katherine Q. Ye, and Andrew W. Appel. 2015.
Verified Correctness and Security of OpenSSL HMAC. In USENIX Security Sym-
posium. 207–221.

[13] Daniel J. Bernstein. 2005. The Poly1305-AES Message-Authentication Code. In

Fast Software Encryption (FSE). 32–49.

[14] Daniel J Bernstein. 2006. Curve25519: new Diffie-Hellman speed records. In

Public Key Cryptography-PKC 2006. Springer, 207–228.
[15] Daniel J Bernstein. 2008. ChaCha, a variant of Salsa20.
[16] Daniel J Bernstein, Niels Duif, Tanja Lange, Peter Schwabe, and Bo-Yin Yang.
High-speed high-security signatures. Journal of Cryptographic Engineering (????),
1–13.

[17] Daniel J Bernstein, Tanja Lange, and Peter Schwabe. 2012. The security impact
of a new cryptographic library. In International Conference on Cryptology and
Information Security in Latin America (LATINCRYPT). Springer, 159–176.

[18] Daniel J Bernstein and Peter Schwabe. 2012. NEON crypto. In International
Workshop on Cryptographic Hardware and Embedded Systems. Springer, 320–339.
[19] Daniel J Bernstein, Bernard Van Gastel, Wesley Janssen, Tanja Lange, Peter
Schwabe, and Sjaak Smetsers. 2014. TweetNaCl: A crypto library in 100 tweets. In
International Conference on Cryptology and Information Security in Latin America
(LATINCRYPT). Springer, 64–83.

[20] Karthikeyan Bhargavan, Antoine Delignat-Lavaud, Cédric Fournet, Catalin
Hritcu, Jonathan Protzenko, Tahina Ramananandro, Aseem Rastogi, Nikhil
Swamy, Peng Wang, Santiago Zanella-Béguelin, and Jean-Karim Zinzindohoué.
2017. Verified Low-Level Programming Embedded in F*. In ACM SIGPLAN
International Conference on Functional Programming (ICFP).

[21] Karthikeyan Bhargavan, Cédric Fournet, Markulf Kohlweiss, Alfredo Pironti, and
Pierre-Yves Strub. 2013. Implementing TLS with Verified Cryptographic Security.
In IEEE Symposium on Security & Privacy (Oakland). 445–462.

[22] Hanno Böck. 2016. Wrong results with Poly1305 functions. https://mta.openssl.

org/pipermail/openssl-dev/2016-March/006413. (2016).

Session H4:  Formal VerificationCCS’17, October 30-November 3, 2017, Dallas, TX, USA1802[23] Barry Bond, Chris Hawblitzel, Manos Kapritsos, K. Rustan M. Leino, Jacob R.
Lorch, Bryan Parno, Ashay Rane, Srinath Setty, and Laure Thompson. 2017. Vale:
Verifying High-Performance Cryptographic Assembly Code. In Proceedings of
the USENIX Security Symposium.

[24] Billy B Brumley, Manuel Barbosa, Dan Page, and Frederik Vercauteren. 2012.
Practical realisation and elimination of an ECC-related software bug attack. In
Topics in Cryptology–CT-RSA 2012. Springer, 171–186.

[25] Yu-Fang Chen, Chang-Hong Hsu, Hsin-Hung Lin, Peter Schwabe, Ming-Hsien
Tsai, Bow-Yaw Wang, Bo-Yin Yang, and Shang-Yi Yang. 2014. Verifying
Curve25519 Software. In Proceedings of the 2014 ACM SIGSAC Conference on
Computer and Communications Security. ACM, 299–309.

[26] Quynh H Dang. 2008. The Keyed-Hash Message Authentication Code (HMAC).

NIST FIPS-198-1. (2008).

[27] A. Delignat-Lavaud, C. Fournet, M. Kohlweiss, J. Protzenko, A. Rastogi, N. Swamy,
S. Zanella-Beguelin, K. Bhargavan, J. Pan, and J. K. Zinzindohoue. 2017. Imple-
menting and Proving the TLS 1.3 Record Layer. In IEEE Symposium on Security
and Privacy (Oakland). 463–482.

[28] Martin Goll and Shay Gueron. 2014. Vectorization on ChaCha stream cipher. In

Information Technology: New Generations (ITNG). 612–615.

[29] Chris Hawblitzel, Jon Howell, Jacob R Lorch, Arjun Narayan, Bryan Parno, Dan-
feng Zhang, and Brian Zill. 2014. Ironclad apps: End-to-end security via auto-
mated full-system verification. In 11th USENIX Symposium on Operating Systems
Design and Implementation (OSDI 14). 165–181.

[30] Gerwin Klein, Kevin Elphinstone, Gernot Heiser, June Andronick, David Cock,
Philip Derrin, Dhammika Elkaduwe, Kai Engelhardt, Rafal Kolanski, Michael
Norrish, et al. 2009. seL4: Formal verification of an OS kernel. In Proceedings of
the ACM SIGOPS 22nd symposium on Operating systems principles. ACM, 207–220.
[31] Xavier Leroy. 2009. Formal verification of a realistic compiler. Commun. ACM 52,

7 (2009), 107–115.

[32] Erick Nascimento, Łukasz Chmielewski, David Oswald, and Peter Schwabe. 2016.
Attacking embedded ECC implementations through cmov side channels. In
Selected Areas in Cryptology – SAC 2016 (Lecture Notes in Computer Science).

[33] Pierre-Yves Strub, Nikhil Swamy, Cedric Fournet, and Juan Chen. 2012. Self-
Certification: Bootstrapping Certified Typecheckers in F* with Coq. In ACM
SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL).
571–584.

[34] Nikhil Swamy, Cătălin Hriţcu, Chantal Keller, Aseem Rastogi, Antoine Delignat-
Lavaud, Simon Forest, Karthikeyan Bhargavan, Cédric Fournet, Pierre-Yves Strub,
Markulf Kohlweiss, Jean-Karim Zinzindohoue, and Santiago Zanella-Béguelin.
Dependent Types and Multi-Monadic Effects in F*. In ACM SIGPLAN-SIGACT
Symposium on Principles of Programming Languages (POPL). 256–270.

[35] A. Tomb. 2016. Automated Verification of Real-World Cryptographic Implemen-

tations. IEEE Security and Privacy 14, 6 (2016), 26–33.

[36] National Institute of Standards US Department of Commerce and Technology
(NIST). 2012. Federal Information Processing Standards Publication 180-4: Secure
hash standard (SHS). (2012).

[37] Jean Karim Zinzindohoue, Evmorfia-Iro Bartzia, and Karthikeyan Bhargavan.
2016. A Verified Extensible Library of Elliptic Curves. In IEEE Computer Security
Foundations Symposium (CSF). 296–309.

