[1] Henko Aantjes, Amjad Y Majid, Przemyslaw Pawelczak, Jethro Tan, Aaron Parks, and Joshua R Smith. 2017. Fast Downstream

to Many (Computational) RFIDs. IEEE INFOCOM 2017 - The 36th Annual IEEE International Conference on Computer

Communications (2017).



[2] A. W. Appel and T. Jim. 1989. Continuation-passing, Closure-passing Style. In Proceedings of the 16th ACM SIGPLANSIGACT Symposium on Principles of Programming Languages (POPL 89). ACM, New York, NY, USA, 293-302. DOL:

http://dx.doi.org/10.1145/75277.75303



[3] Domenico Balsamo, Alex S Weddell, Anup Das, Alberto Rodriguez Arreola, Davide Brunelli, Bashir M Al-Hashimi, Geoff V

Merrett, and Luca Benini. 2016. Hibernus++: a self-calibrating and adaptive system for transiently-powered embedded

devices. IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems 35, 12 (2016), 1968-1980.



[4] Domenico Balsamo, Alex S Weddell, Geoff V Merrett, Bashir M Al-Hashimi, Davide Brunelli, and Luca Benini. 2015. Hibernus:

Sustaining computation during intermittent supply for energy-harvesting systems. IEEE Embedded Systems Letters 7, 1

(2015), 15-18.



[5] Michael Buettner, Ben Greenstein, and David Wetherall. 2011. Dewdrop: An Energy-aware Runtime for Computational

RFID. In Proceedings of the 8th USENIX Conference on Networked Systems Design and Implementation (NSDI’11). USENIX

Association, Berkeley, CA, USA, 197-210.



[6] Joel Coburn, Adrian M. Caulfield, Ameen Akel, Laura M. Grupp, Rajesh K. Gupta, Ranjit Jhala, and Steven Swanson. 2011.

NV-Heaps: Making Persistent Objects Fast and Safe with Next-generation, Non-volatile Memories. In Proceedings of the

Sixteenth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS

XVI). ACM, New York, NY, USA, 105-118. DOI : http://dx.doi.org/10.1145/1950365. 1950380



[7] Alexei Colin, Graham Harvey, Brandon Lucia, and Alanson P. Sample. 2016. An Energy-interference-free Hardware-Software

Debugger for Intermittent Energy-harvesting Systems. In Proceedings of the Twenty-First International Coonference on

Architectural Support for Programming Languages and Operating Systems (ASPLOS ’16). ACM, New York, NY, USA,

577-589. DOI : http://dx.doi.org/10.1145/2872362.2872409



[8] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 96. Publication date: October 2017.

96:28 Kiwan Maeng, Alexei Colin, and Brandon Lucia



[9] Alexei Colin and Brandon Lucia. 2016. Chain: Tasks and Channels for Reliable Intermittent Programs. In Proceedings of

the 2016 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications

(OOPSLA 2016). ACM, New York, NY, USA, 514-530. DOI : http://dx.doi.org/10.1145/2983990.2983995



[10] Jeremy Condit, Edmund B Nightingale, Christopher Frost, Engin Ipek, Benjamin Lee, Doug Burger, and Derrick Coetzee.

2009. Better I/O through byte-addressable, persistent memory. In Proceedings of the ACM SIGOPS 22nd symposium on

Operating systems principles, ACM, 133-146.



[11] Marc De Kruijf and Karthikeyan Sankaralingam. 2013. Idempotent code generation: Implementation, analysis, and evaluation.

In Proceedings of the 2013 IEEE/ACM International Symposium on Code Generation and Optimization (CGO). IEEE Computer

Society, 1-12.



[12] Marc A. de Kruijf, Karthikeyan Sankaralingam, and Somesh Jha. 2012. Static Analysis and Compiler Design for Idempotent

Processing. In Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language Design and Implementation

(PLDI ’12), ACM, New York, NY, USA, 475-486. DOI: http://dx.doi.org/10.1145/2254064.2254120



[13] Kshitij Doshi and Peter Varman. 2012. WrAP: Managing byte-addressable persistent memory. In Memory Archiecture and

Organization Workshop.(MeAOW).



[14] Subramanya R Dulloor, Sanjay Kumar, Anil Keshavamurthy, Philip Lantz, Dheeraj Reddy, Rajesh Sankaran, and Jeff Jackson.

2014. System software for persistent memory. In Proceedings of the Ninth European Conference on Computer Systems.

ACM, 15.



[15] Jim Gray and Andreas Reuter. 1992. Transaction Processing: Concepts and Techniques (1st ed.). Morgan Kaufmann Publishers

Inc., San Francisco, CA, USA.



[16] Matthew R Guthaus, Jeffrey S Ringenberg, Dan Ernst, Todd M Austin, Trevor Mudge, and Richard B Brown. 2001. MiBench:

A free, commercially representative embedded benchmark suite. In Workload Characterization, 2001. WWC-4. 2001 IEEE

International Workshop on. IEEE, 3-14.



[17] Lance Hammond, Vicky Wong, Mike Chen, Brian D Carlstrom, John D Davis, Ben Hertzberg, Manohar K Prabhu, Honggo

Wijaya, Christos Kozyrakis, and Kunle Olukotun. 2004. Transactional memory coherence and consistency. In ACM

SIGARCH Computer Architecture News, Vol. 32, IEEE Computer Society, 102.



[18] Tim Harris, Simon Marlow, Simon Peyton-Jones, and Maurice Herlihy. 2005. Composable Memory Transactions. In

Proceedings of the Tenth ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPoPP ’05). ACM,

New York, NY, USA, 48-60. DOI : http://dx.doi.org/10.1145/1065944,1065952



[19] Maurice Herlihy and J Eliot B Moss. 1993. Transactional memory: Architectural support for lock-free synchronization. In

Proc. of the 20th Annual International Symposium on Computer Architecture. 289-300.



[20] Josiah Hester, Lanny Sitanayah, and Jacob Sorber. 2015. Tragedy of the Coulombs: Federating Energy Storage for Tiny,

Intermittently-Powered Sensors. In Proceedings of the 13th ACM Conference on Embedded Networked Sensor Systems

(SenSys ’15). ACM, New York, NY, USA, 5-16. DOI : http://dx.doi.org/10.1145/2809695.2809707



[21] Philo Juang, Hidekazu Oki, Yong Wang, Margaret Martonosi, Li Shiuan Peh, and Daniel Rubenstein. 2002. Energy-efficient

Computing for Wildlife Tracking: Design Tradeoffs and Early Experiences with ZebraNet. In Proceedings of the 10th

International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS X). ACM,

New York, NY, USA, 96-107. DOI: http://dx.doi.org/10.1145/605397.605408



[22] Mustafa Emre Karagozler, Ivan Poupyrev, Gary K Fedder, and Yuri Suzuki. 2013. Paper generators: harvesting energy from

touching, rubbing and sliding. In Proceedings of the 26th annual ACM symposium on User interface software and technology.

ACM, 23-30.



[23] Gabriel Kerneis and Juliusz Chroboczek. 2010. Continuation-Passing C, compiling threads to events through continuations.

Computing Research Repository abs/1011.4558 (2010). http://arxiv.org/abs/1011.4558



[24] Yoonmyung Lee, Gyouho Kim, Suyoung Bang, Yejoong Kim, Inhee Lee, Prabal Dutta, Dennis Sylvester, and David Blaauw.

2012. A modular 1mm 3 die-stacked sensing platform with optical communication and multi-modal energy harvesting.

In Solid-State Circuits Conference Digest of Technical Papers (ISSCC), 2012 IEEE International. IEEE, 402-404.



[25] Brandon Lucia and Benjamin Ransford. 2015. A Simpler, Safer Programming and Execution Model for Intermittent Systems.

In Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI 2015).

ACM, New York, NY, USA, 575-585. DOL: http://dx.doi.org/10.1145/2737924,2737978



[26] Kaisheng Ma, Xueqing Li, Shuangchen Li, Yongpan Liu, John Jack Sampson, Yuan Xie, and Vijaykrishnan Narayanan. 2015a.

Nonvolatile processor architecture exploration for energy-harvesting applications. IEEE Micro 35, 5 (2015), 32-40.



[27] Kaisheng Ma, Yang Zheng, Shuangchen Li, Karthik Swaminathan, Xueqing Li, Yongpan Liu, Jack Sampson, Yuan Xie, and

Vijaykrishnan Narayanan. 2015b. Architecture exploration for ambient energy harvesting nonvolatile processors. In

High Performance Computer Architecture (HPCA), 2015 IEEE 21st International Symposium on. IEEE, 526-537.



[28] Azalia Mirhoseini, Ebrahim M Songhori, and Farinaz Koushanfar. 2013. Idetic: A high-level synthesis approach for enabling

long computations on transiently-powered ASICs. In Pervasive Computing and Communications (PerCom), 2013 IEEE

International Conference on. IEEE, 216-224.



[29] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 96. Publication date: October 2017.

Alpaca: Intermittent Execution without Checkpoints 96:29



[30] Tulian Moraru, David G Andersen, Michael Kaminsky, Niraj Tolia, Parthasarathy Ranganathan, and Nathan Binkert. 2013.

Consistent, durable, and safe memory management for byte-addressable non volatile main memory. In Proceedings of the

First ACM SIGOPS Conference on Timely Results in Operating Systems, ACM, 1.



[31] Dushyanth Narayanan and Orion Hodson. 2012. Whole-system Persistence. In Proceedings of the Seventeenth International

Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS XVII). ACM, New York,

NY, USA, 401-410. DOI : http://dx.doi.org/10.1145/2150976.2151018



[32] Joseph A Paradiso and Mark Feldmeier. 2001. A compact, wireless, self-powered pushbutton controller. In International

Conference on Ubiquitous Computing. Springer, 299-304.



[33] Steven Pelley, Peter M. Chen, and Thomas F. Wenisch. 2014. Memory Persistency. In Proceeding of the 41st Annual International

Symposium on Computer Architecuture (ISCA ’14). IEEE Press, Piscataway, NJ, USA, 265-276.



[34] Steven Pelley, Peter M Chen, and Thomas F Wenisch. 2015. Memory Persistency: Semantics for Byte-Addressable Nonvolatile

Memory Technologies. IEEE Micro 35, 3 (2015), 125-131.



[35] Benjamin Ransford and Brandon Lucia. 2014. Nonvolatile Memory is a Broken Time Machine. In Proceedings of the

Workshop on Memory Systems Performance and Correctness (MSPC ’14). ACM, New York, NY, USA, Article 5, 3 pages.

DOT: hitp://dx.doi.org/10.1145/2618128.2618136



[36] Benjamin Ransford, Jacob Sorber, and Kevin Fu. 2011a. Mementos: System Support for Long-running Computation on RFIDscale Devices. In Proceedings of the Sixteenth International Conference on Architectural Support for Programming Languages

and Operating Systems (ASPLOS XVI). ACM, New York, NY, USA, 159-170. DOI : http://dx.doi.org/10.1145/1950365.1950386



[37] Benjamin Ransford, Jacob Sorber, and Kevin Fu. 2011b. Mementos: System Support for Long-running Computation on

RFID-scale Devices. (2011), 159-170. DOI : http://dx.doi.org/10.1145/1950365.1950386



[38] Ronald L Rivest, Adi Shamir, and Leonard Adleman. 1978. A Method for Obtaining Digital Signatures and Public-key

Cryptosystems. Commun. ACM 21, 2 (Feb. 1978), 120-126. DOI: http://dx.doi.org/10.1145/359340.359342



[39] Alanson P Sample, Daniel J Yeager, Pauline S Powledge, Alexander V Mamishev, and Joshua R Smith. 2008. Design of an

RFID-based battery-free programmable sensing platform. IEEE Transactions on Instrumentation and Measurement 57, 11

(2008), 2608-2615.



[40] Nir Shavit and Dan Touitou. 1995. Software Transactional Memory. In Proceedings of the Fourteenth Annual ACM Symposium

on Principles of Distributed Computing (PODC 95). ACM, New York, NY, USA, 204-213. DOI : http://dx.doi.org/10.1145/

224964,224987



[41] Jacob Sorber, Alexander Kostadinov, Matthew Garber, Matthew Brennan, Mark D. Corner, and Emery D. Berger. 2007. Eon:

A Language and Runtime System for Perpetual Systems. In Proceedings of the 5th International Conference on Embedded

Networked Sensor Systems (SenSys 07). ACM, New York, NY, USA, 161-174. DOI: http://dx.doi.org/10.1145/1322263.

1322279



[42] Daisaburo Takashima, S$ Shuto, I Kunishima, H Takenaka, Y Oowaki, and S Tanaka. 1999. A sub-40 ns random-access chain

FRAM architecture with a 768 cell-plate-line drive. In Solid-State Circuits Conference, 1999. Digest of Technical Papers.

ISSCC. 1999 IEEE International. IEEE, 102-103.



[43] Jethro Tan, Przemyslaw Pawelczak, Aaron Parks, and Joshua R Smith. 2016. Wisent: Robust downstream communication and

storage for computational RFIDs. In Computer Communications, IEEE INFOCOM 2016-The 35th Annual IEEE International

Conference on, IEEE, 1-9.



[44] Tl Inc. 2017a. MSP430FR59xx Mixed-Signal Microcontrollers (Rev. F). http://www.ti.com/lit/ds/symlink/msp430fr5969.pdf.

(2017).



[45] TI Inc. 2017b. Products for MSP430FRxx FRAM. _http://www.ti.com/|sds/ti/microcontrollers- 16-bit-32-bit/msp/

ultra-low-power/msp430frxx-fram/products.page. (2017). Accessed: 2017-04-08.



[46] Joel Van Der Woude and Matthew Hicks. 2016. Intermittent Computation Without Hardware Support or Programmer

Intervention. In Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation (OSDI’ 16).

USENIX Association, Berkeley, CA, USA, 17-32.



[47] Shivaram Venkataraman, Niraj Tolia, Parthasarathy Ranganathan, and Roy H. Campbell. 2011. Consistent and Durable Data

Structures for Non-volatile Byte-addressable Memory. In Proceedings of the 9th USENIX Conference on File and Stroage

Technologies (FAST’11). USENIX Association, Berkeley, CA, USA, 5-5.



[48] Haris Volos, Andres Jaan Tack, and Michael M. Swift. 2011. Mnemosyne: Lightweight Persistent Memory. In Proceedings

of the Sixteenth International Conference on Architectural Support for Programming Languages and Operating Systems

(ASPLOS XVI). ACM, New York, NY, USA, 91-104. DOI: http://dx.doi.org/10.1145/1950365.1950379



[49] Zac Manchester. 2015. KickSat. http://zacinaction.github.io/kicksat/. (2015).



[50] Hong Zhang, Jeremy Gummeson, Benjamin Ransford, and Kevin Fu. 2011a. Moo: A batteryless computational RFID and

sensing platform. Department of Computer Science, University of Massachusetts Amherst., Tech. Rep (2011).



[51] Hong Zhang, Mastooreh Salajegheh, Kevin Fu, and Jacob Sorber. 2011b. Ekho: Bridging the Gap Between Simulation and

Reality in Tiny Energy-harvesting Sensors. In Proceedings of the 4th Workshop on Power-Aware Computing and Systems

(HotPower ’11). ACM, New York, NY, USA, Article 9, 5 pages. DOI: http://dx.doi.org/10.1145/2039252.2039261



[52] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 96. Publication date: October 2017.

96:30 Kiwan Maeng, Alexei Colin, and Brandon Lucia



[53] Wei Zhang, Marc de Kruijf, Ang Li, Shan Lu, and Karthikeyan Sankaralingam. 2013. ConAir: Featherweight Concurrency

Bug Recovery via Single-threaded Idempotent Execution. In Proceedings of the Eighteenth International Conference on



[54] Architectural Support for Programming Languages and Operating Systems (ASPLOS ’13). ACM, New York, NY, USA,

113-126. DOL: http://dx.doi.org/10.1145/2451116.2451129



[55] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 96. Publication date: October 2017.
