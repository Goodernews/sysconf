[1] Umut A. Acar, Arthur Chargeéraud, and Mike Rainey. 2013. Scheduling Parallel
Programs by Work Stealing with Private Deques. Symp. on Principles and practice
of Parallel Programming (PPoPP) (Feb 2013).
[2] Kunal Agrawal, Charles E. Leiserson, Yuxiong He, and Wen Jing Hsu. 2008.
Adaptive Work-stealing with Parallelism Feedback. ACM Trans. on Computer
Systems (TOCS) 26, 3 (Sep 2008), 7.
[3] Randy Allen and Steve Johnson. 1988. Compiling C for Vectorization, Parallelization, and Inline Expansion. ACM SIGPLAN Conf. on Programming Language
Design and Implementation (PLDI) (Jun 1988).
[4] Krste Asanovic, David A. Patterson, and Christopher Celio. 2015. The Berkeley
Out-of-Order Machine (BOOM): An Industry-Competitive, Synthesizable, Parameterized RISC-V Processor. Technical Report. UCB/EECS-2015-167.
[5] Eduard Ayguadé, Nawal Copty, Alejandro Duran, Jay Hoe�inger, Yuan Lin, Federico Massaioli, Xavier Teruel, Priya Unnikrishnan, and Guansong Zhang. 2009.
The Design of OpenMP Tasks. IEEE Trans. on Parallel and Distributed Systems
(TPDS) 20, 3 (Mar 2009), 404–418.
[6] Nathan Binkert, Bradford M. Beckmann, Gabriel Black, Steven K. Reinhardt, Ali
Saidi, Arkaprava Basu, Joel Hestness, Derek R. Hower, Tushar Krishna, Somayeh
Sardashti, Rathijit Sen, Korey Sewell, Muhammad Shoaib, Nilay Vaish, Mark D.
Hill, and David A. Wood. 2011. The gem5 Simulator. SIGARCH Computer
Architecture News (CAN) 39, 2 (Aug 2011), 1–7.
[7] J. Bolaria. 2012. Xeon Phi Targets Supercomputers. Microprocessor Report (Sep
2012).
[8] Alexandar Branover, Denis Foley, and Maurice Steinman. 2012. AMD Fusion
APU: Llano. IEEE Micro 32, 2 (Mar/Apr 2012), 28–37.
[9] M. Burtscher, R. Nasre, and K. Pingali. 2012. A Quantitative Study of Irregular
Programs on GPUs. Int’l Symp. on Workload Characterization (IISWC) (Oct 2012).
[10] Colin Campbell, Ralph Johnson, Ade Miller, and Stephen Toub. 2010. Parallel
Programming with Microsoft .NET: Design Patterns for Decomposition and Coordination on Multicore Architectures (Patterns & Practices). Microsoft Press.
[11] Loyd Case. 2015. MIPS Broadens Reach with New Cores. Microprocessor Report
(Dec 2015).
[12] David Chase and Yossi Lev. 2005. Dynamic Circular Work-stealing Deque. Symp.
on Parallel Algorithms and Architectures (SPAA) (Jun 2005).
[13] Peter Clarke. 2013. How ARM’s Cortex-A7 Beats the A15. EE Times (Jul 2013).
http://www.eetimes.com/author.asp?section_id=36&doc_id=1318968.
[14] Sylvian Collange. 2011. Stack-less SIMT Reconvergence at Low Cost. Technical
Report HAL-00622654. ARENAIRE.
[15] Intel SPMD Program Compiler. 2015. DesignWare ARC Processor Cores. Online
Webpage. (2015). https://ispc.github.io.
[16] Gilberto Contreras and Margaret Martonosi. 2008. Characterizing and Improving
the Performance of Intel Threading Building Blocks. Int’l Symp. on Workload
Characterization (IISWC) (Sep 2008).
[17] Brett W. Coon and John Erik Lindholm. 2008. System and Method for Managing
Divergent Threads in a SIMD Architecture. US Patent 7353369. (Apr 2008).
[18] Gregory Diamos, Benjamin Ashbaugh, Subramaniam Maiyuran, Andrew Keer,
Haicheng Wu, and Sudhakar Yalamanchili. 2011. SIMD Re-Convergence at Thread
Frontiers. Int’l Symp. on Microarchitecture (MICRO) (Dec 2011).
[19] Neil Dickson, Kamran Karimi, and Firas Hamze. 2011. Importance of Explicit
Vectorization for CPU and GPU Software Performance. Journal of Computational
Physics (JCP) 230 (Jun 2011), 5383–5398. Issue 13.
[20] James Dinan, D. Brian Larkins, P. Sadayappan, Sriram Krishnamoorthy, and
Jarek Nieplocha. 2009. Scalable Work Stealing. Int’l Conf. on High Performance
Networking and Computing (Supercomputing) (Nov 2009).
[21] Roger Espasa, Federico Ardanaz, Joel Emer, Stephen Felix, Julio Gago, Roger
Gramunt, Isaac Hernandez, Toni Juan, Geo� Lowney, Matthew Mattina, and
André Seznec. 2002. Tarantula: A Vector Extension to the Alpha Architecture.
Int’l Symp. on Computer Architecture (ISCA) (Jun 2002).
[22] Wilson W.L. Fung and Tor M. Aamodt. 2011. Thread Block Compaction for E�cient SIMT Control Flow. Int’l Symp. on High-Performance Computer Architecture
(HPCA) (Feb 2011).
[23] Wilson W.L. Fung, Ivan Sham, George Yuan, and Tor M. Aamodt. 2009. Dynamic
Warp Formation: E�cient MIMD Control Flow on SIMD Graphics Hardware.
ACM Trans. on Architecture and Code Optimization (TACO) 6, 2 (Jun 2009), 1–35.
[24] Vekatraman Govindaraju, Tony Nowatzki, and Karthikeyan Sankaralingam. 2013.
Breaking SIMD Shackles with an Exposed Flexible Microarchitecture and the Access Execute PDG. Int’l Conf. on Parallel Architectures and Compilation Techniques
(PACT) (Sep 2013).
[25] Kshitij Gupta, Je� A. Stuart, and John D. Owens. 2012. A Study of Persistent
Threads Style GPU Programming for GPGPU Workloads. Innovative Parallel
Computing (InPar) (2012).
[26] Linley Gwennap. 2015. Cortex-A35 Extends Low End. Microprocessor Report
(Nov 2015).
[27] Linley Gwennap. 2015. Cortex-A57 is Most E�cient CPU. Microprocessor Report
(Feb 2015).
[28] S. Hong, S. K. Kim, T. Oguntebi, and K. Olukotun. 2011. Accelerating CUDA
Graph Algorithms at Maximum Warp. Symp. on Principles and practice of Parallel
Programming (PPoPP) (Feb 2011).
[29] Intel. 2013. Intel Cilk Plus Language Extension Speci�cation, Version 1.2. Intel
Reference Manual. (Sep 2013). https://www.cilkplus.org/sites/default/
files/open_specifications/Intel_Cilk_plus_lang_spec_1.2.htm.
[30] Intel. 2015. Intel Threading Building Blocks. Online Webpage. (2015). https:
//software.intel.com/en-us/intel-tbb.
[31] David Kanter. 2015. Knights Landing Reshapes HPC. (Sep 2015).
[32] Stephen W. Keckler, William J. Dally, Brucek Khailany, Michael Garland, and
David Glasco. 2011. GPUs and the Future of Parallel Computing. IEEE Micro 31,
5 (Sep/Oct 2011), 7–17.
[33] Ji Kim, Christopher Torng, Shreesha Srinath, Derek Lockhart, and Christopher
Batten. 2013. Microarchitectural Mechanisms to Exploit Value Structure in FineGrain SIMT Architectures. Int’l Symp. on Computer Architecture (ISCA) (Jun
2013).
[34] Ronny Krashinsky, Christopher Batten, Mark Hampton, Steve Gerding, Brian
Pharris, Jared Casper, and Krste Asanović. 2004. The Vector-Thread Architecture.
Int’l Symp. on Computer Architecture (ISCA) (Jun 2004).
[35] R. Kumar, K.I. Farkas, N.P. Jouppi, P. Ranganathan, and D.M. Tullsen. 2003. SingleISA Heterogeneous Multi-Core Architectures: The Potential for Processor Power
Reduction. Int’l Symp. on Microarchitecture (MICRO) (Dec 2003).
[36] Doug Lea. 2000. A Java Fork/Join Framework. Java Grade Conference (Jun 2000).
[37] I-Ting Angelina Lee, Aamir Sha�, and Charles E. Leiserson. 2012. MemoryMapping Support for Reducer Hyperobjects. Symp. on Parallel Algorithms and
Architectures (SPAA) (Jun 2012).
[38] Victor W. Lee, Changkyu Kim, Jatin Chhugani, Michael Deisher, Daehyun Kim,
Anthony D. Nguyen, Nadathur Satish, Mikhail Smelyanskiy, Srinivas Chennupaty,
Per Hammarlund, Ronak Singhal, and Pradeep Dubey. 2010. Debunking the 100X
GPU vs. CPU Myth: An Evaluation of Throughput Computing on CPU and GPU.
Int’l Symp. on Computer Architecture (ISCA) (Jun 2010).
[39] Yunsup Lee, Rimas Avizienis, Alex Bishara, Richard Xia, Derek Lockhart, Christopher Batten, and Krste Asanović. 2011. Exploring the Tradeo�s between Programmability and E�ciency in Data-Parallel Accelerator Cores. Int’l Symp. on
Computer Architecture (ISCA) (Jun 2011).
[40] Daan Leijen, Wolfram Schulte, and Sebastian Burckhardt. 2009. The Design of a
Task Parallel Library. Conf. on Object-Oriented Programming Systems Languages
and Applications (OOPSLA) (Oct 2009).
[41] Charles E. Leiserson. 2009. The Cilk++ Concurrency Platform. Design Automation
Conf. (DAC) (Jul 2009).
[42] Sheng Li, Jung Ho Ahn, Richard D. Strong, Jay B. Brockman, Dean M. Tullsen,
and Norman P. Jouppi. 2009. McPAT: An Integrated Power, Area, and Timing
Modeling Framework for Multicore and Manycore Architectures. Int’l Symp. on
Microarchitecture (MICRO) (Dec 2009).
[43] Erik Lindholm, John Nickolls, Stuart Oberman, and John Montrym. 2008. NVIDIA
Tesla: A Uni�ed Graphics and Computer Architecture. IEEE Micro 28, 2 (Mar/Apr
2008), 39–55.
[44] Samuel Liu, John Erik Lindholm, Ming Y Siu, Brett W. Coon, and Stuart F. Oberman. 2010. Operand Collector Architecture. US Patent US7834881 B2. (Nov
2010).
[45] Derek Lockhart, Gary Zibrat, and Christopher Batten. 2014. PyMTL: A Uni�ed
Framework for Vertically Integrated Computer Architecture Research. Int’l Symp.
on Microarchitecture (MICRO) (Dec 2014).
[46] C. Loe�er, A. Ligtenberg, and G. S. Moschytz. 1989. Practical Fast 1-D DCT
Algorithms with 11 Multiplications. Int’l Conf. on Acoustics Speech and Signal
Processing (May 1989).
[47] L. Luo, M. Wong, and W. Hwu. 2010. An E�ective GPU Implementation of
Breadth-First Search. Design Automation Conf. (DAC) (Jun 2010).
[48] Saeed Maleki, Yaoqing Gao, Maria Garzaran, Tommy Wong, and David Padua.
2011. An Evaluation of Vectorizing Compilers. Int’l Conf. on Parallel Architectures
and Compilation Techniques (PACT) (Oct 2011).
[49] Matt Martineau, James Price, Simon McIntosh-Smith, and Wayne Gaudin. 2016.
Pragmatic Performance Portability with OpenMP 4.x. Int’l Workshop on OpenMP
(Sep 2016).
[50] Alberto J. Martinez, Atiq A. Bajwa, David L. Hill, Erik Hallnor, Hong Jiang, Martin
Dixon, Michael Derr, Mikal Hunsaker, Rajesh Kumar, Randy B. Osborne, Ravi
Rajwar, Ronak Singhal, Reynold D’Sa, Robert Chappell, Shiv Kaushik, Srinivas
Chennupaty, Stephan Jourdan, Steve Gunther, Tom Piazza, and Ted D. Kanter
Burton. 2014. Haswell: The Fourth-Generation Intel Core Processor. IEEE Micro
34, 2 (Mar/Apr 2014), 6–20.
[51] Simon McIntosh-Smith, Michael Boulton, Dan Curran, and James Price. 2014. On
the Performance Portability of Structured Grid Codes on Many-Core Computer
Architectures. Int’l Symp. on Supercomputing (ICS) (Jun 2014).
[52] Jiayuan Meng, David Tarjan, and Kevin Skadron. 2010. Dynamic Warp Subdivision for Integrated Branch and Memory Divergence Tolerance. Int’l Symp. on
Computer Architecture (ISCA) (Jun 2010).
[53] Naveen Muralimanohar, Rajeev Balasubramonian, and Norman P. Jouppi. 2009.
CACTI 6.0: A Tool to Model Large Caches. (2009).
[54] R. Nasre, M. Burtscher, and K. Pingali. 2013. Morph Algorithms on GPUs. Symp.
on Principles and practice of Parallel Programming (PPoPP) (Feb 2013).
[55] OpenCL. 2011. OpenCL Speci�cation, v1.2. Khronos Working Group. (2011).
http://www.khronos.org/registry/cl/specs/opencl-1.2.pdf.
[56] OpenMP. 2013. OpenMP Application Program Interface, Version 4.0. OpenMP Architecture Review Board. (Jul 2013). http://www.openmp.org/mp-documents/
OpenMP4.0.0.pdf.
Java API: ForkJoinPool.
Online API Documenta[57] Oracle. 2015.
tion. (2015).
http://docs.oracle.com/javase/7/docs/api/java/util/
concurrent/ForkJoinPool.html.
[58] James Reinders. 2007. Intel Threading Building Blocks: Out�tting C++ for Multi-core
Processor Parallelism. O’Reilly.
An Overview of Programming for Intel Xeon
[59] James Reinders. 2012.
Processors and Intel Xeon Phi Coprocessors. Intel White Paper. (2012).
https://software.intel.com/sites/default/files/article/330164/
an-overview-of-programming-for-intel-xeon-processors-and-intelxeon-phi-coprocessors_1.pdf.
[60] Bin Ren, Youngjoon Jo, Sriram Krishnamoorthy, Kunal Agrawal, and Milind
Kulkarni. 2015. E�cient Execution of Recursive Programs on Commodity Vector
Hardware. ACM SIGPLAN Conf. on Programming Language Design and Implementation (PLDI) (Jun 2015).
[61] Bin Ren, Sriaram Krishnamoorthy, Kunal Agrawal, and Milind Kulkarni. 2017.
Exploiting Vector and Multicore Parallelism for Recursive, Data- and Task-Parallel
Programs. Symp. on Principles and practice of Parallel Programming (PPoPP) (Feb
2017).
[62] Minsoo Rhu and Mattan Erez. 2012. CAPRI: Prediction of Compaction-Adequacy
for Handling Control-Divergence in GPGPU Architectures. Int’l Symp. on Computer Architecture (ISCA) (Jun 2012).
[63] Suzanne Rivoire, Rebecca Schultz, Tomofumi Okuda, and Christos Kozyrakis.
2006. Vector Lane Threading. Int’l Conf. on Parallel Processing (ICPP) (Aug 2006).
[64] Timothy G. Rogers, Daniel R. Johnson, Mike O’Connor, and Stephen W. Keckler.
2015. A Variable Warp Size Architecture. Int’l Symp. on Computer Architecture
(ISCA) (2015).
[65] Julian Shun, Guy E. Blelloch, Jeremy T. Fineman, Phillip B. Gibbons, Aapo Kyrola,
and Harsha Vardhan Simhadri. 2012. Brief Announcement: The Problem Based
Benchmark Suite. Symp. on Parallel Algorithms and Architectures (SPAA) (Jun
2012).
[66] S. Somasegar. 2011. Targeting Heterogeneity with C++ AMP and PPL. MSDN
Blog. (Jun 2011). http://blogs.msdn.com/b/somasegar/archive/2011/06/
15/targeting-heterogeneity-with- c-amp-and-ppl.aspx.
[67] Shreesha Srinath, Berkin Ilbeyi, Mingxing Tan, Gai Liu, Zhiru Zhang, and Christopher Batten. 2014. Architectural Specialization for Inter-Iteration Loop Dependence Patterns. Int’l Symp. on Microarchitecture (MICRO) (Dec 2014).
[68] Stanley Tzeng, Brandon Lloyd, and John D. Owens. 2012. A GPU Task-Parallel
Model with Dependency Resolution. IEEE Computer 45, 8 (Aug 2012), 34–41.