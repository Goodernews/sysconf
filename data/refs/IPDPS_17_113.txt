[1] M. H. Kryder and C. S. Kim, “After Hard Drives: What Comes Next?” IEEE Transactions on Magnetics, vol. 45, no. 10, pp. 3406–3413, 2009.
[2] J. S. Vetter and S. Mittal, “Opportunities for Nonvolatile Memory Systems in Extreme-Scale High-Performance Com- puting,” Computing in Science Engineering, vol. 17, no. 2, pp. 73–82, 2015.
[3] B. C. Lee, E. Ipek, O. Mutlu, and D. Burger, “Phase Change Memory Architecture and the Quest for Scalability,” Com- mun. ACM, vol. 53, no. 7, pp. 99–106, 2010.
[4] A. Badam, “How Persistent Memory Will Change Software Systems,” Computer, vol. 46, no. 8, pp. 45–51, 2013.
[5] H. Zhang, G. Chen, B. C. Ooi, K. L. Tan, and M. Zhang, “In- Memory Big Data Management and Processing: A Survey,” IEEE Transactions on Knowledge and Data Engineering, vol. 27, no. 7, pp. 1920–1948, 2015.
[6] S. Mittal and J. S. Vetter, “A Survey of Software Techniques for Using Non-Volatile Memories for Storage and Main Memory Systems,” Parallel and Distributed Systems, IEEE Transactions on, vol. 27, no. 5, pp. 1537–1550, 2015.
[7] P. Carns and R. Latham, “Burst Buffers: A NERSC Case Study,” in Argonne Training Program on Extreme-Scale Com- puting, ser. ATPESC ’16, 2016.
[8] N. Liu, J. Cope, P. Carns, C. Carothers, R. Ross, G. Grider, A. Crume, and C. Maltzahn, “On the Role of Burst Buffers in Leadership-Class Storage Systems,” in IEEE 28th Symposium on Mass Storage Systems and Technologies, ser. MSST 2012, 2012, pp. 1–11.
[9] K. Asanovic, R. Bodik, B. C. Catanzaro, J. J. Gebis, P. Hus- bands, K. Keutzer, D. A. Patterson, W. L. Plishker, J. Shalf, S. W. Williams, and K. A. Yelick, “The Landscape of Par- allel Computing Research: A View from Berkeley,” EECS Department, University of California, Berkeley, Tech. Rep. UCB/EECS-2006-183, Dec 2006.
[10] J. S. Vetter, Contemporary High Performance Computing: From Petascale Toward Exascale. Chapman & Hall/CRC, 2013.
[11] J. Kim, S. Lee, and J. S. Vetter, “IMPACC: A Tightly Integrated MPI+OpenACC Framework Exploiting Shared Memory Parallelism,” in Proceedings of the 25th ACM In- ternational Symposium on High-Performance Parallel and Distributed Computing, ser. HPDC ’16, 2016, pp. 189–201.
[12] C. Amza, A. L. Cox, S. Dwarkadas, P. Keleher, H. Lu, R. Rajamony, W. Yu, and W. Zwaenepoel, “TreadMarks: Shared Memory Computing on Networks of Workstations,” Computer, vol. 29, no. 2, pp. 18–28, 1996.
[13] M. A. Blumrich, K. Li, R. Alpert, C. Dubnicki, E. W. Felten, and J. Sandberg, “Virtual Memory Mapped Network Interface for the SHRIMP Multicomputer,” in Proceedings of the 21st Annual International Symposium on Computer Architecture, ser. ISCA ’94, 1994, pp. 142–153.
[14] Standard Template Library Programmer’s Guide, 1994, https: //www.sgi.com/tech/stl/.
[15] B. Fitzpatrick, “Distributed Caching with Memcached,” Linux J., vol. 2004, no. 124, pp. 5–, 2004.
[16] R. G. Brook, A. Heinecke, A. B. Costa, P. Peltz, V. C. Betro, T. Baer, M. Bader, and P. Dubey, “Beacon: Deployment and Application of Intel Xeon Phi Coprocessors for Scientific Computing,” Computing in Science Engineering, vol. 17, no. 2, pp. 65–72, 2015.
[17] Cori - NERSC’s newest supercomputer system (NERSC- 8), 2016, http://www.nersc.gov/users/computational-systems/ cori/.
[18] Argonne Leadership Computing Facility Software, https:// www.alcf.anl.gov/software.
[19] Lustre Software Release 2.x Operations Manual, 2016, http: //doc.lustre.org/lustre manual.xhtml.
[20] R. Escriva, B. Wong, and E. G. Sirer, “HyperDex: A Dis- tributed, Searchable Key-value Store,” in Proceedings of the ACM SIGCOMM 2012 Conference on Applications, Tech- nologies, Architectures, and Protocols for Computer Com- munication, ser. SIGCOMM ’12, 2012, pp. 25–36.
[21] J. L. Gustafson, “Fixed Time, Tiered Memory, and Superlin- ear Speedup,” in Proceedings of the Fifth Distributed Memory Computing Conference, ser. DMCC5, 1990.
[22] S. Habib, V. Morozov, N. Frontiere, H. Finkel, A. Pope, and K. Heitmann, “HACC: Extreme Scaling and Perfor- mance Across Diverse Architectures,” in Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis, ser. SC ’13, 2013, pp. 6:1– 6:10.
[23] H. Volos, A. J. Tack, and M. M. Swift, “Mnemosyne: Lightweight Persistent Memory,” in Proceedings of the Six- teenth International Conference on Architectural Support for Programming Languages and Operating Systems, ser. ASPLOS XVI, 2011, pp. 91–104.
[24] J. E. Denny, S. Lee, and J. S. Vetter, “NVL-C: Static Anal- ysis Techniques for Efficient, Correct Programming of Non- Volatile Main Memory Systems,” in Proceedings of the 25th ACM International Symposium on High-Performance Parallel and Distributed Computing, ser. HPDC ’16, 2016, pp. 125– 136.
[25] J. Coburn, A. M. Caulfield, A. Akel, L. M. Grupp, R. K. Gupta, R. Jhala, and S. Swanson, “NV-Heaps: Making Per- sistent Objects Fast and Safe with Next-generation, Non- volatile Memories,” in Proceedings of the Sixteenth Interna- tional Conference on Architectural Support for Programming Languages and Operating Systems, ser. ASPLOS XVI, 2011, pp. 105–118.
[26] J. Yang, Q. Wei, C. Chen, C. Wang, K. L. Yong, and B. He, “NV-Tree: Reducing Consistency Cost for NVM-based Single Level Systems,” in Proceedings of the 13th USENIX Conference on File and Storage Technologies, ser. FAST’15, 2015, pp. 167–181.
[27] H. Lim, B. Fan, D. G. Andersen, and M. Kaminsky, “SILT: A Memory-efficient, High-performance Key-value Store,” in Proceedings of the Twenty-Third ACM Symposium on Oper- ating Systems Principles, ser. SOSP ’11, 2011, pp. 1–13.
[28] Y. Kang, R. Pitchumani, T. Marlette, and E. L. Miller, “Muninn: A Versioning Flash Key-Value Store Using an Object-based Storage Model,” in Proceedings of International Conference on Systems and Storage, ser. SYSTOR 2014, 2014, pp. 13:1–13:11.
[29] S. Kannan, A. Gavrilovska, and K. Schwan, “pVM: Persistent Virtual Memory for Efficient Capacity Scaling and Object Storage,” in Proceedings of the Eleventh European Confer- ence on Computer Systems, ser. EuroSys ’16, 2016, pp. 13:1– 13:16.
[30] J. Ou, J. Shu, and Y. Lu, “A High Performance File Sys- tem for Non-volatile Main Memory,” in Proceedings of the Eleventh European Conference on Computer Systems, ser. EuroSys ’16, 2016, pp. 12:1–12:16.
[31] C. Wang, S. S. Vazhkudai, X. Ma, F. Meng, Y. Kim, and C. Engelmann, “NVMalloc: Exposing an Aggregate SSD Store As a Memory Partition in Extreme-Scale Machines,” in Proceedings of the 2012 IEEE 26th International Parallel and Distributed Processing Symposium, ser. IPDPS ’12, 2012, pp. 957–968.
[32] R. Rajachandrasekar, A. Moody, K. Mohror, and D. K. D. Panda, “A 1 PB/s File System to Checkpoint Three Mil- lion MPI Tasks,” in Proceedings of the 22Nd International Symposium on High-performance Parallel and Distributed Computing, ser. HPDC ’13, 2013, pp. 143–154.
[33] S. Eilemann, F. Delalondre, J. Bernard, J. Planas, F. Schrmann, J. Biddiscombe, C. Bekas, A. Curioni, B. Met- zler, P. Kaltstein, P. Morjan, J. Fenkes, R. Bellofatto, L. Schneidenbach, C. Ward, and B. Fitch, “Key/Value-enabled Flash Memory for Complex Scientific Workflows with On- line Analysis and Visualization,” in Proceedings of the 2016 IEEE 30th International Parallel and Distributed Processing Symposium, ser. IPDPS ’16, 2016.
[34] M. Balakrishnan, D. Malkhi, T. Wobber, M. Wu, V. Prab- hakaran, M. Wei, J. D. Davis, S. Rao, T. Zou, and A. Zuck, “Tango: Distributed Data Structures over a Shared Log,” in Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles, ser. SOSP ’13, 2013, pp. 325– 340.
