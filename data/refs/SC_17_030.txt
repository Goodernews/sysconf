[1] Anurag Agarwal, Selcuk Colak, Varghese S Jacob, and Hasan Pirkul. 2006. Heuristics and augmented neural networks for task scheduling with non-identical
machines. European Journal of Operational Research 175, 1 (2006), 296–317.
[2] Derya Eren Akyol and G Mirac Bayhan. 2007. A review on evolution of production
scheduling with neural networks. Computers & Industrial Engineering 53, 1 (2007),
95–122.
[3] Hadil Al-Daoud, Issam Al-Azzoni, and Douglas G Down. 2012. Power-aware linear programming based scheduling for heterogeneous computer clusters. Future
Generation Computer Systems 28, 5 (2012), 745–754.
[4] Raymond J Carroll and David Ruppert. 1988. Transformation and weighting in
regression. Vol. 30. CRC Press.
[5] Henri Casanova, Arnaud Giersch, Arnaud Legrand, Martin Quinson, and Frédéric
Suter. 2014. Versatile, Scalable, and Accurate Simulation of Distributed Applications and Platforms. J. Parallel and Distrib. Comput. 74, 10 (June 2014), 2899–2917.
http://hal.inria.fr/hal-01017319
[6] Adaptative Computing. 2017. Moab Workload Manager Documentation. http://
www.adaptivecomputing.com/support/documentation-index/. (2017). Accessed:
2017-03-26.
[7] Rubing Duan, Farrukh Nadeem, Jie Wang, Yun Zhang, Radu Prodan, and Thomas
Fahringer. 2009. A hybrid intelligent method for performance modeling and
prediction of workflow activities in grids. In Proceedings of the 2009 9th IEEE/ACM
International Symposium on Cluster Computing and the Grid. IEEE Computer
Society, 339–347.
[8] Alejandro Duran and Michael Klemm. 2012. The Intel® many integrated core
architecture. In High Performance Computing and Simulation (HPCS), 2012 International Conference on. IEEE, 365–366.
[9] Dror G Feitelson. 2001. Metrics for parallel job scheduling and their convergence.
In Workshop on Job Scheduling Strategies for Parallel Processing. Springer, 188–205.
[10] Dror G Feitelson, Larry Rudolph, Uwe Schwiegelshohn, Kenneth C Sevcik, and
Parkson Wong. 1997. Theory and practice in parallel job scheduling. In Workshop
on Job Scheduling Strategies for Parallel Processing. Springer, 1–34.
[11] Dror G Feitelson, Dan Tsafrir, and David Krakov. 2014. Experience with using
the parallel workloads archive. J. Parallel and Distrib. Comput. 74, 10 (2014),
2967–2982.
[12] Christodoulos A Floudas and Xiaoxia Lin. 2005. Mixed integer linear programming in process scheduling: Modeling, algorithms, and applications. Annals of
Operations Research 139, 1 (2005), 131–162.
[13] Eric Gaussier, David Glesser, Valentin Reis, and Denis Trystram. 2015. Improving
Backfilling by Using Machine Learning to Predict Running Times. In Proceedings
of the International Conference for High Performance Computing, Networking,
Storage and Analysis (SC ’15). ACM, New York, NY, USA, Article 64, 10 pages.
DOI:https://doi.org/10.1145/2807591.2807646
[14] Y Georgiou. 2010. Resource and Job Management in High Performance Computing.
Ph.D. Dissertation. PhD Thesis, Joseph Fourier University, France.
[15] Edwin SH Hou, Nirwan Ansari, and Hong Ren. 1994. A genetic algorithm for
multiprocessor scheduling. IEEE Transactions on parallel and distributed systems
5, 2 (1994), 113–120.
[16] Eric Jones, Travis Oliphant, Pearu Peterson, and others. 2001–. SciPy: Open
source scientific tools for Python. (2001–). http://www.scipy.org/
[17] Jérôme Lelong, Valentin Reis, and Denis Trystram. 2017. Tuning EASY-Backfilling
Queues. In 21st Workshop on Job Scheduling Strategies for Parallel Processing.
[18] Uri Lublin and Dror G Feitelson. 2003. The workload on parallel supercomputers:
modeling the characteristics of rigid jobs. J. Parallel and Distrib. Comput. 63, 11
(2003), 1105–1122.
[19] Ahuva W. Mu’alem and Dror G. Feitelson. 2001. Utilization, predictability, workloads, and user runtime estimates in scheduling the IBM SP2 with backfilling.
IEEE Transactions on Parallel and Distributed Systems 12, 6 (2001), 529–543.
[20] Bill Nitzberg, Jennifer M Schopf, and James Patton Jones. 2004. PBS Pro: Grid
computing and scheduling attributes. In Grid resource management. Springer,
183–190.
[21] J. D. Owens, M. Houston, D. Luebke, S. Green, J. E. Stone, and J. C. Phillips. 2008.
GPU computing. Proc. IEEE 96, 5 (2008), 879–899.
[22] Nikela Papadopoulou, Georgios Goumas, and Nectarios Koziris. 2015. A machinelearning approach for communication prediction of large-scale applications.
In Cluster Computing (CLUSTER), 2015 IEEE International Conference on. IEEE,
120–123.
[23] Dejan Perkovic and Peter J Keleher. 2000. Randomization, speculation, and
adaptation in batch schedulers. In Proceedings of the 2000 ACM/IEEE conference
on Supercomputing. IEEE Computer Society, 7.
[24] Michael L. Pinedo. 2008. Scheduling: Theory, Algorithms, and Systems (3rd ed.).
Springer Publishing Company, Incorporated.
[25] Harmel Karam Singh and Abdou Youssef. 1995. Mapping and scheduling heterogeneous task graphs using genetic algorithms. Master’s thesis. George Washington
University.
[26] Garrick Staples. 2006. TORQUE resource manager. In Proceedings of the 2006
ACM/IEEE conference on Supercomputing. ACM, 8.
[27] Achim Streit. 2001. The self-tuning dynP job-scheduler. In Parallel and Distributed
Processing Symposium., Proceedings International, IPDPS 2002, Abstracts and CDROM. IEEE, 8–pp.
[28] Wei Tang, Zhiling Lan, Narayan Desai, and Daniel Buettner. 2009. Fault-aware,
utility-based job scheduling on BlueGene/P systems. In Cluster Computing and
Workshops, 2009. CLUSTER’09. IEEE International Conference on. IEEE, 1–10.
[29] Dan Tsafrir, Yoav Etsion, and Dror G Feitelson. 2005. Modeling user runtime estimates. In Workshop on Job Scheduling Strategies for Parallel Processing. Springer,
1–35.
[30] Fatos Xhafa and Ajith Abraham. 2010. Computational models and heuristic
methods for Grid scheduling problems. Future generation computer systems 26, 4
(2010), 608–621.
[31] Andy B Yoo, Morris A Jette, and Mark Grondona. 2003. Slurm: Simple linux
utility for resource management. In Workshop on Job Scheduling Strategies for
Parallel Processing. Springer, 44–60.
