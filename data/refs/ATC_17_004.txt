[1] M. Bjørling, J. Axboe, D. Nellans, and P. Bonnet. Linux Block
IO: Introducing Multi-queue SSD Access on Multi-core Systems.
In Proceedings of the 6th International Systems and Storage Conference, SYSTOR ’13, pages 22:1–22:10, New York, NY, USA,
2013. ACM.

[2] S. Brin and L. Page. The Anatomy of a Large-scale Hypertextual
Web Search Engine. In Proceedings of the Seventh International
Conference on World Wide Web 7, Amsterdam, The Netherlands,
1998.

[3] D. Campello, H. Lopez, R. Koller, R. Rangaswami, and
L. Useche. Non-blocking Writes to Files. In 13th USENIX Conference on File and Storage Technologies (FAST 15), pages 151–
165, Santa Clara, CA, Feb. 2015. USENIX Association.

[4] A. M. Caulfield, A. De, J. Coburn, T. I. Mollow, R. K. Gupta,
and S. Swanson. Moneta: A High-Performance Storage Array
Architecture for Next-Generation, Non-volatile Memories. In
Proceedings of the 2010 43rd Annual IEEE/ACM International
Symposium on Microarchitecture, MICRO ’43, pages 385–395,
Washington, DC, USA, 2010. IEEE Computer Society.

[5] A. M. Caulfield, T. I. Mollov, L. A. Eisner, A. De, J. Coburn, and
S. Swanson. Providing Safe, User Space Access to Fast, Solid
State Disks. In Proceedings of the Seventeenth International Conference on Architectural Support for Programming Languages
and Operating Systems, ASPLOS XVII, pages 387–400, New
York, NY, USA, 2012. ACM.

[6] M. Chen, D. Hildebrand, H. Nelson, J. Saluja, A. S. H. Subramony, and E. Zadok. vNFS: Maximizing NFS Performance with
Compounds and Vectorized I/O. In 15th USENIX Conference on
File and Storage Technologies (FAST 17), pages 301–314, Santa
Clara, CA, 2017. USENIX Association.

[7] R. Chen, J. Shi, Y. Chen, and H. Chen. PowerLyra: Differentiated Graph Computation and Partitioning on Skewed Graphs.
In Proceedings of the Tenth European Conference on Computer
Systems.

[8] T. E. Denehy, A. C. Arpaci-Dusseau, and R. H. Arpaci-Dusseau.
Bridging the Information Gap in Storage Protocol Stacks. In
Proceedings of the General Track of the Annual Conference on
USENIX Annual Technical Conference, ATEC ’02, pages 177–
190, Berkeley, CA, USA, 2002. USENIX Association.

[9] Disk
Controller
Queue-Depth.
http:
//www.yellow-bricks.com/2014/04/17/
disk-controller-features-and-queue-depth/, 2016.

[10] EXT4 File System.
https://ext4.wiki.kernel.org/
index.php/Main_Page, 2016.

[11] Facebook RocksDB. http://rocksdb.org/, 2016.

[12] Flexible I/O Tester. https://github.com/axboe/fio, 2016.

[13] A. P. Foong, B. Veal, and F. T. Hady. Towards SSD-Ready Enterprise Platforms. In VLDB, 2010.

[14] Graph500. http://www.graph500.org/.

[15] C. Jonathan. JLS: Increasing VFS Scalability. https://lwn.
net/Articles/360199/. 2009.

[16] C. Jonathan. Dcache scalability and RCU-walk. https://lwn.
net/Articles/419811/. 2010.

[17] J. Kang, B. Zhang, T. Wo, W. Yu, L. Du, S. Ma, and J. Huai.
SpanFS: A Scalable File System on Fast Storage Devices. In
2015 USENIX Annual Technical Conference (USENIX ATC 15),
pages 249–261, Santa Clara, CA, 2015. USENIX Association.

[18] H.-J. Kim, Y.-S. Lee, and J.-S. Kim. NVMeDirect: A User-space
I/O Framework for Application-specific Optimization on NVMe
SSDs. In 8th USENIX Workshop on Hot Topics in Storage and
File Systems (HotStorage 16), Denver, CO, June 2016. USENIX
Association.

[19] R. Koller and R. Rangaswami. I/O Deduplication: Utilizing Content Similarity to Improve I/O Performance. In 8th USENIX Conference on File and Storage Technologies (FAST 10). USENIX
Association, Feb. 2010.

[20] P. Kumar and H. H. Huang. G-Store: High-Performance Graph
Store for Trillion-Edge Processing. In Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis (SC), 2016.

[21] A. Kyrola, G. Blelloch, and C. Guestrin. Graphchi: Large-Scale
Graph Computation on Just a PC. In OSDI, 2012.

[22] W. Li, G. Jean-Baptise, J. Riveros, G. Narasimhan, T. Zhang, and
M. Zhao. CacheDedup: In-line Deduplication for Flash Caching.
In 14th USENIX Conference on File and Storage Technologies
(FAST 16), pages 301–314, Santa Clara, CA, Feb. 2016. USENIX
Association.

[23] H. Liu and H. H. Huang. Graphene: Fine-Grained IO Management for Graph Computing. In Proceedings of the 15th USENIX
Conference on File and Storage Technologies (FAST), 2017.

[24] W. Long. [PATCH] dcache: Translating dentry into pathname
without taking rename lock. https://lkml.org/lkml/2013/
9/4/471. 2013.

[25] L. Lu, T. S. Pillai, A. C. Arpaci-Dusseau, and R. H. ArpaciDusseau. WiscKey: Separating Keys from Values in SSDconscious Storage. In 14th USENIX Conference on File and Storage Technologies (FAST 16), pages 133–148, Santa Clara, CA,
Feb. 2016. USENIX Association.

[26] S. Maass, C. Min, S. Kashyap, W. Kang, M. Kumar, and T. Kim.
Mosaic: Processing a Trillion-Edge Graph on a Single Machine.
In Proceedings of the Twelfth European Conference on Computer
Systems, EuroSys ’17, 2017.

[27] S. Mandal, G. Kuenning, D. Ok, V. Shastry, P. Shilane, S. Zhen,
V. Tarasov, and E. Zadok. Using Hints to Improve Inline Blocklayer Deduplication. In 14th USENIX Conference on File and
Storage Technologies (FAST 16), pages 315–322, Santa Clara,
CA, Feb. 2016. USENIX Association.

[28] C. Min, S. Kashyap, S. Maass, and T. Kim. Understanding Manycore Scalability of File Systems. In 2016 USENIX Annual Technical Conference (USENIX ATC 16), pages 71–85, Denver, CO,
2016. USENIX Association.

[29] A. Montresor, F. De Pellegrini, and D. Miorandi. Distributed
k-Core Decomposition. IEEE Transactions on Parallel and Distributed Systems, 2013.

[30] J. Oh, W.-S. Han, H. Yu, and X. Jiang. Fast and Robust Parallel SGD Matrix Factorization. In Proceedings of the 21th ACM
SIGKDD International Conference on Knowledge Discovery and
Data Mining, pages 865–874. ACM, 2015.

[31] A. Roy, L. Bindschaedler, J. Malicevic, and W. Zwaenepoel.
Chaos: Scale-out Graph Processing from Secondary Storage. In
Proceedings of the 25th Symposium on Operating Systems Principles (SOSP), 2015.

[32] A. Roy, I. Mihailovic, and W. Zwaenepoel. X-Stream: Edgecentric Graph Processing using Streaming Partitions. In Proceedings of the ACM Symposium on Operating Systems Principles (SOSP), 2013.

[33] A. E. Sariyüce, B. Gedik, G. Jacques-Silva, K.-L. Wu, and Ü. V.
Catalyürek. Streaming algorithms for k-core decomposition. Proceedings of the VLDB Endowment, 6(6):433–444, 2013.

[34] E. Seppanen, M. T. O’Keefe, and D. J. Lilja. High Performance
Solid State Storage Under Linux. In 2010 IEEE 26th Symposium
on Mass Storage Systems and Technologies (MSST), pages 1–12,
May 2010.

[35] Y. Shiloach and U. Vishkin. An O(log n) Parallel Connectivity
Algorithm. Journal of Algorithms, 1982.

[36] D. I. Shin, Y. J. Yu, H. S. Kim, J. W. Choi, D. Y. Jung, and H. Y.
Yeom. Dynamic Interval Polling and Pipelined Post I/O Processing for Low-Latency Storage Class Memory. In Presented as part
of the 5th USENIX Workshop on Hot Topics in Storage and File
Systems, San Jose, CA, 2013. USENIX.

[37] W. Shin, Q. Chen, M. Oh, H. Eom, and H. Y. Yeom. OS I/O
Path Optimizations for Flash Solid-state Drives. In Proceedings
of the 2014 USENIX Conference on USENIX Annual Technical
Conference, USENIX ATC’14, pages 483–488, Berkeley, CA,
USA, 2014. USENIX Association.

[38] SNIA.
http://nvmexpress.org/wp-content/uploads/
2013/04/NVM_whitepaper.pdf,.

[39] Specification for Supermicro
Product(X9DRG-HF).
http://www.supermicro.com/products/motherboard/
Xeon/C600/X9DRG-HF.cfm, 2016.

[40] I. Stefanovici, B. Schroeder, G. O’Shea, and E. Thereska. sRoute:
Treating the Storage Stack Like a Network. In Proceedings of
the 14th Usenix Conference on File and Storage Technologies,
FAST’16, pages 197–212, Berkeley, CA, USA, 2016. USENIX
Association.

[41] UMass Trace Repository. http://traces.cs.umass.edu/
index.php/Storage/Storage, 2012.

[42] K. Vora, G. Xu, and R. Gupta. Load the Edges You Need: A
Generic I/O Optimization for Disk-based Graph Processing. In
2016 USENIX Annual Technical Conference (USENIX ATC 16),
pages 507–522, Denver, CO, 2016. USENIX Association.

[43] D. Vučinić, Q. Wang, C. Guyot, R. Mateescu, F. Blagojević,
L. Franca-Neto, D. L. Moal, T. Bunker, J. Xu, S. Swanson, and
Z. Bandić. DC Express: Shortest Latency Protocol for Reading Phase Change Memory over PCI Express. In Proceedings of
the 12th USENIX Conference on File and Storage Technologies
(FAST 14), pages 309–315, Santa Clara, CA, 2014. USENIX.

[44] H. Wang and P. Varman. Balancing Fairness and Efficiency in
Tiered Storage Systems with Bottleneck-Aware Allocation. In
Proceedings of the 12th USENIX Conference on File and Storage
Technologies (FAST 14), pages 229–242, Santa Clara, CA, 2014.
USENIX.

[45] J. Yang, D. B. Minturn, and F. Hady. When Poll is Better Than
Interrupt. In Proceedings of the 10th USENIX Conference on File
and Storage Technologies, FAST’12, pages 3–3, Berkeley, CA,
USA, 2012. USENIX Association.

[46] Y. J. Yu, D. I. Shin, W. Shin, N. Y. Song, J. W. Choi, H. S. Kim,
H. Eom, and H. Y. Yeom. Optimizing the Block I/O Subsystem
for Fast Storage Devices. ACM Transaction on Computer System
(TOCS), 32(2):6:1–6:48, June 2014.

[47] Y. J. Yu, D. I. Shin, W. Shin, N. Y. Song, H. Eom, and H. Y.
Yeom. Exploiting Peak Device Throughput from Random Access
Workload. In Proceedings of the 4th USENIX Conference on Hot
Topics in Storage and File Systems, HotStorage’12, pages 7–7,
Berkeley, CA, USA, 2012. USENIX Association.

[48] J. Zhang, J. Shu, and Y. Lu. ParaFS: A Log-Structured File System to Exploit the Internal Parallelism of Flash Devices. In 2016
USENIX Annual Technical Conference (USENIX ATC 16), pages
87–100, Denver, CO, 2016. USENIX Association.

[49] D. Zheng, R. Burns, and A. S. Szalay. Toward Millions of File
System IOPS on Low-cost, Commodity Hardware. In Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis, SC ’13, pages 69:1–
69:12, New York, NY, USA, 2013. ACM.

[50] D. Zheng, D. Mhembere, R. Burns, J. Vogelstein, C. E. Priebe,
and A. S. Szalay. FlashGraph: Processing Billion-Node Graphs
on an Array of Commodity SSDs. In Proceedings of the 13th
USENIX Conference on File and Storage Technologies (FAST),
2015.

[51] X. Zhu, W. Han, and W. Chen. GridGraph: Large-scale Graph
Processing on a Single Machine Using 2-level Hierarchical Partitioning. In Proceedings of the USENIX Conference on Usenix
Annual Technical Conference, 2015.
