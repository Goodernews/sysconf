[1] NVM Express. http: //www.nvmexpress.org/, 2017.

[2] Apache. Apache Giraph. http://giraph.apache.org/,
2011.

[3] L. Becchetti, P. Boldi, C. Castillo, and A. Gionis. Efficient
Semi-streaming Algorithms for Local Triangle Counting in
Massive Graphs. In Proceedings of the 14th ACM SIGKDD
International Conference on Knowledge Discovery and Data
Mining, KDD ’08, pages 16-24, 2008.

[4] Bell Labs. intro - introduction to the Plan 9 File Protocol, 9P.
http: //man.cat-v.org/plan_9/5/intro, 2016.

[5] R. Bellman. On a Routing Problem. Technical report, DTIC
Document, 1956.

[6] P. Boldi, M. Rosa, M. Santini, and S. Vigna. Layered Label
Propagation: A MultiResolution Coordinate-Free Ordering for
Compressing Social Networks. In Proceedings of the 20th
International World Wide Web Conference (WWW), pages 587-—
596, Hyderabad, India, Apr. 2011.

[7] D. Chakrabarti, Y. Zhan, and C. Faloutsos. R-MAT: A Recursive Model for Graph Mining. In Proceedings of the 2004
SIAM International Conference on Data Mining, pages 442446, Lake Buena Vista, FL, Apr 2004.

[8] S. Che. GasCL: A vertex-centric graph model for GPUs.
In Proceedings of High Performance Extreme Computing
Conference (HPEC), 2014 IEEE, pages 1-6, Sept 2014.

[9] L. Chen, X. Huo, B. Ren, S. Jain, and G. Agrawal. Efficient
and Simplified Parallel Graph Processing over CPU and MIC.
In Proceedings of the 2015 IEEE International Parallel and
Distributed Processing Symposium, IPDPS ’ 15, pages 819-828,
May 2015.

[10] R. Chen, J. Shi, Y. Chen, and H. Chen. PowerLyra: Differentiated Graph Computation and Partitioning on Skewed Graphs.
In Proceedings of the 10th European Conference on Computer
Systems (EuroSys), pages 1:1-1:15, Bordeaux, France, Apr.
2015.

[11] A. Ching, S. Edunov, M. Kabiljo, D. Logothetis, and
S. Muthukrishnan. One Trillion Edges: Graph Processing
at Facebook-scale. Proceedings of the VLDB Endowment, 8
(12):1804-1815, Aug 2015.

[12] A. T. Clements, M. F. Kaashoek, N. Zeldovich, R. T. Morris,
and E. Kohler. The Scalable Commutativity Rule: Designing
Scalable Software for Multicore Processors. In Proceedings
of the 24th ACM Symposium on Operating Systems Principles
(SOSP), pages 1-17, Farmington, PA, Nov. 2013.

[13] J. Dean and S. Ghemawat. MapReduce: Simplified Data Processing on Large Clusters. In Proceedings of the 6th USENIX
Symposium on Operating Systems Design and Implementation
(OSDI), San Francisco, CA, Dec. 2004.

[14] M. Faloutsos, P. Faloutsos, and C. Faloutsos. On Power-law
Relationships of the Internet Topology. In Proceedings of
the Conference on Applications, Technologies, Architectures,
and Protocols for Computer Communication, SIGCOMM ’99,
pages 251-262, New York, NY, USA, 1999. ACM.

[15] M. R. Garey, D. S. Johnson, and L. Stockmeyer. Some
Simplified NP-complete Problems. In Proceedings of the Sixth
Annual ACM Symposium on Theory of Computing, STOC ’74,
pages 47-63, New York, NY, USA, 1974. ACM.

[16] J. E. Gonzalez, Y. Low, H. Gu, D. Bickson, and C. Guestrin.
PowerGraph: Distributed Graph-parallel Computation on Natural Graphs. In Proceedings of the 10th USENIX Symposium on
Operating Systems Design and Implementation (OSDD), pages
17-30, Hollywood, CA, Oct. 2012.

[17] J. E. Gonzalez, R. S. Xin, A. Dave, D. Crankshaw, M. J.
Franklin, and I. Stoica. GraphX: Graph Processing in a
Distributed Dataflow Framework. In Proceedings of the
11th USENIX Symposium on Operating Systems Design and
Implementation (OSDJ), pages 599-613, Broomfield, Colorado,
Oct. 2014.

[18] W.-S. Han, S. Lee, K. Park, J.-H. Lee, M.-S. Kim, J. Kim, and
H. Yu. TurboGraph: A Fast Parallel Graph Engine Handling
Billion-scale Graphs in a Single PC. In Proceedings of the
19th ACM SIGKDD International Conference on Knowledge
Discovery and Data Mining, KDD ’ 13, pages 77-85, 2013.

[19] D. Hilbert. Uber die stetige Abbildung einer Linie auf ein
Flachenstiick. Mathematische Annalen, 38(3):459 — 460, 1891.

[20] S. Hong, T. Oguntebi, and K. Olukotun. Efficient Parallel
Graph Exploration on Multi-Core CPU and GPU. In Proceedings of the 2011 International Conference on Parallel Architectures and Compilation Techniques (PACT), pages 78-88,
2011.

[21] Intel Corporation. Intel Xeon Phi Coprocessor 7120A.
http: //ark.intel .com/products/80555/Intel-XeonPhi-Coprocessor-7120A- 16GB- 1238-GHz-61-core,
2012.

[22] Intel Corporation. Intel SSD 750 Series, 1.2 TB.
http: //ark.intel .com/products/86741/IntelSSD-750-Series-1_2TB-2_5in-PCIe-3_0-20nm-MLC,
2015.

[23] Intel Corporation. Intel SSD DC P3608 Series. http:
//waew.intel.com/content/www/us/en/solid-statedrives/solid-state-drives-dc-p3608-series.html,
2015.

[24] Intel Corporation. Intel Optane NVMe. http:
//www.intel.com/content/www/us/en/architecture
and-technology/non-volatile-memory -html, 2017.

[25] Intel Corporation. Intel QuickPath Interconnect. http:
//www.intel.com/content/www/us/en/io/quickpathtechnology/quickpath-technology-general .html,
2017.

[26] Intel Corporation. Intel Xeon Phi Knights Landing
(KNL). http://www. intel.com/content/www/us/en/
processors/xeon/xeon- phi-processor-productbrief. html, 2017.

[27] U. Kang, C. E. Tsourakakis, and C. Faloutsos. PEGASUS: A
Peta-Scale Graph Mining System Implementation and Observations. In Proceedings of the 2009 Ninth IEEE International
Conference on Data Mining, ICDM ’09, pages 229-238. IEEE
Computer Society, 2009.

[28] U. Kang, D. Chau, and C. Faloutsos. Inference of Beliefs on
Billion-Scale Graphs. The 2nd Workshop on Large-scale Data
Mining: Theory and Applications, 2010.

[29] P. Kennedy. Avago and PLX - Future of PCle? http://
www. servethehome .com/avago-plx-future-pcie, Aug
2015.

[30] Z. Khayyat, K. Awara, A. Alonazi, H. Jamjoom, D. Williams,
and P. Kalnis. Mizan: A System for Dynamic Load Balancing
in Large-scale Graph Processing. In Proceedings of the 8th
European Conference on Computer Systems (EuroSys), pages
169-182, Prague, Czech Republic, Apr. 2013.

[31] F. Khorasani, K. Vora, R. Gupta, and L. N. Bhuyan. Cusha:
Vertex-centric graph processing on gpus. In Proceedings of the
23rd International Symposium on High-performance Parallel
and Distributed Computing, HPDC ’14, pages 239-252, New
York, NY, USA, 2014. ACM.

[32] F. Khorasani, R. Gupta, and L. N. Bhuyan. Scalable SIMDEfficient Graph Processing on GPUs. In Proceedings of
2015 International Conference on Parallel Architecture and
Compilation (PACT), pages 39-50, Oct 2015.

[33] M.-S. Kim, K. An, H. Park, H. Seo, and J. Kim. GTS:
A Fast and Scalable Graph Processing Method Based on
Streaming Topology to GPUs. In Proceedings of the 2016
ACM SIGMOD/PODS Conference, San Francisco, CA, USA,
June 2016.

[34] P. Kumar and H. H. Huang. G-store: High-performance Graph
Store for Trillion-edge Processing. In Proceedings of the 2016
International Conference for High Performance Computing,
Networking, Storage and Analysis (SC’ 16), pages 71:1-71:12,
Salt Lake City, UT, Nov. 2016.

[35] H. Kwak, C. Lee, H. Park, and S. Moon. What is Twitter,
a Social Network or a News Media? In Proceedings of the
19th International World Wide Web Conference (WWW), pages
591-600, Raleigh, NC, Apr. 2010.

[36] A. Kyrola, G. Blelloch, and C. Guestrin. GraphChi: Largescale Graph Computation on Just a PC. In Proceedings of the
10th USENIX Symposium on Operating Systems Design and
Implementation (OSDI), pages 31-46, Hollywood, CA, Oct.
2012.

[37] Y. Low, J. E. Gonzalez, A. Kyrola, D. Bickson, C. Guestrin,
and J. M. Hellerstein. GraphLab: A New Framework For
Parallel Machine Learning. In Proceedings of the TwentySixth Conference on Uncertainty in Artificial Intelligence (UAI
2010), pages 340-349, Catalina Island, CA, July 2010.

[38] Y. Low, D. Bickson, J. Gonzalez, C. Guestrin, A. Kyrola, and
J. M. Hellerstein. Distributed GraphLab: A Framework for
Machine Learning and Data Mining in the Cloud. Proceedings
of the VLDB Endowment, 5(8):716-727, Aug. 2012.

[39] A. Lumsdaine, D. Gregor, B. Hendrickson, and J. Berry.
Challenges in Parallel Graph Processing. Parallel Processing
Letters, 17(01):5—20, 2007.

[40] G. Malewicz, M. H. Austern, A. J. Bik, J. C. Dehnert, I. Horn,
N. Leiser, and G. Czajkowski. Pregel: A System for Largescale Graph Processing. In Proceedings of the 2010 ACM
SIGMOD/PODS Conference, pages 135-146, Indianapolis, IN,
June 2010.

[41] J. Malicevic, A. Roy, and W. Zwaenepoel. Scale-up Graph
Processing in the Cloud: Challenges and Solutions. In Proceedings of the Fourth International Workshop on Cloud Data
and Platforms, CloudDP ’14, pages 5:1-5:6, New York, NY,
USA, 2014. ACM.

[42] J. Malicevic, $. Dulloor, N. Sundaram, N. Satish, J. Jackson,
and W. Zwaenepoel. Exploiting NVM in Large-scale Graph
Analytics. In Proceedings of the 3rd Workshop on Interactions
of NVM/FLASH with Operating Systems and Workloads, pages
2:1-2:9, New York, NY, USA, 2015. ACM.

[43] F McSherry and M. Schwarzkopf. The impact of fast
networks on graph analytics. https://github.com/
frankmcsherry/blog/blob/master/posts/2015-0731.md, Jul 2015.

[44] F. McSherry, M. Isard, and D. G. Murray. Scalability! But
at what COST? In 15th USENIX Workshop on Hot Topics in
Operating Systems (HotOS XV), Kartause Ittingen, Switzerland,
May 2015.

[45] R. Meusel, O. Lehmberg, C. Bizer, and S. Vigna. Web Data
Commons - Hyperlink Graphs. http: //webdatacommons .
org/hyperlinkgraph/, 2014.

[46] D. G. Murray, F McSherry, R. Isaacs, M. Isard, P. Barham, and.
M. Abadi. Naiad: A Timely Dataflow System. In Proceedings
of the 24th ACM Symposium on Operating Systems Principles
(SOSP), pages 439-455, Farmington, PA, Nov. 2013.

[47] L. Nai, Y. Xia, I. G. Tanase, H. Kim, and C.-Y. Lin. GraphBIG:
Understanding Graph Computing in the Context of Industrial
Solutions. In Proceedings of the 2015 International Conference
for High Performance Computing, Networking, Storage and
Analysis (SC’15), pages 69:1-69:12, Austin, TX, Nov. 2015.

[48] D. Nguyen, A. Lenharth, and K. Pingali. A Lightweight Infrastructure for Graph Analytics. In Proceedings of the TwentyFourth ACM Symposium on Operating Systems Principles,
pages 456-471, Farmington, PA, Nov. 2013.

[49] Paolo Boldi and Sebastiano Vigna. The WebGraph Framework
I: Compression Techniques. In Proceedings of the 19th
International World Wide Web Conference (WWW), pages 595601, New York, NY, Apr. 2004.

[50] R. Pearce, M. Gokhale, and N. M. Amato. Multithreaded
Asynchronous Graph Traversal for In-Memory and SemiExternal Memory. In Proceedings of the 2010 International
Conference for High Performance Computing, Networking,

Storage and Analysis (SC’10), pages 1-11, New Orleans, LA,
Nov. 2010.

[51] V. Prabhakaran, M. Wu, X. Weng, F. McSherry, L. Zhou, and
M. Haridasan. Managing Large Graphs on Multi-cores with
Graph Awareness. In Proceedings of the 2012 USENIX Annual
Technical Conference (ATC), pages 41-52, Boston, MA, June
2012.

[52] A. Roy, I. Mihailovic, and W. Zwaenepoel. X-Stream: Edgecentric Graph Processing Using Streaming Partitions. In
Proceedings of the 24th ACM Symposium on Operating Systems Principles (SOSP), pages 472-488, Farmington, PA, Nov.
2013.

[53] A. Roy, L. Bindschaedler, J. Malicevic, and W. Zwaenepoel.
Chaos: Scale-out Graph Processing from Secondary Storage.
In Proceedings of the 25th ACM Symposium on Operating
Systems Principles (SOSP), Monterey, CA, Oct. 2015.

[54] D. Sengupta, S. L. Song, K. Agarwal, and K. Schwan.
GraphReduce: Processing Large-scale Graphs on Acceleratorbased Systems. In Proceedings of the 2015 International Conference for High Performance Computing, Networking, Storage and Analysis (SC’15), pages 28:1-28:12, Austin, TX, Nov.
2015.

[55] J. Shun and G. E. Blelloch. Ligra: A Lightweight Graph
Processing Framework for Shared Memory. In Proceedings
of the 18th ACM Symposium on Principles and Practice of
Parallel Programming (PPOPP), pages 135-146, Shenzhen,
China, Feb. 2013.

[56] J. Shun, L. Dhulipala, and G. E. Blelloch. Smaller and
Faster: Parallel Processing of Compressed Graphs with Ligrat.
In Proceedings of the 2015 Data Compression Conference,
DCC °15, pages 403-412, Washington, DC, USA, 2015. IEEE
Computer Society.

[57] G. M. Slota, S. Rajamanickam, and K. Madduri. HighPerformance Graph Analytics on Manycore Processors. In
Proceedings of the 2015 IEEE International Parallel and
Distributed Processing Symposium (IPDPS), pages 17-27,
May 2015.

[58] N. Sundaram, N. Satish, M. M. A. Patwary, S. R. Dulloor, M. J.
Anderson, S. G. Vadlamudi, D. Das, and P. Dubey. GraphMat: High Performance Graph Analytics Made Productive.
Proceedings of the VLDB Endowment, 8(11):1214—1225, Jul
2015.

[59] K. Wang, G. Xu, Z. Su, and Y. D. Liu. GraphQ: Graph
Query Processing with Abstraction Refinement: Scalable and
Programmable Analytics over Very Large Graphs on a Single
PC. In Proceedings of the 2015 USENIX Annual Technical
Conference (ATC), pages 387-401, Santa Clara, CA, July 2015.

[60] M. Wu, F. Yang, J. Xue, W. Xiao, Y. Miao, L. Wei, H. Lin,
Y. Dai, and L. Zhou. GraM: Scaling Graph Computation to the
Trillions. In Proceedings of the 6th ACM Symposium on Cloud
Computing (SoCC), Kohala Coast, Hawaii, Aug. 2015.

[61] C. Xie, R. Chen, H. Guan, B. Zang, and H. Chen. SYNC or
ASYNC: Time to Fuse for Distributed Graph-parallel Computation. In Proceedings of the 20th ACM Symposium on
Principles and Practice of Parallel Programming (PPOPP),
pages 194-204, San Francisco, CA, Feb. 2015.
[62] M. Zaharia, M. Chowdhury, T. Das, A. Dave, J. Ma, M. McCauly, M. J. Franklin, S. Shenker, and I. Stoica. Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory
Cluster Computing. In Proceedings of the 9th USENIX Symposium on Networked Systems Design and Implementation
(NSDI), pages 15-28, San Jose, CA, Apr. 2012.

[63] K. Zhang, R. Chen, and H. Chen. NUMA-aware Graphstructured Analytics. In Proceedings of the 20th ACM Symposium on Principles and Practice of Parallel Programming
(PPOPP), pages 183-193, San Francisco, CA, Feb. 2015.

[64] T. Zhang, J. Zhang, W. Shu, M.-Y. Wu, and X. Liang. Efficient
graph computation on hybrid CPU and GPU systems. The
Journal of Supercomputing, 71(4):1563—1586, 2015.

[65] D. Zheng, D. Mhembere, R. Burns, J. Vogelstein, C. E. Priebe,
and A. S. Szalay. FlashGraph: Processing Billion-Node Graphs
on an Array of Commodity SSDs. In 13th USENIX Conference
on File and Storage Technologies (FAST 15), pages 45-58,
Santa Clara, CA, Feb. 2015.

[66] X. Zhu, W. Han, and W. Chen. GridGraph: Large-scale Graph
Processing on a Single Machine Using 2-level Hierarchical
Partitioning. In Proceedings of the 2015 USENIX Annual
Technical Conference (ATC), pages 375-386, Santa Clara, CA,
July 2015.

[67] X. Zhu, W. Chen, W. Zheng, and X. Ma. Gemini: A
Computation-Centric Distributed Graph Processing System.
In Proceedings of the 12th USENIX Symposium on Operating
Systems Design and Implementation (OSDI), pages 301-316,
Savannah, GA, Nov. 2016.