[1] Y. Angel. obfs4 (the obfourscator), 2014. https://github.com/Yawning/

obfs4/blob/master/doc/obfs4-spec.txt.

[2] R. Dingledine and N. Mathewson. Tor protocol speciﬁcation. https:

//gitweb.torproject.org/torspec.git/tree/tor-spec.txt.

[3] Z. Durumeric, D. Adrian, A. Mirian, M. Bailey, and J. A. Halderman. A
Search Engine Backed by Internet-Wide Scanning. In ACM Conference
on Computer and Communications Security, 2015.

[4] Z. Durumeric, E. Wustrow, and J. A. Halderman. ZMap: Fast Internet-
In USENIX Security

wide Scanning and Its Security Applications.
Symposium, 2013.

[5] K. P. Dyer, S. E. Coull, T. Ristenpart, and T. Shrimpton. Protocol
Misidentiﬁcation Made Easy with Format-Transforming Encryption. In
ACM Conference on Computer and Communications Security, 2013.

[6] T. Elahi, G. Danezis, and I. Goldberg. PrivEx: Private collection of
In ACM

trafﬁc statistics for anonymous communication networks.
Conference on Computer and Communications Security, 2014.

[7] R. Ensaﬁ, D. Fiﬁeld, P. Winter, N. Feamster, N. Weaver, and V. Paxson.
Examining How the Great Firewall Discovers Hidden Circumvention
Servers. In ACM Internet Measurement Conference, 2015.

[8] D. Fiﬁeld, C. Lan, R. Hynes, P. Wegmann, and V. Paxson. Blocking-
In Privacy En-

Resistant Communication through Domain Fronting.
hancing Technologies Symposium, 2015.

[9] Freedom House. Freedom on the Net, 2015. https://freedomhouse.org/

report/freedom-net/freedom-net-2015.

[10] A. Houmansadr, C. Brubaker, and V. Shmatikov.

Dead: Observing Unobservable Network Communications.
Symposium on Security and Privacy, 2013.

The Parrot Is
In IEEE

[11] A. Houmansadr, E. L. Wong, and V. Shmatikov. No direction home:
In Network and Distributed

[11] The true cost of routing around decoys.
System Security Symposium, 2014.
[12] James Ball. NSA’s PRISM surveillance program: how it works and
what it can do , 2013. http://www.theguardian.com/world/2013/jun/08/
nsa-prism-server-collection-facebook-google.

[13] R. Jansen and A. Johnson. Safely measuring tor. In ACM Conference

on Computer and Communications Security, 2016.
[14] J. Karlin, D. Ellard, A. W. Jackson, C. E. Jones, G. Lauer, D. Mankins,
and W. T. Strayer. Decoy routing: Toward unblockable internet com-
munication. In USENIX Workshop on Free and Open Communications
on the Internet, 2011.

[15] Z. Ling, J. Luo, W. Yu, M. Yang, and X. Fu. Extensive Analysis and
In IEEE

Large-Scale Empirical Evaluation of Tor Bridge Discovery.
INFOCOM, 2012.

[16] K. Loesing. Sanitize TCP ports in bridge descriptors. https://trac.

torproject.org/projects/tor/ticket/19317.

[17] K. Loesing and N. Mathewson. BridgeDB speciﬁcation. https://gitweb.

torproject.org/torspec.git/tree/bridgedb-spec.txt.
J. Matherly. Shodan, 2013. https://www.shodan.io/.

[18]
[19] S. Matic, P. Kotzias, and J. Caballero. Caronte: Detecting Location
In ACM Conference

Leaks for Deanonymizing Tor Hidden Services.
on Computer and Communications Security, 2015.
[20] J. McLachlan and N. Hopper. On the Risks of Serving Whenever you
In ACM
Surf: Vulnerabilities in Tor’s Blocking Resistance Design.
Workshop on Privacy in the Electronic Society, 2009.



[21] H. M. Moghaddam, B. Li, M. Derakhshani, and I. Goldberg. Skype-
Morph: Protocol Obfuscation for Tor Bridges. In ACM Conference on
Computer and Communications Security, 2012.

[22] M. Schuchard, J. Geddes, C. Thompson, and N. Hopper. Routing
Around Decoys. In ACM Conference on Computer and Communications
Security, 2012.

[23] K. Shubber. A simple guide to GCHQ’s internet surveillance pro-
gramme Tempora, 2013. http://www.wired.co.uk/news/archive/2013-06/
24/gchq-tempora-101.

[24] R. Smits, D. Jain, S. Pidcock,

I. Goldberg, and U. Hengartner.
BridgeSPA: Improving Tor Bridges with Single Packet Authorization.
In ACM Workshop on Privacy in the Electronic Society, 2011.

[25] Tor Project. CollecTor. https://collector.torproject.org/.
[26] Tor Project. Evaluate, possibly revise, and then implement ideas for TLS
https://trac.torproject.org/projects/tor/ticket/

certiﬁcate normalization.
7145.

[27] Tor Project. Guide to run an obfs4 bridge. https://trac.torproject.org/

projects/tor/wiki/doc/PluggableTransports/obfs4proxy.

[28] Tor Project. obfs3 (the threebfuscator). https://gitweb.torproject.org/
pluggable-transports/obfsproxy.git/tree/doc/obfs3/obfs3-protocol-spec.
txt.

[29] Tor Project. Obfsbridges should be able to “disable” their ORPort.

https://trac.torproject.org/projects/tor/ticket/7349.

[30] Tor Project.

Pluggable transports.

https://www.torproject.org/docs/

pluggable-transports.html.en.

[31] Tor Project. Tor Cloud: Tor bridges in the Amazon cloud. https://cloud.

torproject.org/.

[32] Tor Project. Tor directory protocol, version 3. https://gitweb.torproject.

org/torspec.git/tree/dir-spec.txt.

[33] Tor Project. Tor Manual. https://www.torproject.org/docs/tor-manual.

html.en.

[34] Tor Project.

On
Pluggable Transports,
recent-and-upcoming-developments-pluggable-transports.

upcoming
in
https://blog.torproject.org/blog/

developments

recent
2014.

and

[35] Tor Project, 2016. https://www.torproject.org/.
[36] Tor Project. Tor Metrics, 2016. https://metrics.torproject.org/.
[37] M. C. Tschantz, S. Afroz, D. Fiﬁeld, and V. Paxon. SoK: Towards
Grounding Censorship Circumvention in Empiriscism. In IEEE Sym-
posium on Security & Privacy, 2016.

[38] V. Tsyrklevich.

Internet-wide scanning for bridges.

https://lists.

torproject.org/pipermail/tor-dev/2014-December/007957.html.

[39] L. Wang, K. P. Dyer, A. Akella, T. Ristenpart, and T. Shrimpton.
In ACM Conference

Seeing through Network-Protocol Obfuscation.
on Computer and Communications Security, 2015.

[40] Z. Weinberg, J. Wang, V. Yegneswaran, L. Briesemeister, S. Cheung,
F. Wang, and D. Boneh. StegoTorus: a Camouﬂage Proxy for the Tor
Anonymity System. In ACM Conference on Computer and Communi-
cations Security, 2012.

[41] T. Wilde. Knock knock knockin’ on bridges’ doors, 2012. https://blog.

torproject.org/blog/knock-knock-knockin-bridges-doors.

[42] P. Winter. Scramblesuit protocol speciﬁcation, 2013. https://gitweb.
torproject.org/user/phw/scramblesuit.git/tree/doc/scramblesuit-spec.txt.
Identifying
In USENIX Security

[43] P. Winter, R. Ensaﬁ, K. Loesing, and N. Feamster.

and characterizing Sybils in the Tor network.
Symposium, 2016.

[44] P. Winter and S. Lindskog. How the Great Firewall of China is Blocking
Tor. In USENIX Free and Open Communications on the Internet, 2012.
[45] P. Winter, T. Pulls, and J. Fuss. ScrambleSuit: a Polymorphic Network
Protocol to Circumvent Censorship. In ACM Workshop on Privacy in
the Electronic Society, 2013.
