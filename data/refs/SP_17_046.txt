[1] C. Willems, T. Holz, and F. Freiling, “Toward automated dynamic
malware analysis using CWSandbox,” Security Privacy, IEEE, vol. 5,
no. 2, pp. 32–39, March 2007.
[2] U. Bayer, C. Kruegel, and E. Kirda, “TTAnalyze: A tool for analyzing
malware,” in Proceedings of the 15th European Institute for Computer
Antivirus Research Annual Conference (EICAR), April 2006.
[3] X. Jiang and X. Wang, “‘Out-of-the-box’ monitoring of VM-based
high-interaction honeypots,” in Proceedings of the 10th International
Conference on Recent Advances in Intrusion Detection (RAID), 2007,
pp. 198–218.
[4] H. Yin, D. Song, M. Egele, C. Kruegel, and E. Kirda, “Panorama:
Capturing system-wide information ﬂow for malware detection and
analysis,” in Proceedings of the 14th ACM Conference on Computer and
Communications Security (CCS), 2007, pp. 116–127.
[5] “Anubis: Malware analysis for unknown binaries,” https://anubis.iseclab.
org/.
[6] A. Dinaburg, P. Royal, M. Sharif, and W. Lee, “Ether: Malware analysis
via hardware virtualization extensions,” in Proceedings of the 15th ACM
Conference on Computer and Communications Security (CCS), 2008, pp.
51–62.
[7] “Automated malware analysis: Cuckoo sandbox,” https://cuckoosandbox.
org/.
[8] C. Willems, R. Hund, A. Fobian, D. Felsch, T. Holz, and A. Vasudevan,
“Down to the bare metal: Using processor features for binary analysis,”
in Proceedings of the 28th Annual Computer Security Applications
Conference (ACSAC), 2012, pp. 189–198.
[9] D. Kirat, G. Vigna, and C. Kruegel, “Barecloud: Bare-metal analysisbased evasive malware detection,” in Proceedings of the 23rd USENIX
Security Symposium, 2014, pp. 287–301.
[10] S. Mutti, Y. Fratantonio, A. Bianchi, L. Invernizzi, J. Corbetta, D. Kirat,
C. Kruegel, and G. Vigna, “Baredroid: Large-scale analysis of android
apps on real devices,” in Proceedings of the 31st Annual Computer
Security Applications Conference (ACSAC), December 2015.
[11] J. Oberheide and C. Miller, “Dissecting the Android Bouncer,” 2012,
https://jon.oberheide.org/ﬁles/summercon12-bouncer.pdf.
[12] S. Neuner, V. van der Veen, M. Lindorfer, M. Huber, G. Merzdovnik,
M. Mulazzani, and E. Weippl, “Enter sandbox: Android sandbox comparison,” in Proceedings of the 3rd IEEE Mobile Security Technologies
Workshop (MoST), 2014.
[13] “FireEye Malware Analysis AX Series,” https://www.ﬁreeye.com/
products/malware-analysis.html.
[14] “Blue Coat Malware Analysis Appliance,” https://www.bluecoat.com/
products/malware-analysis-appliance.
[15] “Cisco Anti-Malware System,” http://www.cisco.com/c/en/us/products/
security/web-security-appliance/anti malware index.html.
[16] “FortiNet Advanced Threat Protection (ATP) - FortiSandbox,” http://
www.fortinet.com/products/fortisandbox/index.html.
[17] “McAfee Advanced Threat Defense,” http://www.mcafee.com/us/
products/advanced-threat-defense.aspx.
[18] M. Lindorfer, C. Kolbitsch, and P. Milani Comparetti, “Detecting
environment-sensitive malware,” in Proceedings of the 14th International
Conference on Recent Advances in Intrusion Detection (RAID), 2011,
pp. 338–357.
[19] C. Kolbitsch, “Analyzing environment-aware malware,” 2014,
http://labs.lastline.com/analyzing-environment-aware-malware-a-lookat-zeus-trojan-variant-called-citadel-evading-traditional-sandboxes.
[20] T. Petsas, G. Voyatzis, E. Athanasopoulos, M. Polychronakis, and
S. Ioannidis, “Rage against the virtual machine: Hindering dynamic
analysis of mobile malware,” in Proceedings of the 7th European
Workshop on System Security (EuroSec), April 2014.
[21] A. Kapravelos, Y. Shoshitaishvili, M. Cova, C. Kruegel, and G. Vigna,
“Revolver: An automated approach to the detection of evasive web-based
malware,” in Proceedings of the 22nd USENIX Security Symposium,
2013, pp. 637–652.
[22] G. Stringhini, C. Kruegel, and G. Vigna, “Shady paths: Leveraging
surﬁng crowds to detect malicious web pages,” in Proceedings of the
ACM SIGSAC Conference on Computer & Communications Security
(CCS), 2013, pp. 133–144.
[23] A. Yokoyama, K. Ishii, R. Tanabe, Y. Papa, K. Yoshioka, T. Matsumoto,
T. Kasama, D. Inoue, M. Brengel, M. Backes, and C. Rossow, “SandPrint:
Fingerprinting malware sandboxes to provide intelligence for sandbox
evasion,” in Proceedings of the 19th International Symposium on Research
in Attacks, Intrusions and Defenses (RAID), 2016, pp. 165–187.

[24] D. Desai, “Malicious Documents leveraging new Anti-VM & AntiSandbox techniques,” https://www.zscaler.com/blogs/research/maliciousdocuments-leveraging-new-anti-vm-anti-sandbox-techniques, 2016.
[25] ProofPoint, “Ursnif Banking Trojan Campaign Ups the Ante with New
Sandbox Evasion Techniques,” https://www.proofpoint.com/us/threatinsight/post/ursnif-banking-trojan-campaign-sandbox-evasiontechniques, 2016.
[26] Y.-M. Wang, D. Beck, X. Jiang, R. Roussev, C. Verbowski, S. Chen, and
S. King, “Automated web patrol with strider honeymonkeys: Finding
web sites that exploit browser vulnerabilities,” in Proceedings of the 13th
Network and Distributed Systems Security Symposium (NDSS), 2006.
[27] N. Provos, P. Mavrommatis, M. A. Rajab, and F. Monrose, “All your
iFRAMEs point to us,” in Proceedings of the 17th USENIX Security
Symposium, 2008.
[28] A. Moshchuk, T. Bragin, S. D. Gribble, and H. M. Levy, “A crawlerbased study of spyware on the web,” in Proceedings of the 13th Network
and Distributed Systems Security Symposium (NDSS), 2006.
[29] A. Moshchuk, T. Bragin, D. Deville, S. D. Gribble, and H. M. Levy,
“Spyproxy: Execution-based detection of malicious web content,” in
Proceedings of the 16th USENIX Security Symposium, 2007.
[30] M. Cova, C. Kruegel, and G. Vigna, “Detection and analysis of driveby-download attacks and malicious javascript code,” in Proceedings of
the World Wide Web Conference (WWW), 2010.
[31] “Wepawet: Detection and Analysis of Web-based Threats,” https://
wepawet.iseclab.org/.
[32] K. Rieck, T. Krueger, and A. Dewald, “Cujo: Efﬁcient detection and
prevention of drive-by-download attacks,” in Proceedings of the 26th
Annual Computer Security Applications Conference (ACSAC), 2010, pp.
31–39.
[33] S. Ford, M. Cova, C. Kruegel, and G. Vigna, “Analyzing and detecting
malicious ﬂash advertisements,” in Proceedings of the Annual Computer
Security Applications Conference (ACSAC), Honolulu, HI, December
2009.
[34] M. Egele, T. Scholte, E. Kirda, and C. Kruegel, “A survey on automated
dynamic malware-analysis techniques and tools,” ACM Comput. Surv.,
vol. 44, no. 2, pp. 6:1–6:42, Mar. 2008.
[35] T. Vidas and N. Christin, “Evading android runtime analysis via sandbox
detection,” in Proceedings of the 9th ACM Symposium on Information,
Computer and Communications Security (AsiaCCS), 2014, pp. 447–458.
[36] T. Klein, “ScoopyNG – The VMware detection tool,” 2008, http://www.
trapkit.de/tools/scoopyng/index.html.
[37] M. G. Kang, H. Yin, S. Hanna, S. McCamant, and D. Song, “Emulating
emulation-resistant malware,” in Proceedings of the 1st ACM Workshop
on Virtual Machine Security (VMSec), 2009, pp. 11–22.

[38] P. Ferrie, “Attacks on Virtual Machine Emulators,” http://www.symantec.
com/avcenter/reference/Virtual Machine Threats.pdf.
[39] ——, “Attacks on More Virtual Machine Emulators,” http://pferrie.tripod.
com/papers/attacks2.pdf.
[40] Y. Bulygin, “CPU side-channels vs. virtualization rootkits: the good, the
bad, or the ugly.” ToorCon, 2008.
[41] J. Rutkowska, “Red Pill... or how to detect VMM using (almost) one
CPU instruction,” 2004, https://web.archive.org/web/20071112073957/
http:/www.invisiblethings.org/papers/redpill.html.
[42] O. Bazhaniuk, Y. Bulygin, A. Furtak, M. Gorobets, J. Loucaides, and
M. Shkatov, “Reaching the far corners of MATRIX: generic VMM
ﬁngerprinting.” SOURCE Seattle, 2015.
BotConf, 2014,
[43] P. Jung, “Bypassing sanboxes for fun!”
https://www.botconf.eu/wp-content/uploads/2014/12/2014-2.7Bypassing-Sandboxes-for-Fun.pdf.
[44] D. Balzarotti, M. Cova, C. Karlberger, C. Kruegel, E. Kirda, and G. Vigna,
“Efﬁcient detection of split personalities in malware,” in Proceedings of
the Symposium on Network and Distributed System Security (NDSS),
2010.
[45] M. K. Sun, M. J. Lin, M. Chang, C. S. Laih, and H. T. Lin, “Malware
virtualization-resistant behavior detection,” in Proceedings of the 17th
IEEE International Conference on Parallel and Distributed Systems
(ICPADS), 2011, pp. 912–917.
[46] D. Kirat, G. Vigna, and C. Kruegel, “BareBox: Efﬁcient malware analysis
on bare-metal,” in Proceedings of the 27th Annual Computer Security
Applications Conference (ACSAC), 2011, pp. 403–412.
[47] C. Wueest, “Does malware still detect virtual machines?” 2014,
http://www.symantec.com/connect/blogs/does-malware-still-detectvirtual-machines.
[48] A. Singh, “Defeating Darkhotel Just-In-Time Decryption,” 2015, http:
//labs.lastline.com/defeating-darkhotel-just-in-time-decryption.
[49] D. Maier, T. Müller, and M. Protsenko, “Divide-and-conquer: Why android malware cannot be stopped,” in Proceedings of the 9th International
Conference on Availability, Reliability and Security (ARES), 2014, pp.
30–39.
[50] J. Blackthorne, A. Bulazel, A. Fasano, P. Biernat, and B. Yener,
“AVleak: Fingerprinting antivirus emulators through black-box testing,”
in Proceedings of the 10th USENIX Workshop on Offensive Technologies
(WOOT), Austin, TX, 2016.
[51] “CleanMyPC Registry Cleaner,” http://www.registry-cleaner.net/.
[52] “CCleaner - Registry Cleaner,” https://www.piriform.com/ccleaner/
registry-cleaner.
[53] R. E. Schapire and Y. Freund, Boosting: Foundations and algorithms.
MIT press, 2012.
[54] M. Cova, “Evasive JScript,” 2016, http://labs.lastline.com/evasive-jscript.

