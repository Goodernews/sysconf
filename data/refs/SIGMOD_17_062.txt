[1] A. Agarwal. Enable Support for Heterogeneous

Storages in HDFS, 2015.
https://issues.apache.org/jira/browse/HDFS-2832.

[2] A. Alexandrov, R. Bergmann, S. Ewen, J.-C. Freytag,

F. Hueske, et al. The Stratosphere Platform for Big
Data Analytics. The VLDB Journal, 23(6):939–964,
2014.

[3] G. Ananthanarayanan, A. Ghodsi, A. Wang,

D. Borthakur, S. Kandula, et al. PACMan:
Coordinated Memory Caching for Parallel Jobs. In
Proc. of the 9th Symp. on Networked Systems Design
and Implementation (NSDI), pages 267–280. USENIX,
2012.

[4] B. Antony. HDFS Storage Eﬃciency Using Tiered

Storage, 2015.
http://www.ebaytechblog.com/2015/01/12/hdfs-
storage-eﬃciency-using-tiered-storage/.

[5] J. Dean and S. Ghemawat. MapReduce: Simpliﬁed

Data Processing on Large Clusters. Communications
of the ACM, 51(1):107–113, 2008.

[6] B. Debnath, S. Sengupta, and J. Li. SkimpyStash:

RAM Space Skimpy Key-Value Store on Flash-based
Storage. In Proc. of the 2011 ACM SIGMOD Intl.
Conf. on Management of Data, pages 25–36. ACM,
2011.

[7] L. George. HBase: The Deﬁnitive Guide. O’Reilly

Media, 2011.

[8] S. Ghemawat, H. Gobioﬀ, and S.-T. Leung. The

Google File System. ACM SIGOPS Operating Systems
Review, 37(5):29–43, 2003.

[9] C. Gkantsidis, D. Vytiniotis, O. Hodson,

D. Narayanan, F. Dinu, and A. I. Rowstron. Rhea:
Automatic Filtering for Unstructured Cloud Storage.
In Proc. of the 10th Symp. on Networked Systems
Design and Implementation (NSDI), pages 343–355.
USENIX, 2013.

[10] J. Guerra, H. Pucha, J. S. Glider, W. Belluomini, and

R. Rangaswami. Cost Eﬀective Storage using Extent
Based Dynamic Tiering. In Proc. of the 9th Conf. on
File and Storage Technologies (FAST), volume 11,
pages 20–34. USENIX, 2011.

[11] P. K. Gunda, L. Ravindranath, C. A. Thekkath,

Y. Yu, and L. Zhuang. Nectar: Automatic
Management of Data and Computation in
Datacenters. In Proc. of the 9th Symp. on Operating
Systems Design and Implementation (OSDI), pages
1–8. USENIX, 2010.

[12] Apache Hadoop FileSystem API, 2016.

https://hadoop.apache.org/docs/stable2/hadoop-
project-dist/hadoop-common/ﬁlesystem/index.html.

[13] S. Huang, J. Huang, J. Dai, T. Xie, and B. Huang.
The HiBench Benchmark Suite: Characterization of
the MapReduce-based Data Analysis. In New
Frontiers in Information and Software as Services,
pages 209–228. Springer, 2011.

[14] M. Isard, M. Budiu, Y. Yu, A. Birrell, and D. Fetterly.

Dryad: Distributed Data-Parallel Programs from
Sequential Building Blocks. ACM SIGOPS Operating
Systems Review, 41(3):59–72, 2007.

[15] H. Jeon, K. El Maghraoui, and G. B. Kandiraju.

Investigating Hybrid SSD FTL Schemes for Hadoop

Workloads. In Proc. of the 2013 ACM Intl. Conf. on
Computing Frontiers (CF), pages 20:1–20:10. ACM,
2013.

[16] U. Kang, C. E. Tsourakakis, and C. Faloutsos.

PEGASUS: Mining Peta-scale Graphs. Knowledge and
Information Systems, 27(2):303–325, 2011.

[17] K. Krish, A. Khasymski, A. R. Butt, S. Tiwari, and

M. Bhandarkar. AptStore: Dynamic Storage
Management for Hadoop. In Proc. of the 5th IEEE
Intl. Conf. on Cloud Computing Technology and
Science (CloudCom), pages 33–41. IEEE, 2013.
[18] A. Lamb, M. Fuller, R. Varadarajan, N. Tran,

B. Vandiver, L. Doshi, and C. Bear. The Vertica
Analytic Database: C-store 7 Years Later. Proc. of the
VLDB Endowment, 5(12):1790–1801, 2012.

[19] S.-W. Lee, B. Moon, C. Park, J.-M. Kim, and S.-W.

Kim. A Case for Flash Memory SSD in Enterprise
Database Applications. In Proc. of the 2008 ACM
SIGMOD Intl. Conf. on Management of Data, pages
1075–1086. ACM, 2008.

[20] B. Li, E. Mazur, Y. Diao, A. McGregor, and

P. Shenoy. A Platform for Scalable One-pass Analytics
Using MapReduce. In Proc. of the 2011 ACM
SIGMOD Intl. Conf. on Management of Data, pages
985–996. ACM, 2011.

[21] H. Li, A. Ghodsi, M. Zaharia, S. Shenker, and

I. Stoica. Tachyon: Reliable, Memory Speed Storage
for Cluster Computing Frameworks. In Proc. of the
5th Symposium on Cloud Computing (SoCC), pages
1–15. ACM, 2014.

[22] MapR File System, 2013.

http://www.mapr.com/products/apache-hadoop.

[23] R. T. Marler and J. S. Arora. Survey of

Multi-Objective Optimization Methods for
Engineering. Structural and Multidisciplinary
Optimization, 26(6):369–395, 2004.

[24] M. Mihailescu, G. Soundararajan, and C. Amza.

MixApart: Decoupled Analytics for Shared Storage
Systems. In Proc. of the 11th Conf. on File and
Storage Technologies (FAST), pages 133–146.
USENIX, 2013.

[25] H. Ogawa, H. Nakada, R. Takano, and T. Kudoh. SSS:

An Implementation of Key-Value Store Based
MapReduce Framework. In Proc. of the 2nd IEEE
Intl. Conf. on Cloud Computing Technology and
Science (CloudCom), pages 754–761. IEEE, 2010.

[26] J. Ousterhout, P. Agrawal, D. Erickson, C. Kozyrakis,

J. Leverich, D. Mazi`eres, et al. The Case for
RAMCloud. Communications of the ACM,
54(7):121–130, 2011.

[27] M. Ovsiannikov, S. Rus, D. Reeves, P. Sutter, S. Rao,
and J. Kelly. The Quantcast File System. Proc. of the
VLDB Endowment, 6(11):1092–1101, 2013.

[28] K. Pal. Enhance Existing HDFS Architecture with

HDFS Federation, 2014.
http://www.devx.com/opensource/enhance-existing-
hdfs-architecture-with-hadoop-federation.html.

[29] A. Purtell. Support Tiered Storage Policies in HDFS,

2015.
https://issues.apache.org/jira/browse/HDFS-4672.
[30] K. Shvachko, H. Kuang, S. Radia, and R. Chansler.

The Hadoop Distributed File System. In Proc. of the

26th IEEE Symp. on Mass Storage Systems and
Technologies (MSST), pages 1–10. IEEE, 2010.

[31] K. V. Shvachko. Stress Test for Live Data Veriﬁcation
(S-Live), 2010. https://issues.apache.org/jira/secure/
attachment/12448004/SLiveTest.pdf.

Distributed File System. In Proc. of the 7th Symp. on
Operating Systems Design and Implementation
(OSDI), pages 307–320. USENIX, 2006.

[35] T. White. Hadoop: The Deﬁnitive Guide. Yahoo!

Press, 2010.

[32] T.-W. N. Sze. Support Archival Storage in HDFS,

[36] J. Wilkes, R. Golding, C. Staelin, and T. Sullivan. The

2015.
https://issues.apache.org/jira/browse/HDFS-6584.

[33] A. Thusoo, J. S. Sarma, N. Jain, Z. Shao, P. Chakka,
S. Anthony, H. Liu, P. Wyckoﬀ, and R. Murthy. Hive:
A Warehousing Solution over a Map-Reduce
Framework. Proc. of the VLDB Endowment,
2(2):1626–1629, 2009.

[34] S. A. Weil, S. A. Brandt, E. L. Miller, D. D. Long, and

C. Maltzahn. Ceph: A Scalable, High-performance

HP AutoRAID Hierarchical Storage System. ACM
Trans. on Computer Systems (TOCS), 14(1):108–136,
1996.

[37] M. Zaharia, M. Chowdhury, T. Das, A. Dave, J. Ma,
et al. Resilient Distributed Datasets: A Fault-tolerant
Abstraction for In-memory Cluster Computing. In
Proc. of the 9th Symp. on Networked Systems Design
and Implementation (NSDI), pages 15–28. USENIX,
2012.
