[1] A. Alameldeen and D. Wood, “IPC considered harmful for multiprocessor workloads,” IEEE Micro, vol. 26, no. 4, 2006.
[2] M. Awasthi, K. Sudan, R. Balasubramonian, and J. Carter, “Dynamic
hardware-assisted software-controlled page placement to manage
capacity allocation and sharing within large caches,” in Proc. HPCA-15,
2009.
[3] N. Barrow-Williams, C. Fensch, and S. Moore, “A communication
characterisation of SPLASH-2 and PARSEC,” in Proc. IISWC, 2009.
[4] B. Beckmann, M. Marty, and D. Wood, “ASR: Adaptive selective
replication for CMP caches,” in Proc. MICRO-39, 2006.
[5] B. Beckmann and D. Wood, “Managing wire delay in large chipmultiprocessor caches,” in Proc. ASPLOS-XI, 2004.
[6] N. Beckmann and D. Sanchez, “Jigsaw: Scalable software-defined
caches,” in Proc. PACT-22, 2013.
[7] N. Beckmann, P.-A. Tsai, and D. Sanchez, “Scaling distributed cache
hierarchies through computation and data co-scheduling,” in Proc.
HPCA-21, 2015.
[8] C. Bienia, S. Kumar, J. P. Singh, and K. Li, “The PARSEC Benchmark
Suite: Characterization and Architectural Implications,” in Proc. PACT17, 2008.
[9] J. Chang and G. Sohi, “Cooperative caching for chip multiprocessors,”
in Proc. ISCA-33, 2006.
[10] M. Chaudhuri, “PageNUCA: Selected policies for page-grain locality
management in large shared chip-multiprocessor caches,” in Proc.
HPCA-15, 2009.
[11] Z. Chishti, M. Powell, and T. Vijaykumar, “Optimizing replication,
communication, and capacity allocation in CMPs,” in Proc. ISCA-32,
2005.
[12] S. Cho and L. Jin, “Managing distributed, shared L2 caches through
OS-level page allocation,” in Proc. MICRO-39, 2006.
[13] A. T. Clements, M. F. Kaashoek, and N. Zeldovich, “RadixVM:
Scalable address spaces for multithreaded applications,” in Proc.
EuroSys, 2013.
[14] B. A. Cuesta, A. Ros, M. E. Gómez, A. Robles, and J. F. Duato,
“Increasing the effectiveness of directory caches by deactivating
coherence for private memory blocks,” in Proc. ISCA-38, 2011.
[15] W. J. Dally, “GPU computing: To exascale and beyond,” SC10 Keynote,
2010.
[16] H. Dybdahl and P. Stenstrom, “An adaptive shared/private NUCA
cache partitioning scheme for chip multiprocessors,” in Proc. HPCA13, 2007.
[17] A. Esteve, A. Ros, A. Robles, M. E. Gómez, and J. Duato, “TokenTLB:
A token-based page classification approach,” in Proc. ICS’16, 2016.
[18] J. W. Fu, J. H. Patel, and B. L. Janssens, “Stride directed prefetching
in scalar processors,” ACM SIGMICRO Newsletter, vol. 23, no. 1-2,
1992.
[19] N. Hardavellas, M. Ferdman, B. Falsafi, and A. Ailamaki, “Reactive
NUCA: Near-optimal block placement and replication in distributed
caches,” in Proc. ISCA-36, 2009.
[20] N. Hardavellas, M. Ferdman, B. Falsafi, and A. Ailamaki, “Toward
dark silicon in servers,” IEEE Micro, vol. 31, no. 4, 2011.
[21] E. Herrero, J. González, and R. Canal, “Elastic cooperative caching:
An autonomous dynamically adaptive memory hierarchy for chip
multiprocessors,” in Proc. ISCA-37, 2010.
[22] H. Hossain, S. Dwarkadas, and M. C. Huang, “POPS: Coherence
protocol optimization for both private and shared data,” in Proc. PACT20, 2011.
[23] J. Jaehyuk Huh, C. Changkyu Kim, H. Shafi, L. Lixin Zhang, D. Burger,
and S. Keckler, “A NUCA substrate for flexible CMP cache sharing,”
IEEE Trans. Par. Dist. Sys., vol. 18, no. 8, 2007.
[24] A. Jaleel, W. Hasenplaugh, M. Qureshi, J. Sebot, S. Steely, Jr., and
J. Emer, “Adaptive insertion policies for managing shared caches,” in
Proc. PACT-17, 2008.

[25] A. Jaleel, M. Mattina, and B. Jacob, “Last level cache (LLC)
performance of data mining workloads on a CMP,” in Proc. HPCA-12,
2006.
[26] L. Jin and S. Cho, “SOS: A software-oriented distributed shared cache
management approach for chip multiprocessors,” in Proc. PACT-18,
2009.
[27] S. Kanev, J. P. Darago, K. Hazelwood, P. Ranganathan, T. Moseley,
G.-Y. Wei, and D. Brooks, “Profiling a warehouse-scale computer,” in
Proc. ISCA-42, 2015.
[28] D. Kanter, “Silvermont, Intel’s low power architecture,” Real World
Tech, 2013.
[29] H. Kasture and D. Sanchez, “TailBench: A benchmark suite and
evaluation methodology for latency-critical applications,” in Proc.
IISWC, 2016.
[30] C. Kim, D. Burger, and S. Keckler, “An adaptive, non-uniform cache
structure for wire-delay dominated on-chip caches,” in Proc. ASPLOSX, 2002.
[31] G. Kurian, S. Devadas, and O. Khan, “Locality-aware data replication
in the last-level cache,” in Proc. HPCA-20, 2014.
[32] H. Lee, S. Cho, and B. R. Childers, “CloudCache: Expanding and
shrinking private caches,” in Proc. HPCA-17, 2011.
[33] S. Li, J. H. Ahn, R. D. Strong, J. B. Brockman, D. M. Tullsen,
and N. P. Jouppi, “McPAT: An integrated power, area, and timing
modeling framework for multicore and manycore architectures,” in
Proc. MICRO-42, 2009.
[34] J. Merino, V. Puente, and J. Gregorio, “ESP-NUCA: A low-cost
adaptive non-uniform cache architecture,” in Proc. HPCA-16, 2010.
[35] Micron, “1.35V DDR3L power calculator (4Gb x16 chips),” 2013.
[36] A. Mukkara, N. Beckmann, and D. Sanchez, “Whirlpool: Improving
dynamic cache management with static data classification,” in Proc.
ASPLOS-XXI, 2016.
[37] M. Oskin and G. H. Loh, “A software-managed approach to die-stacked
DRAM,” in Proc. PACT-24, 2015.
[38] M. Qureshi, “Adaptive spill-receive for robust high-performance
caching in CMPs,” in Proc. HPCA-15, 2009.
[39] M. Qureshi and Y. Patt, “Utility-based cache partitioning: A lowoverhead, high-performance, runtime mechanism to partition shared
caches,” in Proc. MICRO-39, 2006.
[40] M. K. Qureshi, A. Jaleel, Y. N. Patt, S. C. Steely, and J. Emer,
“Adaptive insertion policies for high performance caching,” in Proc.
ISCA-34, 2007.
[41] A. Ros, B. Cuesta, M. E. Gómez, A. Robles, and J. Duato, “Temporalaware mechanism to detect private data in chip multiprocessors,” in
Proc. ICPP-42, 2013.
[42] D. Sanchez and C. Kozyrakis, “ZSim: Fast and accurate microarchitectural simulation of thousand-core systems,” in Proc. ISCA-40,
2013.
[43] A. Seznec, “Bank-interleaved cache or memory indexing does not
require euclidean division,” in WDDD-11, 2015.
[44] A. Snavely and D. M. Tullsen, “Symbiotic jobscheduling for a
simultaneous multithreading processor,” in Proc. ASPLOS-IX, 2000.
[45] A. Sodani, R. Gramunt, J. Corbal, H.-S. Kim, K. Vinod,
S. Chinthamani, S. Hutsell, R. Agarwal, and Y.-C. Liu, “Knights
Landing: Second-generation Intel Xeon Phi product,” IEEE Micro,
vol. 36, no. 2, 2016.
[46] Tilera, “TILE-Gx 3000 Series Overview,” Tech. Rep., 2011.
[47] P.-A. Tsai, N. Beckmann, and D. Sanchez, “Jenga: Software-defined
cache hierarchies,” in Proc. ISCA-44, 2017.
[48] S. C. Woo, M. Ohara, E. Torrie, J. P. Singh, and A. Gupta, “The
SPLASH-2 Programs: Characterization and Methodological Considerations,” in Proc. ISCA-22, 1995.
[49] M. Zhang and K. Asanovic, “Victim replication: Maximizing capacity
while hiding wire delay in tiled chip multiprocessors,” in Proc. ISCA32, 2005.
