[1] S.M. Ross, Stochastic Processes. New York: Wesley, 1996.
[2] Larry C. Andrews, Special Functions of Mathematics for Engineers.
SPIE Publications, 1997.
[3] Abramowitz, M. and Stegun, I. A. (Eds.). Gamma (Factorial) Function
and Incomplete Gamma Function. 6.1 and 6.5 in Handbook of Mathematical Functions with Formulas, Graphs, and Mathematical Tables, 9th
printing. New York: Dover, pp. 255-258 and 260-263, 1972.
[4] Omer Subasi, Ferad Zyulkyarov, Osman S. Unsal, Jesus Labarta. Marriage Between Coordinated and Uncoordinated Checkpointing for the
Exascale Era. IEEE High Performance Computing and Communications
(HPCC), pp. 470-478. Newyork, USA. 2015.
[5] Omer Subasi, Tatiana Martsinkevich, Ferad Zyulkyarov, Osman Unsal,
Jesus Labarta, Franck Cappello. Uniﬁed Fault-tolerance Framework for
Hybrid Task-parallel Message-passing Applications. The International
Journal of High Performance Computing Applications, 2016.
[6] Gokcen Kestor, Sriram Krishnamoorthy and Wenjing Ma. Localized
Fault Recovery for Nested Fork-Join Programs. IEEE International
Parallel and Distributed Processing Symposium, IPDPS 2017, pp. 397408.
[7] Marc Snir et al. Addressing failures in exascale computing. Int. J. High
Perform. Comput. Appl. 28, 2 (May 2014), 129-173.
[8] Y. Ling, J. Mi and X. Lin. A Variational Calculus Approach to Optimal
Checkpoint Placement. IEEE Trans. Computers vol. 50 no. 7 July 2001
pp. 699-707.
[9] Nosayba El-Sayed and Bianca Schroeder. 2013. Reading between the
lines of failure logs: Understanding how HPC systems fail. In Proceedings of the 2013 43rd Annual IEEE/IFIP International Conference on
Dependable Systems and Networks (DSN) (DSN ’13). IEEE Computer
Society, Washington, DC, USA, 1-12.
[10] Ramendra K Sahoo, Mark S Squillante, A Sivasubramaniam, and Yanyong Zhang. Failure data analysis of a large-scale heterogeneous server
environment. In Dependable Systems and Networks, 2004 International
Conference on, pages 772-781. IEEE, 2004.
[11] Bianca Schroeder and Garth A. Gibson. 2006. A large-scale study of
failures in high-performance computing systems. In Proceedings of the
International Conference on Dependable Systems and Networks (DSN
’06). IEEE Computer Society, Washington, DC, USA, pp. 249-258.
[12] D. Tiwari, S. Gupta and S. S. Vazhkudai. Lazy Checkpointing: Exploiting Temporal Locality in Failures to Mitigate Checkpointing Overheads
on Extreme-Scale Systems, 2014 44th Annual IEEE International Conference on Dependable Systems and Networks, 2014, pp. 25-36.
[13] Zhenpeng Xu, Chaoguang Men, Weiwei Li, and Xiang Li. 2011.
Checkpoint scheduling model for optimality. Inf. Process. Lett. 111, 19
(October 2011), pp. 979-984.
[14] Marin Bougeret, Henri Casanova, Mikael Rabie, Yves Robert, and
Frederic Vivien. 2011. Checkpointing strategies for parallel jobs. In
Proceedings of 2011 International Conference for High Performance
Computing, Networking, Storage and Analysis (SC ’11). ACM, NY,
US, Article 33, 11 pages.
[15] Mohamed-Slim Bouguerra, Thierry Gautier, Denis Trystram, and JeanMarc Vincent. 2009. A ﬂexible checkpoint/restart model in distributed
systems. In Proceedings of the 8th international conference on Parallel processing and applied mathematics: Part I (PPAM’09), Roman
Wyrzykowski, Jack Dongarra, Konrad Karczewski, and Jerzy Wasniewski (Eds.). Springer-Verlag, Berlin, Heidelberg, pp. 206-215.
[16] Y. Liu, R. Nassar, C. Leangsuksun, N. Naksinehaboon, M. Paun and
S. Scott, A reliability-aware approach for an optimal checkpoint/restart
model in HPC environments, 2007 IEEE International Conference on
Cluster Computing, Austin, TX, 2007, pp. 452-457.
[17] Yudan Liu, R. Nassar, C. Leangsuksun, N. Naksinehaboon, M. Paun and
S. L. Scott, An optimal checkpoint/restart model for a large scale high
performance computing system, 2008 IEEE International Symposium
on Parallel and Distributed Processing, Miami, FL, 2008, pp. 1-9.
[18] Jack Dongarra et al. The International Exascale Software Project
roadmap. Int. J. High Perform. Comput. Appl. 25, 1, 2011, 3-60.
[19] L. Bautista-Gomez, S. Tsuboi, D. Komatitsch, F. Cappello, N. Maruyama
and S. Matsuoka. FTI: High performance Fault Tolerance Interface for
hybrid systems, 2011 International Conference for High Performance
Computing, Networking, Storage and Analysis, 2011, pp. 1-12.
[20] J. W. Young. 1974. A ﬁrst order approximation to the optimum checkpoint interval. Commun. ACM 17, 9 (September 1974), 530-531.
[21] J. T. Daly. 2006. A higher order estimate of the optimum checkpoint
interval for restart dumps. Future Gener. Comput. Syst. 22, 3 (February
2006), 303-312.
[22] Saman Amarasinghe et al. ExaScale Software Study: Software Challenges in Extreme Scale Systems, 2009.
http://mrichards.ece.gatech.edu/wp-content/uploads/sites/462/2016/08/
ECSS-report-101909.pdf. Accessed in February 2017.
[23] E. N. Elnozahy, L. Alvisi, Y. Wang, D. B. Johnson. 2002. A survey of
rollback-recovery protocols in message-passing systems. ACM Comput.
Surv. 34, 3 (September 2002), pp. 375-408.
[24] K. Sato, N. Maruyama, K. Mohror, A. Moody, T. Gamblin, B. Supinski,
S. Matsuoka. 2012. Design and modeling of a non-blocking checkpointing system. In Proceedings of the International Conference on High
Performance Computing, Networking, Storage and Analysis (SC ’12).
IEEE Computer Society Press, Article 19, 10 pages.
[25] H. Jin, Y. Chen, H. Zhu, X. Sun. 2010. Optimizing HPC Fault-Tolerant
Environment: An Analytical Approach. In Proceedings of the 2010
39th International Conference on Parallel Processing (ICPP ’10). IEEE
Computer Society, pages 525-534.
[26] L. Wang, K. Pattabiraman, Z. Kalbarczyk, R.K. Iyer, L. Votta, C.
Vick, A. Wood. Modeling coordinated checkpointing for large-scale
supercomputers. International Conference on Dependable Systems and
Networks. DSN Proceedings. pp. 812-821. 28 June-1 July 2005.
[27] Z. Zheng and Z. Lan. Reliability-aware scalability models for high
performance computing. IEEE International Conference on Cluster
Computing and Workshops, 2009. CLUSTER ’09. pp. 1-9. Aug. 31
2009-Sept. 4 2009.
[28] S. Di, M. Bouguerra, L. Bautista-Gomez, F. Cappello. 2014. Optimization of Multi-level Checkpoint Model for Large Scale HPC Applications.
In Proceedings of the 2014 IEEE 28th International Parallel and Distributed Processing Symposium (IPDPS ’14). IEEE Computer Society,
pages 1181-1190.
[29] S. Di, L. Bautista-Gomez, F. Cappello. 2014. Optimization of a multilevel checkpoint model with uncertain execution scales. In Proceedings
of the International Conference for High Performance Computing,
Networking, Storage and Analysis. IEEE Press, pages 907-918.
[30] G. Bosilca, A. Bouteiller, E. Brunet, F. Cappello, J. Dongarra, A.
Guermouche, T. Herault, Y. Robert, F. Vivien, D. Zaidouni. Uniﬁed
model for assessing checkpointing protocols at extreme-scale. Journal
of Concurrency and Computation: Practice and Experience, 2013.
[31] Nelder, J A, and R Mead. A Simplex Method for Function Minimization.
The Computer Journal 7: 308-13. 1965.
[32] Jones E, Oliphant E, Peterson P, et al. SciPy: Open Source Scientiﬁc
Tools for Python, 2001-, http://www.scipy.org/ [Online; accessed 201704-10].
[33] Jeffreys, H. and Jeffreys, B. S. Integration: Riemann, Stieltjes. Chapter
1.10 in Methods of Mathematical Physics, 3rd ed. Cambridge, England:
Cambridge University Press, pp. 26-36, 1988.
[34] Kestelman, H. Riemann Integration. Chapter 2 in Modern Theories of
Integration, 2nd rev. ed. New York: Dover, pp. 33-66, 1960.
[35] A. Tantawi and M. Ruschitzka, Performance Analysis of Checkpointing
Strategies. ACM Trans. Computer Systems, vol. 2, no. 2, pp. 123-144,
May 1984.
[36] T. Ozaki, T. Dohi, and H. Okamura, Distribution-Free Checkpoint
Placement Algorithms Based on Min-Max Principle. IEEE Transactions
on Dependable and Secure Computing, Volume 3, Issue 2 (April 2006),
pp. 130-140.