
[1] A MER , A., L ONG , D. D., AND B URNS , R. C. Group-based management of distributed ﬁle caches. In Distributed Computing Systems,
2002. Proceedings. 22nd International Conference on (2002), IEEE,
pp. 525–534.
[2] BAKER , M. G., H ARTMAN , J. H., K UPFER , M. D., S HIRRIFF , K. W.,
AND O USTERHOUT, J. K. Measurements of a distributed ﬁle system. In
Proceedings of the Thirteenth ACM Symposium on Operating Systems
Principles (New York, NY, USA, 1991), SOSP ’91, ACM, pp. 198–212.
[3] B ERGAMASCO , D. Ioblazer. https://labs.vmware.com/ﬂings/ioblazer.
Accessed: 2017-01-30.
[4] C HANG , F., AND G IBSON , G. A. Automatic i/o hint generation through
speculative execution. In Proceedings of the Third Symposium on
Operating Systems Design and Implementation (Berkeley, CA, USA,
1999), OSDI ’99, USENIX Association, pp. 1–14.
[5] F OURNIER -V IGER , P., G OMARIZ , A., G UENICHE , T., S OLTANI , A.,
W U ., C., AND T SENG , V. S. SPMF: a Java Open-Source Pattern
Mining Library. Journal of Machine Learning Research (JMLR) 15
(2014), 3389–3393.
[6] G ILL , B. S., AND BATHEN , L. A. D. AMP: adaptive multi-stream
prefetching in a shared cache. In Proceedings of the 5th USENIX conference on File and Storage Technologies (2007), USENIX Association,
pp. 26–26.
[7] G ILL , B. S., AND BATHEN , L. A. D. Optimal multistream sequential
prefetching in a shared cache. ACM Transactions on Storage (TOS) 3,
3 (Oct. 2007).
[8] G ILL , B. S., AND M ODHA , D. S. SARC: Sequential prefetching in
adaptive replacement cache. In USENIX Annual Technical Conference,
General Track (2005), pp. 293–308.
[9] G NIADY, C., B UTT, A. R., AND H U , Y. C. Program-counter-based
pattern classiﬁcation in buffer caching. In 6th Symp. Operating Systems
Design & Implementation (OSDI) (Dec 2004), pp. 395–408.
[10] G RIFFIOEN , J., AND A PPLETON , R. Reducing ﬁle system latency
using a predictive approach. In USENIX summer (1994), pp. 197–207.
[11] G U , P., Z HU , Y., J IANG , H., AND WANG , J. Nexus: a novel weightedgraph-based prefetching algorithm for metadata servers in petabytescale storage systems. In Cluster Computing and the Grid, 2006.
CCGRID 06. Sixth IEEE International Symposium on (2006), vol. 1,
IEEE, pp. 8–416.
[12] G ULATI , A., S HANMUGANATHAN , G., A HMAD , I., WALDSPURGER ,
C., AND U YSAL , M. Pesto: Online storage performance management
in virtualized datacenters. In Proceedings of the 2nd ACM Symposium
on Cloud Computing (New York, NY, USA, 2011), SOCC ’11, ACM,
pp. 19:1–19:14.
[13] H AN , J., P EI , J., AND K AMBER , M. Data mining: concepts and
techniques. Elsevier, 2011.
[14] J IANG , S., D ING , X., X U , Y., AND DAVIS , K. A prefetching scheme
exploiting both data layout and access history on disk. ACM Transactions on Storage (TOS) 9, 3 (2013), 10.
[15] J IANG , S., AND Z HANG , X. Lirs: An efﬁcient low inter-reference
recency set replacement policy to improve buffer cache performance. In
Proceedings of the 2002 ACM SIGMETRICS International Conference
on Measurement and Modeling of Computer Systems (New York, NY,
USA, 2002), SIGMETRICS ’02, ACM, pp. 31–42.
[16] KOH , Y. S., AND ROUNTREE , N. Finding sporadic rules using aprioriinverse. In Proceedings of the 9th Paciﬁc-Asia Conference on Advances
in Knowledge Discovery and Data Mining (Berlin, Heidelberg, 2005),
PAKDD’05, Springer-Verlag, pp. 97–106.
[17] L I , M., VARKI , E., B HATIA , S., AND M ERCHANT, A. Tap: Tablebased prefetching for storage caches. In Proceedings of the 6th USENIX
Conference on File and Storage Technologies (Berkeley, CA, USA,
2008), FAST’08, USENIX Association, pp. 6:1–6:16.
[18] L I , Z., C HEN , Z., S RINIVASAN , S. M., AND Z HOU , Y. C-Miner:
Mining block correlations in storage systems. In FAST (2004), vol. 4,
pp. 173–186.
[19] L I , Z., C HEN , Z., AND Z HOU , Y. Mining block correlations to improve
storage performance. ACM Transactions on Storage (TOS) 1, 2 (2005),
213–245.
[20] M C K USICK , M. K., J OY, W. N., L EFFLER , S. J., AND FABRY, R. S.
A fast ﬁle system for unix. ACM Trans. Comput. Syst. 2, 3 (Aug. 1984),
181–197.
[21] M EGIDDO , N., AND M ODHA , D. S. Arc: A self-tuning, low overhead
replacement cache. In Proceedings of the 2nd USENIX Conference on
File and Storage Technologies (Berkeley, CA, USA, 2003), FAST ’03,
USENIX Association, pp. 115–130.
[22] NARAYANAN , D., D ONNELLY, A., AND ROWSTRON , A. Write offloading: Practical power management for enterprise storage. In Proceedings of the 6th USENIX Conference on File and Storage Technologies
(Berkeley, CA, USA, 2008), FAST’08, USENIX Association, pp. 17:1–
17:15.
[23] S OUNDARARAJAN , G., M IHAILESCU , M., AND A MZA , C. Contextaware prefetching at the storage server. In USENIX Annual Technical
Conference (2008), pp. 377–390.
[24] TANG , L., H UANG , Q., L LOYD , W., K UMAR , S., AND L I , K. Ripq:
Advanced photo caching on ﬂash for facebook. In Proceedings of the
13th USENIX Conference on File and Storage Technologies (Berkeley,
CA, USA, 2015), FAST’15, USENIX Association, pp. 373–386.
[25] T ENG , J. Z., AND G UMAER , R. A. Managing ibm database 2 buffers
to maximize performance. IBM Syst. J. 23, 2 (June 1984), 211–218.
[26] WALDSPURGER , C. A., PARK , N., G ARTHWAITE , A., AND A HMAD ,
I. Efﬁcient mrc construction with shards. In Proceedings of the 13th
USENIX Conference on File and Storage Technologies (Berkeley, CA,
USA, 2015), FAST’15, USENIX Association, pp. 95–110.
[27] W ONG , T. M., AND W ILKES , J. My cache or yours? making storage
more exclusive. In Proceedings of the General Track of the Annual
Conference on USENIX Annual Technical Conference (Berkeley, CA,

J. Yang et al.
USA, 2002), ATEC ’02, USENIX Association, pp. 161–175.
[28] YANG , J. mimircache. https://github.com/1a1a11a/mimircache. Accessed: 2017-01-30.
[29] YANG , S., S RINIVASAN , K., U DAYASHANKAR , K., K RISHNAN , S.,
F ENG , J., Z HANG , Y., A RPACI -D USSEAU , A. C., AND A RPACI D USSEAU , R. H. Tombolo: Performance enhancements for cloud
storage gateways. In IEEE 32nd Symposium on Mass Storage Systems
and Technologies, MSST 2016 (2016).
[30] Z HOU , Y., P HILBIN , J., AND L I , K. The multi-queue replacement
algorithm for second level buffer caches. In Proceedings of the General
Track: 2001 USENIX Annual Technical Conference (Berkeley, CA,
USA, 2001), USENIX Association, pp. 91–104.

