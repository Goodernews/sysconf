[1] A. Jones, Y. Chen, W. Collinge, H. Xu, L. Schaefer, A. Landis, and
M. Bilec, “Considering fabrication in sustainable computing,” ICCAD,
2013.
[2] M. A. Yao et al., “Comparative assessment of life cycle assessment
methods used for personal computers.,” Env. Sci. & Tech., Vol. 44,
No. 19, 2010.

[3] P. Teehan and M. Kandlikar, “Comparing Embodied Greenhouse Gas
Emissions of Modern Computing and Electronics Products,” Env. Sci.
& Tech., Vol. 47, No. 9, 2013.
[4] D. Kline Jr, N. Parshook, X. Ge, E. Brunvand, R. Melhem, P. K.
Chrysanthis, and A. K. Jones, “Holistically Evaluating the Environmental Impacts in Modern Computing Systems,” IGSC, 2016.
[5] Y. Kim, R. Daly, J. Kim, C. Fallin, J. H. Lee, D. Lee, C. Wilkerson,
K. Lai, and O. Mutlu, “Flipping bits in memory without accessing them:
An experimental study of DRAM disturbance errors,” ISCA, 2014.
[6] S. Khan, D. Lee, and O. Mutlu, “PARBOR: An Efficient System-Level
Technique to Detect Data-Dependent Failures in DRAM,” DSN, 2016.
[7] C. J. Xue, G. Sun, Y. Zhang, J. J. Yang, Y. Chen, and H. Li, “Emerging
non-volatile memories: opportunities and challenges,” CODES+ISSS,
pp. 325–334, 2011.
[8] Intel and Micron, “3D XPoint Technology,” 2015. [Available Online]:
https://www.micron.com/about/our-innovation/3d-xpoint-technology.
[9] S. Schechter, G. H. Loh, K. Strauss, and D. Burger, “Use ECP, not ECC,
for hard failures in resistive memories,” ISCA, pp. 141–152, 2010.
[10] P. J. Nair, D.-H. Kim, and M. K. Qureshi, “ArchShield: Architectural
framework for assisting DRAM scaling by tolerating high error rates,”
ISCA, 2013.
[11] S. B. Boyd, Life-Cycle Assessment of Semiconductors. Springer, 2012.
[12] A. Jones, L. Liao, W. Collinge, H. Xu, L. Schaefer, A. Landis, and
M. Bilec, “Green computing: A life cycle perspective,” IGCC, 2013.
[13] Apple
Inc.,
“Environmental
Report.”
[Available
Online]:
http://www.apple.com/environment/reports/, 2015.
[14] Y. Konishi and et al, “Analysis of coupling noise between adjacent bit
lines in megabit DRAMs,” Journal of Solid-State Circuits 1989.
[15] J. Liu, B. Jaiyen, R. Veras, and O. Mutlu, “RAIDR: Retention-aware
intelligent DRAM refresh,” ACM SIGARCH Computer Architecture
News, Vol. 40, pp. 1–12, IEEE Computer Society, 2012.
[16] C.-H. Lin, D.-Y. Shen, Y.-J. Chen, C.-L. Yang, and M. Wang, “SECRET:
Selective error correction for refresh energy reduction in DRAMs,”
ICCD, pp. 67–74, 2012.
[17] S. M. Seyedzadeh, R. Maddah, A. Jones, and R. Melhem, “Leveraging
ECC to Mitigate Read Disturbance, False Reads and Write Faults in
STT-RAM,” DSN, pp. 215–226, June 2016.
[18] T. J. Dell, “A white paper on the benefits of chipkill-correct ECC for PC
server main memory,” IBM Microelectronics Division, pp. 1–23, 1997.
[19] M. Horiguchi and K. Itoh, Nanoscale memory repair. Springer Science
& Business Media, 2011.
[20] Y. H. Son, S. Lee, O. Seongil, S. Kwon, N. S. Kim, and J. H.
Ahn, “CiDRA: A cache-inspired DRAM resilience architecture,” HPCA,
pp. 502–513, 2015.
[21] R. Melhem, R. Maddah, and S. Cho, “RDIS: A Recursively Defined
Invertible Set Scheme to Tolerate Multiple Stuck-at Faults in Resistive
Memory,” DSN, 2012.
[22] J. Zhang, D. Kline Jr, L. Fang, R. Melhem, and A. K. Jones, “Dynamic
Partitioning to Mitigate Stuck-at Faults in Emerging Memories,” ICCAD,
2017.
[23] S. M. Seyedzadeh, A. K. Jones, and R. Melhem, “Counter-Based Tree
Structure for Row Hammering Mitigation in DRAM,” IEEE Computer
Architecture Letters.
[24] M. Seyedzadeh, D. Kline Jr, R. Melhem, and A. K. Jones, “Mitigating
Bitline Crosstalk Noise in DRAM Memories,” MEMSYS, 2017.
[25] R. Wang, L. Jiang, Y. Zhang, and J. Yang, “SD-PCM: Constructing
reliable super dense phase change memory under write disturbance,”
ACM SIGPLAN Notices, Vol. 50, No. 4, pp. 19–31, 2015.
[26] Y. Li, H. Xu, R. Melhem, and A. K. Jones, “Space oblivious compression: Power reduction for non-volatile main memories,” GLSVLSI,
pp. 217–220, 2015.
[27] Z. Al-Ars, DRAM fault analysis and test generation. TU Delft, Delft
University of Technology, 2005.
[28] T. E. Carlson, W. Heirman, and L. Eeckhout, “Sniper: Exploring the
Level of Abstraction for Scalable and Accurate Parallel Multi-core
Simulation,” SC, 2011.
[29] J. E. Stine et al., “FreePDK: An open-source variation-aware design
kit,” MSE, pp. 173–174, 2007.
[30] J. L. Henning, “SPEC CPU2006 Benchmark Descriptions,” SIGARCH
Comput. Archit. News 2006.
[31] S. Li et al., “McPAT: an integrated power, area, and timing modeling
framework for multicore and manycore architectures,” MICRO, 2009.
