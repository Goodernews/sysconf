[1] J. M. Dawson, “Particle simulation of plasmas,” Review of
Modern Physics, vol. 55, no. 2, pp. 403–447, 1983.
[2] O. M. Lubeck and V. Faber, “Modeling the performance of Hypercubes: A case study using the particle-in-cell applica- tion,” Parallel Computing, vol. 9, pp. 37–52, 1988.
[3] Intel Corporation, Intel 64 and IA-32 Architectures Software Developer’s Manual, Sep. 2015.
[4] ——, Intel Xeon Phi Coprocessor Instruction Set Architecture Reference Manual, Sep. 2012.
[5] ——, Intel Architecture Instruction Set Extensions Program- ming Reference, Aug. 2015.
[6] H. Nakashima, “Manycore challenge in particle-in-cell simu- lation: How to exploit 1TFlops peak performance for sim- ulation codes with irregular computation,” Computers and Electrical Engineering, vol. 46, pp. 81–94, Apr. 2015.
[7] D. Tskhakaya and R. Schneider, “Optimization of PIC codes by improved memory management,” J. Computational Physics, vol. 225, pp. 829–839, Jul. 2007.
[8] Y. Miyake, C. M. Cully, H. Usui, and H. Nakashima, “Plasma particle simulations of wake formation behind a spacecraft with thin wire booms,” J. Geophysical Research, vol. 118, no. 9, pp. 5681–5694, Oct. 2013.
[9] H. Nakashima, Y. Miyake, H. Usui, and Y. Omura, “OhHelp: A scalable domain-decomposing dynamic load balancing for particle-in-cell simulations,” in Proc. Intl. Conf. Supercom- puting (ICS), Jun. 2009, pp. 90–99.
[10] Y. Miyake and H. Nakashima, “Low-cost load balancing for parallel particle-in-cell simulations with thick overlapping layers,” in Proc. Intl. Symp. Parallel and Distributed Pro- cessing with Applications (ISPA), Jul. 2013, pp. 1107–1114.
[11] R. Thackera, G. Pringleb, H. M. P. Couchmana, and S. Boothb, “HYDRA-MPI: An adaptive particle-particle, particle-mesh code for conducting cosmological simulations on MPP architectures,” in Proc. Intl. Symp. High Performance Computing Systems and Applications (HPCSA), 2003.
[12] C. Nieter and J. R. Cary, “VORPAL: A versatile plasma simulation code,” J. Computational Physics, vol. 196, no. 2, pp. 448–473, May 2004.
[13] V. K. Decyk, “UPIC: A framework for massively parallel particle-in-cell codes,” Computer Physics Communications, vol. 177, pp. 95–97, Mar. 2007.
[14] K. J. Bowers, B. J. Albright, L. Yin, B. Bergen, and T. J. T. Kwan, “Ultrahigh performance three-dimensional electromag- netic relativistic kinetic plasma simulation,” Physics of Plas- mas, vol. 15, no. 055703, pp. 1–7, Mar. 2008.
[15] K. Madduri, E.-J. Im, K. Z. Ibrahim, S. Williams, S. Ethier, and L. Oliker, “Gyrokinetic particle-in-cell optimization on emerging multi- and manycore platforms,” Parallel Comput- ing, vol. 37, no. 9, pp. 501–520, Sep. 2011.
[16] S. Bastrakova, R. Donchenkoa, A. Gonoskovb, E. Emenkob, A. Malysheva, I. Meyerova, and I. Surmina, “Particle-in- cell plasma simulation on heterogeneous cluster systems,” J. Computational Science, vol. 3, no. 6, pp. 474–479, Nov. 2012.
[17] R. A. Fonseca, J. Vieira, F. Fiuza, A. Davidson, F. S. Tsung, W. B. Mori, and L. O. Silva, “Exploiting multi-scale paral- lelism for large scale numerical modelling of laser wakeeld accelerators,” Plasma Phys. Control. Fusion, vol. 55, no. 124011, pp. 1–9, Nov. 2013.
[18] K. J. Bowers, “Accelerating a particle-in-cell simulation using a hybrid counting sort,” J. Computational Physics, vol. 173, no. 2, pp. 393–411, Nov. 2001.
[19] H. Burau, R. Widera, W. Ho ̈nig, G. Juckeland, A. Debus, T. Kluge, and U. Schramm, “PIConGPU: A fully relativistic particle-in-cell code for a GPU cluster,” IEEE Trans. Plasma Science, vol. 38, no. 10, pp. 2831–2839, Oct. 2010.
[20] R. G. Joseph, G. Ravunnikutty, S. Ranka, E. D’Azevedo, and S. Klasky, “Efcient GPU implementation for particle in cell algorithm,” in Proc. IEEE Intl. Parallel and Distributed Processing Symp. (IPDPS), 2011, pp. 395–406.
[21] V. K. Decyk and T. V. Singh, “Adaptable particle-in-cell algorithms for graphical processing units,” Computer Physics Communications, vol. 182, pp. 641–648, Nov. 2011.
[22] I. A. Surmin, S. I. Bastrakov, E. S. Emenko, A. A. Gonoskov, A. V. Korzhimanov, and I. Meyerov, “Particle- in-cell laser-plasma simulation on Xeon Phi coprocessors,” arXiv:1505.07271v1, Cornell University, pp. 1–16, May 2015.
