[1] Andrew V. Adinetz, Paul F. Baumeister, Hans Böttiger, Thorsten Hater, Thilo
Maurer, Dirk Pleiter, Wolfram Schenck, and Sebastiano Fabio Schifano. 2015. Performance Evaluation of Scientific Applications on POWER8. Springer International
Publishing, Cham, 24–45. DOI:http://dx.doi.org/10.1007/978-3-319-17248-4_2
[2] Amazon. 2017. Amazon Machine Learning. (2017). https://aws.amazon.com/
machine-learning/
[3] Soheil Bahrampour, Naveen Ramakrishnan, Lukas Schott, and Mohak Shah. 2015.
Comparative Study of Caffe, Neon, Theano, and Torch for Deep Learning. CoRR
abs/1511.06435 (2015). http://arxiv.org/abs/1511.06435
[4] Gaurav Banga, Peter Druschel, and Jeffrey C. Mogul. 1999. Resource Containers:
A New Facility for Resource Management in Server Systems. In Proceedings of
the Third Symposium on Operating Systems Design and Implementation (OSDI
’99). USENIX Association, Berkeley, CA, USA, 45–58. http://dl.acm.org/citation.
cfm?id=296806.296810
[5] Francine Berman and Lawrence Snyder. 1987. On Mapping Parallel Algorithms
into Parallel Architectures. J. Parallel Distrib. Comput. 4, 5 (Oct. 1987), 439–458.
DOI:http://dx.doi.org/10.1016/0743-7315(87)90018-9
[6] Léon Bottou, Frank E. Curtis, and Jorge Nocedal. 2016. Optimization Methods
for Large-Scale Machine Learning. CoRR abs/1606.04838 (2016). http://arxiv.org/
abs/1606.04838
[7] Brendan Burns, Brian Grant, David Oppenheimer, Eric Brewer, and John Wilkes.
2016. Borg, Omega, and Kubernetes. ACM Queue 14 (2016), 70–93.
[8] Christina Delimitrou and Christos Kozyrakis. 2014. Quasar: Resource-efficient
and QoS-aware Cluster Management. In Proceedings of the 19th International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS ’14). ACM, New York, NY, USA, 127–144. DOI:http://dx.doi.
org/10.1145/2541940.2541941
[9] Christina Delimitrou and Christos Kozyrakis. 2014. Quasar: Resource-efficient
and QoS-aware Cluster Management. In Proceedings of the 19th International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS ’14). ACM, New York, NY, USA, 127–144. DOI:http://dx.doi.
org/10.1145/2541940.2541941
[10] Chris Edwards. 2015. Growing Pains for Deep Learning. Commun. ACM 58, 7
(jun 2015), 14–16. DOI:http://dx.doi.org/10.1145/2771283
[11] Yaakoub El-Khamra, Hyunjoo Kim, Shantenu Jha, and Manish Parashar. 2010.
Exploring the Performance Fluctuations of HPC Workloads on Clouds. In Proceedings of the 2010 IEEE Second International Conference on Cloud Computing
Technology and Science (CLOUDCOM ’10). IEEE Computer Society, Washington,
DC, USA, 383–387. DOI:http://dx.doi.org/10.1109/CloudCom.2010.84
[12] F. Ercal, J. Ramanujam, and P. Sadayappan. 1988. Task Allocation Onto a Hypercube by Recursive Mincut Bipartitioning. In Proceedings of the Third Conference
on Hypercube Concurrent Computers and Applications: Architecture, Software,
Computer Systems, and General Issues - Volume 1 (C3P). ACM, New York, NY,
USA, 210–221. DOI:http://dx.doi.org/10.1145/62297.62323
[13] Iman Faraji, Seyed Hessam Mirsadeghi, and Ahmad Afsahi. 2016. TopologyAware GPU Selection on Multi-GPU Nodes. In 2016 IEEE International Parallel and
Distributed Processing Symposium Workshops, IPDPS Workshops 2016, Chicago, IL,
USA, May 23-27, 2016. 712–720. DOI:http://dx.doi.org/10.1109/IPDPSW.2016.44
[14] Damon Fenacci, Björn Franke, and John Thomson. 2010. Workload Characterization Supporting the Development of Domain-specific Compiler Optimizations
Using Decision Trees for Data Mining. In Proceedings of the 13th International
Workshop on Software &#38; Compilers for Embedded Systems (SCOPES ’10). ACM,
New York, NY, USA, Article 5, 10 pages. DOI:http://dx.doi.org/10.1145/1811212.
1811219
[15] C. M. Fiduccia and R. M. Mattheyses. 1982. A Linear-time Heuristic for Improving
Network Partitions. In Proceedings of the 19th Design Automation Conference
(DAC ’82). IEEE Press, Piscataway, NJ, USA, 175–181.
[16] Google. 2017. Google Cloud Prediction API Documentation. (2017). https:
//cloud.google.com/prediction/docs/
[17] Google. 2017. Kubernetes. (2017). https://github.com/googlecloudplatform/
kubernetes Accessed in: 21-January-2015.
[18] Samuel Greengard. 2016. GPUs Reshape Computing. Commun. ACM 59, 9 (Aug.
2016), 14–16. DOI:http://dx.doi.org/10.1145/2967979
[19] Akhila Gundu, Gita Sreekumar, Ali Shafiee, Seth Pugsley, Hardik Jain, Rajeev
Balasubramonian, and Mohit Tiwari. 2014. Memory Bandwidth Reservation in
the Cloud to Avoid Information Leakage in the Memory Controller. In Proceedings
of the Third Workshop on Hardware and Architectural Support for Security and
Privacy (HASP ’14). ACM, New York, NY, USA, 11:1–11:5. DOI:http://dx.doi.org/
10.1145/2611765.2611776
[20] Anshul Gupta. 2010. An Evaluation of Parallel Graph Partitioning and Ordering
Softwares on a Massively Parallel Computer. IBM T. J. Watson Research Center.
All pages.
[21] Benjamin Hindman, Andy Konwinski, Matei Zaharia, Ali Ghodsi, Anthony D.
Joseph, Randy Katz, Scott Shenker, and Ion Stoica. 2011. Mesos: A Platform
for Fine-grained Resource Sharing in the Data Center. In Proceedings of the 8th
USENIX Conference on Networked Systems Design and Implementation (NSDI’11).
USENIX Association, Berkeley, CA, USA, 295–308. http://dl.acm.org/citation.
cfm?id=1972457.1972488
[22] Kenneth Hoste, Aashish Phansalkar, Lieven Eeckhout, Andy Georges, Lizy K.
John, and Koen De Bosschere. 2006. Performance Prediction Based on Inherent
Program Similarity. In Proceedings of the 15th International Conference on Parallel
Architectures and Compilation Techniques (PACT ’06). ACM, New York, NY, USA,
114–122. DOI:http://dx.doi.org/10.1145/1152154.1152174
[23] IBM. 2017. Go beyond articial intelligence with Watson. (2017). https://www.
ibm.com/watson/
[24] Alexandru Iosup, Nezih Yigitbasi, and Dick Epema. 2011. On the Performance
Variability of Production Cloud Services. In Proceedings of the 2011 11th IEEE/ACM
International Symposium on Cluster, Cloud and Grid Computing (CCGRID ’11).
IEEE Computer Society, Washington, DC, USA, 104–113. DOI:http://dx.doi.org/
10.1109/CCGrid.2011.22
[25] Onur Kayiran, Nachiappan Chidambaram Nachiappan, Adwait Jog, Rachata
Ausavarungnirun, Mahmut T. Kandemir, Gabriel H. Loh, Onur Mutlu, and Chita R.
Das. 2014. Managing GPU Concurrency in Heterogeneous Architectures. In
Proceedings of the 47th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO-47). IEEE Computer Society, Washington, DC, USA, 114–126.
DOI:http://dx.doi.org/10.1109/MICRO.2014.62
[26] V. V. Kindratenko, J. J. Enos, G. Shi, M. T. Showerman, G. W. Arnold, J. E. Stone, J. C.
Phillips, and W. m. Hwu. 2009. GPU clusters for high-performance computing.
In 2009 IEEE International Conference on Cluster Computing and Workshops. 1–8.
DOI:http://dx.doi.org/10.1109/CLUSTR.2009.5289128
[27] Philipp Leitner and Juergen Cito. 2014. Patterns in the Chaos - a Study of
Performance Variation and Predictability in Public IaaS Clouds. arXiv:1411.2429
[cs] (Nov. 2014). arXiv: 1411.2429.
[28] David Lo, Liqun Cheng, Rama Govindaraju, Parthasarathy Ranganathan, and
Christos Kozyrakis. 2015. Heracles: Improving Resource Eciency at Scale. In
Proceedings of the 42Nd Annual International Symposium on Computer Architecture
(ISCA ’15). ACM, New York, NY, USA, 450–462. DOI:http://dx.doi.org/10.1145/
2749469.2749475
[29] David Lo, Liqun Cheng, Rama Govindaraju, Parthasarathy Ranganathan, and
Christos Kozyrakis. 2016. Improving Resource Eciency at Scale with Heracles.
ACM Trans. Comput. Syst. 34, 2, Article 6 (May 2016), 33 pages. DOI:http://dx.
doi.org/10.1145/2882783
[30] Virginia Lo, Kurt J. Windisch, Wanqian Liu, and Bill Nitzberg. 1997. Noncontiguous Processor Allocation Algorithms for Mesh-Connected Multicomputers. IEEE Trans. Parallel Distrib. Syst. 8, 7 (July 1997), 712–726. DOI:
http://dx.doi.org/10.1109/71.598346
[31] Microsoft. 2017. Project Oxford - Cognitive Services APIs. (2017). https://www.
microsoft.com/cognitive-services/
[32] Ripal Nathuji, Aman Kansal, and Alireza Ghaarkhah. 2010. Q-clouds: Managing
Performance Interference Eects for QoS-aware Clouds. In Proceedings of the
5th European Conference on Computer Systems (EuroSys ’10). ACM, New York,
NY, USA, 237–250. DOI:http://dx.doi.org/10.1145/1755913.1755938
[33] Dejan Novaković, Nedeljko Vasić, Stanko Novaković, Dejan Kostić, and Ricardo
Bianchini. 2013. DeepDive: Transparently Identifying and Managing Performance Interference in Virtualized Environments. In Presented as part of the 2013
USENIX Annual Technical Conference (USENIX ATC 13). USENIX, San Jose, CA.
[34] FranÃğois Pellegrini. 2001. Scotch and libScotch 3.4 User’s Guide. (2001).
[35] FranÃğois Pellegrini and Jean Roman. 1996. Experimental Analysis of the Dual
Recursive Bipartitioning Algorithm for Static Mapping. Technical Report. TR
1038-96, LaBRI, URA CNRS 1304, Univ. Bordeaux I.
[36] Perfmon2. 2016. Improving performance monitoring on Linux. (2016). http:
//perfmon2.sourceforge.net
[37] J. R. Quinlan. 1986. Induction of Decision Trees. Mach. Learn. 1, 1 (March 1986),
81–106. DOI:http://dx.doi.org/10.1023/A:1022643204877
[38] Moinuddin K. Qureshi and Yale N. Patt. 2006. Utility-Based Cache Partitioning:
A Low-Overhead, High-Performance, Runtime Mechanism to Partition Shared
Caches. In Proceedings of the 39th Annual IEEE/ACM International Symposium on
Microarchitecture (MICRO 39). IEEE Computer Society, Washington, DC, USA,
423–432. DOI:http://dx.doi.org/10.1109/MICRO.2006.49
[39] Roberto Tamassia. 1987. On Embedding a Graph in the Grid with the Minimum
Number of Bends. SIAM J. Comput. 16, 3 (June 1987), 421–444. DOI:http://dx.
doi.org/10.1137/0216030
[40] Ozan Tuncer, Vitus J. Leung, and Ayse K. Coskun. 2015. PaCMap: Topology Mapping of Unstructured Communication Patterns Onto Non-contiguous Allocations.
In Proceedings of the 29th ACM on International Conference on Supercomputing (ICS
’15). ACM, New York, NY, USA, 37–46. DOI:http://dx.doi.org/10.1145/2751205.
2751225
[41] Akshat Verma, Puneet Ahuja, and Anindya Neogi. 2008. Power-aware Dynamic
Placement of HPC Applications. In Proceedings of the 22Nd Annual International
Conference on Supercomputing (ICS ’08). ACM, New York, NY, USA, 175–184.
DOI:http://dx.doi.org/10.1145/1375527.1375555
[42] Linnan Wang, Wei Wu, George Bosilca, Richard W. Vuduc, and Zenglin Xu.
2016. Ecient Communications in Training Large Scale Neural Networks. CoRR
abs/1611.04255 (2016). http://arxiv.org/abs/1611.04255
[43] Kurt Windisch, Virginia Lo, and Bella Bose. 1995. Contiguous And NonContiguous Processor Allocation Algorithms For K-Ary n-Cubes. IEEE Transactions on Parallel and Distributed Systems 8 (1995), 712–726.
[44] J. Wu and B. Hong. 2013. Collocating CPU-only Jobs with GPU-assisted Jobs on
GPU-assisted HPC. In 2013 13th IEEE/ACM International Symposium on Cluster,
Cloud, and Grid Computing. DOI:http://dx.doi.org/10.1109/CCGrid.2013.19
[45] Seetharami R. Seelam Yu Bo Li, IBM Research. 2017. Speeding up Deep Learning Services: When GPUs meet Container Clouds, NVIDIA GPU Technology
Conference. (2017). http://on-demand.gputechconf.com/gtc/2017/presentation/
s7258-seetharami-seelam-speed-up-deep-learning-service.pdf Accessed in: 5-
August-2017
