[1] CERT/CC Advisories. http://www.cert.org/
advisories/.
[2] Kernel Bug Tracker. http://bugzilla.kernel.
org/.
[3] US-CERT Vulnerabilities Notes Database. http:
//www.kb.cert.org/vuls/.
[4] Computation of the internet checksum via incremental update. https://tools.ietf.org/html/
rfc1624, 1994.
[5] Dave Anderson, Jim Dykes, and Erik Riedel. More
Than an Interface: SCSI vs. ATA. In FAST, 2003.
[6] Lakshmi N. Bairavasundaram, Garth R. Goodson,
Shankar Pasupathy, and Jiri Schindler. An Analysis
of Latent Sector Errors in Disk Drives. In SIGMETRICS, 2007.
[7] Lakshmi N. Bairavasundaram, Garth R. Goodson,
Bianca Schroeder, Andrea C. Arpaci-Dusseau, and
Remzi H. Arpaci-Dusseau. An Analysis of Data
Corruption in the Storage Stack. In FAST, 2008.
[8] Wendy Bartlett and Lisa Spainhower. Commercial
Fault Tolerance: A Tale of Two Systems. IEEE
Trans. on Dependable and Secure Computing, 1(1),
2004.
[9] Robert Baumann. Soft errors in advanced computer
systems. IEEE Des. Test, 22(3):258–266, 2005.
[10] M. P. Baze and S. P. Buchner. Attenuation of single event induced pulses in cmos combinational
logic. IEEE Transactions on Nuclear Science,
44(6):2217–2223, Dec 1997.
[11] Emery D. Berger and Benjamin G. Zorn. Diehard:
Probabilistic memory safety for unsafe languages.
In Proceedings of the 27th ACM SIGPLAN Conference on Programming Language Design and
Implementation, PLDI ’06, pages 158–168, New
York, NY, USA, 2006. ACM.
[12] Steve Best. JFS Overview. www.ibm.com/
developerworks/library/l-jfs.html, 2000.
[13] Jeff Bonwick and Bill Moore. ZFS: The Last
Word in File Systems. http://opensolaris.org/
os/community/zfs/docs/zfs\_last.pdf, 2007.
[14] Wayne Burleson, Onur Mutlu, and Mohit Tiwari.
Invited - who is the major threat to tomorrow’s security?: You, the hardware designer. In Proceedings of the 53rd Annual Design Automation Conference, DAC ’16, pages 145:1–145:5, New York,
NY, USA, 2016. ACM.
[15] John Chapin, Mendel Rosenblum, Scott Devine,
Tirthankar Lahiri, Dan Teodosiu, and Anoop
Gupta. Hive: Fault Containment for SharedMemory Multiprocessors. In SOSP, 1995.
[16] C. L. Chen. Error-correcting codes for semiconductor memories. SIGARCH Comput. Archit. News,
12(3):245–247, 1984.
[17] Peter Corbett, Bob English, Atul Goel, Tomislav Grcanac Steven Kleiman, James Leong, and
Sunitha Sankar. Row-diagonal parity for double
disk failure correction. In Proceedings of Conference on File and Storage Technologies (FAST),
2004.
[18] Intel Corporation. Intel 64 and IA-32 Architectures Software Developers Manual Volume 3A: System Programming Guide, Part 1.
https://software.intel.com/sites/default/
files/managed/7c/f1/253668-sdm-vol-3a.pdf,
December 2016.
[19] Standard Performance Evaluation Corporation.
Spec sfs 2014. https://www.spec.org/sfs2014/.
[20] Storage Performance Council. Storage performance council-1 benchmark.
www.storageperformance.org/results/#spc1_
overview.
[21] Matthew Curtis-Maury, Vinay Devadas, Vania
Fang, and Aditya Kulkarni. To waffinity and beyond: A scalable architecture for incremental parallelization of file system code. In Proceeding of
Symposium on Operating Systems Design and Implementation (OSDI), 2016.
[22] Fryer Daniel. Personal Communication. Date -
09/07/2016.
[23] P. Deutsch and J.-L. Gailly. Zlib compressed data
format specification version 3.3. https://www.
ietf.org/rfc/rfc1950.txt, 1996.
[24] John K. Edwards, Daniel Ellard, Craig Everhart,
Robert Fair, Eric Hamilton, Andy Kahn, Arkady
Kanevsky, James Lentini, Ashish Prakash, Keith A.
Smith, and Edward Zayas. FlexVol: flexible, efficient file volume virtualization in WAFL. In Proceedings of the 2008 USENIX Annual Technical
Conference, pages 129–142, Jun 2008.
[25] A. Eto, M. Hidaka, Y. Okuyama, K. Kimura, and
M. Hosono. Impact of neutron flux on soft errors in
mos memories. In International Electron Devices
Meeting, 1998.
[26] J. Fletcher. An arithmetic checksum for serial transmissions. IEEE Transactions on Communications,
1982.
[27] Daniel Fryer, Kuei Sun, Rahat Mahmood, TingHao
Cheng, Shaun Benjamin, Ashvin Goel, and Angela Demke Brown. Recon: Verifying file system
consistency at runtime. In FAST ’12, San Jose, CA,
February 2012.
[28] Gregory R. Ganger and Yale N. Patt. Metadata Update Performance in File Systems. In OSDI ’94,
1994.
[29] Jim Gray. Why do computers stop and what
can be done about it? http://www.hpl.hp.com/
techreports/tandem/TR-85.7.pdf, 1985.
[30] Robert Hagmann. Reimplementing the Cedar File
System Using Logging and Group Commit. In
SOSP ’87, 1987.
[31] James Hamilton. Successfully Challenging the Server Tax. http://
perspectives.mvdirona.com/2009/09/03/
SuccessfullyChallengingTheServerTax.aspx.
[32] Dave Hitz, James Lau, and Michael Malcolm. File
system design for an NFS file server appliance.
In Proceedings of USENIX Winter 1994 Technical
Conference, pages 235–246, Jan 1994.
[33] NetApp Inc. Netapp quick notes - wafl
check. http://netapp-notes.blogspot.com/2008/
03/wafl-check.html, 2008.
[34] NetApp Inc. Data ONTAP 8. http://www.netapp.
com/us/products/platform-os/ontap/, 2010.
[35] NetApp Inc. Overview of wafliron.
https://kb.netapp.com/support/index?page=
content\&id=3011877, 2016.
[36] Dell T. J. A white paper on the benefits of chipkillcorrect ecc for pc server main memory. IBM Microelectronics Division, 1997.
[37] Ram Kesavan, Rohit Singh, Travis Grusecki, and
Yuvraj Patel. Algorithms and data structures for
efficient free space reclamation in WAFL. In Proceedings of Conference on File and Storage Technologies (FAST), 2017.
[38] Yoongu Kim, Ross Daly, Jeremie Kim, Chris
Fallin, Ji Hye Lee, Donghyuk Lee, Chris Wilkerson, Konrad Lai, and Onur Mutlu. Flipping bits in
memory without accessing them: An experimental
study of dram disturbance errors. In Proceeding of
the 41st Annual International Symposium on Computer Architecuture, ISCA ’14, pages 361–372, Piscataway, NJ, USA, 2014. IEEE Press.
[39] Xin Li, Kai Shen, Michael C. Huang, and Lingkun
Chu. A memory soft error measurement on production systems. In 2007 USENIX Annual Technical
Conference on Proceedings of the USENIX Annual
Technical Conference, ATC’07, pages 21:1–21:6,
Berkeley, CA, USA, 2007. USENIX Association.
[40] Joshua MacDonald, Hans Reiser, and Alex
Zarochentcev. Reiser4 Transaction Design Document. https://reiser4.wiki.kernel.org/index.
php/Txn-doc, 2002.
[41] T. Mallory and A. Kullberg. Incremental updating of the internet checksum. https://tools.ietf.
org/html/rfc1141, 1990.
[42] Avantika Mathur, Mingming Cao, and Andreas Dilger. ext4: the next generation of the ext3 file system. ;login: - The Usenix Magazine, Vol. 31, June
2006.
[43] Theresa C. Maxino and Philip J. Koopman. The
effectiveness of checksums for embedded control
networks. IEEE Trans. Dependable Secur. Comput., 6(1):59–72, January 2009.
[44] T. C. May and M. H. Woods. Alpha-particleinduced soft errors in dynamic memories. IEEE
Trans. on Electron Dev, 26(1), 1979.
[45] Thomas R. Nicely. Pentium fdiv bug. http://www.
trnicely.net/pentbug/bugmail1.html.
[46] T. J. O’Gorman, J. M. Ross, A. H. Taber, J. F.
Ziegler, H. P. Muhlfeld, C. J. Montrose, H. W. Curtis, and J. L. Walsh. Field testing for cosmic ray
soft errors in semiconductor memories. IBM J. Res.
Dev., 40(1):41–50, 1996.
[47] David Patterson, Garth Gibson, and Randy Katz.
A Case for Redundant Arrays of Inexpensive Disks
(RAID). In SIGMOD, 1988.
[48] Kaveh Razavi, Ben Gras, Erik Bosman, Bart Preneel, Cristiano Giuffrida, and Herbert Bos. Flip
feng shui: Hammering a needle in the software
stack. In 25th USENIX Security Symposium
(USENIX Security 16), pages 1–18, Austin, TX,
August 2016. USENIX Association.
[49] Ohad Rodeh, Josef Bacik, and Chris Mason.
Btrfs: The linux b-tree filesystem. Trans. Storage,
9(3):9:1–9:32, August 2013.
[50] Mendel Rosenblum and John Ousterhout. The Design and Implementation of a Log-Structured File
System. ACM Transactions on Computer Systems,
10(1), 1992.
[51] Bianca Schroeder and Garth Gibson. Disk failures
in the real world: What does an MTTF of 1,000,000
hours mean to you? In FAST, 2007.
[52] Bianca Schroeder, Eduardo Pinheiro, and WolfDietrich Weber. DRAM errors in the wild: A
Large-Scale Field Study. In Proceedings of the
2009 Joint International Conference on Measurement and Modeling of Computer Systems (SIGMETRICS/Performance ’09), Seattle, Washington,
June 2007.
[53] Thomas J. E. Schwarz, Qin Xin, Ethan L. Miller,
Darrell D. E. Long, Andy Hospodor, and Spencer
Ng. Disk scrubbing in large archival storage systems. In Proceedings of the The IEEE Computer Society’s 12th Annual International Symposium on Modeling, Analysis, and Simulation of
Computer and Telecommunications Systems, MASCOTS ’04, pages 409–418, Washington, DC, USA,
2004. IEEE Computer Society.
[54] Muthian Sivathanu, Vijayan Prabhakaran, Florentina I. Popovici, Timothy E. Denehy, Andrea C.
Arpaci-Dusseau, and Remzi H. Arpaci-Dusseau.
Semantically-smart disk systems. In Proceedings
of the 2Nd USENIX Conference on File and Storage Technologies, FAST ’03, pages 73–88, Berkeley, CA, USA, 2003. USENIX Association.
[55] Vilas Sridharan, Nathan DeBardeleben, Sean Blanchard, Kurt B. Ferreira, Jon Stearley, John Shalf,
and Sudhanva Gurumurthi. Memory errors in modern systems: The good, the bad, and the ugly. In
Proceedings of the Twentieth International Conference on Architectural Support for Programming
Languages and Operating Systems, ASPLOS ’15,
pages 297–310, New York, NY, USA, 2015. ACM.
[56] Inquirer Staff. Amd opteron bug can cause incorrect results. http://www.theinquirer.net.
[57] Christopher A. Stein, John H. Howard, and
Margo I. Seltzer. Unifying file system protection. In
Proceedings of the General Track: 2001 USENIX
Annual Technical Conference, pages 79–90, Berkeley, CA, USA, 2001. USENIX Association.
[58] The Data Clinic. Hard Disk Failure. http://
www.dataclinic.co.uk/hard-disk-failures.htm,
2004.
[59] Stephen C. Tweedie. Journaling the Linux ext2fs
File System. In The Fourth Annual Linux Expo,
Durham, North Carolina, 1998.
[60] Stephen C. Tweedie. EXT3, Journaling File
System. olstrans.sourceforge.net/release/
OLS2000-ext3/OLS2000-ext3.html, 2000.
[61] Glenn Weinberg. The Solaris Dynamic File System. http://members.visi.net/$\sim$thedave/
sun/DynFS.pdf, 2004.
[62] Yichen Xie, Andy Chou, and Dawson Engler.
Archer: Using symbolic, path-sensitive analysis
to detect memory access errors. In Proceedings
of the 9th European Software Engineering Conference Held Jointly with 11th ACM SIGSOFT International Symposium on Foundations of Software
Engineering, ESEC/FSE-11, pages 327–336, New
York, NY, USA, 2003. ACM.
[63] Yupu Zhang, Daniel Myers, Andrea C. ArpaciDusseau, and Remzi H. Arpaci-Dusseau. Zettabyte
Reliability with Flexible End-to-end Data Integrity.
In MSST’13, Long Beach, CA, May 2013.
[64] Yupu Zhang, Abhishek Rajimwale, Andrea C.
Arpaci-Dusseau, and Remzi H. Arpaci-Dusseau.
End-to-end data integrity for file systems: A zfs
case study. In Proceedings of the 8th USENIX
Conference on File and Storage Technologies,
FAST’10, Berkeley, CA, USA, 2010. USENIX Association.
[65] J. F. Ziegler and W. A. Lanford. Effect of
cosmic rays on computer memories. Science,
206(4420):776–788, 1979.
