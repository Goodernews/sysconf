[1] Basho Bench.
http://github.com/basho/basho_bench.

[2] bet365.
http://www.bet365.com/.

[3] Customers of Riak KV.
http://basho.com/about/customers/.

[4] Netem.
http://www.linuxfoundation.org/collaborate/
workgroups/networking/netem.

[5] The network time protocol.
http://www.ntp.org.

[6] Riak KV.
https://github.com/basho/riak_kv.

[7] Rovio.
http://www.rovio.com/.

[8] A DELSON -V ELSKII , M., AND L ANDIS , E. An algorithm for the
organization of information. Tech. rep., DTIC Document, 1963.
[9] A HAMAD , M., N EIGER , G., B URNS , J. E., KOHLI , P., AND
H UTTO , P. W. Causal memory: definitions, implementation, and
programming. Distributed Computing 9, 1 (1995), 37–49.
[10] A KKOORATH , D., T OMSIC , A., B RAVO , M., L I , Z., C RAIN ,
T., B IENIUSA , A., P REGUIÇA , N., AND S HAPIRO , M. Cure:
Strong semantics meets high availability and low latency. In Proceedings of the International Conference on Distributed Computing Systems (Osaka, Japan, 2016).
[11] A L -FARES , M., L OUKISSAS , A., AND VAHDAT, A. A scalable,
commodity data center network architecture. In Proceedings of
the ACM SIGCOMM 2008 Conference on Data Communication
(Seattle, WA, USA, 2008), pp. 63–74.
[12] A LMEIDA , S., L EIT ÃO , J. A ., AND RODRIGUES , L. Chainreaction: A causal+ consistent datastore based on chain replication. In
Proceedings of the 8th ACM European Conference on Computer
Systems (Prague, Czech Republic, 2013).
[13] A LSBERG , P. A., AND DAY, J. D. A principle for resilient sharing of distributed resources. In Proceedings of the 2nd International Conference on Software Engineering (San Francisco, CA,
USA, 1976).
[14] ATTIYA , H., E LLEN , F., AND M ORRISON , A. Limitations of
highly-available eventually-consistent data stores. In Proceedings
of the ACM Symposium on Principles of Distributed Computing
(Donostia-San Sebastián, Spain, 2015).
[15] BAILIS , P., DAVIDSON , A., F EKETE , A., G HODSI , A.,
H ELLERSTEIN , J. M., AND S TOICA , I. Highly available transactions: Virtues and limitations. Proc. VLDB Endow. 7, 3 (Nov.
2013), 181–192.



[16] BAILIS , P., F EKETE , A., G HODSI , A., H ELLERSTEIN , J. M.,
AND S TOICA , I. The potential dangers of causal consistency and
an explicit solution. In Proceedings of the ACM Symposium on
Cloud Computing (San Jose, California, 2012).
[17] BALEGAS , V., D UARTE , S., F ERREIRA , C., RODRIGUES , R.,
P REGUIÇA , N., NAJAFZADEH , M., AND S HAPIRO , M. Putting
consistency back into eventual consistency. In Proceedings of
the 10th ACM European Conference on Computer Systems (Bordeaux, France, 2015).
[18] B IRMAN , K., S CHIPER , A., AND S TEPHENSON , P. Lightweight
causal and atomic group multicast. ACM Trans. Comput. Syst. 9,
3 (Aug. 1991).
[19] B RAVO , M., D IEGUES , N., Z ENG , J., ROMANO , P., AND RO DRIGUES , L. On the use of clocks to enforce consistency in the
cloud. IEEE Data Eng. Bull 38, 1 (2015), 18–31.
[20] C HANDRA , T., H ADZILACOS , V., AND T OUEG , S. The weakest
failure detector for solving consensus. J. ACM 43, 4 (July 1996),
685–722.
[21] DAHLIN , M., G AO , L., NAYATE , A., V ENKATARAMANA , A.,
YALAGANDULA , P., AND Z HENG , J. Practi replication. In Proceedings of the 3rd Symposium on Networked Systems Design and
Implementation (San Jose, CA, USA, 2006).
[22] D U , J., E LNIKETY, S., ROY, A., AND Z WAENEPOEL , W. Orbe:
Scalable causal consistency using dependency matrices and physical clocks. In Proceedings of the ACM Symposium on Cloud
Computing (Santa Clara, CA, USA, 2013).
[23] D U , J., E LNIKETY, S., AND Z WAENEPOEL , W. Clock-si: Snapshot isolation for partitioned data stores using loosely synchronized clocks. In Proceedings of the 32nd IEEE Symposium on
Reliable Distributed Systems (Braga, Portugal, 2013).
[24] D U , J., I ORGULESCU , C., ROY, A., AND Z WAENEPOEL , W.
Gentlerain: Cheap and scalable causal consistency with physical
clocks. In Proceedings of the ACM Symposium on Cloud Computing (Seattle, WA, USA, 2014).
[25] D U , J., S CIASCIA , D., E LNIKETY, S., Z WAENEPOEL , W., AND
P EDONE , F. Clock-RSM: Low-latency inter-datacenter state machine replication using loosely synchronized physical clocks. In
Proceedings of the 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (Atlanta, Georgia
USA, 2014).
[26] G REENBERG , A., H AMILTON , J. R., JAIN , N., K ANDULA , S.,
K IM , C., L AHIRI , P., M ALTZ , D. A., PATEL , P., AND S EN GUPTA , S. Vl2: A scalable and flexible data center network. In
Proceedings of the ACM SIGCOMM 2009 Conference on Data
Communication (Barcelona, Spain, 2009), pp. 51–62.
[27] G UERRAOUI , R., PAVLOVIC , M., AND S EREDINSCHI , D.-A.
Trade-offs in replicated systems. Data Engineering (2016), 14.
[28] G UIBAS , L. J., AND S EDGEWICK , R. A dichromatic framework
for balanced trees. In Proceedings of the 54th IEEE Annual Symposium on Foundations of Computer Science (Ann Arbor, Michigan, USA, 1978), pp. 8–21.
[29] G UNAWARDHANA , C., B RAVO , M., AND RODRIGUES , L.
Unobtrusive deferred update stabilization for efficient georeplication. arXiv:1702.01786 [cs.DC] (Feb. 2017).
[30] K ULKARNI , S. S., D EMIRBAS , M., M ADAPPA , D., AVVA , B.,
AND L EONE , M. Logical physical clocks. In Proceedings of
the 18th International Conference on Principles of Distributed
Systems (Cortina d’Ampezzo, Italy, 2014).
[31] L ADIN , R., L ISKOV, B., S HRIRA , L., AND G HEMAWAT, S. Providing high availability using lazy replication. ACM Trans. Comput. Syst. (1992).
[32] L AKSHMAN , A., AND M ALIK , P. Cassandra: A decentralized
structured storage system. SIGOPS Oper. Syst. Rev. 44, 2 (Apr.
2010), 35–40.
[33] L AMPORT, L. The part-time parliament. ACM Trans. Comput.
Syst. 16, 2 (May 1998), 133–169.
[34] L I , C., P ORTO , D., C LEMENT, A., G EHRKE , J., P REGUIÇA ,
N., AND RODRIGUES , R. Making geo-replicated systems fast as
possible, consistent when necessary. In Proceedings of the 10th
USENIX Conference on Operating Systems Design and Implementation (Hollywood, CA, USA, 2012), pp. 265–278.
[35] L LOYD , W., F REEDMAN , M. J., K AMINSKY, M., AND A NDER SEN , D. G. Don’t settle for eventual: Scalable causal consistency
for wide-area storage with cops. In Proceedings of the 23rd ACM
Symposium on Operating Systems Principles (Cascais, Portugal,
2011).
[36] L LOYD , W., F REEDMAN , M. J., K AMINSKY, M., AND A NDER SEN , D. G. Stronger semantics for low-latency geo-replicated
storage. In Proceedings of the 10th Symposium on Networked
Systems Design and Implementation (Lombard, IL, USA, 2013).
[37] M AHAJAN , P., A LVISI , L., AND DAHLIN , M. Consistency,
availability, and convergence. Tech. rep., University of Texas at
Austin, 2011.
[38] P ETERSEN , K., S PREITZER , M. J., T ERRY, D. B., T HEIMER ,
M. M., AND D EMERS , A. J. Flexible update propagation
for weakly consistent replication. In Proceedings of the 16th
ACM Symposium on Operating Systems Principles (Saint Malo,
France, 1997).

[39] S CHNEIDER , F. B. Implementing fault-tolerant services using
the state machine approach: A tutorial. ACM Comput. Surv. 22,
4 (Dec. 1990), 299–319.
[40] S CHURMAN , E., AND B RUTLAG , J. The user and business impact of server delays, additional bytes, and HTTP chunking in
web search. In Velocity Web Performance and Operations Conference (San Jose, CA, USA, 2009).
[41] S OVRAN , Y., P OWER , R., AGUILERA , M. K., AND L I , J.
Transactional storage for geo-replicated systems. In Proceedings
of the 23rd ACM Symposium on Operating Systems Principles
(Cascais, Portugal, 2011).
[42] T ERRY, D. B., D EMERS , A. J., P ETERSEN , K., S PREITZER ,
M. J., T HEIMER , M. M., AND W ELCH , B. B. Session guarantees for weakly consistent replicated data. In Proceedings of
the 3rdInternational Conference on Parallel and Distributed Information Systems (Austin, TX, USA, 1994).
[43] VAN R ENESSE , R., AND S CHNEIDER , F. B. Chain replication
for supporting high throughput and availability. In Proceedings of
the 6th symposium on Operating systems design and implementation (San Francisco, CA, USA, 2004).
[44] Z AWIRSKI , M., P REGUIÇA , N., D UARTE , S., B IENIUSA , A.,
BALEGAS , V., AND S HAPIRO , M. Write fast, read in the past:
Causal consistency for client-side applications. In Proceedings of
the annual ACM/IFIP/USENIX Middleware conference (Vancouver, Canada, 2015).
