
[1] D. Abadi, D. S. Myers, D. J. DeWitt, and S. R.

Madden. Materialization strategies in a
column-oriented dbms. In ICDE, pages 466–475.
IEEE, 2007.

[2] J. A. Blakeley, W. J. McKenna, and G. Graefe.

Experiences building the open oodb query optimizer.
In SIGMOD, pages 287–296, 1993.

[3] J.-y. Chang and S.-g. Lee. An optimization of

disjunctive queries: Union-pushdown. In COMPSAC,
pages 356–361. IEEE, 1997.

[4] S. Chaudhuri, P. Ganesan, and S. Sarawagi.

Factorizing complex predicates in queries to exploit
indexes. In SIGMOD, pages 361–372. ACM, 2003.

[5] S. Christodoulakis. Implications of certain

assumptions in database performance evauation.
TODS, pages 163–186, 1984.

[6] J. Claussen, A. Kemper, G. Moerkotte, K. Peithner,
and M. Steinbrunn. Optimization and evaluation of
disjunctive queries. Knowledge and Data Engineering,
IEEE Transactions on, 12(2):238–260, 2000.
[7] R. Cole, F. Funke, L. Giakoumakis, W. Guy,

A. Kemper, S. Krompass, H. Kuno, R. Nambiar,
T. Neumann, M. Poess, et al. The mixed workload
ch-benchmark. In Proceedings of the Fourth
International Workshop on Testing Database Systems,
page 8. ACM, 2011.

[8] College of Natural Resources Colorado State

University. Forest dataset. http://kdd.ics.uci.edu/
databases/covertype/covertype.data.html.

[9] C. Diaconu, C. Freedman, E. Ismert, P.-A. Larson,

P. Mittal, R. Stonecipher, N. Verma, and M. Zwilling.
Hekaton: SQL server’s memory-optimized OLTP
engine. In SIGMOD, pages 1243–1254, 2013.
[10] M. Grund, J. Kr¨uger, H. Plattner, A. Zeier,

P. Cudre-Mauroux, and S. Madden. HYRISE: a main
memory hybrid storage engine. PVLDB, pages
105–116, 2010.

[11] M. Z. Hanani. An optimal evaluation of boolean

expressions in an online query system.
Communications of the ACM, 20(5):344–347, 1977.

[12] IBM. Soliddb.

http://www.ibm.com/software/data/soliddb.

[13] M. Jarke and J. Koch. Query optimization in database

systems. ACM Computing surveys (CsUR),
16(2):111–152, 1984.

[14] R. Johnson, V. Raman, R. Sidle, and G. Swart.

Row-wise parallel predicate evaluation. VLDB, pages
622–634, 2008.

[15] R. Kallman, H. Kimura, J. Natkins, A. Pavlo,
A. Rasin, S. Zdonik, E. P. Jones, S. Madden,
M. Stonebraker, Y. Zhang, et al. H-store: a
high-performance, distributed main memory
transaction processing system. PVLDB, pages
1496–1499, 2008.

[16] F. Kastrati and G. Moerkotte. Optimization of

conjunctive predicates for main memory column
stores. VLDB, pages 1125–1136, 2016.

[17] A. Kemper and G. Moerkotte. Advanced query
processing in object bases using access support
relations. In VLDB, pages 290–301, 1990.

[18] A. Kemper, G. Moerkotte, K. Peithner, and

M. Steinbrunn. Optimizing disjunctive queries with
expensive predicates. In ACM SIGMOD Record, pages
336–347. ACM, 1994.

[19] A. Kemper, G. Moerkotte, and M. Steinbrunn.

Optimizing boolean expressions in object bases. In
VLDB, pages 79–90, 1992.

[20] A. Kemper and T. Neumann. HyPer: A hybrid

OLTP&OLAP main memory database system based
on virtual memory snapshots. In ICDE, pages
195–206, 2011.

[21] V. Markl, P. J. Haas, M. Kutsch, N. Megiddo,

U. Srivastava, and T. M. Tran. Consistent selectivity
estimation via maximum entropy. The VLDB journal,
16(1):55–76, 2007.

[22] V. Markl, G. Lohman, and V. Raman. LEO: An

autonomic query optimizer for DB2. IBM Systems
Journal, 42(1):98–106, 2003.

[23] G. Moerkotte, M. Montag, A. Repetti, and G. Steidl.

Proximal operator of quotient functions with
application to a feasibility problem in query
optimization. Journal of Computational and Applied
Mathematics, 285:243–255, 2015.

[24] M. Muralikrishna. Optimization of multiple-disjunct

queries in a relational database system. Technical
Report 750, University of Wisconsin, Madison, 1988.

[25] T. Neumann. Eﬃciently compiling eﬃcient query

plans for modern hardware. PVLDB, 4(9):539–550,
2011.

[26] T. Neumann, S. Helmer, and G. Moerkotte. On the

optimal ordering of maps and selections under
factorization. In ICDE, pages 490–501, 2005.

[27] Oracle. TimesTen In-Memory Database.

http://www.oracle.com/technetwork/database/
database-technologies/timesten/overview/index.html.

[28] L. T. Reinwald and R. M. Soland. Conversion of
limited-entry decision tables to optimal computer
programs I: Minimum average processing time.
Journal of the ACM (JACM), 13(3):339–358, 1966.
[29] SAP. In-Memory Computing (SAP HANA). http://
www.sap.com/pc/tech/in-memory-computing-hana/
software/overview/index.html.

[30] P. G. Selinger, M. M. Astrahan, D. D. Chamberlin,

R. A. Lorie, and T. G. Price. Access path selection in
a relational database management system. In
SIGMOD, pages 23–34. ACM, 1979.

[31] D. D. Straube and M. T. ¨Ozsu. Queries and query

processing in object-oriented database systems. ACM
Transactions on Information Systems (TOIS),
8(4):387–430, 1990.

[32] TUM. CH-benchmark. https:

//db.in.tum.de/research/projects/CHbenCHmark/.

[33] K. Tzoumas, A. Deshpande, and C. Jensen. Eﬃciently

adapting graphical models for selectivity estimation.
VLDB Journal, 22:3–27, 2013.
[34] VoltDB. In-memory database.

http://www.voltdb.com.
