[1] 802.1Qbb - Priority-based Flow Control. http://www.ieee802.org/1/pages/802.

1bb.html. 2016.

[2] Dealing with DeadlineExceededErrors. https://cloud.google.com/appengine/

articles/deadlineexceedederrors. 2012.
[3] Openstack. https://www.openstack.org/.
[4] Setting Timeouts for Blob Service Operations. https://msdn.microsoft.com/en-us/

library/azure/dd179431.aspx. 2016.

[5] TCP-Friendly Multicast Congestion Control (TFMCC): Protocol Specification.

https://tools.ietf.org/html/rfc4654, 2006.

[6] Apache Zookeeper. http://zookeeper.apache.org/, 2008.
[7] Summary of the October 22, 2012 AWS Service Event in the US-East Region,

2012. https://aws.amazon.com/message/680342/.

[8] Docker at Spotify. http://goo.gl/53t3XN, 2013.
[9] M. Alizadeh, S. Yang, M. Sharif, S. Katti, N. McKeown, B. Prabhakar, and
S. Shenker. pfabric: Minimal near-optimal datacenter transport. In Proceedings
of the ACM SIGCOMM Conference on Applications, Technologies, Architectures,
and Protocols for Computer Communication, SIGCOMM ’13, pages 435–446,
New York, NY, USA, 2013. ACM.

[10] S. Angel, H. Ballani, T. Karagiannis, G. O’Shea, and E. Thereska. End-to-end
performance isolation through virtual datacenters. In Proceedings of the USENIX
Symposium on Operating Systems Design and Implementation, OSDI ’14, pages
233–248, Berkeley, CA, USA, 2014. USENIX Association.

[11] E. Boutin, J. Ekanayake, W. Lin, B. Shi, J. Zhou, Z. Qian, M. Wu, and L. Zhou.
Apollo: scalable and coordinated scheduling for cloud-scale computing. In Pro-
ceedings of the USENIX Symposium on Operating Systems Design and Imple-
mentation, OSDI ’14, pages 285–300, Broomfield, CO, Oct. 2014. USENIX
Association.

[12] E. A. Brewer. Lessons from giant-scale services. Internet Computing, IEEE,

5(4):46–55, 2001.

[13] B. Calder, J. Wang, A. Ogus, N. Nilakantan, A. Skjolsvold, S. McKelvie, Y. Xu,
S. Srivastav, J. Wu, H. Simitci, J. Haridas, C. Uddaraju, H. Khatri, A. Edwards,
V. Bedekar, S. Mainali, R. Abbasi, A. Agarwal, M. F. u. Haq, M. I. u. Haq,
D. Bhardwaj, S. Dayanand, A. Adusumilli, M. McNett, S. Sankaran, K. Mani-
vannan, and L. Rigas. Windows azure storage: A highly available cloud storage
service with strong consistency. In Proceedings of the ACM Symposium on Oper-
ating Systems Principles, SOSP ’11, pages 143–157, New York, NY, USA, 2011.
ACM.

[14] S. Chen, J. A. Stankovic, J. F. Kurose, and D. Towsley. Performance evaluation of
two new disk scheduling algorithms for real-time systems. Real-Time Systems,
3(3):307–336, 1991.

[15] M. Chowdhury, M. Zaharia, J. Ma, M. I. Jordan, and I. Stoica. Managing data
transfers in computer clusters with orchestra. ACM Sigcomm Computer Communi-
cation Review, 41(4):98–109, Aug. 2011.

[16] M. Chowdhury, Y. Zhong, and I. Stoica. Efficient coflow scheduling with varys.
In Proceedings of the ACM SIGCOMM Conference on Applications, Technologies,

Architectures, and Protocols for Computer Communication, SIGCOMM ’14, pages
443–454, New York, NY, USA, 2014. ACM.

[17] B. Christensen. Application Resilience in a Service-oriented Architecture. http:

//goo.gl/0TKDmQ, 2013.

[18] M. Crovella, R. Frangioso, and M. Harchol-Balter. Connection scheduling in web
servers. In Proceedings of the USENIX Symposium on Internet Technologies and
Systems, volume 10 of USITS ’99, pages 243–254, 1999.

[19] T. Das, Y. Zhong, I. Stoica, and S. Shenker. Adaptive stream processing using
dynamic batch sizing. In Proceedings of the ACM Symposium on Cloud Computing,
SOCC ’14, pages 16:1–16:13, New York, NY, USA, 2014. ACM.

[20] J. Dean and L. A. Barroso. The Tail At Scale. Communications of the ACM,

56:74–80, 2013.

[21] G. Decandia, D. Hastorun, M. Jampani, G. Kakulapati, A. Lakshman, A. Pilchin,
S. Sivasubramanian, P. Vosshall, and W. Vogels. Dynamo: Amazon’s Highly
Available Key-value Store. In Proceedings of the ACM Symposium on Operating
Systems Principles, SOSP ’07, pages 205–220, New York, NY, USA, 2007. ACM.
[22] F. R. Dogar, T. Karagiannis, H. Ballani, and A. Rowstron. Decentralized task-
aware scheduling for data center networks. In Proceedings of the ACM SIGCOMM
Conference on Applications, Technologies, Architectures, and Protocols for Com-
puter Communication, SIGCOMM ’14, pages 431–442, New York, NY, USA,
2014. ACM.

[23] R. P. Doyle, J. S. Chase, O. M. Asad, W. Jin, and A. M. Vahdat. Model-based
resource provisioning in a web service utility. In Proceedings of the USENIX
Symposium on Internet Technologies and Systems, USITS’03, pages 5–5, Berkeley,
CA, USA, 2003. USENIX Association.

[24] N. Dukkipati and N. McKeown. Why flow-completion time is the right metric for
congestion control. ACM Sigcomm Computer Communication Review, 36(1):59–
62, Jan. 2006.

[25] T. Erl. Service-Oriented Architecture (SOA): Concepts, Technology, and Design .

Prentice Hall, 2005.

[26] A. Ghodsi, M. Zaharia, B. Hindman, A. Konwinski, S. Shenker, and I. Stoica. Dom-
inant resource fairness: Fair allocation of multiple resource types. In Proceedings
of the USENIX Symposium on Networked Systems Design and Implementation,
NSDI ’11, pages 323–336, Berkeley, CA, USA, 2011. USENIX Association.

[27] Z. Gong, X. Gu, and J. Wilkes. Press: Predictive elastic resource scaling for cloud
systems. In 2010 International Conference on Network and Service Management,
pages 9–16. IEEE, 2010.

[28] R. Grandl, G. Ananthanarayanan, S. Kandula, S. Rao, and A. Akella. Multi-
resource packing for cluster schedulers. In Proceedings of the ACM SIGCOMM
Conference on Applications, Technologies, Architectures, and Protocols for Com-
puter Communication, SIGCOMM ’14, pages 455–466, New York, NY, USA,
2014. ACM.

[29] M. P. Grosvenor, M. Schwarzkopf, I. Gog, R. N. Watson, A. W. Moore, S. Hand,
and J. Crowcroft. Queues Don’t Matter When You Can JUMP Them! In Proceed-
ings of the USENIX Symposium on Networked Systems Design and Implementation,
NSDI ’15, pages 1–14, Oakland, CA, May 2015. USENIX Association.

[30] A. Gulati, I. Ahmad, C. A. Waldspurger, et al. Parda: Proportional allocation
of resources for distributed storage access. In Proceedings of the International
Conference on File and Storage Technologies, FAST ’09, pages 85–98, Berkeley,
CA, USA, 2009. USENIX Association.

[31] A. Gulati, A. Merchant, and P. J. Varman. mclock: handling throughput variability
for hypervisor io scheduling. In Proceedings of the USENIX Symposium on Oper-
ating Systems Design and Implementation, OSDI ’10, pages 437–450, Berkeley,
CA, USA, 2010. USENIX Association.

[32] Z. Guo, S. McDirmid, M. Yang, L. Zhuang, P. Zhang, Y. Luo, T. Bergan, M. Musu-
vathi, Z. Zhang, and L. Zhou. Failure recovery: When the cure is worse than the
disease. In Proceedings of the Workshop on Hot Topics in Operating Systems,
HotOS ’14, Berkeley, CA, 2013. USENIX.

[33] V. Gupta and M. Harchol-Balter. Self-adaptive admission control policies for
resource-sharing systems. In Proceedings of the ACM SIGMETRICS International
Conference on Measurement and Modeling of Computer Systems, SIGMETRICS
’09, pages 311–322, New York, NY, USA, 2009. ACM.

[34] B. Harry. Explanation of July 18th outage. http://goo.gl/DPuJBm, 2014.
[35] R. G. Herrtwich. An introduction to real-time scheduling. International Computer

Science Institute, 1990.

[36] C.-Y. Hong, M. Caesar, and P. B. Godfrey. Finishing flows quickly with preemptive
scheduling. In Proceedings of the ACM SIGCOMM Conference on Applications,
Technologies, Architectures, and Protocols for Computer Communication, SIG-
COMM ’12, pages 127–138, New York, NY, USA, 2012. ACM.

[37] V. Jalaparti, P. Bodik, S. Kandula, I. Menache, M. Rybalkin, and C. Yan. Speeding
up Distributed Request-Response Workflows. In Proceedings of the ACM SIG-
COMM Conference on Applications, Technologies, Architectures, and Protocols
for Computer Communication, SIGCOMM ’13, pages 219–230, New York, NY,
USA, 2013. ACM.

[38] K. Jang, J. Sherry, H. Ballani, and T. Moncaster. Silo: Predictable message latency
in the cloud. In Proceedings of the ACM SIGCOMM Conference on Applica-
tions, Technologies, Architectures, and Protocols for Computer Communication,
SIGCOMM ’15, pages 435–448, New York, NY, USA, 2015. ACM.

622

Distributed Resource Management Across Process Boundaries

SoCC ’17, September 24–27, 2017, Santa Clara, CA, USA

[39] E.

Jones.

Retries

considered harmful.

http://www.evanjones.ca/

retries-considered-harmful.html, 2015.

[40] E. Kalyvianaki, M. Fiscato, T. Salonidis, and P. Pietzuch. Themis: Fairness in
federated stream processing under overload. In Proceedings of the ACM SIGMOD
International Conference on Management of Data, SIGMOD ’16, pages 541–553,
New York, NY, USA, 2016. ACM.

[41] S. Kulkarni, N. Bhagat, M. Fu, V. Kedigehalli, C. Kellogg, S. Mittal, J. M. Patel,
K. Ramasamy, and S. Taneja. Twitter heron: Stream processing at scale.
In
Proceedings of the ACM SIGMOD International Conference on Management of
Data, SIGMOD ’15, pages 239–250, New York, NY, USA, 2015. ACM.

[42] A. Kumar, S. Jain, U. Naik, A. Raghuraman, N. Kasinadhuni, E. C. Zermeno,
C. S. Gunn, J. Ai, B. Carlin, M. Amarandei-Stavila, M. Robin, A. Siganporia,
S. Stuart, and A. Vahdat. Bwe: Flexible, hierarchical bandwidth allocation for
wan distributed computing. In Proceedings of the ACM SIGCOMM Conference
on Applications, Technologies, Architectures, and Protocols for Computer Com-
munication, SIGCOMM ’15, pages 1–14, New York, NY, USA, 2015. ACM.

[43] G. Kumar, G. Ananthanarayanan, S. Ratnasamy, and I. Stoica. Hold ’em or fold
’em?: Aggregation queries under performance variations. In Proceedings of the
European Conference on Computer Systems, EuroSys ’16, pages 7:1–7:14, New
York, NY, USA, 2016. ACM.

[44] L. Lu, L. Cherkasova, V. de Nitto Persone, N. Mi, and E. Smirni. AWAIT: Efficient
overload management for busy multi-tier web services under bursty workloads.
Springer, 2010.

[45] J. Mace, P. Bodik, R. Fonseca, and M. Musuvathi. Retro: Targeted resource
management in multi-tenant distributed systems. In Proceedings of the USENIX
Symposium on Networked Systems Design and Implementation, NSDI ’15, pages
589–603, Oakland, CA, May 2015. USENIX Association.

[46] J. Mace, P. Bodik, M. Musuvathi, R. Fonseca, and K. Varadarajan. 2dfq: Two-
dimensional fair queuing for multi-tenant cloud services. In Proceedings of the
ACM SIGCOMM Conference on Applications, Technologies, Architectures, and
Protocols for Computer Communication, SIGCOMM ’16, pages 144–159, New
York, NY, USA, 2016. ACM.

[47] C. Munns. I Love APIs 2015: Microservices at Amazon. http://goo.gl/aVWlpY,

2015.

2012.

[48] Netflix. Adopting Microservices at Netflix: Lessons for Architectural Design.

https://goo.gl/sNuQPj, 2012.

[49] Netflix. Embracing the Differences : Inside the Netflix API Redesign. http:
//techblog.netflix.com/2012/07/embracing-differences-inside-netflix.html, 2012.
[50] Netflix. Introducing Hystrix for Resilience Engineering. http://goo.gl/h9brP0,

[51] Netflix. Strategy for tuning the hystrix configuration. https://github.com/Netflix/

Hystrix/issues/866, 2015.

[52] S. Newman. Building Microservices. O’Reilly Media, 2015.
[53] Nginx. Adopting Microservices at Netflix: Lessons for Team and Process Design.

https://goo.gl/KOrUfT, 2015.

[54] H. Nguyen, Z. Shen, X. Gu, S. Subbiah, and J. Wilkes. AGILE: Elastic distributed
resource scaling for infrastructure-as-a-service. In Proceedings of the International
Conference on Autonomic Computing, ICAC ’13, pages 69–82, San Jose, CA,
2013. USENIX Association.

[55] R. Nishtala, H. Fugal, S. Grimm, M. Kwiatkowski, H. Lee, H. C. Li, R. McElroy,
M. Paleczny, D. Peek, P. Saab, D. Stafford, T. Tung, and V. Venkataramani. Scaling
Memcache at Facebook. In Proceedings of the USENIX Symposium on Networked
Systems Design and Implementation, pages 385–398, Berkeley, CA, USA, 2013.
USENIX Association.

[56] Pivotal Software. RabbitMQ. https://www.rabbitmq.com/, 2012.
[57] L. Popa, G. Kumar, M. Chowdhury, A. Krishnamurthy, S. Ratnasamy, and I. Stoica.
FairCloud: Sharing the Network in Cloud Computing. In Proceedings of the
ACM SIGCOMM Conference on Applications, Technologies, Architectures, and
Protocols for Computer Communication, pages 187–198, New York, NY, USA,
2012. ACM.

[58] L. Popa, P. Yalagandula, S. Banerjee, J. C. Mogul, Y. Turner, and J. R. Santos. Elas-
ticswitch: Practical work-conserving bandwidth guarantees for cloud computing.
In Proceedings of the ACM SIGCOMM Conference on Applications, Technolo-
gies, Architectures, and Protocols for Computer Communication, SIGCOMM ’13,
pages 351–362, New York, NY, USA, 2013. ACM.

[59] B. Raghavan, K. Vishwanath, S. Ramabhadran, K. Yocum, and A. C. Snoeren.
Cloud control with distributed rate limiting. In Proceedings of the ACM SIG-
COMM Conference on Applications, Technologies, Architectures, and Protocols
for Computer Communication, SIGCOMM ’07, pages 337–348, New York, NY,
USA, 2007. ACM.

[60] Y. Sharma, P. Ajoux, P. Ang, D. Callies, A. Choudhary, L. Demailly, T. Fer-
sch, L. A. Guz, A. Kotulski, S. Kulkarni, S. Kumar, H. Li, J. Li, E. Makeev,
K. Prakasam, R. V. Renesse, S. Roy, P. Seth, Y. J. Song, B. Wester, K. Veeraragha-
van, and P. Xie. Wormhole: Reliable pub-sub to support geo-replicated internet
services. In Proceedings of the USENIX Symposium on Networked Systems Design
and Implementation, pages 351–366, Oakland, CA, 2015. USENIX Association.
[61] M. Shreedhar and G. Varghese. Efficient fair queueing using deficit round robin.

ACM Sigcomm Computer Communication Review, 25(4):231–242, Oct. 1995.

[62] D. Shue, M. J. Freedman, and A. Shaikh. Performance isolation and fairness
for multi-tenant cloud storage. In Proceedings of the 10th USENIX Conference
on Operating Systems Design and Implementation, OSDI’12, pages 349–362,
Berkeley, CA, USA, 2012. USENIX Association.

[63] S. Souders. Velocity and the bottom line. http://radar.oreilly.com/2009/07/

velocity-making-your-site-fast.html, 2009.

[64] SoundCloud. Building products at SoundCloud - part I: Dealing with the monolith.

https://goo.gl/Qra2tA, 2014.

[65] J. A. Stankovic, K. Ramamritham, and M. Spuri. Deadline Scheduling for Real-
Time Systems: EDF and Related Algorithms. Kluwer Academic Publishers, 1998.

[66] A. Storm. http://storm.apache.org/, 2011.
[67] E. Thereska, H. Ballani, G. O’Shea, T. Karagiannis, A. Rowstron, T. Talpey,
R. Black, and T. Zhu. IOFlow: A Software-Defined Storage Architecture. In
Proceedings of the ACM Symposium on Operating Systems Principles, SOSP ’13,
pages 182–196, New York, NY, USA, 2013. ACM.

[68] S. Tonse. MicroServices at Netflix - challenges of scale. http://goo.gl/9j5wSv,

2014.

[69] Twitter. Finagle: A Protocol-Agnostic RPC System. https://goo.gl/ITebZs, 2011.
[70] Uber. Service-oriented Architecture: Scaling the Uber Codebase as We Grow.

https://eng.uber.com/soa/, 2015.

[71] A. Verma, L. Pedrosa, M. R. Korupolu, D. Oppenheimer, E. Tune, and J. Wilkes.
Large-scale cluster management at Google with Borg. In Proceedings of the
European Conference on Computer Systems, EuroSys ’15, pages 18:1–18:17,
Bordeaux, France, 2015. ACM.

[72] VMware. Xenon. https://github.com/vmware/xenon, 2017.
[73] A. Wang, S. Venkataraman, S. Alspaugh, R. Katz, and I. Stoica. Cake: Enabling
High-level SLOs on Shared Storage Systems. In Proceedings of the ACM Sympo-
sium on Cloud Computing, SoCC ’12, pages 14:1–14:14, New York, NY, USA,
2012. ACM.

[74] H. Wang and P. Varman. Balancing Fairness and Efficiency in Tiered Storage
Systems with Bottleneck-aware Allocation. In Proceedings of the International
Conference on File and Storage Technologies, FAST ’14, pages 229–242, Berkeley,
CA, USA, 2014. USENIX Association.

[75] M. Welsh and D. Culler. Overload management as a fundamental service design
In Proceedings of the 10th Workshop on ACM SIGOPS European

primitive.
Workshop, EW 10, pages 63–69, New York, NY, USA, 2002. ACM.

[76] C. Wilson, H. Ballani, T. Karagiannis, and A. Rowtron. Better never than late:
meeting deadlines in datacenter networks. In Proceedings of the ACM SIGCOMM
Conference on Applications, Technologies, Architectures, and Protocols for Com-
puter Communication, SIGCOMM ’11, pages 50–61, New York, NY, USA, 2011.
ACM.

[77] M. Zaharia, D. Borthakur, J. Sen Sarma, K. Elmeleegy, S. Shenker, and I. Stoica.
Delay scheduling: a simple technique for achieving locality and fairness in cluster
scheduling. In Proceedings of the European Conference on Computer Systems,
EuroSys ’10, pages 265–278, New York, NY, USA, 2010. ACM.

[78] Z. Zhang, L. Cherkasova, A. Verma, and B. T. Loo. Automated profiling and
resource management of pig programs for meeting service level objectives. In
Proceedings of the International Conference on Autonomic Computing, ICAC ’12,
pages 53–62, New York, NY, USA, 2012. ACM.

