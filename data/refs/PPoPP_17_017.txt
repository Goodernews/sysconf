[1] N. S. Arora, R. D. Blumofe, and C. G. Plaxton. Thread
Scheduling for Multiprogrammed Multiprocessors. In SPAA,
pages 119-129, 1998.

[2] J. Barnes and P. Hut. A hierarchical o(nlogn) forcecalculation algorithm. Nature, 324(4):446-449, December
1986.

[3] R. D. Blumofe and C. E. Leiserson. Scheduling Multithreaded
Computations by Work Stealing. J. ACM, 46(5):720-748,
1999.

[4] R. D. Blumofe, C. F. Joerg, B. C. Kuszmaul, C. E. Leiserson,
K. H. Randall, and Y. Zhou. Cilk: An Efficient Multithreaded
Runtime System. Journal of Parallel and Distributed Computing, 37(1):55-69, August 25, 1996.

[5] Cilkk. Cilk 5.4.6. http://supertech.csail.mit.
edu/cilk/.

[6] I. Corp. Intel Cilk Plus Language Extension Specification,
2011.

[7] Y. Jo and M. Kulkarni. Enhancing Locality for Recursive
Traversals of Recursive Structures. In OOPSLA, pages 463482, 2011.

[8] Y. Jo, M. Goldfarb, and M. Kulkarni. Automatic Vectorization
of Tree Traversals. In PACT, pages 363-374, 2013.

[9] Y. A. Liu and S. D. Stoller. From Recursion to Iteration: What
are the Optimizations? In PEPM, pages 73-82, 2000.

[10] S. Maleki, Y. Gao, M. J. Garzaran, T. Wong, and D. A. Padua.
An Evaluation of Vectorizing Compilers. In PACT, pages
372-382, 2011.

[11] OpenMP Architecture Review Board. OpenMP Specification
and Features. http: //openmp.org/wp/, May 2008.

[12] M. Pharr and W. R. Mark. ispc: A SPMD Compiler for
High-performance CPU Programming. In Innovative Parallel
Computing (InPar), 2012, pages 1-13. IEEE, 2012.

[13] J. Reinders. Intel Threading Building Blocks: Outfitting C++
for Multi-Core Processor Parallelism. Oâ€™ Reilly, 2007.

[14] B. Ren, G. Agrawal, J. R. Larus, T. Mytkowicz, T. Poutanen,
and W. Schulte. SIMD Parallelization of Applications that
Traverse Irregular Data Structures. In 2013 IEEE/ACM Inter
national Symposium on Code Generation and Optimization
(CGO), pages 1-10. IEEE, 2013.
[15] B. Ren, Y. Jo, S. Krishnamoorthy, K. Agrawal, and M. Kulkami. Efficient Execution of Recursive Programs on Commodity
Vector Hardware. In PLDI, pages 509-520, 2015.

[16] M. Rinard and P. C. Diniz. Commutativity analysis: a new
analysis technique for parallelizing compilers. ACM Trans.

Program. Lang. Syst., 19(6):942-991, 1997. ISSN 0164-0925.

doi: http://doi.acm.org/10.1145/267959.269969.

[17] R. Rugina and M. C. Rinard. Recursion Unrolling for Divide
and Conquer Programs. In LCPC, pages 34-48, 2000.

[18] X10. The X10 Programming Language. www. research.
ibm. com/x10/, Mar. 2006.
