[1] J. Bien et al. “A lasso for hierarchical interactions”. In: Annals of statistics 41.3
(2013), p. 1111.

[2] C. Bienia et al. “The PARSEC Benchmark Suite: Characterization and Architec
tural Implications”. In: PACT. 2008.
S. Che et al. “Rodinia: A Benchmark Suite for Heterogeneous Computing”. In:
IISWC. 2009.

[3] X. Chen et al. “Performance and power modeling in a multi-programmed multicore environment’. In: DAC. 2010.

[4] X. Chen et al. “Cloudscope: Diagnosing and managing performance interference
in multi-tenant clouds”. In: MASCOTS. 2015.

[5] R. C. Chiang and H. H. Huang. “TRACON: Interference-aware scheduling for
data-intensive applications in virtualized environments”. In: SC. 2011.

[6] S.-H. Chiang et al. “The impact of more accurate requested runtimes on production job scheduling performance”. In: Job Scheduling Strategies for Parallel
Processing. 2002.

[7] C. Delimitrou and C. Kozyrakis. “Paragon: QoS-aware Scheduling for Heterogeneous Datacenters”. In: ASPLOS. 2013.

[8] C. Delimitrou and C. Kozyrakis. “Quasar: Resource-efficient and QoS-aware
Cluster Management”. In: ASPLOS. 2014.

[9] T. Dey et al. “ReSense: Mapping Dynamic Workloads of Colocated Multithreaded
Applications Using Resource Sensitivity”. In: ACM Trans. Archit. Code Optim.
10.4 (Dec. 2013).

[10] T. Dwyer et al. “A practical method for estimating performance degradation on
multicore processors, and its application to HPC workloads”. In: SC. 2012.

[11] J. Fan and J. Ly. “Sure independence screening for ultrahigh dimensional
feature space”. In: Journal of the Royal Statistical Society: Series B (Statistical
Methodology) 70.5 (2008), pp. 849-911.

[12] S. Govindan et al. “Cuanta: quantifying effects of shared on-chip resource
interference for consolidated virtual machines”. In: Proceedings of the 2nd ACM
Symposium on Cloud Computing. ACM. 2011, p. 22.

[13] A Hoerl and R Kennard. Ridge regression, in Encyclopedia of Statistical Sciences,
Vol. 8. 1988.

[14 ]H. Hoffmann. “JouleGuard: energy guarantees for approximate applications”. In:
SOSP. 2015.

[15] H. Hoffmann et al. “SEEC: a general and extensible framework for self-aware
computing”. In: (2011).

[16] C. Imes et al. “POET: A Portable Approach to Minimizing Energy Under Soft
Real-time Constraints”. In: RTAS. 2015.

[17] M. Kambadur et al. “Measuring interference between live datacenter applications”.
In: SC. 2012.

[18] S. Kanev et al. “Profiling a warehouse-scale computer”. In: ISCA. 2015.

[19] Y. Kwon et al. “Mantis: Automatic performance prediction for smartphone
applications”. In: USENIX ATC. 2013.

[20] S.-H. Lim et al. “D-factor: A Quantitative Model of Application Slow-down in
Multi-resource Shared Systems”. In: SIGMETRICS Perform. Eval. Rev. 40.1 (June
2012).

[21] A. K. Maji et al. “Ice: An integrated configuration engine for interference
mitigation in cloud services”. In: JCAC. 2015.

[22] J. Mars et al. “Bubble-Up: Increasing Utilization in Modern Warehouse Scale
Computers via Sensible Co-locations”. In: MICRO. 2011.

[23] A. Merkel et al. “Resource-conscious scheduling for energy efficiency on multicore processors”. In: Eurosys. 2010.

[24] N. Mishra et al. “A Probabilistic Graphical Model-based Approach for Minimizing
Energy Under Performance Constraints”. In: ASPLOS. ACM. 2015.

[25] R. Narayanan et al. “MineBench: A Benchmark Suite for Data Mining Workloads”. In: IZSWC. 2006.

[26] N. Rameshan et al. “Stay-Away, Protecting Sensitive Applications from Performance Interference”. In: Middleware. 2014.

[27] A. Roytman et al. “PACMan: Performance Aware Virtual Machine Consolidation.”
In: ICAC. 2013, pp. 83-94.

[28] D. C. Snowdon et al. “Koala: A Platform for OS-level Power Management”. In:
EuroSys. 2009.

[29] L. Subramanian et al. “The Application Slowdown Model: Quantifying and
Controlling the Impact of Inter-application Interference at Shared Caches and
Main Memory”. In: MICRO. 2015.

[30] P. Tembey et al. “Merlin: Application- and Platform-aware Resource Allocation
in Consolidated Server Systems”. In: SOCC. 2014.

[31] R. Tibshirani. “Regression shrinkage and selection via the lasso”. In: Journal of
the Royal Statistical Society. Series B (Methodological) (1996), pp. 267-288.

[32] N. Vasié et al. “DejaVu: Accelerating Resource Allocation in Virtualized Environments”. In: ASPLOS. 2012.

[33] T. Willhalm. Intel performance counter monitor-a better way to measure CPU
utilization. 2012.

[34] C. Xu et al. “Cache contention and application performance prediction for multicore systems”. In: [SPASS. 2010.

[35] H. Yang et al. “Bubble-flux: Precise Online QoS Management for Increased
Utilization in Warehouse Scale Computers”. In: SCA. 2013.

[36] M. Yuan and Y. Lin. “Model selection and estimation in regression with grouped
variables”. In: Journal of the Royal Statistical Society: Series B (Statistical
Methodology) 68.1 (2006), pp. 49-67.

[37] H. Zou and T. Hastie. “Regularization and variable selection via the elastic net”.
In: Journal of the Royal Statistical Society: Series B (Statistical Methodology)
67.2 (2005), pp. 301-320.