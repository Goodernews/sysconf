[1] http://dimacs.rutgers.edu/Challenges/.
[2] BEAMER, S., ASANOVIC´, K., AND PATTERSON,
D. Direction-optimizing breadth-first search. In
Proceedings of the International Conference on
High Performance Computing, Networking, Storage and Analysis (Los Alamitos, CA, USA, 2012),
SC ’12, IEEE Computer Society Press, pp. 12:1–
12:10.
[3] BEAMER, S., ASANOVIC, K., PATTERSON,
D. A., BEAMER, S., AND PATTERSON, D.
Searching for a parent instead of fighting over children: A fast breadth-first search implementation for
graph500. Tech. rep.
[4] CAPOTA˘ , M., HEGEMAN, T., IOSUP, A., PRATPEREZ ´ , A., ERLING, O., AND BONCZ, P. Graphalytics: A big data benchmark for graph-processing
platforms. In Proceedings of the GRADES’15
(New York, NY, USA, 2015), GRADES’15, ACM,
pp. 7:1–7:6.
[5] CHAKRABARTI, D., ZHAN, Y., AND FALOUTSOS, C. R-MAT: A recursive model for graph mining. In Proceedings of the SIAM International Conference on Data Mining (2004), SIAM.
[6] CHEN, R., SHI, J., CHEN, Y., AND CHEN, H.
Powerlyra: Differentiated graph computation and
partitioning on skewed graphs. In Proceedings of
the Tenth European Conference on Computer Systems (2015), ACM, p. 15.
[7] CHENG, R., HONG, J., KYROLA, A., MIAO, Y.,
WENG, X., WU, M., YANG, F., ZHOU, L., ZHAO,
F., AND CHEN, E. Kineograph: taking the pulse of
a fast-changing and connected world. In Proceedings of the ACM European conference on Computer
Systems (2012), ACM, pp. 85–98.
[8] CHING, A. Giraph: Large-scale graph processing infrastructure on hadoop. Proceedings of the
Hadoop Summit. Santa Clara 11 (2011).
[9] DASHTI, M., FEDOROVA, A., FUNSTON, J.,
GAUD, F., LACHAIZE, R., LEPERS, B., QUEMA,
V., AND ROTH, M. Traffic management: a holistic approach to memory placement on NUMA systems. In ACM SIGPLAN Notices (2013), vol. 48,
ACM, pp. 381–394.
[10] DAVIDSON, A., BAXTER, S., GARLAND, M.,
AND OWENS, J. D. Work-efficient parallel GPU
methods for single-source shortest paths. In Proceedings of the 2014 IEEE 28th International
Parallel and Distributed Processing Symposium
(Washington, DC, USA, 2014), IPDPS ’14, IEEE
Computer Society, pp. 349–359.
[11] FU, Z., PERSONICK, M., AND THOMPSON, B.
Mapgraph: A high level API for fast development
of high performance graph analytics on GPUs. In
Proceedings of Workshop on Graph Data Management Experiences and Systems (New York, NY,
USA, 2014), GRADES’14, ACM, pp. 2:1–2:6.
[12] GONZALEZ, J. E., LOW, Y., GU, H., BICKSON,
D., AND GUESTRIN, C. Powergraph: distributed
graph-parallel computation on natural graphs. In
Proceedings of the Conference on Operating Systems Design and Implementation (2012), USENIX
Association, pp. 17–30.
[13] GONZALEZ, J. E., XIN, R. S., DAVE, A.,
CRANKSHAW, D., FRANKLIN, M. J., AND STOICA, I. GraphX: Graph processing in a distributed
dataflow framework. In Proceedings of the 11th
USENIX Conference on Operating Systems Design
and Implementation (Berkeley, CA, USA, 2014),
OSDI’14, USENIX Association, pp. 599–613.
[14] HAN, W., MIAO, Y., LI, K., WU, M., YANG, F.,
ZHOU, L., PRABHAKARAN, V., CHEN, W., AND
CHEN, E. Chronos: A graph engine for temporal
graph analysis. In Proceedings of the Ninth European Conference on Computer Systems (New York,
NY, USA, 2014), EuroSys ’14, ACM, pp. 1:1–1:14.
[15] HONG, S., CHAFI, H., SEDLAR, E., AND
OLUKOTUN, K. Green-Marl: A DSL for easy and
efficient graph analysis. In Proceedings of the Seventeenth International Conference on Architectural
Support for Programming Languages and Operating Systems (New York, NY, USA, 2012), ASPLOS
XVII, ACM, pp. 349–362.
[16] ISARD, M., BUDIU, M., YU, Y., BIRRELL,
A., AND FETTERLY, D. Dryad: distributed
data-parallel programs from sequential building
blocks. In ACM SIGOPS Operating Systems Review (2007), vol. 41, ACM, pp. 59–72.
[17] JU, W., LI, J., YU, W., AND ZHANG, R. iGraph:
an incremental data processing system for dynamic
graph. Frontiers of Computer Science (2016), 1–15.
[18] KWAK, H., LEE, C., PARK, H., AND MOON, S.
What is Twitter, a social network or a news media?
In Proceedings of the International conference on
World Wide Web (2010), ACM, pp. 591–600.
[19] KYROLA, A., BLELLOCH, G., AND GUESTRIN,
C. GraphChi: Large-scale graph computation on
just a PC. In Proceedings of the 10th USENIX Conference on Operating Systems Design and Implementation (Berkeley, CA, USA, 2012), USENIX
Association, pp. 31–46.
[20] MAASS, S., MIN, C., KASHYAP, S., KANG, W.,
KUMAR, M., AND KIM, T. Mosaic: Processing a
trillion-edge graph on a single machine. In Proceedings of the Twelfth European Conference on
Computer Systems (New York, NY, USA, 2017),
EuroSys ’17, ACM, pp. 527–543.
[21] MERRILL, D., GARLAND, M., AND GRIMSHAW,
A. Scalable GPU graph traversal. In Proceedings of
the 17th ACM SIGPLAN Symposium on Principles
and Practice of Parallel Programming (New York,
NY, USA, 2012), PPoPP ’12, ACM, pp. 117–128.
[22] MURRAY, D. G., MCSHERRY, F., ISAACS, R.,
ISARD, M., BARHAM, P., AND ABADI, M. Naiad: A timely dataflow system. In Proceedings of
the Twenty-Fourth ACM Symposium on Operating
Systems Principles (New York, NY, USA, 2013),
SOSP ’13, ACM, pp. 439–455.
[23] NGUYEN, D., LENHARTH, A., AND PINGALI, K.
A lightweight infrastructure for graph analytics. In
Proceedings of the Symposium on Operating Systems Principles (2013), ACM, pp. 456–471.
[24] PAGE, L., BRIN, S., MOTWANI, R., AND WINOGRAD, T. The PageRank citation ranking: Bringing order to the web. Technical Report 1999-66,
Stanford InfoLab, November 1999.
[25] PEREZ, Y., SOSICˇ, R., BANERJEE, A., PUTTAGUNTA, R., RAISON, M., SHAH, P., AND
LESKOVEC, J. Ringo: Interactive graph analytics
on big-memory machines. In Proceedings of the
2015 ACM SIGMOD International Conference on
Management of Data (New York, NY, USA, 2015),
SIGMOD ’15, ACM, pp. 1105–1110.
[26] ROY, A., BINDSCHAEDLER, L., MALICEVIC, J.,
AND ZWAENEPOEL, W. Chaos: Scale-out graph
processing from secondary storage. In Proceedings
of the 25th Symposium on Operating Systems Principles (2015), ACM, pp. 410–424.
[27] ROY, A., MIHAILOVIC, I., AND ZWAENEPOEL,
W. X-stream: Edge-centric graph processing using streaming partitions. In Proceedings of the
ACM symposium on Operating Systems Principles
(2013), ACM, pp. 472–488.
[28] SATISH, N., SUNDARAM, N., PATWARY, M.
M. A., SEO, J., PARK, J., HASSAAN, M. A.,
SENGUPTA, S., YIN, Z., AND DUBEY, P. Navigating the maze of graph analytics frameworks using massive graph datasets. In Proceedings of the
2014 ACM SIGMOD International Conference on
Management of Data (New York, NY, USA, 2014),
SIGMOD ’14, ACM, pp. 979–990.
[29] SHUN, J., AND BLELLOCH, G. E. Ligra: a
lightweight graph processing framework for shared
memory. In ACM SIGPLAN Notices (2013),
vol. 48, ACM, pp. 135–146.
[30] WANG, Y., DAVIDSON, A., PAN, Y., WU, Y.,
RIFFEL, A., AND OWENS, J. D. Gunrock: A
high-performance graph processing library on the
GPU. In Proceedings of the 21st ACM SIGPLAN
Symposium on Principles and Practice of Parallel
Programming (New York, NY, USA, 2016), PPoPP
’16, ACM, pp. 11:1–11:12.
[31] WU, M., YANG, F., XUE, J., XIAO, W., MIAO,
Y., WEI, L., LIN, H., DAI, Y., AND ZHOU, L.
GraM: Scaling graph computation to the trillions.
In Proceedings of the Sixth ACM Symposium on
Cloud Computing (New York, NY, USA, 2015),
SoCC ’15, ACM, pp. 408–421.
[32] ZAGHA, M., AND BLELLOCH, G. E. Radix sort
for vector multiprocessors. In Proceedings of the
1991 ACM/IEEE conference on Supercomputing
(1991), ACM, pp. 712–721.
[33] ZHANG, K., CHEN, R., AND CHEN, H. NUMAaware graph-structured analytics. In ACM SIGPLAN Notices (2015), vol. 50, ACM, pp. 183–193.
[34] ZHONG, J., AND HE, B. Medusa: Simplified graph
processing on GPUs. IEEE Trans. Parallel Distrib.
Syst. 25, 6 (June 2014), 1543–1552.
[35] ZHOU, Y., WILKINSON, D., SCHREIBER, R.,
AND PAN, R. Large-scale parallel collaborative
filtering for the Netflix Prize. In Proceedings of
the 4th International Conference on Algorithmic
Aspects in Information and Management (Berlin,
Heidelberg, 2008), AAIM ’08, Springer-Verlag,
pp. 337–348.
[36] ZHU, X., CHEN, W., ZHENG, W., AND MA, X.
Gemini: A computation-centric distributed graph
processing system. In 12th USENIX Symposium
on Operating Systems Design and Implementation
(OSDI 16)(Savannah, GA (2016).
[37] ZHU, X., HAN, W., AND CHEN, W. GridGraph:
Large-scale graph processing on a single machine
using 2-level hierarchical partitioning. In 2015
USENIX Annual Technical Conference (USENIX
ATC 15) (2015), pp. 375–386.
