[1] ActorDB, actordb.com

[2] Akka documentation, http://akka.io/docs/

[3] Armstrong, J., “Erlang,” CACM 53, 9 (2010), pp. 68-75.

[4] Bernstein, P.A. et al., Orleans: Distributed Virtual Actors for
Programmability and Scalability, MSR-TR-2014-14,
http://research.microsoft.com/apps/pubs?id=210931.

[5] Burckhardt, S. and P.A. Bernstein, “Geo-Distribution for
Orleans,” https://www.youtube.com/watch?v=fOl8ophHtug.

[6] Cattell, R. et al., The Object Data Standard: ODMG 3.0,
Morgan Kaufmann Publishers, 2000.

[7] Eldeeb, T. and P.A. Bernstein, “Transactions for Distributed
Actors,” MSR Technical Report, https://www-.microsoft.com/
en-us/research/publication/transactions-distributed-actorscloud-2, October 2016.

[8] Hewitt, C., P. Bishop, and R. Steiger, “A Universal Modular
Actor Formalism for Artificial Intelligence,” ICAI, 1973.

[9] Java EE documentation, http://www.oracle.com/technetwork/
java/javace/documentation/index.html

[10] Karger D., E. Lehman, T. Leighton, R. Panigrahy, M.
Levine, and D. Lewin: Consistent hashing and random trees:
distributed caching protocols for relieving hot spots on the
World Wide Web. STOC '97.

[11] Larson P.-A., J. Goldstein, J. Zhou, “MTCache: Transparent
Mid-Tier Database Caching in SQL Server”, ICDE, 2004.

[12] Liskov, B., M. Castro, L. Shrira, A. Adya: Providing Persistent Objects in Distributed Systems. ECOOP 1999; 230-257.

[13] Powers, D. M. W.: Applications and explanations of Zipf's
law. NeMLaP3/CoNLL '98: 151-160.

[14] http://tinkerpop.apache.org/

[15] Orleans, http://dotnet.github.io/orleans

[16] Tai, A., M. Wei, M.J. Freedman, I. Abraham, D. Malkhi,
“Replex: A Scalable, Highly-Available, Multi-Index Data
Store,” 2016 USENIX Annual Technical Conf., pp. 337-350.

[17] Tang, Y. et al., “Deferred lightweight indexing for logstructured key-value stores.”, CCGrid 2015.

[18] Zhou, J., P.-A. Larson, and H.G. Elmongui, “Lazy
Maintenance of Materialized Views”, VLDB, 2007
