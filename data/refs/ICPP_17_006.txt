[1] K. Asanovic et al. A View of the Parallel Computing Landscape Comm.
ACM, 2009 V. 52, pp. 56-67.

[2] C. Augonnet, S. Thibault, N. Raymond, P. Wacrenier. StarPU: a unified
platform for task scheduling on heterogeneous multicore architectures.
Conc. and Comp.: Prac. & Exp., v. 23 n. 2, pp.187-198.

[3] D. S. Banerjee, P. Sakurikar, and K. Kothapalli. Fast, scalable parallel
comparison sort on hybrid multicore architectures. In Proc. ASHES, 2013,
pp. 1060-1069.

[4] D. S. Banerjee, S. Sharma, and K. Kothapalli. Work efficient parallel
algorithms for large graph exploration. In HiPC, 2013 pp. 81-93.

[5] D. S. Banerjee, and K. Kothapalli. Hybrid Algorithms for List Ranking
and Graph Connected Components in Proc. of HiPC, 2011. pp. 1-10.

[6] M. Boyer, K. Skadron, S. Che and N. Jayasena. Load Balancing in a
Changing World: Dealing with Heterogeneity and Performance Variability.
in Proc ACM Computing Frontiers, 2013. pp. 21:1-21:10.

[7] A. Buluc and J. R. Gilbert. Challenges and advances in parallel sparse
matrix-matrix multiplication. In Proc. ICPP’08, pp 503-510, 2008.

[8] T. Cormen, C. Leiserson, R. Rivest, and C. Stein. Introduction to
algorithms MIT Press, 2001.

[9] A. Gharaibeh, B. Costa, E. Santos-Neto, and M. Ripeanu. On Graphs,
GPUs, and Blind Dating: A Workload to Processor Matchmaking Quest.
In in Proc. of IEEE IPDPS (2013). pp. 851-862.

[10] C. Gregg, M. Boyer, K. Hazelwood, and K. Skadron. Dynamic
heterogeneous scheduling decisions using historical runtime data. in
Workshop on Applications for Multi- and Many-Core Processors, 2011.

[11] J. Greiner. A comparison of parallel algorithms for connected components, in Proc. SPAA, 1994, pp. 16-25.
 
[12] D. Grewe and Michael F P. O’Boyle. A Static Task Partitioning
Approach for Heterogeneous Systems Using OpenCL in Intl. Conf. on
Compiler Construction, 2011. pp. 286-305.

[13] F Gustavson. Two fast algorithms for sparse matrices: Multiplication
and permuted transposition. ACM T. Math. Soft.,4(3):250-269, 1978.
[14] D. S. Hirschberg, A. K. Chandra, D. V. Sarwate. Computing connected
components in parallel computers CACM 22, 8 (1979), 461-464

[15] S. Hong, N. C. Rodia, and K. Olukotun. On Fast Parallel Detection of
Strongly Connected Components (SCC) in Small-World Graphs. In Proc.
of SC’13 (2013) pp. 92:1-92:11.

[16] Q. Hou, K. Zhou, and B. Guo. SPAP: A programming language for
heterogeneous many-core systems. Technical report, Zhejiang University
Graphics and Parallel Systems Lab, 2010.

[17] S. Indarapu, M. Maramreddy, and K. Kothapalli. Architecture- and
Workload-aware algorithms for Spare Matrix- Vector Multiplication, in
Proc. ACM Compute, 2014. pp. 3:1-3:9.

[18] Intel Math Kernel Library https://software.intel.com/en-us/intel-mkl

[19] K. Kofler, I. Grasso, B. Cosenza and T. Fahringer An Automatic InputSensitive Approach for Heterogeneous Task Partitioning in ACM ICS,
2013. pp. 149-160.

[20] C-K. Luk, S. Hong, and H. Kim Qilin: Exploiting Parallelism on
Heterogeneous Multiprocessors with Adaptive Mapping. in Proc. of Intl.
Symp. on Microarchitecture (MICRO), 2009. pp. 45-55.

[21] H. Ltaief, S. Tomov, R. Nath, and J. Dongarra, Hybrid Multicore
Cholesky Factorization with Multiple GPU Accelerators, IEEE T. on Par.
and Dist. Comp, 2010.

[22] K. Matam, S. Indarapu, and K. Kothapalli. Sparse Matrix Matrix
Multiplication on Hybrid CPU+GPU Platforms, in Proc. of HiPC, 2012.

[23] R. Motwani and P. Raghavan Randomized Algorithms Cambridge
Univeristy Press, 2000

[24] K. R. Ramamoorthy, D. S. Banerjee, K. Srinathan and K. Kothapalli
A Novel Heterogeneous Algorithm for Multiplying Scale-Free Sparse
Matrices IPDPS Workshops 2015, pp. 637-646.

[25] J. Shen, A. L. Varbanescu, P. Zou, Y. Lu, and H. Sips Improving
Performance by Matching Imbalanced Workloads with Heterogeneous
Platforms. in Proc. ACM ICS, pp. 241-250, 2014.

[26] Y. Shiloach and U. Vishkin,. An O(log) parallel connectivity algorithm. J. Algorithms, pp. 57-67, 1982.

[27] J. Soman, K. Kothapalli, and P. J. Narayanan. Some GPU Algorithms
for Graph Connected Components and Spanning Tree, Parallel Processing
Letters, vol. 20, no. 4, pp. 325-339, 2010

[28] Stanford Network Analysis Platform
http://www.cise.ufl.edu/research/sparse/matrices/SNAP/

[29] P. D. Sulatycke, and K. Ghose. Caching-efficient multithreaded fast
multiplication of sparse matrices, in Proc. of IPDPS, pp.117-123, 1998.

[30] G. Wang and X. Ren Power-efficient work distribution method for CPUGPU heterogeneous system. in Proc. ISPA, 2010. pp. 122-129.

dataset >