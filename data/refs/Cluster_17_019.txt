[1] M. Li, J. Tromp, and P. M. B. Vitányi, “How to share
concurrent wait-free variables,” Journal of the ACM, vol. 43,
pp. 723–746, 1996.
[2] A. Larsson, A. Gidenstam, P. H. Ha, M. Papatriantafilou, and
P. Tsigas, “Multiword atomic read/write registers on multiprocessor systems,” Journal of Experimental Algorithmics,
vol. 13, no. 1, p. 1.7, 2009.
[3] L. Lamport, “Concurrent reading and writing,” Communications of the ACM, vol. 20, no. 11, pp. 806–811, 1977.
[4] L. Lamport, “On interprocess communication,” Distributed
Computing, vol. 1, pp. 86–101, 1986.
[5] G. L. Peterson, “Concurrent Reading While Writing,” ACM
Transactions on Programming Languages and Systems, vol. 5,
pp. 46–55, 1983.
[6] M. P. Herlihy and J. M. Wing, “Axioms for concurrent objects,” in Proceedings of the 14th ACM SIGACTSIGPLAN Symposium on Principles of Programming Languages, pp. 13–26, 1987.

[7] M. P. Herlihy and J. M. Wing, “Linearizability: a correctness
condition for concurrent objects,” ACM Transactions on Programming Languages and Systems, vol. 12, no. 3, pp. 463–
492, 1990.
[8] M. Herlihy and N. Shavit, The Art of Multiprocessor Programming. Morgan Kaufmann, 2008.
[9] D. J. Sorin, M. D. Hill, and D. A. Wood, “A Primer
on Memory Consistency and Cache Coherence,” Synthesis
Lectures on Computer Architecture, vol. 6, no. 3, pp. 1–212,
2011.
[10] J. Burns and N. A. Lynch, “Mutual Exclusion Using Invisible
Reads and Writes,” in Proceedings of the 18th Annual Allerton Conference on Communication, Control, and Computing,
pp. 833–842, 1980.
[11] M. Ianni, A. Pellegrini, and F. Quaglia, “A wait-free multiword atomic (1,N) register for large-scale data sharing on
multi-core machines,” CoRR, vol. cs.DC/1707.07478, 2017.