[1] “Facebook LinkBench Benchmark,” https://github.com/
facebook/linkbench.
[2] “Getting The Hang Of IOPS v1.3,” http://www.symantec.
com/connect/articles/getting-hang-iops-v13.
[3] “Google Performance Tools,” https://code.google.com/p/
gperftools/.
[4] “libHugeTLBFS,” http://linux.die.net/man/7/libhugetlbfs.
[5] “Micron Hybrid Memory Cube,” http://www.micron.com/
products/hybrid-memory-cube.
[6] “MusicBrainz,” http://musicbrainz.org/.
[7] “Oracle TimesTen,” http://www.oracle.com/technetwork/
database/database-technologies/timesten/overview/index.
html.
[8] “RocksDB In Memory Workload Performance Benchmarks,” https://github.com/facebook/rocksdb/wiki/RocksDBIn-Memory-Workload-Performance-Benchmarks.
[9] “SAP HANA,” http://hana.sap.com/abouthana.html.
[10] “Stack Overflow,” https://archive.org/details/stackexchange/.
[11] “Tezzaron DiRAM,” http://www.tezzaron.com/products/
diram4-3d-memory/.
[12] “Transparent huge pages in 2.6.38,” https://lwn.net/Articles/
423584/.
[13] “NVIDIA’s Next Generation CUDA Compute Architecture:
Fermi.” http://www.nvidia.com/content/pdf/fermi white
papers/nvidia fermi compute architecture whitepaper.pdf,
2009.
[14] “High Bandwidth Memory (HBM) DRAM,” 2013. [Online].
Available: http://www.jedec.org/standards-documents/results/
jesd235
[15] J. Ahn, S. Hong, S. Yoo, O. Mutlu, and K. Choi, “A scalable
processing-in-memory accelerator for parallel graph processing,” in Proceedings of the 2015 International Symposium on
Computer Architecture, 2015.
[16] J. Ahn, S. Yoo, O. Mutlu, and K. Choi, “PIM-enabled instructions: a low-overhead, locality-aware processing-in-memory
architecture,” in Proceedings of the 2015 International Symposium on Computer Architecture, 2015.
[17] ARM, “Cortex-A7 Processor,” http://www.arm.com/products/
processors/cortex-a/cortex-a7.php.
[18] T. W. Barr, A. L. Cox, and S. Rixner, “Translation caching:
skip, don’t walk (the page table),” in Proceedings of the 2010
International Symposium on Computer Architecture, 2010.
[19] T. W. Barr, A. L. Cox, and S. Rixner, “SpecTLB: A mechanism for speculative address translation,” in Proceedings of
the 2011 International Symposium on Computer Architecture,
2011.
[20] L. A. Barroso and U. Holzle, “The case for energy- ¨
proportional computing,” IEEE Computer, vol. 40, no. 12,
pp. 33–37, 2007.
[21] A. Basu, J. Gandhi, J. Chang, M. D. Hill, and M. M. Swift,
“Efficient virtual memory for big memory servers,” in Proceedings of the 2013 International Symposium on Computer
Architecture, 2013.
[22] A. Basu, M. D. Hill, and M. M. Swift, “Reducing memory
reference energy with opportunistic virtual caching,” in Proceedings of the 2012 International Symposium on Computer
Architecture, 2012.
[23] A. Bhattacharjee, “Large-reach memory management unit
caches,” in Proceedings of the 2013 International Symposium
on Microarchitecture, 2013.
[24] A. Bhattacharjee, D. Lustig, and M. Martonosi, “Shared
last-level TLBs for chip multiprocessors,” in Proceedings
of the 2011 International Symposium on High-Performance
Computer Architecture, 2011.
[25] N. Bronson, Z. Amsden, G. Cabrera, P. Chakka, P. Dimov, H. Ding, J. Ferris, A. Giardullo, S. Kulkarni, H. C.
Li, M. Marchukov, D. Petrov, L. Puzar, Y. J. Song, and
V. Venkataramani, “TAO: facebook’s distributed data store
for the social graph,” in Proceedings of the 2013 Annual
Technical Conference, 2013.
[26] B. Calder, D. Grunwald, and J. S. Emer, “Predictive sequential
associative cache,” in Proceedings of the 1996 International
Symposium on High-Performance Computer Architecture,
1996.
[27] R. Cheng, “Virtual address cache in unix,” in Proceedings of
the Summer 1987 USENIX Technical Conf., 1987.
[28] T. Chiueh and R. H. Katz, “Eliminating the address translation
bottleneck for physical address cache,” in Proceedings of the
1992 International Conference on Architectural Support for
Programming Languages and Operating Systems, 1992.
[29] I. Corporation, “Tlbs, paging-structure caches and their invalation,” Intel Technical Report, 2008.
[30] J. F. Couleur and E. L. Glaser, “Shared-access data
processing system,” 1968, US Patent 3,412,382. Available:
http://www.google.com.ar/patents/US3412382
[31] T. David, R. Guerraoui, and V. Trigonakis, “Asynchronized
concurrency: The secret to scaling concurrent search data
structures,” in Proceedings of the 2015 International Conference on Architectural Support for Programming Languages
and Operating Systems, 2015.
[32] P. J. Denning, “Virtual memory,” ACM Comput. Surv., vol. 2,
no. 3, pp. 153–189, 1970.
[33] J. Draper, J. Chame, M. Hall, C. Steele, T. Barrett, J. LaCoss,
J. Granacki, J. Shin, C. Chen, C. W. Kang, I. Kim, and
G. Daglikoca, “The architecture of the diva processing-inmemory chip,” in Proceedings of the 2002 International
Conference on Supercomputing, 2002.
[34] M. Drumond, A. Daglis, N. Mirzadeh, D. Ustiugov, J. Picorel,
B. Falsafi, B. Grot, and D. Pnevmatikatos, “The mondrian
data engine,” in Proceedings of the 2017 Annual International
Symposium on Computer Architecture, 2017.
[35] M. Ferdman, A. Adileh, Y. O. Koc¸berber, S. Volos, M. Alisafaee, D. Jevdjic, C. Kaynak, A. D. Popescu, A. Ailamaki,
and B. Falsafi, “Clearing the clouds: a study of emerging
scale-out workloads on modern hardware,” in Proceedings of
the 2012 International Conference on Architectural Support
for Programming Languages and Operating Systems, 2012.
[36] J. Gandhi, V. Karakostas, F. Ayar, A. Cristal, M. D. Hill,
K. S. McKinley, M. Nemirovsky, M. M. Swift, and O. S.
Unsal, “Range translations for fast virtual memory,” IEEE
Micro, vol. 36, no. 3, pp. 118–126, 2016.
[37] M. Gao, G. Ayers, and C. Kozyrakis, “Practical near-data processing for in-memory analytics frameworks,” in Proceedings
of the 2015 International Conference on Parallel Architecture
and Compilation Techniques, 2015.
[38] R. N. Gustafson and F. J. Sparacio, “IBM 3081 processor unit:
Design considerations and design process,” IBM Journal of
Research and Development, vol. 26, no. 1, pp. 12–21, 1982.
[39] A. Gutierrez, M. Cieslak, B. Giridhar, R. G. Dreslinski,
L. Ceze, and T. N. Mudge, “Integrated 3d-stacked server
designs for increasing physical density of key-value stores,” in
Proceedings of the 2014 International Conference on Architectural Support for Programming Languages and Operating
Systems, 2014.
[40] P. Hammarlund, “4th Generation Intel R Core TM Processor,
codenamed Haswell,” http://www.hotchips.org/wpcontent/uploads/hc archives/hc25/HC25.80-Processors2-
epub/HC25.27.820-Haswell-Hammarlund-Intel.pdf, 2013.
[41] M. E. Haque, Y. H. Eom, Y. He, S. Elnikety, R. Bianchini, and
K. S. McKinley, “Few-to-many: Incremental parallelism for
reducing tail latency in interactive services,” in Proceedings of
the 2015 International Conference on Architectural Support
for Programming Languages and Operating Systems, 2015.
[42] M. Harris, “Unified memory in cuda 6,” http://ondemand.gputechconf.com/supercomputing/2013/presentation/
SC3120-Unified-Memory-CUDA-6.0.pdf, 2013.
[43] C. Ho, S. J. Kim, and K. Sankaralingam, “Efficient execution
of memory access phases using dataflow specialization,” in
Proceedings of the 2015 International Symposium on Computer Architecture, 2015.
[44] K. Hsieh, S. Khan, N. Vijaykumar, K. K. Chang,
A. Boroumand, S. Ghose, and O. Mutlu, “Accelerating pointer
chasing in 3d-stacked memory: Challenges, mechanisms,
evaluation),” in Proceedings of the 2016 International Conference on Computer Design, 2016.
[45] B. L. Jacob and T. N. Mudge, “A look at several memory
management units, tlb-refill mechanisms, and page table
organizations,” in Proceedings of the 1998 International Conference on Architectural Support for Programming Languages
and Operating Systems, 1998.
[46] B. L. Jacob and T. N. Mudge, “Virtual memory: Issues of
implementation,” IEEE Computer, vol. 31, no. 6, pp. 33–43,
1998.
[47] M. Jeon, S. Kim, S. Hwang, Y. He, S. Elnikety, A. L. Cox,
and S. Rixner, “Predictive parallelization: taming tail latencies
in web search,” in Proceedings of the 2014 International
ACM SIGIR Conference on Research and Development in
Information Retrieval, 2014.
[48] D. Jevdjic, G. H. Loh, C. Kaynak, and B. Falsafi, “Unison
cache: A scalable and effective die-stacked DRAM cache,” in
Proceedings of the 2014 Annual International Symposium on
Microarchitecture, 2014.
[49] N. P. Jouppi, “Architectural and organizational tradeoffs in
the design of the multititan cpu,” in Proceedings of the 1989
International Symposium on Computer Architecture, 1989.
[50] N. P. Jouppi, “Improving direct-mapped cache performance
by the addition of a small fully-associative cache and prefetch
buffers,” in Proceedings of the 1990 International Symposium
on Computer Architecture, 1990.
[51] Y. Kang, W. Huang, S. Yoo, D. Keen, Z. Ge, V. V. Lam,
J. Torrellas, and P. Pattnaik, “Flexram: Toward an advanced
intelligent memory system,” in Proceedings of the 1999
International Conference On Computer Design, VLSI in Computers and Processors, 1999.
[52] D. Kanter, “Cavium Thunders Into Servers: Specialized
Silicon Rivals Xeon for Specific Workloads,” 2016.
Available: http://www.linleygroup.com/mpr/article.php?url=
mpr/h/2016/11545/11545.pdf
[53] V. Karakostas, J. Gandhi, F. Ayar, A. Cristal, M. D. Hill,
K. S. McKinley, M. Nemirovsky, M. M. Swift, and O. Unsal, ¨
“Redundant memory mappings for fast access to large memories,” in Proceedings of the 2015 International Symposium
on Computer Architecture, 2015.
[54] V. Karakostas, O. S. Unsal, M. Nemirovsky, A. Cristal,
and M. M. Swift, “Performance analysis of the memory
management unit under scale-out workloads,” in Proceedings
of the 2015 International Symposium on Workload Characterization, 2014.
[55] G. Kim, J. Kim, J. H. Ahn, and J. Kim, “Memory-centric
system interconnect design with hybrid memory cubes,” in
Proceedings of the 2013 International Conference on Parallel
Architectures and Compilation Techniques, 2013.
[56] Y. O. Koc¸berber, B. Grot, J. Picorel, B. Falsafi, K. T. Lim,
and P. Ranganathan, “Meet the walkers: accelerating index
traversals for in-memory databases,” in Proceedings of the
2013 International Symposium on Microarchitecture, 2013.
[57] C. E. Kozyrakis, A. Kansal, S. Sankar, and K. Vaid, “Server
engineering insights for large-scale online services,” IEEE
Micro, vol. 30, no. 4, pp. 8–19, 2010.
[58] C. E. Kozyrakis, S. Perissakis, D. A. Patterson, T. E. Anderson, K. Asanovic, N. Cardwell, R. Fromm, J. Golbus,
B. Gribstad, K. Keeton, R. Thomas, N. Treuhaft, and K. A.
Yelick, “Scalable processors in the billion-transistor era:
IRAM,” IEEE Computer, vol. 30, no. 9, 1997.
[59] K. T. Lim, D. Meisner, A. G. Saidi, P. Ranganathan, and
T. F. Wenisch, “Thin servers with smart pipes: designing
soc accelerators for memcached,” in Proceedings of the 2013
International Symposium on Computer Architecture, 2013.
[60] F. Limited, “White paper FUJITSU Supercomputer
PRIMEHPC FX100 Evolution to the Next Generation,”
https://www.fujitsu.com/global/Images/primehpc-fx100-
hard-en.pdf, 2014.
[61] C. Luk, R. S. Cohn, R. Muth, H. Patil, A. Klauser, P. G.
Lowney, S. Wallace, V. J. Reddi, and K. M. Hazelwood, “Pin:
building customized program analysis tools with dynamic
instrumentation,” in Proceedings of the 2005 Conference on
Programming Language Design and Implementation, 2005.
[62] J. Mars, L. Tang, R. Hundt, K. Skadron, and M. L. Soffa,
“Bubble-up: increasing utilization in modern warehouse scale
computers via sensible co-locations,” in Proceedings of the
2011 International Symposium on Microarchitecture, 2011.
[63] W. Mauerer, Professional Linux Kernel Architecture. Birmingham, UK, UK: Wrox Press Ltd., 2008.
[64] R. McMillan, “Data center servers suck - but nobody knows
how much.” 2012.
[65] Micron, “Hybrid Memory Cube Specification 2.1,”
2014. Available: http://www.hybridmemorycube.org/files/
SiteDownloads/HMC-30G-VSR HMCC Specification
Rev2.1 20151105.pdf
[66] M. Oskin, F. T. Chong, and T. Sherwood, “Active pages: A
computation model for intelligent memory,” in Proceedings of
the 1998 International Symposium on Computer Architecture,
1998.
[67] J. K. Ousterhout, P. Agrawal, D. Erickson, C. Kozyrakis,
J. Leverich, D. Mazieres, S. Mitra, A. Narayanan, G. M. `
Parulkar, M. Rosenblum, S. M. Rumble, E. Stratmann,
and R. Stutsman, “The case for ramclouds: scalable highperformance storage entirely in DRAM,” Operating Systems
Review, vol. 43, no. 4, pp. 92–105, 2009.
[68] M.-M. Papadopoulou, X. Tong, A. Seznec, and A. Moshovos,
“Prediction-based superpage-friendly TLB designs,” in Proceedings of the 2015 symposium on High Performance Computer Architecture, 2015.
[69] A. Parashar, M. Pellauer, M. Adler, B. Ahsan, N. C. Crago,
D. Lustig, V. Pavlov, A. Zhai, M. Gambhir, A. Jaleel, R. L.
Allmon, R. Rayess, S. Maresh, and J. S. Emer, “Triggered
instructions: a control paradigm for spatially-programmed
architectures,” in Proceedings of the 2013 International Symposium on Computer Architecture, 2013.
[70] H. H. Park, H. Taekyung, and J. Huh, “Efficient synonym
filtering and scalable delayed translation for hybrid virtual
caching,” in Proceedings of the 2016 International Symposium on Computer Architecture, 2016.
[71] B. Pham, A. Bhattacharjee, Y. Eckert, and G. H. Loh, “Increasing TLB reach by exploiting clustering in page translations,” in Proceedings of the 2014 International Symposium
on High Performance Computer Architecture, 2014.
[72] B. Pham, V. Vaidyanathan, A. Jaleel, and A. Bhattacharjee,
“Colt: Coalesced large-reach TLBs,” in Proceedings of the
2012 International Symposium on Microarchitecture, 2012.
[73] B. Pichai, L. Hsu, and A. Bhattacharjee, “Architectural support for address translation on gpus: designing memory management units for cpu/gpus with unified address spaces,” in
Proceedings of the 2014 International Conference on Architectural Support for Programming Languages and Operating
Systems, 2014.
[74] M. D. Powell, A. Agarwal, T. N. Vijaykumar, B. Falsafi,
and K. Roy, “Reducing set-associative cache energy via
way-prediction and selective direct-mapping,” in Proceedings
of the 2001 International Symposium on Microarchitecture,
2001.
[75] J. Power, M. D. Hill, and D. A. Wood, “Supporting x86-64
address translation for 100s of GPU lanes,” in Proceedings
of the 2014 International Symposium on High Performance
Computer Architecture, 2014.
[76] J. Power, Y. Li, M. D. Hill, J. M. Patel, and D. A. Wood,
“Implications of emerging 3d GPU architecture on the scan
primitive,” SIGMOD Record, vol. 44, no. 1, pp. 18–23, 2015.
[77] S. H. Pugsley, J. Jestes, H. Zhang, R. Balasubramonian,
V. Srinivasan, A. Buyuktosunoglu, A. Davis, and F. Li,
“NDC: analyzing the impact of 3d-stacked memory+logic
devices on mapreduce workloads,” in Proceedings of the 2014
International Symposium on Performance Analysis of Systems
and Software, 2014.
[78] M. K. Qureshi and G. H. Loh, “Fundamental latency tradeoff in architecting DRAM caches: Outperforming impractical
sram-tags with a simple and practical design,” in Proceedings
of the 2012 Annual International Symposium on Microarchitecture, 2012.
[79] J. Reinders, “Knights Corner: Your Path to Knights Landing,”
https://software.intel.com/sites/default/files/managed/e9/b5/
Knights-Corner-is-your-path-to-Knights-Landing.pdf, 2014.
[80] P. Rogers, “AMD heterogeneous Uniform Memory Access.” http://events.csdn.net/AMD/130410%20-%20hUMA
v6.6 FINAL.PDF.
[81] A. Saulsbury, F. Dahlgren, and P. Stenstrom, “Recency- ¨
based TLB preloading,” in Proceedings of the 2000 Annual
International Symposium on Computer Architecture, 2000.
[82] M. Shevgoor, J.-S. Kim, N. Chatterjee, R. Balasubramonian,
A. Davis, and A. N. Udipi, “Quantifying the relationship
between the power delivery network and architectural policies
in a 3d-stacked memory device,” in Proceedings of the 2013
International Symposium on Microarchitecture, 2013.
[83] A. J. Smith, “A comparative study of set associative memory
mapping algorithms and their use for cache and main memory,” IEEE Trans. Software Eng., vol. 4, no. 2, pp. 121–130,
1978.
[84] M. Talluri and M. D. Hill, “Surpassing the TLB performance
of superpages with less operating system support,” in Proceedings of the 1994 International Conference on Architectural Support for Programming Languages and Operating
Systems, 1994.
[85] G. Taylor, P. Davies, and M. Farmwald, “The tlb slice—a
low-cost high-speed address translation mechanism,” in Proceedings of the 1990 International Symposium on Computer
Architecture, 1990.
[86] B. Towles, J. P. Grossman, B. Greskamp, and D. E. Shaw,
“Unifying on-chip and inter-node switching within the anton
2 network,” in Proceedings of the 2014 International Symposium on Computer Architecture, 2014.
[87] J. Vesely, A. Basu, M. Oskin, G. H. Loh, and A. Bhattachar- ´
jee, “Observations and opportunities in architecting shared
virtual memory for heterogeneous systems,” in Proceedings of
the 2016 International Symposium on Performance Analysis
of Systems and Software, 2016.
[88] C. Villavieja, V. Karakostas, L. Vilanova, Y. Etsion,
A. Ram´ırez, A. Mendelson, N. Navarro, A. Cristal, and O. S.
Unsal, “Didi: Mitigating the performance impact of TLB
shootdowns using a shared TLB directory,” in Proceedings of
the 2011 International Conference on Parallel Architectures
and Compilation Techniques, 2011.
[89] S. Volos, D. Jevdjic, B. Falsafi, and B. Grot, “Fat caches for
scale-out servers,” IEEE Micro, 2016.
[90] T. F. Wenisch, R. E. Wunderlich, M. Ferdman, A. Ailamaki,
B. Falsafi, and J. C. Hoe, “Simflex: Statistical sampling of
computer system simulation,” IEEE Micro, vol. 26, no. 4, pp.
18–31, 2006.
[91] L. Wu, R. J. Barker, M. A. Kim, and K. A. Ross, “Navigating
big data with high-throughput, energy-efficient data partitioning,” in Proceedings of the 2013 International Symposium on
Computer Architecture, 2013.
[92] S. L. Xi, O. Babarinsa, M. Athanassoulis, and S. Idreos,
“Beyond the wall: Near-data processing for databases,” in
Proceedings of the 2015 International Workshop on Data
Management on New Hardware (DaMoN), 2015.
[93] H. Yang, A. D. Breslow, J. Mars, and L. Tang, “Bubbleflux: precise online qos management for increased utilization
in warehouse scale computers,” in Proceedings of the 2013
International Symposium on Computer Architecture, 2013.
[94] H. Yoon and G. S. Sohi, “Revisiting virtual L1 caches:
A practical design using dynamic synonym remapping,” in
Proceedings of the 2016 International Symposium on High
Performance Computer Architecture, 2016.
[95] M. Zaharia, M. Chowdhury, M. J. Franklin, S. Shenker, and
I. Stoica, “Spark: Cluster computing with working sets,” in
Proceedings of the 2010 Conference on Hot Topics in Cloud
Computing, 2010.
