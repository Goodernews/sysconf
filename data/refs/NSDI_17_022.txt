[1] AMBER Alert, U.S. Department of Justice. http://
www.amberalert.gov/faqs.htm.
[2] Apache Flink. https://flink.apache.org/.
[3] Apache Hadoop NextGen MapReduce (YARN). https:
//hadoop.apache.org/docs/r2.7.1/hadoopyarn/hadoop-yarn-site/YARN.html.
[4] Apache Storm. https://storm.apache.org/.
[5] Avigilon. http://avigilon.com/products/.
[6] Azure Instances. https://azure.microsoft.com/
en-us/pricing/details/virtual-machines/.
[7] Capacity Scheduler.
https://hadoop.apache.
org/docs/r2.4.1/hadoop-yarn/hadoop-yarnsite/CapacityScheduler.html.
[8] China’s 100 Million Surveillance Cameras. https://
goo.gl/UK3Obl.
[9] Genetec. https://www.genetec.com/.
[10] Hadoop Fair Scheduler. https://hadoop.apache.
org/docs/r2.4.1/hadoop-yarn/hadoop-yarnsite/FairScheduler.html.
[11] Linux Containers LXC Introduction.
https://
linuxcontainers.org/lxc/introduction/.
[12] One Surveillance Camera for Every 11 People in Britain,
Says CCTV Survey. https://goo.gl/cHLqiK.
[13] Open ALPR. http://www.openalpr.com.
[14] OpenCV Documentation:
Introduction to SIFT
(Scale-Invariant Feature Transform).
http:
//docs.opencv.org/3.1.0/da/df5/tutorial_
py_sift_intro.html.
[15] OpenCV Documentation:
Introduction to SURF
(Speeded-Up Robust Features). http://docs.opencv.
org/3.0-beta/doc/py_tutorials/py_feature2d/
py_surf_intro/py_surf_intro.html.
[16] SR 520 Bridge Tolling, WA. https://www.wsdot.wa.
gov/Tolling/520/default.htm.
[17] Turnpike Enterprise Toll-by-Plate, FL. https://www.
tollbyplate.com/index.
[18] Windows Job Objects. https://msdn.microsoft.
com/en-us/library/windows/desktop/
ms684161(v=vs.85).aspx.
[19] D. J. Abadi et al. The Design of the Borealis Stream Processing Engine. In CIDR, Jan. 2005.
[20] S. Agarwal, B. Mozafari, A. Panda, M. H., S. Madden,
and I. Stoica. BlinkDB: Queries with Bounded Errors and
Bounded Response Times on Very Large Data. In ACM
EuroSys, Apr. 2013.
[21] T. Akidau et al. The Dataflow Model: A Practical Approach to Balancing Correctness, Latency, and Cost in
Massive-Scale, Unbounded, Out-of-order Data Processing. Proceedings of the VLDB Endowment, Aug. 2015.
[22] L. Amini, N. Jain, A. Sehgal, J. Silber, and O. Verscheure.
Adaptive Control of Extreme-Scale Stream Processing
Systems. In IEEE ICDCS, July 2006.
[23] G. Ananthanarayanan, M. C.-C. Hung, X. Ren, I. Stoica,
A. Wierman, and M. Yu. GRASS: Trimming Stragglers in
Approximation Analytics. In USENIX NSDI, Apr. 2014.
[24] A. AuYoung, A. Vahdat, and A. C. Snoeren. Evaluating the Impact of Inaccurate Information in Utility-Based
Scheduling. In Proceedings of the Conference on High
Performance Computing Networking, Storage and Analysis, Nov. 2009.
[25] B. Babcock, M. Datar, and R. Motwani. Load Shedding
for Aggregation Queries over Data Streams. In IEEE
ICDE, Mar. 2004.
[26] A. Beloglazov and R. Buyya. Energy Efficient Resource
Management in Virtualized Cloud Data Centers. In IEEE
CCGRID, May 2010.
[27] A. Bhattacharya, D. Culler, E. Friedman, A. Ghodsi,
S. Shenker, and I. Stoica. Hierarchical Scheduling for Diverse Datacenter Workloads. In ACM SoCC, Nov. 2014.
[28] J. Blythe. Visual Exploration and Incremental Utility
Elicitation. In AAAI, July 2002.
[29] N. Bobroff, A. Kochut, and K. Beaty. Dynamic Placement
of Virtual Machines for Managing SLA Violations. In
IFIP/IEEE International Symposium on Integrated Network Management, 2007.
[30] C. Boutilier, R. Patrascu, P. Poupart, and D. Schuurmans.
Regret-based Utility Elicitation in Constraint-based Decision Problems. In IJCAI, 2005.
[31] E. Boutin, J. Ekanayake, W. Lin, B. Shi, J. Zhou, Z. Qian,
M. Wu, and L. Zhou. Apollo: Scalable and Coordinated
Scheduling for Cloud-Scale Computing. In USENIX
OSDI, 2014.
[32] B. Calder et al. Windows Azure Storage: A Highly Available Cloud Storage Service with Strong Consistency. In
ACM SOSP, 2011.
[33] D. Carney, U. C¸ etintemel, M. Cherniack, C. Convey,
S. Lee, G. Seidman, M. Stonebraker, N. Tatbul, and
S. Zdonik. Monitoring Streams: a New Class of Data
Management Applications. In VLDB, 2002.
[34] D. Carney, U. C¸ etintemel, A. Rasin, S. Zdonik, M. Cherniack, and M. Stonebraker. Operator Scheduling in a Data
Stream Manager. In VLDB, 2003.
[35] U. Chajewska, D. Koller, and R. Parr. Making Rational
Decisions Using Adaptive Utility Elicitation. In AAAI,
2000.
[36] B. Chandramouli, J. Goldstein, M. Barnett, R. DeLine,
D. Fisher, J. Wernsing, and D. Rob. Trill: A HighPerformance Incremental Query Processor for Diverse
Analytics. In USENIX NSDI, 2014.
[37] M. Cherniack, H. Balakrishnan, M. Balazinska, D. Carney, U. Cetintemel, Y. Xing, and S. Zdonik. Scalable
Distributed Stream Processing. In CIDR, Jan. 2003.
[38] G. Cormode, M. Garofalakis, P. J. Haas, and C. Jermaine. Synopses for Massive Data: Samples, Histograms, Wavelets, Sketches. Foundations and Trends in
Databases, Jan. 2012.
[39] C. Curino, D. E. Difallah, C. Douglas, S. Krishnan, R. Ramakrishnan, and S. Rao. Reservation-based Scheduling:
If You’re Late Don’t Blame Us! Nov. 2014.
[40] G. B. Dantzig. Discrete-Variable Extremum Problems.
Operations Research 5 (2): 266288, 1957.
[41] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and
L. Fei-Fei. ImageNet: A Large-Scale Hierarchical Image
Database. In CVPR, 2009.
[42] A. D. Ferguson, P. Bodik, S. Kandula, E. Boutin, and
R. Fonseca. Jockey: Guaranteed Job Latency in Data Parallel Clusters. In ACM EuroSys, 2012.
[43] A. Ghodsi, M. Zaharia, B. Hindman, A. Konwinski,
S. Shenker, and I. Stoica. Dominant Resource Fairness:
Fair Allocation of Multiple Resource Types. In USENIX
NSDI, 2011.
[44] R. Grandl, G. Ananthanarayanan, S. Kandula, S. Rao, and
A. Akella. Multi-Resource Packing for Cluster Schedulers. In ACM SIGCOMM, 2014.
[45] S. Han, H. Mao, and W. J. Dally. Deep Compression: Compressing Deep Neural Network with Pruning,
Trained Quantization and Huffman Coding. Computing
Research Repository, Nov. 2015.
[46] S. Han, H. Shen, M. Philipose, S. Agarwal, A. Wolman,
and A. Krishnamurthy. MCDNN: An ApproximationBased Execution Framework for Deep Stream Processing
Under Resource Constraints. In ACM MobiSys, 2016.
[47] J. M. Hellerstein, P. J. Haas, and H. J. Wang. Online Aggregation. In ACM SIGMOD, 1997.
[48] A. Hernando, R. Sanz, and R. Calinescu. A ModelBased Approach to the Autonomic Management of Mobile Robot Resources. In International Conference on
Adaptive and Self-Adaptive Systems and Applications,
2010.
[49] B. Hindman, A. Konwinski, M. Zaharia, A. Ghodsi, A. D.
Joseph, R. Katz, S. Shenker, and I. Stoica. Mesos: A
Platform for Fine-Grained Resource Sharing in the Data
Center. In USENIX NSDI, 2011.
[50] D. E. Irwin, L. E. Grit, and J. S. Chase. Balancing Risk
and Reward in a Market-Based Task Service. In IEEE International Symposium on High Performance Distributed
Computing, 2004.
[51] J. Jaffe. Bottleneck Flow Control. IEEE Transactions on
Communications, 29(7):954–962, 1981.
[52] E. D. Jensen, P. Li, and B. Ravindran. On Recent Advances in Time/Utility Function Real-Time Scheduling
and Resource Management. IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, 2005.
[53] C. Jermaine, S. Arumugam, A. Pol, and A. Dobra. Scalable Approximate Query Processing with the DBO Engine. ACM Transactions on Database Systems, 33(4):23,
2008.
[54] Y. Jia, E. Shelhamer, J. Donahue, S. Karayev, J. Long,
R. Girshick, S. Guadarrama, and T. Darrell. Caffe: Convolutional Architecture for Fast Feature Embedding. In
ACM International Conference on Multimedia, 2014.
[55] R. Johari and J. N. Tsitsiklis. Efficiency Loss in a Network Resource Allocation Game. Mathematics of Operations Research, 29(3):407–435, 2004.
[56] S. A. Jyothi, C. Curino, I. Menache, S. M. Narayanamurthy, A. Tumanov, J. Yaniv, ´I. Goiri, S. Krishnan,
J. Kulkarni, and S. Rao. Morpheus: towards automated
SLOs for enterprise clusters. In USENIX OSDI, 2016.
[57] F. P. Kelly, A. K. Maulloo, and D. K. Tan. Rate Control
for Communication Networks: Shadow Prices, Proportional Fairness and Stability. Journal of the Operational
Research Society, 49(3):237–252, 1998.
[58] J. O. Kephart. Research Challenges of Autonomic Computing. In ACM ICSE, 2005.
[59] M. Kristan, J. Matas, A. Leonardis, M. Felsberg, L. Cehovin, G. Fernandez, T. Vojir, G. Hager, G. Nebehay, and
R. Pflugfelder. The Visual Object Tracking (VOT) Challenge Results. In IEEE ICCV Workshops, Dec. 2015.
[60] V. Kumar, B. F. Cooper, and K. Schwan. Distributed
Stream Management Using Utility-Driven Self-Adaptive
Middleware. In IEEE ICAC, 2005.
[61] R. Levy, J. Nagarajarao, G. Pacifici, M. Spreitzer,
A. Tantawi, and A. Youssef. Performance management
for cluster based web services. In Integrated Network
Management VIII, pages 247–261. Springer, 2003.
[62] W. Lin, Z. Qian, J. Xu, S. Yang, J. Zhou, and L. Zhou.
StreamScope: Continuous Reliable Distributed Processing of Big Data Streams. In USENIX NSDI, Mar. 2016.
[63] S. H. Low and D. E. Lapsley. Optimization Flow ControlI: Basic Algorithm and Convergence. IEEE/ACM Transactions on Networking, 7(6):861–874, 1999.
[64] P. Marbach. Priority Service and Max-Min Fairness. In
IEEE INFOCOM, 2002.
[65] R. C. Merton. Continuous-Time Finance. Blackwell,
1990.
[66] D. Minarolli and B. Freisleben. Utility-Based Resource
Allocation for Virtual Machines in Cloud Computing. In
IEEE Symposium on Computers and Communications,
pages 410–417, 2011.
[67] M. Morari and J. H. Lee. Model Predictive Control: Past,
Present and Future. Computers & Chemical Engineering,
23(4):667–682, 1999.
[68] R. Motwani, J. Widom, A. Arasu, B. Babcock, S. Babu,
M. Datar, G. Manku, C. Olston, J. Rosenstein, and
R. Varma. Query Processing, Resource Management, and
Approximation in a Data Stream Management System. In
CIDR, 2003.
[69] H. Nam and B. Han. Learning Multi-Domain Convolutional Neural Networks for Visual Tracking. Computing
Research Repository, abs/1510.07945, 2015.
[70] P. Padala, K. G. Shin, X. Zhu, M. Uysal, Z. Wang,
S. Singhal, A. Merchant, and K. Salem. Adaptive Control of Virtualized Resources in Utility Computing Environments. In ACM SIGOPS Operating Systems Review,
volume 41, pages 289–302, 2007.
[71] R. Panigrahy, K. Talwar, L. Uyeda, and U. Wieder.
Heuristics for Vector Bin Packing. In Microsoft Research
Technical Report, Jan. 2011.
[72] A. Rabkin, M. Arye, S. Sen, V. Pai, and M. Freedman.
Aggregation and Degradation in JetStream: Streaming
Analytics in the Wide Area. In USENIX NSDI, 2014.
[73] B. T. Ratchford. Cost-Benefit Models for Explaining
Consumer Choice and Information Seeking Behavior.
Management Science, 28, 1982.
[74] S. J. Russell and P. Norvig. Artificial Intelligence: A Modern Approach. Pearson Education, 2nd edition, 2003.
[75] K. Simonyan and A. Zisserman. Very Deep Convolutional Networks for Large-Scale Image Recognition.
Computing Research Repository, abs/1409.1556, 2014.
[76] J. Snoek, H. Larochelle, and R. P. Adams. Practical
Bayesian Optimization of Machine Learning Algorithms.
In NIPS, Dec. 2012.
[77] M. Steinder, I. Whalley, D. Carrera, I. Gaweda, and
D. Chess. Server Virtualization in Autonomic Management of Heterogeneous Workloads. In IFIP/IEEE International Symposium on Integrated Network Management,
2007.
[78] N. Tatbul, U. C¸ etintemel, and S. Zdonik. Staying Fit: Efficient Load Shedding Techniques for Distributed Stream
Processing. In VLDB, 2007.
[79] N. Tatbul, U. C¸ etintemel, S. Zdonik, M. Cherniack, and
M. Stonebraker. Load Shedding in a Data Stream Manager. In VLDB, 2003.
[80] G. Tesauro, R. Das, W. E. Walsh, and J. O. Kephart.
Utility-Function-Driven Resource Allocation in Autonomic Systems. In ICAC, 2005.
[81] Y.-C. Tu, M. Hefeeda, Y. Xia, S. Prabhakar, and S. Liu.
Control-Based Quality Adaptation in Data Stream Management Systems. In Database and Expert Systems Applications, 2005.
[82] Y.-C. Tu, S. Liu, S. Prabhakar, and B. Yao. Load Shedding in Stream Databases: a Control-Based Approach. In
VLDB, 2006.
[83] C. J. Van Rijsbergen. Information Retrieval. Butterworth,
2nd edition, 1979.
[84] S. Venkataraman, A. Panda, G. Ananthanarayanan, M. J.
Franklin, and I. Stoica. The Power of Choice in Dataaware Cluster Scheduling. In USENIX OSDI, 2014.
[85] A. Verma, L. Cherkasova, and R. H. Campbell. ARIA:
Automatic Resource Inference and Allocation for Mapreduce Environments. In ICAC, 2011.
[86] A. Verma, L. Pedrosa, M. Korupolu, D. Oppenheimer,
E. Tune, and J. Wilkes. Large-scale cluster management
at Google with Borg. In ACM EuroSys, 2015.
[87] E. Wandeler and L. Thiele. Real-time interfaces for
interface-based design of real-time systems with fixed priority scheduling. In Proceedings of the 5th ACM international conference on Embedded software, pages 80–89.
ACM, 2005.
[88] Y. Wei, V. Prasad, S. H. Son, and J. A. Stankovic.
Prediction-Based QoS Management for Real-Time Data
Streams. In IEEE RTSS, 2006.
[89] M. Zaharia, T. Das, H. Li, T. Hunter, S. Shenker, and
I. Stoica. Discretized Streams: Fault-Tolerant Streaming
Computation at Scale. In ACM SOSP, 2013.
