[1] O. R. L. C. Facility, “TITAN: Built for science,” http://www.olcf.ornl.
gov/titan/, 2013.
[2] S. N. S. Center, “Piz Daint,” http://www.cscs.ch/computers/piz_daint/
index.html, 2016.
[3] O. R. L. C. Facility, “SUMMIT,” https://www.olcf.ornl.gov/summit/,
2017.
[4] L. L. N. Laboratory, “CORAL/Sierra,” https://asc.llnl.gov/coral-info,
2017.
[5] NVIDIA, “The CUDA C programming guide,” https://docs.nvidia.com/
cuda/cuda-c-programming-guide/, 2017.
[6] K. Group, “Open computing language,” https://www.khronos.org/
opencl/, 2017.
[7] OpenACC.org, “The OpenACC® API,” http://www.openacc.org/sites/
default/ﬁles/OpenACC_2pt5.pdf, 2015.
[8] O. ARB, “The OpenMP® Application Program Interface,” http://www.
openmp.org/mp-documents/openmp-4.5.pdf, 2017.
[9] S. Che, M. Boyer, J. Meng, D. Tarjan, J. W. Sheaffer, S.-H. Lee, and
K. Skadron, “Rodinia: A benchmark suite for heterogeneous computing,”
in Proceedings of the 2009 IEEE International Symposium on Workload
Characterization (IISWC), 2009.
[10] C. Shen, X. Tian, D. Khaldi, and B. Chapman, “Assessing one-toone parallelism levels mapping for OpenMP ofﬂoading to GPUs,” in
Proceedings of the 8th International Workshop on Programming Models
and Applications for Multicores and Manycores, 2017, pp. 68–73.
[11] J. Kim, Y.-J. Lee, J. Park, and J. Lee, “Translating OpenMP device
constructs to OpenCL using unnecessary data transfer elimination,”
in Proceedings of the International Conference for High Performance
Computing, Networking, Storage and Analysis, ser. SC ’16, 2016.
[12] C. Liao, Y. Yan, B. R. de Supinski, D. J. Quinlan, and B. Chapman,
“Early experiences with the openmp accelerator model,” in OpenMP in
the Era of Low Power Devices and Accelerators. Springer, 2013, pp.
84–98.
[13] S. Lee, S.-J. Min, and R. Eigenmann, “OpenMP to GPGPU: A compiler
framework for automatic translation and optimization,” in Proceedings
of the 14th ACM SIGPLAN Symposium on Principles and Practice of
Parallel Programming, 2009.
[14] N. Sidwell, “OpenACC implementation in GCC.” https://www.youtube.
com/watch?v=SBX6_K1AD7s, 2015.
[15] S. Lee and J. S. Vetter, “OpenARC: Extensible openacc compiler framework for directive-based accelerator programming study,” in Proceedings
of the First Workshop on Accelerator Programming Using Directives,
ser. WACCPD ’14, 2014.
[16] C. Bertolli, S. F. Antao, A. E. Eichenberger, K. O’Brien, Z. Sura,
A. C. Jacob, T. Chen, and O. Sallenave, “Coordinating GPU threads for
OpenMP 4.0 in LLVM,” in Proceedings of the 2014 LLVM Compiler
Infrastructure in HPC, ser. LLVM-HPC ’14, 2014, pp. 12–21.
[17] M. Bauer, H. Cook, and B. Khailany, “CudaDMA: Optimizing GPU
memory bandwidth via warp specialization,” in Proceedings of 2011
International Conference for High Performance Computing, Networking,
Storage and Analysis, ser. SC ’11, 2011.
[18] J. Nickolls, I. Buck, M. Garland, and K. Skadron, “Scalable parallel
programming with CUDA,” Queue, vol. 6, no. 2, pp. 40–53, Mar. 2008.
[19] Y. Yang and H. Zhou, “CUDA-NP: Realizing nested thread-level parallelism in GPGPU applications,” in Proceedings of the 19th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming,
ser. PPoPP ’14, 2014, pp. 93–106.
[20] T. R. W. Scogland and W.-c. Feng, “Design and Evaluation of Scalable
Concurrent Queues for Many-Core Architectures,” in International Conference on Performance Engineering (ICPE), Austin, TX, USA, January
2015.
[21] J. Gómez-Luna, J. M. González-Linares, J. I. Benavides, and N. Guil,
“An optimized approach to histogram computation on gpu,” Machine
Vision and Applications, vol. 24, no. 5, pp. 899–908, 2013.
[22] C. Benchmarks, “Haccmk,” https://asc.llnl.gov/CORAL-benchmarks/
Summaries/HACCmk_Summary_v1.0.pdf, 2017.
[23] C. Lattner and V. Adve, “LLVM: A compilation framework for lifelong
program analysis and transformation,” San Jose, CA, USA, Mar 2004,
pp. 75–88.
[24] I. Research, “Clang/llvm compiler for gpus,” https://github.com/
clang-ykt, 2017.
[25] ——, “Clang-ykt compiler for gpus,” https://github.com/clang-ykt/clang/
tree/version_01, 2016.
[26] G. D. Community, “Gcc 7.1,” https://gcc.gnu.org/gcc-7/, 2017.
[27] R. Reyes, I. López-Rodríguez, J. J. Fumero, and F. de Sande, accULL:
An OpenACC Implementation with CUDA and OpenCL Support, 2012,
pp. 871–882.
[28] X. Tian, R. Xu, Y. Yan, Z. Yun, S. Chandrasekaran, and B. Chapman,
Compiling a High-Level Directive-Based Programming Model for GPGPUs, 2014, pp. 105–120.
[29] J. M. Bull, “Measuring synchronisation and scheduling overheads in
OpenMP,” in In Proceedings of First European Workshop on OpenMP,
1999, pp. 99–105.