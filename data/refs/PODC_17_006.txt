[1] Dan Alistarh, Keren Censor-Hillel, and Nir Shavit. Are lock-free concurrent algorithms practically wait-free? Journal of the ACM (JACM), 63(4):31, 2016.
[2] Dan Alistarh, Thomas Sauerwald, and Milan Vojnovic ́. Lock-free algorithms under stochastic schedulers. In Proceedings of the 2015 ACM Symposium on Principles of Distributed Computing, pages 251–260. ACM, 2015.
[3] Thomas E. Anderson. The performance of spin lock alternatives for shared- money multiprocessors. IEEE Transactions on Parallel and Distributed Systems, 1(1):6–16, 1990.
[4] Aras Atalar, Paul Renaud-Goud, and Philippas Tsigas. Analyzing the performance of lock-free data structures: A conflict-based model. In Distributed Computing - 29th International Symposium, DISC 2015, Tokyo, Japan, October 7-9, 2015, Pro- ceedings, pages 341–355, 2015.
[5] Yonatan Aumann and Michael A Bender. Efficient asynchronous consensus with the value-oblivious adversary scheduler. In International Colloquium on Automata, Languages, and Programming, pages 622–633. Springer, 1996.
[6] Baruch Awerbuch, Andrea Richa, and Christian Scheideler. A jamming-resistant mac protocol for single-hop wireless networks. In Proceedings of the twenty- seventh ACM symposium on Principles of distributed computing, pages 45–54. ACM, 2008.
[7] R. Bar-Yehuda, A. Israeli, and A. Itai. Multiple communication in multi-hop radio networks. SIAM Journal on Computing, 22(4):875–887, 1993.
[8] Reuven Bar-Yehuda, Oded Goldreich, and Alon Itai. On the time-complexity of broadcast in multi-hop radio networks: An exponential gap between determinism and randomization. Journal of Computer and System Sciences, 45(1):104–126, 1992.
[9] Michael A Bender, Martin Farach-Colton, Simai He, Bradley C Kuszmaul, and Charles E Leiserson. Adversarial contention resolution for simple channels. In Proceedings of the seventeenth annual ACM symposium on Parallelism in algorithms and architectures, pages 325–332. ACM, 2005.
[10] Michael A Bender, Jeremy T Fineman, Seth Gilbert, and Maxwell Young. How to scale exponential backoff: Constant throughput, polylog access attempts, and robustness. In Proceedings of the Twenty-Seventh Annual ACM-SIAM Sympo- sium on Discrete Algorithms, pages 636–654. Society for Industrial and Applied Mathematics, 2016.
[11] Michael A Bender, Tsvi Kopelowitz, Seth Pettie, and Maxwell Young. Contention resolution with log-logstar channel accesses. In STOC, pages 499–508, 2016.
[12] Cynthia Dwork, Maurice Herlihy, and Orli Waarts. Contention in shared memory algorithms. Journal of the ACM (JACM), 44(6):779–805, 1997.
[13] Faith Ellen, Danny Hendler, and Nir Shavit. On the inherent sequentiality of concurrent objects. SIAM Journal on Computing, 41(3):519–536, 2012.
[14] Jeremy T Fineman, Seth Gilbert, Fabian Kuhn, and Calvin Newport. Contention resolution on a fading channel. In Proceedings of the 2016 ACM Symposium on Principles of Distributed Computing, pages 155–164. ACM, 2016.
[15] Jeremy T Fineman, Calvin Newport, and Tonghe Wang. Contention resolution on multiple channels with collision detection. In Proceedings of the 2016 ACM Symposium on Principles of Distributed Computing, pages 175–184. ACM, 2016.
[16] Mohsen Ghaffari, Bernhard Haeupler, and Majid Khabbazian. Randomized broadcast in radio networks with collision detection. Distributed Computing, 28(6):407–422, 2015.
[17] Phillip B Gibbons, Yossi Matias, and Vijaya Ramachandran. The queue-read queue-write asynchronous PRAM model. In European Conference on Parallel Processing, pages 277–292. Springer, 1996.
[18] Phillip B Gibbons, Yossi Matias, and Vijaya Ramachandran. The queue-read queue-write PRAM model: Accounting for contention in parallel algorithms. SIAM Journal on Computing, pages 638–648, 1997.
[19] Gary Graunke and Shreekant Thakkar. Synchronization algorithms for shared- memory multiprocessors. Computer, 23(6):60–69, 1990.
[20] Bernhard Haeupler and David Wajc. A faster distributed radio broadcast prim- itive. In Proceedings of the 2016 ACM Symposium on Principles of Distributed Computing, pages 361–370. ACM, 2016.
[21] Danny Hendler and Shay Kutten. Constructing shared objects that are both robust and high-throughput. In International Symposium on Distributed Computing, pages 428–442. Springer, 2006.
[22] Maurice Herlihy. A methodology for implementing highly concurrent data structures. In ACM SIGPLAN Notices, volume 25, pages 197–206. ACM, 1990.
[23] Donald Ervin Knuth. The art of computer programming: sorting and searching, volume 3. Pearson Education, 1998.
[24] John M Mellor-Crummey and Michael L Scott. Algorithms for scalable synchro- nization on shared-memory multiprocessors. ACM Transactions on Computer Systems (TOCS), 9(1):21–65, 1991.
[25] Robert M Metcalfe and David R Boggs. Ethernet: Distributed packet switching for local computer networks. Communications of the ACM, 19(7):395–404, 1976.
[26] Maged M Michael and Michael L Scott. Nonblocking algorithms and preemption-
safe locking on multiprogrammed shared memory multiprocessors. journal of
parallel and distributed computing, 51(1):1–26, 1998.
[27] William N Scherer III and Michael L Scott. Advanced contention management
for dynamic software transactional memory. In Proceedings of the twenty-fourth annual ACM symposium on Principles of distributed computing, pages 240–248. ACM, 2005.
