[1] Amazon EMR, https://aws.amazon.com/emr/.
[2] A. Agarwal, J. Hennessy, and M. Horowitz. An analytical cache model. ACM
Trans. Comput. Syst., 7(2):184–215, May 1989.
[3] G. Almási, C. Caşcaval, and D. A. Padua. Calculating stack distances efficiently.
In ACM SIGPLAN Notices, volume 38, pages 37–43. ACM, 2002.
[4] D. Chandra, F. Guo, S. Kim, and Y. Solihin. Predicting inter-thread cache contention on a chip multi-processor architecture. In Proc. 11th Int. Symp. HighPerformance Computer Architecture, pages 340–351, Feb. 2005.
[5] H. Che, Y. Tung, and Z. Wang. Hierarchical web caching systems: Modeling, design and experimental results. IEEE Journal on Selected Areas in Communications,
20(7):1305–1314, 2002.
[6] F. Chen, R. K. Sitaraman, and M. Torres. End-user mapping: Next generation request routing for content delivery. In ACM SIGCOMM Computer Communication
Review, volume 45, pages 167–181. ACM, 2015.
[7] M. Dehghan, L. Massoulie, D. Towsley, D. Menasche, and Y. C. Tay. A utility
optimization approach to network cache design. In Proc. IEEE INFOCOM 2016 The 35th Annual IEEE Int. Conf. Computer Communications, pages 1–9, Apr. 2016.
[8] C. Ding and T. Chilimbi. A composable model for analyzing locality of multithreaded programs. Technical report, Technical Report MSR-TR-2009-107, Microsoft Research, 2009.
[9] R. Fagin. Asymptotic miss ratios over independent references. Journal of Computer and System Sciences, 14(2):222–250, 1977.
[10] M. Garetto, E. Leonardi, and V. Martina. A unified approach to the performance
analysis of caching systems. ACM Transactions on Modeling and Performance
Evaluation of Computing Systems, 1(3):12, 2016.
[11] E. Gelenbe. A unified approach to the evaluation of a class of replacement
algorithms. IEEE Transactions on Computers, C-22(6):611–618, June 1973.
[12] X. Hu, X. Wang, L. Zhou, Y. Luo, C. Ding, and Z. Wang. Kinetic modeling of data
eviction in cache. In 2016 USENIX Annual Technical Conference (USENIX ATC 16),
pages 351–364. USENIX Association, 2016.
[13] P.-H. Kamp. Varnish LRU architecture, June 2007. available https://www.
varnish-cache.org/trac/wiki/ArchitectureLRU accessed 09/12/16.
[14] W. F. King. Analysis of paging algorithms. In IFIP Congress, Ljublanjana, Yugoslavia, Aug 1971.
[15] B. M. Maggs and R. K. Sitaraman. Algorithmic nuggets in content delivery.
SIGCOMM Comput. Commun. Rev., 45(3):52–66, July 2015.
[16] R. L. Mattson, J. Gecsei, D. R. Slutz, and I. L. Traiger. Evaluation techniques for
storage hierarchies. IBM Systems journal, 9(2):78–117, 1970.
[17] F. Memon. A guide to caching with nginx and nginx plus, July 2015. https:
//www.nginx.com/blog/nginx-caching-guide/ accessed 06/18/17.
[18] Q. Niu, J. Dinan, Q. Lu, and P. Sadayappan. Parda: A fast parallel reuse distance
analysis algorithm. In Proc. IEEE 26th Int. Parallel and Distributed Processing
Symp, pages 1284–1294, May 2012.
[19] E. Nygren, R. Sitaraman, and J. Sun. The Akamai Network: A platform for
high-performance Internet applications. ACM SIGOPS Operating Systems Review,
44(3):2–19, 2010.
[20] M. K. Qureshi and Y. N. Patt. Utility-based cache partitioning: A low-overhead,
high-performance, runtime mechanism to partition shared caches. In Proc. 39th
Annual IEEE/ACM Int. Symp. Microarchitecture (MICRO’06), pages 423–432, Dec.
2006.
[21] R. K. Sitaraman, M. Kasbekar, W. Lichtenstein, and M. Jain. Overlay networks:
An akamai perspective. Advanced Content Delivery, Streaming, and Cloud Services,
pages 305–328, 2014.
[22] G. E. Suh, S. Devadas, and L. Rudolph. Analytical cache models with applications
to cache partitioning. In Proceedings of the 15th International Conference on
Supercomputing, ICS ’01, pages 1–12, New York, NY, USA, 2001. ACM.
[23] D. Thiebaut and H. S. Stone. Footprints in the cache. ACM Trans. Comput. Syst.,
5(4):305–329, Oct. 1987.
[24] C. A. Waldspurger, N. Park, A. T. Garthwaite, and I. Ahmad. Efficient MRC
construction with SHARDS. In FAST, pages 95–110, 2015.
[25] X. Wang, Y. Li, Y. Luo, X. Hu, J. Brock, C. Ding, and Z. Wang. Optimal footprint
symbiosis in shared cache. In Cluster, Cloud and Grid Computing (CCGrid), 2015
15th IEEE/ACM International Symposium on, pages 412–422. IEEE, 2015.
[26] J. Wires, S. Ingram, Z. Drudi, N. J. Harvey, A. Warfield, and C. Data. Characterizing storage workloads with counter stacks. In OSDI, pages 335–349, 2014.
[27] X. Xiang, B. Bao, T. Bai, C. Ding, and T. Chilimbi. All-window profiling and
composable models of cache sharing. In ACM SIGPLAN Notices, volume 46, pages
91–102. ACM, 2011.
[28] X. Xiang, C. Ding, H. Luo, and B. Bao. HOTL: a higher order theory of locality.
In ACM SIGARCH Computer Architecture News, volume 41, pages 343–356. ACM,
2013.