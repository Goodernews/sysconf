[1] D. Akhawe, W. He, Z. Li, R. Moazzezi, and D. Song, “Clickjacking
revisited: A perceptual view of ui security,” in 8th USENIX Workshop on
Offensive Technologies (WOOT 14), Aug. 2014.

[2] S. Arshad, A. Kharraz, and W. Robertson, “Include me out: In-browser
detection of malicious third-party content inclusions,” in Proceedings of
the 20th International Conference on Financial Cryptography and Data
Security (FC), 2 2016.

[3] L. Ballard, “No more deceptive download buttons,” 2016, https://security.
googleblog.com/2016/02/no-more-deceptive- download-buttons.html.

[4] A. Barth, C. Jackson, and J. C. Mitchell, “Robust defenses for cross-site
request forgery,” in Proceedings of the 15th ACM Conference on Computer
and Communications Security, ser. CCS ’08, 2008.

[5] L. Bauer, S. Cai, L. Jia, T. Passaro, M. Stroucken, and Y. Tian, “Run-time
monitoring and formal analysis of information flows in Chromium,” in
Proceedings of the 22nd Annual Network and Distributed System Security
Symposium, Feb. 2015.

[6] Chrome, “Background pages,” https://developer.chrome.com/extensions/

background_pages.
[7] ——,, “Extensions,” https://developer.chrome.com/extensions.

[8] D.E. Denning and D. K. Branstad, “A taxonomy for key escrow encryption
systems,” Commun. ACM, vol. 39, no. 3, pp. 34-40, 1996.

[9] R. Dhamija, J. D. Tygar, and M. Hearst, “Why phishing works,” in
Proceedings of the SIGCHI Conference on Human Factors in Computing
Systems, ser. CHI ’06, 2006.

[10] B. Dolan-Gavitt, J. Hodosh, P. Hulin, T. Leek, and R. Whelan, “Repeatable
reverse engineering with panda,” in Proceedings of the 5th Program
Protection and Reverse Engineering Workshop, ser. PPREW-S5, 2015.

[11] G. W. Dunlap, S. T. King, S. Cinar, M. A. Basrai, and P. M. Chen, “Revirt:
Enabling intrusion analysis through virtual-machine logging and replay,”
SIGOPS Oper. Syst. Rev., vol. 36, no. SI, Dec. 2002.

[12] R. Geambasu, J. P. John, S$. D. Gribble, T. Kohno, and H. M. Levy,
“Keypad: An auditing file system for theft-prone devices,” in Proceedings
of the Sixth Conference on Computer Systems, ser. EuroSys °11. ACM,
2011, pp. 1-16.

[13] A. Goel, K. Po, K. Farhadi, Z. Li, and E. de Lara, “The taser intrusion
recovery system,” in Proceedings of the Twentieth ACM Symposium on
Operating Systems Principles, ser. SOSP ’05, 2005.

[14] C. Grier, L. Ballard, J. Caballero, N. Chachra, C. J. Dietrich, K. Levchenko,
P. Mavrommatis, D. McCoy, A. Nappa, A. Pitsillidis, N. Provos, M. Z.
Rafique, M. A. Rajab, C. Rossow, K. Thomas, V. Paxson, S. Savage, and
G. M. Voelker, “Manufacturing compromise: The emergence of exploitas-a-service,” in ACM Conference on Computer and Communications
Security, ser. CCS °12, 2012.

[15] L.-S. Huang, A. Moshchuk, H. J. Wang, S. Schecter, and C. Jackson,
“Clickjacking: Attacks and defenses,” in Presented as part of the 21st
USENIX Security Symposium (USENIX Security 12), 2012.

[16] S. Institute, “A multi-level defense against social engineering,”
2003, https://www.sans. org/reading-room/whitepapers/engineering/
multi-level-defense-social-engineering-920.

[17] T. Kim, X. Wang, N. Zeldovich, and M. EF. Kaashoek, “Intrusion recovery
using selective re-execution,” in Proceedings of the 9th USENIX Conference
on Operating Systems Design and Implementation, ser. OSDP 10, 2010.

[18] S. T. King and P. M. Chen, “Backtracking intrusions,” in Proceedings of
the Nineteenth ACM Symposium on Operating Systems Principles, ser.
SOSP 703, 2003.

[19] S. Kornexl, V. Paxson, H. Dreger, A. Feldmann, and R. Sommer, “Building
a time machine for efficient recording and retrieval of high-volume network
traffic,” in Proceedings of the 5th ACM SIGCOMM Conference on Internet
Measurement, set. IMC °05, 2005.

[20] P. Kotzias, L. Bilge, and J. Caballero, “Measuring pup prevalence and pup
distribution through pay-per-install services,” in 25th USENIX Security
Symposium (USENIX Security 16), Aug. 2016.

[21] S. Krishnan, K. Z. Snow, and F, Monrose, “Trail of bytes: Efficient support
for forensic analysis,” in Proceedings of the 17th ACM Conference on
Computer and Communications Security, ser. CCS ’10, 2010.

[22] K. H. Lee, X. Zhang, and D. Xu, “High accuracy attack provenance via
binary-based execution partition,” in NDSS, 2013.

[23] ——,, “Loggc: garbage collecting audit log,” in Proceedings of the 2013
ACM SIGSAC conference on Computer &#38; communications security,
ser. CCS 713, 2013.

[24] Linux Man Pages, “Chattr,” http://man7.org/linux/man-pages/man1/chattr.
1.html.

[25] S. Ma, K. H. Lee, C. H. Kim, J. Rhee, X. Zhang, and D. Xu, “Accurate,
low cost and instrumentation-free security audit logging for windows,” in
Proceedings of the 31st Annual Computer Security Applications Conference,
ser. ACSAC 2015, 2015.

[26] S. Ma, X. Zhang, and D. Xu, “Protracer: Towards practical provenance
tracing by alternating between logging and tainting,” in NDSS, 2016.

[27] Mozilla Developers Network, “Using images,” https://developer.mozilla.
org/en-US/docs/Web/API/Canvas_API/Tutorial/Using_images.

[28] C. Neasbitt, B. Li, R. Perdisci, L. Lu, K. Singh, and K. Li, “Webcapsule:
Towards a lightweight forensic engine for web browsers,” in Proceedings
of the 22Nd ACM SIGSAC Conference on Computer and Communications
Security, ser. CCS 715, 2015.

[29] C. Neasbitt, R. Perdisci, K. Li, and T. Nelms, “Clickminer: Towards
forensic reconstruction of user-browser interactions from network traces,”
in Proceedings of the 2014 ACM SIGSAC Conference on Computer and
Communications Security, ser. CCS ’14, 2014.

[30] T. Nelms, R. Perdisci, M. Antonakakis, and M. Ahamad, “Webwitness:
Investigating, categorizing, and mitigating malware download paths,” in
Proceedings of the 24th USENIX Conference on Security Symposium, sev.
SEC’15, 2015.

[31] ——,, “Towards measuring and mitigating social engineering software
download attacks,” in Proceedings of the 25th USENIX Conference on
Security Symposium, ser. SEC’ 16, 2016.

[32] J. Palme, A. Hopmann, and N. Shelness, “Mime encapsulation of aggregate
documents, such as html (mhtml),” 1999, https://tools.ietf.org/html/rfc2557.

[33] J. Saltzer and M. Schroeder, “The protection of information in computer
systems,” http://web.mit.edu/Saltzer/www/publications/protection/.

[34] B. Schneier and J. Kelsey, “Secure audit logs to support computer forensics,”
ACM Trans. Inf. Syst. Secur., vol. 2, no. 2, pp. 159-176, May 1999.

[35] The Chromium Project, “Blick scheduler,” https:
//docs.google.com/document/d/16f_RIhZa47uEK_
OdtTgzWdRUORFMTQWMpE Wy W XIpxUo/edit#heading=h.
srz53fitl rrp.

[36] —, “Compositor thread architecture,” https://www.chromium.org/
developers/design-documents/compositor-thread-architecture.
[37] —, “GPU accelerated compositing in
https://www.chromium.org/developers/design-documents/
gpu-accelerated-compositing-in-chrome.

Chrome,”

[38] —,, “How chromium displays web pages,” https://www.chromium.org/
developers/design-documents/displaying-a-web-page-in-chrome.

[39] —, “Inter-process communication,” https://www.chromium.org/
developers/design-documents/inter-process-communication.

[40] —,, “Multi-process architecture,” https://www.chromium.org/developers/
design-documents/multi-process- architecture.

[41] ——,, “Out-of-process iframes,” http:/Avww.chromium.org/developers/
design-documents/oop-iframes.

[42] —, “Proposal frame capture content API,” https://docs.google.com/document/d/
1gRndVmVn7gWJ-rbIHaaOMNsCjsIBn4CAJbZuwLM2ROE/edit.
[43] ——,, “The rendering critical path,” https:/Avww.chromium.org/developers/
the-rendering-critical-path.

[44] ——,, “Scheduling js timer execution,” https://docs.google.com/document/
d/1630w- 1 wjd6LOrAN3V_U6t12eq Vkq4mXDDjVaA4OuvCA/edit#.
[45] —, “Threading,”
design-documents/threading.
[46] K. Thomas, J. A. E. Crespo, R. Rasti, J.-M. Picod, C. Phillips, M.-A.
Decoste, C. Sharp, F. Tirelo, A. Tofigh, M.-A. Courteau, L. Ballard,
R. Shield, N. Jagpal, M. A. Rajab, P. Mavrommatis, N. Provos,
E. Bursztein, and D. McCoy, “Investigating commercial pay-per-install
and the distribution of unwanted software,” in 25th USENIX Security
Symposium (USENIX Security 16), Aug. 2016.

[47] N. Tolia, D. G. Andersen, and M. Satyanarayanan, “Quantifying interactive
user experience on thin clients,” Computer, vol. 39, no. 3, pp. 46-52,
March 2006.

[48] P. Vogt, F Nentwich, N. Jovanovic, E. Kirda, C. Kruegel, and G. Vigna,
“Cross site scripting prevention with dynamic data tainting and static
analysis.” in NDSS, vol. 2007, 2007, p. 12.

[49] https://www.chromium.org/developers/