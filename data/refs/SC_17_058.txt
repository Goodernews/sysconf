[1] K. Bergman, S. Borkar, D. Campbell, W. Carlson, W. Dally, M. Denneau,
P. Franzon, W. Harrod, J. Hiller, S. Karp, S. Keckler, D. Klein, R. Lucas,
M. Richards, A. Scarpelli, S. Scott, A. Snavely, T. Sterling, R. S. Williams,
K. Yelick, K. Bergman, S. Borkar, D. Campbell, W. Carlson, W. Dally, M. Denneau, P. Franzon, W. Harrod, J. Hiller, S. Keckler, D. Klein, P. Kogge, R. S.
Williams, and K. Yelick, “Exascale computing study: Technology challenges in
achieving exascale systems peter kogge, editor & study lead,” 2008.
[2] J. T. Daly, “A higher order estimate of the optimum checkpoint interval for restart
dumps,” Future Gener. Comput. Syst., vol. 22, pp. 303–312, Feb. 2006.
[3] J. T. Daly, “Quantifying checkpoint efficiency,” Nuclear Weapons Highlights,
pp. 188–189, 2007.
[4] B. Schroeder and G. A. Gibson, “Understanding failures in petascale computers,”
in Journal of Physics: Conference Series, vol. 78, p. 012022, IOP Publishing,
2007.
[5] W. Bhimji, D. Bard, M. Romanus, D. Paul, A. Ovsyannikov, B. Friesen, M. Bryson,
J. Correa, G. K. Lockwood, V. Tsulaia, S. Byna, S. Farrell, D. Gursoy, C. Daley,
V. Beckner, B. V. Straalen, D. Trebotich, C. Tull, G. Weber, N. J. Wright, and
K. Antypas, “Accelerating science with the nersc burst buffer early user program,”
in Proceedings of Cray Users Group [Online], 2016.
[6] Y. Kang, Y.-S. Kee, E. L. Miller, and C. Park, “Enabling cost-effective data
processing with smart ssd.,” in MSST, pp. 1–12, IEEE Computer Society, 2013.
[7] H. Choe, S. Lee, H. Nam, S. Park, S. Kim, E.-Y. Chung, and S. Yoon, “Near-data
processing for machine learning,” arXiv preprint arXiv:1610.02273, 2016.
[8] S. Seshadri, M. Gahagan, S. Bhaskaran, T. Bunker, A. De, Y. Jin, Y. Liu, and
S. Swanson, “Willow: A user-programmable ssd,” in Proceedings of the 11th
USENIX Conference on Operating Systems Design and Implementation, OSDI’14,
(Berkeley, CA, USA), pp. 67–80, USENIX Association, 2014.
[9] J. Do, Y.-S. Kee, J. M. Patel, C. Park, K. Park, and D. J. DeWitt, “Query processing
on smart ssds: Opportunities and challenges,” in Proceedings of the 2013 ACM
SIGMOD International Conference on Management of Data, SIGMOD ’13, (New
York, NY, USA), pp. 1221–1230, ACM, 2013.
[10] D. Tiwari, S. Boboila, S. S. Vazhkudai, Y. Kim, X. Ma, P. J. Desnoyers, and Y. Solihin, “Active flash: Towards energy-efficient, in-situ data analytics on extreme-scale
machines,” in Proceedings of the 11th USENIX Conference on File and Storage
Technologies, FAST’13, (Berkeley, CA, USA), pp. 119–132, USENIX Association,
2013.
[11] S. Cho, C. Park, H. Oh, S. Kim, Y. Yi, and G. R. Ganger, “Active disk meets
flash: A case for intelligent ssds,” in Proceedings of the 27th International ACM
Conference on International Conference on Supercomputing, ICS ’13, (New York,
NY, USA), pp. 91–102, ACM, 2013.
[12] J. Dongarra, P. Beckman, T. Moore, P. Aerts, G. Aloisio, J.-C. Andre, D. Barkai,
J.-Y. Berthou, T. Boku, B. Braunschweig, F. Cappello, B. Chapman, X. Chi,
A. Choudhary, S. Dosanjh, T. Dunning, S. Fiore, A. Geist, B. Gropp, R. Harrison,
M. Hereld, M. Heroux, A. Hoisie, K. Hotta, Z. Jin, Y. Ishikawa, F. Johnson, S. Kale,
R. Kenway, D. Keyes, B. Kramer, J. Labarta, A. Lichnewsky, T. Lippert, B. Lucas,
B. Maccabe, S. Matsuoka, P. Messina, P. Michielse, B. Mohr, M. S. Mueller,
W. E. Nagel, H. Nakashima, M. E. Papka, D. Reed, M. Sato, E. Seidel, J. Shalf,
D. Skinner, M. Snir, T. Sterling, R. Stevens, F. Streitz, B. Sugar, S. Sumimoto,
W. Tang, J. Taylor, R. Thakur, A. Trefethen, M. Valero, A. Van Der Steen, J. Vetter,
P. Williams, R. Wisniewski, and K. Yelick, “The international exascale software
project roadmap,” Int. J. High Perform. Comput. Appl., vol. 25, pp. 3–60, Feb.
2011.
[13] A. Moody, G. Bronevetsky, K. Mohror, and B. R. d. Supinski, “Design, modeling,
and evaluation of a scalable multi-level checkpointing system,” in Proceedings of
the 2010 ACM/IEEE International Conference for High Performance Computing,
Networking, Storage and Analysis, SC ’10, (Washington, DC, USA), pp. 1–11,
IEEE Computer Society, 2010.
[14] S. Di, M. S. Bouguerra, L. Bautista-Gomez, and F. Cappello, “Optimization of
multi-level checkpoint model for large scale hpc applications,” in 2014 IEEE 28th
International Parallel and Distributed Processing Symposium, pp. 1181–1190,
May 2014.
[15] X. Dong, N. Muralimanohar, N. Jouppi, R. Kaufmann, and Y. Xie, “Leveraging
3d pcram technologies to reduce checkpoint overhead for future exascale systems,”
in Proceedings of the Conference on High Performance Computing Networking,
Storage and Analysis, SC ’09, (New York, NY, USA), pp. 57:1–57:12, ACM,
2009.
[16] S. Kannan, A. Gavrilovska, K. Schwan, and D. Milojicic, “Optimizing checkpoints
using nvm as virtual memory,” in Parallel Distributed Processing (IPDPS), 2013
IEEE 27th International Symposium on, pp. 29–40, May 2013.
[17] G. Zheng, L. Shi, and L. V. Kale, “Ftc-charm++: an in-memory checkpoint-based
fault tolerant runtime for charm++ and mpi,” in Cluster Computing, 2004 IEEE
International Conference on, pp. 93–103, Sept 2004.
[18] J. Bent, G. Gibson, G. Grider, B. McClelland, P. Nowoczynski, J. Nunez, M. Polte,
and M. Wingate, “Plfs: A checkpoint filesystem for parallel applications,” in
Proceedings of the Conference on High Performance Computing Networking,
Storage and Analysis, SC ’09, (New York, NY, USA), pp. 21:1–21:12, ACM,
2009.
[19] R. Rajachandrasekar, A. Moody, K. Mohror, and D. K. D. Panda, “A 1 pb/s file
system to checkpoint three million mpi tasks,” in Proceedings of the 22Nd International Symposium on High-performance Parallel and Distributed Computing,
HPDC ’13, (New York, NY, USA), pp. 143–154, ACM, 2013.
[20] D. Ibtesham, K. B. Ferreira, and D. Arnold, “A checkpoint compression study
for high-performance computing systems,” Int. J. High Perform. Comput. Appl.,
vol. 29, pp. 387–402, Nov. 2015.
[21] D. Ibtesham, D. Arnold, K. B. Ferreira, and P. G. Bridges, “On the viability of
checkpoint compression for extreme scale fault tolerance,” in Proceedings of the
2011 International Conference on Parallel Processing - Volume 2, Euro-Par’11,
(Berlin, Heidelberg), pp. 302–311, Springer-Verlag, 2012.
[22] K. B. Ferreira, R. Riesen, R. Brighwell, P. Bridges, and D. Arnold, “Libhashckpt:
Hash-based incremental checkpointing using gpu’s,” in Proceedings of the 18th
European MPI Users’ Group Conference on Recent Advances in the Message
Passing Interface, EuroMPI’11, (Berlin, Heidelberg), pp. 272–281, SpringerVerlag, 2011.
[23] J. Kaiser, R. Gad, T. SÃijÃ§, F. Padua, L. Nagel, and A. Brinkmann, “Deduplication potential of hpc applications’ checkpoints,” in 2016 IEEE International
Conference on Cluster Computing (CLUSTER), pp. 413–422, Sept 2016.
[24] B. Nicolae, “Towards scalable checkpoint restart: A collective inline memory
contents deduplication proposal,” in 2013 IEEE 27th International Symposium on
Parallel and Distributed Processing, pp. 19–28, May 2013.
[25] M. Gamell, D. S. Katz, H. Kolla, J. Chen, S. Klasky, and M. Parashar, “Exploring
automatic, online failure recovery for scientific applications at extreme scales,” in
Proceedings of the International Conference for High Performance Computing,
Networking, Storage and Analysis, SC ’14, (Piscataway, NJ, USA), pp. 895–906,
IEEE Press, 2014.
[26] J. Elliott, K. Kharbas, D. Fiala, F. Mueller, K. Ferreira, and C. Engelmann, “Combining partial redundancy and checkpointing for hpc,” in 2012 IEEE 32nd International Conference on Distributed Computing Systems, pp. 6f15–626, June
2012.
[27] I. Doudalis and M. Prvulovic, “Euripus: A flexible unified hardware memory
checkpointing accelerator for bidirectional-debugging and reliability,” in Proceedings of the 39th Annual International Symposium on Computer Architecture, ISCA
’12, (Washington, DC, USA), pp. 261–272, IEEE Computer Society, 2012.

Abhinav Agrawal, Gabriel H. Loh, and James Tuck
[28] J. Chung, I. Lee, M. Sullivan, J. H. Ryoo, D. W. Kim, D. H. Yoon, L. Kaplan,
and M. Erez, “Containment domains: A scalable, efficient, and flexible resilience
scheme for exascale systems,” in Proceedings of the International Conference on
High Performance Computing, Networking, Storage and Analysis, SC ’12, (Los
Alamitos, CA, USA), pp. 58:1–58:11, IEEE Computer Society Press, 2012.
[29] E. Azarkhish, D. Rossi, I. Loi, and L. Benini, “Design and evaluation of a
processing-in-memory architecture for the smart memory cube,” in Proceedings of
the 29th International Conference on Architecture of Computing Systems – ARCS
2016 - Volume 9637, (New York, NY, USA), pp. 19–31, Springer-Verlag New
York, Inc., 2016.
[30] J. Ahn, S. Hong, S. Yoo, O. Mutlu, and K. Choi, “A scalable processing-in-memory
accelerator for parallel graph processing,” in Proceedings of the 42Nd Annual
International Symposium on Computer Architecture, ISCA ’15, (New York, NY,
USA), pp. 105–117, ACM, 2015.
[31] R. Balasubramonian, J. Chang, T. Manning, J. H. Moreno, R. Murphy, R. Nair, and
S. Swanson, “Near-data processing: Insights from a micro-46 workshop,” IEEE
Micro, vol. 34, pp. 36–42, July 2014.
[32] K. Ferreira, “Keeping checkpoint/restart viable for exascale systems,” 2012.
[33] J. Rogers, “Power efficiency and performance with ornl’s cray xk7 titan,” in Proceedings of the 2012 SC Companion: High Performance Computing, Networking
Storage and Analysis, SCC ’12, (Washington, DC, USA), pp. 1040–1050, IEEE
Computer Society, 2012.
[34] D. Vantrease, R. Schreiber, M. Monchiero, M. McLaren, N. P. Jouppi,
M. Fiorentino, A. Davis, N. Binkert, R. G. Beausoleil, and J. H. Ahn, “Corona:
System implications of emerging nanophotonic technology,” in Computer Architecture, 2008. ISCA ’08. 35th International Symposium on, pp. 153–164, June
2008.
[35] Y. Chen, “Towards scalable i/o architecture for exascale systems,” in Proceedings
of the 2011 ACM International Workshop on Many Task Computing on Grids and
Supercomputers, MTAGS ’11, (New York, NY, USA), pp. 43–48, ACM, 2011.
[36] R. Riesen, K. Ferreira, J. Stearley, R. Oldfield, J. H. Laros III, K. Pedretti,
R. Brightwell, et al., “Redundant computing for exascale systems,” Sandia National Laboratories, 2010.
[37] http://www.seagate.com/www-content/product-content/ssd-fam/nvme-ssd/
nytro-xp7200/_shared/docs/nytro-xp7200-add-in-card-ds1905-1-1607us.pdf,
2016.
[38] D. Ibtesham, D. Arnold, P. G. Bridges, K. B. Ferreira, and R. Brightwell, “On the
viability of compression for reducing the overheads of checkpoint/restart-based
fault tolerance,” in 2012 41st International Conference on Parallel Processing,
pp. 148–157, Sept 2012.
[39] M. S. Abdelfattah, A. Hagiescu, and D. Singh, “Gzip on a chip: High performance
lossless data compression on fpgas using opencl,” in Proceedings of the International Workshop on OpenCL 2013 &#38; 2014, IWOCL ’14, (New York, NY,
USA), pp. 4:1–4:9, ACM, 2014.
[40] B. Gu, A. S. Yoon, D.-H. Bae, I. Jo, J. Lee, J. Yoon, J.-U. Kang, M. Kwon, C. Yoon,
S. Cho, J. Jeong, and D. Chang, “Biscuit: A framework for near-data processing
of big data workloads,” in Proceedings of the 43rd International Symposium on
Computer Architecture, ISCA ’16, (Piscataway, NJ, USA), pp. 153–165, IEEE
Press, 2016.
[41] B. Holden, D. Anderson, J. Trodden, and M. Daves, HyperTransport 3.1 Interconnect Technology. Mindshare Press, first ed., 2008.
[42] http://www.ccixconsortium.com/about-us.html.
[43] http://genzconsortium.org/.
[44] http://opencapi.org/.
[45] J. Duell, “The design and implementation of berkeley lab’s linux checkpoint/restart,” Lawrence Berkeley National Laboratory, 2005.
[46] M. A. Heroux, D. W. Doerfler, P. S. Crozier, J. M. Willenbring, H. C. Edwards,
A. Williams, M. Rajan, E. R. Keiter, H. K. Thornquist, and R. W. Numrich,
“Improving performance via mini-applications,” Technical Report SAND20095574, 2009.
[47] J. Hursey, J. M. Squyres, T. I. Mattox, and A. Lumsdaine, “The design and
implementation of checkpoint/restart process fault tolerance for Open MPI,” in
Proceedings of the 21st IEEE International Parallel and Distributed Processing
Symposium (IPDPS), IEEE Computer Society, 03 2007.
[48] E. Gabriel, G. E. Fagg, G. Bosilca, T. Angskun, J. J. Dongarra, J. M. Squyres,
V. Sahay, P. Kambadur, B. Barrett, A. Lumsdaine, R. H. Castain, D. J. Daniel,
R. L. Graham, and T. S. Woodall, “Open MPI: Goals, concept, and design of a
next generation MPI implementation,” in Proceedings, 11th European PVM/MPI
Users’ Group Meeting, (Budapest, Hungary), pp. 97–104, September 2004.
[49] P. Deutsch, “Deflate compressed data format specification version 1.3.” https:
//tools.ietf.org/html/rfc1951.
[50] J. Seward, “bzip2 and libbzip2, version 1.0.5, a program and library for data
compression.” http://www.bzip.org, 2007.
[51] T. Developers, “Xz utils.” http://tukaani.org/xz/, 2015.
[52] Y. Collet, “Lz4 explained.” http://fastcompression.blogspot.cz/2011/05/lz4explained.html, 2011.
