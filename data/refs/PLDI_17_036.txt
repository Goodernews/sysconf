[1] O. Aciigmez, W. Schindler, and €. K. Kog. Cache based
remote timing attack on the AES. In CT-RSA, pages 271-286.
Springer, 2007.

[2] J. Agat. Transforming out timing leaks. In POPL 2000, pages
40-53. ACM, 2000.

[3] J. Agat. Transforming out timing leaks in practice: An experiment in implementing programming language-based methods
for confidentiality, 2000.

[4] J. B. Almeida, M. Barbosa, G. Barthe, F. Dupressoir, and
M. Emmi. Verifying constant-time implementations. In
USENIX Security Symposium. USENIX, 2016.

[5] J. B. Almeida, M. Barbosa, J. S. Pinto, and B. Vieira. Formal verification of side-channel countermeasures using selfcomposition. Sci. Comput. Program., 78(7):796-812, 2013.

[6] M. Assaf, D. A. Naumann, J. Signoles, E. Totel, and FE. Tronel.
Hypercollecting semantics and its application to static analysis of information flow. In POPL. ACM, 2017.

[7] M. Backes, B. Kopf, and A. Rybalchenko. Automatic discovery and quantification of information leaks. In SSP, pages
141-153. IEEE, 2009.

[8] D. Bernstein. Cache-timing attacks on AES. http://cr.yp.
to/antiforgery/cachetiming-20050414. pdf, 2005.

[9] D.J. Bernstein, T. Lange, and P. Schwabe. The security impact
of a new cryptographic library. In LATINCRYPT, pages 159176. Springer, 2012.

[10] D. Clark, S. Hunt, and P. Malacaria. A static analysis for
quantifying information flow in a simple imperative language.
JCS, 15(3):321-371, 2007.

[11] D. Cock, Q. Ge, T. Murray, and G. Heiser. The last mile: An

empirical study of timing channels on sel4. In CCS. ACM,
2014.

[12] B. Coppens, I. Verbauwhede, K. D. Bosschere, and B. D.
Sutter. Practical mitigations for timing-based side-channel
attacks on modern x86 processors. In SSP, pages 45-60.
TEEE, 2009.

[13] P. M. Corina Pasareanu, Sang Phan. Multi-run side-channel
analysis using symbolic execution and max-smt. In CSF.
TEEE, 2016.

[14] P. Cousot and R. Cousot. Abstract interpretation: a unified
lattice model for static analysis of programs by construction of
approximation of fixpoints. In POPL, pages 238-252, 1977.

[15] P. Cousot and R. Cousot. Systematic design of program
analysis frameworks. In POPL. ACM Press, 1979.

[16] G. Doychev, B. Képf, L. Mauborgne, and J. Reineke.
Cacheaudit: A tool for the static analysis of cache side channels. ACM Transactions on Information and System Security,
18(1):4:1-4:32, June 2015.

[17] S. Dziembowski and K. Pietrzak. Leakage-resilient cryptography. In FOCS. IEEE, 2008.

[18] T. ElGamal. A public key cryptosystem and a signature
scheme based on discrete logarithms. IEEE transactions on
information theory, 31(4):469-472, 1985.

420

[19] U. Erlingsson and M. Abadi. Operating system protection against side-channel attacks that exploit memory latency.
Technical report, 2007.

[20] R. Giacobazzi and I. Mastroeni. Abstract Non-Interference:
Parameterizing Non-Interference by Abstract Interpretation.
pages 186-197. ACM, 2004.

[21] R. Giacobazzi and I. Mastroeni. Timed Abstract NonInterference. In Proc. 3rd International Conference on Formal
Modeling and Analysis of Timed Systems (FORMATS 2005),
volume 3829 of LNCS, pages 289-303. Springer, 2005.

[22] S. Gueron. Intel Advanced Encryption Standard (AES)
Instructions Set. http://software.intel.com/file/
24917, 2010.

[23] D. Gullasch, E. Bangerter, and S. Krenn. Cache games bringing access-based cache attacks on AES to practice. In
SSP, pages 490-505. IEEE, 2011.

[24] J. Heusser and P. Malacaria. Quantifying information leaks in
software. In ACSAC, pages 261-269. ACM, 2010.

[25] R. Hund, C. Willems, and T. Holz. Practical timing side channel attacks against kernel space aslr. In Security and Privacy
(SP), 2013 IEEE Symposium on, pages 191-205. IEEE, 2013.

[26] T. Kaufmann, H. Pelletier, S. Vaudenay, and K. Villegas.
When constant-time source yields variable-time binary: Exploiting curve25519-donna built with msve 2015. In International Conference on Cryptology and Network Security, pages
573-582. Springer, 2016.

[27] T. Kim, M. Peinado, and G. Mainar-Ruiz. StealthMem:
System-level protection against cache-based side channel attacks in the cloud. In 19th USENIX Security Symposium.
USENIX, 2012.

[28] V. Klebanov. Precise quantitative information flow analysis
using symbolic model counting. In F. Martinelli and F. Nielson, editors, Proceedings, International Workshop on Quantitative Aspects in Security Assurance (QASA), 2012.

[29] B. Képf and D. Basin. An Information-Theoretic Model for
Adaptive Side-Channel Attacks. In CCS, pages 286-296.
ACM, 2007.

[30] B. Képf and A. Rybalchenko. Approximation and randomization for quantitative information-flow analysis. In CSF, pages
3-14. IEEE, 2010.

[31] A. Langley. Checking that functions are constant time with valgrind.
https://www.imperialviolet.org/2010/04/01/ctgrind-html,
2010. Accessed: 15 April 2017.

[32] FE Liu, Y. Yarom, Q. Ge, G. Heiser, and R. B. Lee. Last-level
cache side-channel attacks are practical. In JEEE Symposium
on Security and Privacy, pages 605-622. TEEE Computer
Society, 2015.

[33] G. Lowe. Quantifying Information Flow. In Proc. 15th IEEE
Computer Security Foundations Symposium (CSFW 2002),
pages 18-31. IEEE, 2002.

[34] J. L. Massey. Guessing and Entropy. In JSIT, page 204. IEEE,
1994.

[35] A. Menezes, P. van Oorschot, and S. Vanstone. Handbook of
Applied Cryptography. CRC Press, 1996.
[36] D. Molnar, M. Piotrowski, D. Schultz, and D. Wagner. The
program counter security model: Automatic detection and
removal of control-flow side channel attacks. In ICISC.
Springer, 2006.

[37] P. J. Mucci, S. Browne, C. Deane, and G. Ho. Papi: A portable
interface to hardware performance counters. In DoD HPCMP
Users Group Conference, 1999.

[38] J. Newsome, S. McCamant, and D. Song. Measuring channel
capacity to distinguish undue influence. In PLAS, pages 7385. ACM, 2009.

[39] D. A. Osvik, A. Shamir, and E. Tromer. Cache attacks and
countermeasures: the case of AES. In CT-RSA, volume 3860
of LNCS, pages 1-20. Springer, 2006.

[40] C. Percival. Cache missing for fun and profit. In BSDCan,
2005.

[41] T. Ristenpart, E. Tromer, H. Shacham, and S. Savage. Hey,
you, get off of my cloud: exploring information leakage in
third-party compute clouds. In CCS, pages 199-212. ACM,
2009.

[42] S. Shinde, Z. L. Chua, V. Narayanan, and P. Saxena. Preventing page faults from telling your secrets. In ASIACCS. ACM,
2016.

[43] G. Smith. On the foundations of quantitative information flow.
In FoSSaCS. Springer, 2009.

[44] M. Tiwari, J. Oberg, X. Li, J. Valamehr, T. E. Levin, B. Hardekopf, R. Kastner, F. T. Chong, and T. Sherwood. Crafting a usable microkernel, processor, and I/O system with strict and
provable information flow security. In SCA, pages 189-200.
ACM, 2011.

[45] Z. Wang and R. B. Lee. A novel cache architecture with
enhanced performance and security. In MICRO, 2008.

[46] Y. Xu, W. Cui, and M. Peinado. Controlled-channel attacks:
Deterministic side channels for untrusted operating systems.
In SSP. IEEE, 2015.

[47] Y. Yarom and K. Falkner. FLUSH+RELOAD: A high resolution, low noise, L3 cache side-channel attack. In USENIX
Security Symposium, 2014.

[48] Y. Yarom, D. Genkin, and N. Heninger. CacheBleed: A timing
attack on OpenSSL constant time RSA. In International Conference on Cryptographic Hardware and Embedded Systems,
pages 346-367. Springer, 2016.

[49] Y. Zhang, A. Juels, M. K. Reiter, and T. Ristenpart. CrossVM side channels and their use to extract private keys. In
CCS. ACM, 2012.

[50] Y. Zhang and M. K. Reiter. Diippel: retrofitting commodity operating systems to mitigate cache side channels in the
cloud. In Proceedings of the 2013 ACM SIGSAC conference on Computer & communications security, pages 827838. ACM, 2013.
