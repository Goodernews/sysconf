
[1] David G. Andersen, Jason Franklin, Michael Kaminsky, Amar Phanishayee, Lawrence Tan, and Vijay Vasudevan. 2009. FAWN: A Fast
Array of Wimpy Nodes. In ACM SOSP.

[2] Berk Atikoglu, Yuehai Xu, Eitan Frachtenberg, Song Jiang, and Mike
Paleczny. 2012. Workload Analysis of a Large-scale Key-value Store.
In ACM SIGMETRICS.

[3] Barefoot. 2017. Barefoot Capilano. (2017).
barefootnetworks.com/technology/#capilano.

[4] Barefoot. 2017. Barefoot Tofino. (2017). https://www.barefootnetworks.
com/technology/#tofino.

[5] M. Berezecki, E. Frachtenberg, M. Paleczny, and K. Steele. 2011. Manycore Key-value Store. In IEEE IGCC.

[6] Pat Bosshart, Dan Daly, Glen Gibb, Martin Izzard, Nick McKeown,
Jennifer Rexford, Cole Schlesinger, Dan Talayco, Amin Vahdat, George
Varghese, and David Walker. 2014. P4: Programming Protocolindependent Packet Processors. ACM SIGCOMM CCR (July 2014).

[7] Broadcom. 2017. Broadcom Tomahawk II. (2017). https://www.
broadcom.com/.

[8] Andrei Broder and Michael Mitzenmacher. 2004. Network applications
of Bloom filters: A survey. Internet mathematics (2004).

[9] Cavium. 2017. Cavium XPliant. (2017). https://www.cavium.com/.
[10] Yue Cheng, Aayush Gupta, and Ali R. Butt. 2015. An In-memory Object
Caching Framework with Adaptive Load Balancing. In EuroSys.

[11] Brian F. Cooper, Adam Silberstein, Erwin Tam, Raghu Ramakrishnan,
and Russell Sears. 2010. Benchmarking Cloud Serving Systems with
YCSB. In ACM SOCC.

[12] Graham Cormode and S. Muthukrishnan. 2005. An improved data
stream summary: The Count-Min sketch and its applications. Journal
of Algorithms (April 2005).

[13] Frank Dabek, M. Frans Kaashoek, David Karger, Robert Morris, and
Ion Stoica. 2001. Wide-area Cooperative Storage with CFS. In ACM
SOSP.

[14] Jeffrey Dean and Luiz André Barroso. 2013. The Tail at Scale. ACM
CACM (February 2013).

[15] Aleksandar Dragojevi¢, Dushyanth Narayanan, Miguel Castro, and
Orion Hodson. 2014, FaRM: Fast Remote Memory. In USENIX NSDI.

[16] Bin Fan, David G. Andersen, and Michael Kaminsky. 2013. MemC3:
Compact and Concurrent MemCache with Dumber Caching and
Smarter Hashing. In USENIX NSDI.

[17] Bin Fan, Hyeontaek Lim, David G. Andersen, and Michael Kaminsky.
2011. Small Cache, Big Effect: Provable Load Balancing for Randomly
Partitioned Cluster Services. In ACM SOCC.

[18] Jim Gray, Prakash Sundaresan, Susanne Englert, Ken Baclawski, and
Peter J. Weinberger. 1994. Quickly Generating Billion-record Synthetic
Databases. In ACM SIGMOD.

[19] Qi Huang, Helga Gudmundsdottir, Ymir Vigfusson, Daniel A. Freedman, Ken Birman, and Robbert van Renesse. 2014. Characterizing
Load Imbalance in Real-World Networked Caches. In ACM SIGCOMM
HotNets Workshop.

[20] Intel. 2017. Intel Data Plane Development Kit (DPDK). (2017). http:
//dpdk.org/.

[21] Jaeyeon Jung, Balachander Krishnamurthy, and Michael Rabinovich.
2002. Flash Crowds and Denial of Service Attacks: Characterization
and Implications for CDNs and Web Sites. In WWW.

[22] Anuj Kalia, Michael Kaminsky, and David G Andersen. 2014. Using
RDMaA efficiently for key-value services. In ACM SIGCOMM.

[23] Anuj Kalia, Michael Kaminsky, and David G. Andersen. 2016. Design
Guidelines for High Performance RDMA Systems. In USENIX ATC.

[24] David Karger, Eric Lehman, Tom Leighton, Rina Panigrahy, Matthew
Levine, and Daniel Lewin. 1997. Consistent Hashing and Random

https://www.

136

X. Jin et al.

Trees: Distributed Caching Protocols for Relieving Hot Spots on the
World Wide Web. In ACM STOC.

[25] Markus Klems, Adam Silberstein, Jianjun Chen, Masood Mortazavi,
Sahaya Andrews Albert, P.P.S. Narayan, Adwait Tumbde, and Brian
Cooper. 2012. The Yahoo!: Cloud Datastore Load Balancer. In CloudDB.

[26] Sheng Li, Hyeontaek Lim, Victor W Lee, Jung Ho Ahn, Anuj Kalia,
Michael Kaminsky, David G Andersen, O Seongil, Sukhan Lee, and
Pradeep Dubey. 2015. Architecting to achieve a billion requests per
second throughput on a single key-value store server platform. In
ISCA.

[27] Xiaozhou Li, David G Andersen, Michael Kaminsky, and Michael J
Freedman. 2014. Algorithmic improvements for fast concurrent cuckoo
hashing, In EuroSys.

[28] Xiaozhou Li, Raghav Sethi, Michael Kaminsky, David G. Andersen,
and Michael J. Freedman. 2016. Be Fast, Cheap and in Control with
SwitchKV. In USENIX NSDI.

[29] Hyeontaek Lim, Bin Fan, David G. Andersen, and Michael Kaminsky.
2011. SILT: A Memory-efficient, High-performance Key-value Store.
In ACM SOSP.

[30] Hyeontaek Lim, Dongsu Han, David G. Andersen, and Michael Kaminsky. 2014. MICA: A Holistic Approach to Fast In-memory Key-value
Storage. In USENIX NSDI.

[31] Ming Liu, Liang Luo, Jacob Nelson, Luis Ceze, Arvind Krishnamurthy,
and Kishore Atreya. 2017. IncBricks: Toward In-Network Computation
with an In-Network Cache. In ACM ASPLOS.

[32] Memcached. 2017. Memcached key-value store. (2017).
memcached.org/.

[33] Michael Mitzenmacher. 2001. The Power of Two Choices in Randomized Load Balancing. IEEE Transactions on Parallel and Distributed
Systems (October 2001).

[34] Rajesh Nishtala, Hans Fugal, Steven Grimm, Marc Kwiatkowski, Herman Lee, Harry C. Li, Ryan McElroy, Mike Paleczny, Daniel Peek, Paul
Saab, David Stafford, Tony Tung, and Venkateshwaran Venkataramani.
2013. Scaling Memcache at Facebook. In USENIX NSDI.

[35] NoviFlow. 2017. NoviFlow NoviSwitch. (2017). http://noviflow.com/
products/noviswitch/.

[36] John Ousterhout, Arjun Gopalan, Ashish Gupta, Ankita Kejriwal,
Collin Lee, Behnam Montazeri, Diego Ongaro, Seo Jin Park, Henry Qin,
Mendel Rosenblum, Stephen Rumble, Ryan Stutsman, and Stephen
Yang. 2015. The RAMCloud Storage System. ACM Transactions on
Computer Systems (August 2015).

[37] K. V. Rashmi, Mosharaf Chowdhury, Jack Kosaian, Ion Stoica, and
Kannan Ramchandran. 2016. EC-Cache: Load-Balanced, Low-Latency
Cluster Caching with Online Erasure Coding. In USENIX OSDI.

[38] Redis. 2017. Redis data structure store. (2017). https://redis.io/.

[39] Redis. 2017. Using Redis as an LRU cache. (2017). https://redis.io/
topics/lru-cache.

[40] Rebecca Taft, Essam Mansour, Marco Serafini, Jennie Duggan, Aaron J.
Elmore, Ashraf Aboulnaga, Andrew Pavlo, and Michael Stonebraker.
2014, E-Store: Fine-grained Elastic Partitioning for Distributed Transaction Processing Systems. VLDB (November 2014).

[41] TommyDS. 2017. TommyDS C library. (2017). http://www.tommyds.it/.

[42] Vijay Vasudevan, Michael Kaminsky, and David G. Andersen. 2012.
Using Vector Interfaces to Deliver Millions of IOPS from a Networked
Key-value Storage Server. In ACM SOCC.

[43] Venkateshwaran Venkataramani, Zach Amsden, Nathan Bronson,
George Cabrera III, Prasad Chakka, Peter Dimov, Hui Ding, Jack Ferris,
Anthony Giardullo, Jeremy Hoon, Sachin Kulkarni, Nathan Lawrence,
Mark Marchukov, Dmitri Petrov, and Lovro Puzar. 2012. TAO: How
Facebook Serves the Social Graph. In ACM SIGMOD.
