[1] Christoffer Quist Adamsen, Anders Moller, Rezwana Karim, Manu Sridharan, Frank Tip, and Koushik Sen. 2017. Repairing
Event Race Errors by Controlling Nondeterminism. In Proc. 39th International Conference on Software Engineering (ICSE).
[2] Esben Andreasen and Anders Moller. 2014. Determinacy in static analysis for jQuery. In Proc. 29th ACM SIGPLAN International Conference on Object Oriented Programming Systems Languages, and Applications (OOPSLA).

[3] Petka Antonov. 2013. bluebird. https://github.com/petkaantonow/bluebird. (2013). Accessed: 2016-10-27.

[4] ECMA. 2015. 262: ECMAScript Language Specification. European Association for Standardizing Information and Communication Systems (ECMA) (2015).

[5] Matthias Felleisen, Robert Bruce Findler, and Matthew Flatt. 2009. Semantics Engineering with PLT Redex. The MIT Press.

[6] Cormac Flanagan and Matthias Felleisen. 1995. The Semantics of Future and its use in Program Optimization. In Proc. 22nd
ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI).

[7] Cormac Flanagan and Matthias Felleisen. 1999. The Semantics of Future and an Application. Journal of Functional
Programming (1999).

[8] Proceedings of the ACM on Programming Languages, Vol. 1, No. OOPSLA, Article 86. Publication date: October 2017.
86:24 Magnus Madsen, Ondiej Lhotak, and Frank Tip

[9] Daniel Friedman and David Wise. 1976. The Impact of Applicative Programming on Multiprocessing. In International
Conference on Parallel Processing.

[10] Salvatore Guarnieri and Benjamin Livshits. 2009. GATEKEEPER: Mostly Static Enforcement of Security and Reliability
Policies for JavaScript Code. In Proc. 18th Usenix Security Symposium.

[11] Arjun Guha, Claudiu Saftoiu, and Shriram Krishnamurthi. 2010. The Essence of JavaScript. In Proc. 24th European Conference
on Object-oriented Programming (ECOOP).

[12] Shin Hong, Yongbae Park, and Moonzoo Kim. 2014. Detecting Concurrency Errors in Client-Side Java Script Web Applications.
In Proc. 7th IEEE International Conference on Software Testing, Verification and Validation (ICST).

[13] David Van Horn and Matthew Might. 2010. Abstracting Abstract Machines. In Proc. 15th ACM International Conference on
Functional Programming (ICFP).

[14] Casper Svenning Jensen, Anders Moller, Veselin Raychev, Dimitar Dimitrov, and Martin T. Vechev. 2015. Stateless Model
Checking of Event-Driven Applications. In Proc. 30th ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA).

[15] Simon Holm Jensen, Peter Jonsson, and Anders Moller. 2012. Remedying the Eval That Men Do. In Proc. International
Symposium on Software Testing and Analysis (ISSTA).

[16] Simon Holm Jensen, Magnus Madsen, and Anders Meller. 2011. Modeling the HTML DOM and Browser API in Static
Analysis of JavaScript Web Applications. In Proc. 8th joint meeting of the European Software Engineering Conference and
the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE).

[17] Simon Holm Jensen, Anders Moller, and Peter Thiemann. 2009. Type Analysis for JavaScript. In Proc. 16th International
Static Analysis Symposium (SAS).

[18] Vineeth Kashyap, Kyle Dewey, Ethan Kuefner, John Wagner, Kevin Gibbons, John Sarracino, Ben Wiedermann, and Ben
Hardekopf. 2014. JSAI: A Static Analysis Platform for JavaScript. In Proc. 22nd ACM SIGSOFT International Symposium
on Foundations of Software Engineering (FSE).

[19] Kris Kowal. 2010. Q. https://github.com/kriskowal/q. (2010). Accessed: 2016-10-27.

[20] Magnus Madsen and Esben Andreasen. 2014. String Analysis for Dynamic Field Access. In Proc. 23rd International Conference
on Compiler Construction (CC).

[21] Magnus Madsen, Benjamin Livshits, and Michael Fanning. 2013. Practical Static Analysis of JavaScript Applications in
the Presence of Frameworks and Libraries. In Proc. European Software Engineering Conference and the Symposium on the
Foundations of Software Engineering (ESEC/FSE).

[22] Magnus Madsen and Anders Meller. 2014. Sparse Dataflow Analysis with Pointers and Reachability. In Proc. 21st International
Static Analysis Symposium (SAS).

[23] Magnus Madsen, Frank Tip, and Ondyej Lhotak. 2015. Static Analysis of Event-driven Node.Js JavaScript Applications.
In Proc. ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications
(OOPSLA).

[24] Sergio Maffeis, John C. Mitchell, and Ankur Taly. 2008. An Operational Semantics for JavaScript. In Asian Symposium on
Programming Languages and Systems.

[25] Erdal Mutlu, Serdar Tasiran, and Benjamin Livshits. 2015. Detecting JavaScript Races that Matter. In Proc. 10th Joint Meeting
on Foundations of Software Engineering (ESEC/FSE).

[26] Boris Petrov, Martin T. Vechev, Manu Sridharan, and Julian Dolby. 2012. Race Detection for Web Applications. In Proc. 33rd
ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI).

[27] Veselin Raychev, Martin T. Vechev, and Manu Sridharan. 2013. Effective Race Detection for Event-Driven Programs. In
Proc. 28th ACM SIGPLAN International Conference on Object Oriented Programming Systems Languages, and Applications
(OOPSLA).

[28] Adam Welc, Suresh Jagannathan, and Antony Hosking. 2005. Safe Futures for Java. Proc. 20th ACM SIGPLAN International
Conference on Object Oriented Programming Systems Languages, and Applications (OOPSLA) (2005).

[29] Lu Zhang and Chao Wang. 2017. RClassify: Classifying Race Conditions in Web Applications via Deterministic Replay. In
Proc. 39th International Conference on Software Engineering (ICSE).

[30] Yunhui Zheng, Tao Bao, and Xiangyu Zhang. 2011. Statically Locating Web Application Bugs Caused by Asynchronous
Calls. In Proc. 20th International Conference on World Wide Web (WWW).

[31] Proceedings of the ACM on Programming Languages, Vol. 1, No. OOPSLA, Article 86. Publication date: October 2017.

