[1] Fatcache-Async. https://github.com/polyuszy/Fatcache-Async-2017.
[2] Whitepaper: memcached total
cost of ownership (TCO). https://davisfields.files.wordpress.com/2011/06/gear6
white paper tco.pdf.
[3] AGRAWAL, N., PRABHAKARAN, V., WOBBER,
T., DAVIS, J. D., MANASSE, M., AND PANIGRAHY, R. Design tradeoffs for SSD performance.
In USENIX Annual Technical Conference (ATC 08)
(2008).
[4] ANAND, A., MUTHUKRISHNAN, C., KAPPES,
S., AKELLA, A., AND NATH, S. Cheap and
large CAMs for high performance data-intensive
networked systems. In USENIX Symposium on
Networked Systems Design and Implementation
(NSDI 10) (2010).
[5] ATIKOGLU, B., XU, Y., FRACHTENBERG, E.,
JIANG, S., AND PALECZNY, M. Workload
analysis of a large-scale key-value store. In ACM
SIGMETRICS Performance Evaluation Review
(SIGMETRICS 12) (2012).
[6] CARRA, D., AND MICHIARDI, P. Memory
partitioning in Memcached: an experimental
performance analysis. In International Conference
on Communications (ICC 14) (2014).
[7] CHEN, F., KOUFATY, D. A., AND ZHANG,
X. Understanding intrinsic characteristics and
system implications of flash memory based solid
state drives. In International Conference on
Measurement and Modeling of Computer Systems
(SIGMETRICS 09) (2009).
[8] CHEN, F., LEE, R., AND ZHANG, X. Essential
roles of exploiting internal parallelism of flash
memory based solid state drives in high-speed data
processing. In International Symposium on High
Performance Computer Architecture (HPCA 11)
(2011).
[9] CHEN, F., LUO, T., AND ZHANG, X. CAFTL:
a content-aware flash translation layer enhancing
the lifespan of flash memory based solid state
drives. In USENIX Conference on File and Storage
Technologies (FAST’11) (2011).
[10] DEBNATH, B., SENGUPTA, S., AND LI, J.
SkimpyStash: RAM space skimpy key-value
store on flash-based storage. In ACM SIGMOD
International Conference on Management of Data
(SIGMOD 11) (2011).
[11] DIRIK, C., AND JACOB, B. The performance
of PC solid-state disks (SSDs) as a function of
bandwidth, concurrency, device, architecture, and
system organization. In International Symposium
on Computer Architecture (ISCA 09) (2009).
[12] FACEBOOK. McDipper: a keyvalue cache for flash storage.
https://www.facebook.com/notes/facebookengineering/mcdipper-a-key-value-cache-forflash-storage/10151347090423920.
[13] GAL, E., AND TOLEDO, S. Algorithms and data
structures for flash memories. In ACM Computing
Survey (CSUR) (2005), vol. 37:2.
[14] GOKHALE, S., AGRAWAL, N., NOONAN, S., AND
UNGUREANU, C. KVZone and the search for
a write-optimized key-value store. In USENIX
Workshop on Hot Topics in Storage and File
Systems (HotStorage 10) (2010).
[15] GONZALEZ ´ , J., BJØRLING, M., LEE, S., DONG,
C., AND HUANG, Y. R. Application-driven flash
translation layers on Open-Channel SSDs.
[16] GRUPP, L. M., CAULFIELD, A. M., COBURN,
J., SWANSON, S., YAAKOBI, E., SIEGEL,
P. H., AND WOLF, J. K. Characterizing flash
memory: anomalies, observations, and applications.
In International Symposium on Microarchitecture
(Micro 09) (2009).
[17] GUPTA, A., KIM, Y., AND URGAONKAR, B.
DFTL: a flash translation layer employing demandbased selective caching of page-level address
mappings. In International Conference on
Architectural Support for Programming Languages
and Operating Systems (ASPLOS 09) (2009).
[18] HU, X., WANG, X., LI, Y., ZHOU, L., LUO, Y.,
DING, C., JIANG, S., AND WANG, Z. LAMA:
optimized locality-aware memory allocation for
key-value cache. In USENIX Annual Technical
Conference (ATC 15) (2015).
[19] JOHN BUCY, JIRI SCHINDLER, S. S. G. G.
DiskSim 4.0. http://www.pdl.cmu.edu/DiskSim/.
[20] KLIMOVIC, A., KOZYRAKIS, C., THEREKSA,
E., JOHN, B., AND KUMAR, S. Flash
storage disaggregation. In The Eleventh European
Conference on Computer Systems (EuroSys 16)
(2016).
[21] LEE, S., LIU, M., JUN, S., XU, S., KIM, J.,
ET AL. Application-managed flash. In USENIX
Conference on File and Storage Technologies (FAST
16) (2016).
[22] LEVENTHAL, A. Flash storage memory. In
Communications of the ACM (2008), vol. 51(7),
pp. 47–51.
[23] LILLY, P. Facebook ditches
DRAM, flaunts flash-based McDipper.
http://www.maximumpc.com/facebook-ditchesdram-flaunts-flash-based-mcdipper.
[24] LIM, H., FAN, B., ANDERSEN, D. G., AND
KAMINSKY, M. SILT: a memory-efficient, highperformance key-value store. In ACM Symposium
on Operating Systems Principles (SOSP 11) (2011).
[25] LU, L., PILLAI, T. S., ARPACI-DUSSEAU,
A. C., AND ARPACI-DUSSEAU, R. H. WiscKey:
separating keys from values in SSD-conscious
storage. In USENIX Conference on File and Storage
Technologies (FAST 16) (2016).
[26] MARGAGLIA, F., YADGAR, G., YAAKOBI, E., LI,
Y., SCHUSTER, A., AND BRINKMANN, A. The
devil is in the details: implementing flash page reuse
with WOM codes. In USENIX Conference on File
and Storage Technologies (FAST 16) (2016).
[27] MARMOL ´ , L., SUNDARARAMAN, S., TALAGALA,
N., AND RANGASWAMI, R. NVMKV: a scalable
and lightweight, FTL-aware key-value store. In
USENIX Annual Technical Conference (ATC 15)
(2015).
[28] MARMOL ´ , L., SUNDARARAMAN, S., TALAGALA,
N., RANGASWAMI, R., DEVENDRAPPA, S.,
RAMSUNDAR, B., AND GANESAN, S. NVMKV:
a scalable and lightweight flash aware key-value
store. In USENIX Workshop on Hot Topics in
Storage and File Systems (HotStorage 15) (2015).
[29] MARSH, B., DOUGLIS, F., AND KRISHNAN, P.
Flash memory file caching for mobile computers.
In Hawaii Conference on Systems Science (1994).
[30] MEMBLAZE. Memblaze.
http://www.memblaze.com/en/.
[31] MEMCACHED. Memcached: a distributed memory
object caching system. http://www.memcached.org.
[32] MESNIER, M. P., AKERS, J., CHEN, F., AND
LUO, T. Differentiated storage services. In ACM
Symposium on Operating System Principles (SOSP
11) (2011).
[33] NISHTALA, R., FUGAL, H., GRIMM, S.,
KWIATKOWSKI, M., LEE, H., LI, H. C.,
MCELROY, R., PALECZNY, M., PEEK, D.,
SAAB, P., STAFFORD, D., TUNG, T., AND
VENKATARAMANI, V. Scaling memcache at
facebook. In USENIX Symposium on Networked
Systems Design and Implementation (NSDI 13)
(2013).
[34] OH, Y., CHOI, J., LEE, D., AND NOH, S. H.
Caching less for better performance: balancing
cache size and update cost of flash memory cache
in hybrid storage systems. In USENIX Conference
on File and Storage Technologies (FAST 12) (2012).
[35] OUYANG, J., LIN, S., JIANG, S., HOU, Z.,
WANG, Y., AND WANG, Y. SDF: software-defined
flash for web-scale internet storage systems. In International Conference on Architectural Support for
Programming Languages and Operating Systems
(ASPLOS 14) (2014).
[36] OUYANG, X., ISLAM, N. S., RAJACHANDRASEKAR, R., JOSE, J., LUO, M., WANG, H.,
AND PANDA, D. K. SSD-assisted hybrid memory
to accelerate memcached over high performance
networks. In International Conference for Parallel
Processing (ICPP 12) (2012).
[37] REDIS. http://redis.io/.
[38] ROSENBLUM, M., AND OUSTERHOUT, J. K. The
design and implementation of a log-structured file
system. In ACM Transactions on Computer Systems
(TC 92) (1992), vol. 10(1):26-52.
[39] SAXENA, M., SWIFT, M. M., AND ZHANG, Y.
Flashtier: a lightweight, consistent and durable
storage cache. In The European Conference on
Computer Systems (EuroSys 12) (2012).
[40] SESHADRI, S., GAHAGAN, M., BHASKARAN, S.,
BUNKER, T., DE, A., JIN, Y., LIU, Y., AND
SWANSON, S. Willow: a user-programmable
SSD. In USENIX Symposium on Operating Systems
Design and Implementation (OSDI 14) (2014).
[41] SHAFAEI, M., DESNOYERS, P., AND FITZPATRICK, J. Write amplification reduction in
flash-based SSDs through extent-based temperature
identification. In USENIX Workshop on Hot Topics
in Storage and File Systems (HotStorage 16) (2016).
[42] SOUNDARARAJAN, G., PRABHAKARAN, V.,
BALAKRISHNAN, M., AND WOBBER, T. Extending SSD lifetimes with disk-based write caches.
In USENIX Conference on File and Storage
Technologies (FAST 10) (2010).
[43] T13. T13 documents referring to TRIM.
http://t13.org/Documents/MinutesDefault.aspx?
keyword=trim.
[44] TANG, L., HUANG, Q., LLOYD, W., KUMAR, S.,
AND LI, K. RIPQ: advanced photo caching on flash
for facebook. In USENIX Conference on File and
Storage Technologies (FAST 15) (2015).
[45] TWITTER. Fatcache.
https://github.com/twitter/fatcache.
[46] WANG, P., SUN, G., JIANG, S., OUYANG, J., LIN,
S., ZHANG, C., AND CONG, J. An efficient design
and implementation of LSM-tree based key-value
store on Open-Channel SSD. In The European
Conference on Computer Systems (EuroSys 15)
(2015).
[47] WU, X., XU, Y., SHAO, Z., AND JIANG, S. LSMtrie: an LSM-tree-based ultra-large key-value store
for small data items. In USENIX Annual Technical
Conference (ATC 15) (2015).
[48] YANG, J., PLASSON, N., GILLIS, G., TALAGALA,
N., AND SUNDARARAMAN, S. Don’t stack your
log on my log. In Workshop on Interactions of
NVM/Flash with Operating Systems and Workloads
(INFLOW 14) (2014).
[49] ZHANG, H., DONG, M., AND CHEN, H. Efficient
and available in-memory KV-store with hybrid
erasure coding and replication. In USENIX
Conference on File and Storage Technologies (FAST
16) (2016).
[50] ZHANG, Y., ARPACI-DUSSEAU, A. C., AND
ARPACI-DUSSEAU, R. H. De-indirection for flashbased SSDs with nameless writes. In USENIX
Conference on File and Storage Technologies (FAST
12) (2012).
[51] ZHANG, Y., ARPACI-DUSSEAU, A. C., AND
ARPACI-DUSSEAU, R. H. Removing the costs
and retaining the benefits of flash-based SSD
virtualization with FSDV. In International
Conference on Massive Storage Systems and
Technology (MSST 15) (2015).
[52] ZHANG, Y., SOUNDARARAJAN, G., STORER,
M. W., BAIRAVASUNDARAM, L. N., SUBBIAH,
S., ARPACI-DUSSEAU, A. C., AND ARPACIDUSSEAU, R. H. Warming up storage-level caches
with bonfire. In USENIX Conference on File and
Storage Technologies (FAST 13) (2013).
[53] ZHENG, M., TUCEK, J., HUANG, D., QIN, F.,
LILLIBRIDGE, M., YANG, E. S., ZHAO, B. W.,
AND SINGH, S. Torturing databases for fun
and profit. In USENIX Symposium on Operating
Systems Design and Implementation (OSDI 14)
(2014).
[54] ZHENG, M., TUCEK, J., QIN, F., AND
LILLIBRIDGE, M. Understanding the robustness of
SSDs under power fault. In USENIX Conference on
File and Storage Technologies (FAST 13) (2013).
