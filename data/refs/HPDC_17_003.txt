[1] Amazon elastic compute cloud (€c2).
aws.amazon.com/ec2. Accessed: 2015.

[2] Cloudlab. http://www.cloudlab.us/. Accessed: 2015.

[3] Google app engine. _https://appengine.google.com.
Accessed: 2015.

[4] Microsoft azure: Cloud computing platform and services.
https://azure.microsoft.com/. Accessed: 2015.

[5] Mongodb. https://www-mongodb.org/. Accessed: 2016.

[6] Openstack swift.
http://docs.openstack.org/developer/swift/overview_archite
cture.html. Accessed: 2015.

[7] Openvswitch: Production quality, multilayer open virtual
switch. http://openvswitch.org/. Accessed: 2015.

[8] Postgresql. http:/Awww.postgresql.org/. Accessed: 2016.
[9] Riak cloud storage. http://basho.com/riak-cloud-storage/.
Accessed: 2015.

[10] Ryu sdn framework. http://osrg.github.io/ryu/. Accessed:
2015.

[11] Spark lighting fast cluster computing.
http://spark.apache.org/. Accessed: 2015.
[12] Voldemort project. http://www.project
voldemort.com/voldemort/design.html. Accessed: 2015.
[13] Marcos K. Aguilera, Arif Merchant, et al., Sinfonia: A new
paradigm for building scalable distributed systems. Symp.
on Operating Systems Principles (SOSP), 2007.

[14] Berk Atikoglu, Yuehai Xu, Eitan Frachtenberg, Song Jiang,
and Mike Paleczny. Workload analysis of a large-scale keyvalue store. International Conference on Measurement and
Modeling of Computer Systems (SIGMETRICS), 2012.
[15] Brad Calder, Ju Wang, Aaron Ogus, Niranjan Nilakantan,
et. al., Windows azure storage: A highly available cloud
storage service with strong consistency. Symposium on
Operating Systems Principles (SOSP), 2011.

[16] Brian F. Cooper, Adam Silberstein, Erwin Tam, Raghu
Ramakrishnan, and Russell Sears. Benchmarking cloud
serving systems with ycsb. Symposium on Cloud
Computing (SoCC), 2010.

[17] Jeffrey Dean and Sanjay Ghemawat. Mapreduce: Simplified
data processing on large clusters. Symposium on Operating
Systems Design and Implementation (OSDI), 2004.
[18] Guiseppe DeCandia, Deniz Hastorun, et al.,.Dynamo:
Amazon’s Highly Available Key-Value Store. Symposium
on Operating Systems Principles (SOSP), 2007.

[19] The Open Networking Foundation. Open networking
foundation: Openflow switch specification. Version 1.3.0.
[20] Sanjay Ghemawat, Howard Gobioff, and Shun-Tak Leung.
The Google File System. Symposium on Operating Systems
Principles (SOSP), 2003.

[21] Nikhil Handigol, Mario Flajslik, et al. Aster* x:
Loadbalancing as a network primitive. GENI Engineering
Conference (Plenary), pages 1-2, 2010.

[22] J. H. Howard, M. L. Kazar, et al., Scale and performance in
a distributed file system. Technical report, Information
Technology Center, Carmnegie-Mellon University,
Pittsburgh, PA, August 1987.

[23] Javvin Technologies Inc. Network Protocols Handbook
(Nd Edition). Javvin Technologies Inc., 2005.

[24] R. Jain, P. Sarkar, and D. Subhraveti. Gpfssnc: An
enterprise cluster file system for big data. IBM Journal of
Research and Development, 57(3/4):5:1-5:10, May 2013.
[25] David Karger, Eric Lehman, et al.,.Consistent hashing and
random trees: Distributed caching protocols for relieving
hot spots on the world wide web. Symposium on Theory of
Computing (STOC), 1997.

[26] Avinash Lakshman and Prashant Malik. Cassandra: A
decentralized structured storage system. SIGOPS Oper.
Syst. Rev., 44(2):35—40, April 2010.

[27] Leslie Lamport. The part-time parliament. ACM Trans.
Comput. Syst., 16(2):133-169, May 1998.

[28] A. Lara, A. Kolasani, and B. Ramamurthy. Network
innovation using openflow: A survey. Communications
Surveys Tutorials, IEEE, 16(1):493-512, First 2014.

[29] Ali Jos’e Mashtizadeh, Min Cai, et al., Xvmotion: Unified
virtual machine migration over long distance. USENIX
Annual Technical Conference (ATC), 2014.

[30] Nick McKeown, Tom Anderson, et al.,Openflow: Enabling
innovation in campus networks. SIGCOMM Comput.
Commun. Rev., 38(2):69-74, March 2008.

[31] Ankur Kumar Nayak, Alex Reimers, Nick Feamster, and
Russ Clark. Resonance: Dynamic access control for
enterprise networks. Workshop on Research on Enterprise
Networking, 2009.

[32] Diego Ongaro and John Ousterhout. In search of an
understandable consensus algorithm. USENIX Annual
Technical Conference (ATC), 2014.

[33] Diego Ongaro, Stephen M. Rumble, et al., Fast crash
recovery in ramcloud. Symposium on Operating Systems
Principles (SOSP), 2011.

[34] Dan R. K. Ports, Jialin Li, Vincent Liu, Naveen Kr. Sharma,
and Arvind Krishnamurthy. Designing distributed systems
using approximate synchrony in data center networks.
Symposium on Networked Systems Design and
Implementation (NSDD, 2015.

[35] Venugopalan Ramasubramanian and Emin Gun Sirer.
Beehive: O(1) lookup performance for power law query
distributions in peer-to-peer overlays. Conference on
Symposium on Networked Systems Design and
Implementation (NSDD, 2004.

[36] Brendan Cully, Jake Wires, et al., Strata: scalable highperformance storage on virtualized non-volatile memory.
Conf. on File and Storage Technologies (FAST). 2014.
[37] Antony I. T. Rowstron and Peter Druschel. Pastry: Scalable,
decentralized object location, and routing for large-scale
peer-to-peer systems. International Conference on
Distributed Systems Platforms (Middleware), 2001.

[38] Jerome H. Saltzer, David P. Reed, and David D. Clark.
End-to-end arguments in system design. ACM Transactions
on Computer Systems, 2(4):277-288, November 1984.
[39] Russel Sandberg. The Design and Implementation of the
Sun Network File System. USENIX Summer Technical
Conference, June 1985.

[40] Jon Stoica, Robert Morris, et al., Chord: A Scalable Peer-toPeer Lookup Protocol for Internet Applications.
SIGCOMM ’01, August 2001.

[41] Andrew S. Tanenbaum and Maarten van Steen. Distributed
Systems: Principles and Paradigms (2™‘ Edition). PrenticeHall, Inc., Upper Saddle River, NJ, USA, 2006.

[42] Douglas B. Terry, Vijayan Prabhakaran, et al., Consistency
based service level agreements for cloud storage.
Symposium on OS Principles (SOSP), 2013.

[43] Robbert van Renesse and Fred B. Schneider. Chain
replication for supporting high throughput and availability.
Symp. on OS Design & Implementation (OSDN), 2004.
[44] Richard Wang, Dana Butnariu, and Jennifer Rexford.
Openflow-based server load balancing gone wild.
Conference on Hot Topics in Management of Internet,
Cloud, and Enterprise Networks and Services, Hot-ICE’ 11.
[45] Sage A. Weil, Scott A. Brandt, et al., Ceph: A Scalable,
High-Performance Distributed File System. Symposium on
OS Design and Implementation (OSDD, 2006.

[46] Xiaozhou Li, Raghav Sethi, et al., Be fast, cheap and in
control with SwitchKV. Conference on Networked Systems
Design and Implementation (NSDIJ). 2016.