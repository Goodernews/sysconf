[1] D. Bailey, E. Barszcz, J. Barton, D. Browning,
R. Carter, L. Dagum, R. Fatoohi, P. Frederickson,
T. Lasinski, R. Schreiber, H. Simon,
V. Venkatakrishnan, and S. Weeratunga. The nas
parallel benchmarks. Int. J. High Perform. Comput.
Appl., 5(3):63–73, Sept. 1991.

[2] M. Becchi and P. Crowley. Dynamic thread assignment
on heterogeneous multiprocessor architectures. In
Proceedings of the 3rd Conference on Computing
Frontiers, CF ’06, pages 29–40. ACM, 2006.

[3] P. Bodik, R. Griﬃth, C. Sutton, A. Fox, M. I. Jordan,
and D. A. Patterson. Automatic exploration of
datacenter performance regimes. In Proceedings of the
1st Workshop on Automated Control for Datacenters
and Clouds, ACDC ’09, pages 1–6, New York, NY,
USA, 2009. ACM.

[4] J. M. Calandrino. On the design and implementation
of a cache-aware soft real-time scheduler for multicore
platforms. Chapel Hill, NC, USA, 2009. University of
North Carolina at Chapel Hill. AAI3366308.

[5] CryoPID. A Process Freezer for Linux.
http://cryopid.berlios.de/.

[6] A. Fedorova, S. Blagodurov, and S. Zhuravlev.
Managing contention for shared resources on multicore
processors. Commun. ACM, 53(2):49–57, 2010.

[7] A. Fedorova, D. Vengerov, and D. Doucette.
Operating system scheduling on heterogeneous core
systems. In Proceedings of the First Workshop on
Operating System Support for Heterogeneous Multicore
Architectures, 2007.

[8] D. Feitelson, L. Rudolph, and U. Schwiegelshohn.
Parallel job scheduling - a status report. In
D. Feitelson, L. Rudolph, and U. Schwiegelshohn,
editors, Job Scheduling Strategies for Parallel
Processing, volume 3277 of Lecture Notes in Computer
Science, pages 1–16. Springer Berlin Heidelberg, 2005.

[9] D. G. Feitelson. Job Scheduling in Multiprogrammed
Parallel Systems. Technical report, IBM Research
Report 19790, 1997.

[10] D. G. Feitelson and L. Rudolph. Gang scheduling
performance beneﬁts for ﬁne-grain synchronization.
Journal of Parallel and Distributed Computing,
16:306–318, 1992.

[11] A. D. Ferguson, P. Bodik, S. Kandula, E. Boutin, and
R. Fonseca. Jockey: Guaranteed job latency in data
parallel clusters. In Proceedings of the 7th ACM
European Conference on Computer Systems, EuroSys
’12, pages 99–112, New York, NY, USA, 2012. ACM.

[12] A.-H. Haritatos, G. Goumas, N. Anastopoulos,
K. Nikas, K. Kourtis, and N. Koziris. Lca: A memory
link and cache-aware co-scheduling approach for cmps.
In Proceedings of the 23rd International Conference on
Parallel Architectures and Compilation, PACT ’14,
pages 469–470, New York, NY, USA, 2014. ACM.

[13] W. Heirman, T. E. Carlson, K. V. Craeynest, I. Hur,
A. Jaleel, and L. Eeckhout. Undersubscribed
threading on clustered cache architectures. In 2014
IEEE 20th International Symposium on High
Performance Computer Architecture (HPCA), pages
678–689, Feb 2014.

[14] J. L. Henning. Spec cpu2006 benchmark descriptions.
SIGARCH Comput. Archit. News, 34:1–17, September
2006.

[15] B. Hindman, A. Konwinski, M. Zaharia, A. Ghodsi,

A. D. Joseph, R. Katz, S. Shenker, and I. Stoica.
Mesos: A platform for ﬁne-grained resource sharing in
the data center. In Proceedings of the 8th USENIX
Conference on Networked Systems Design and
Implementation, NSDI’11, pages 295–308, Berkeley,
CA, USA, 2011. USENIX Association.

[16] J. Howard, S. Dighe, Y. Hoskote, S. Vangal, D. Finan,
G. Ruhl, D. Jenkins, H. Wilson, N. Borkar, G. Schrom,
F. Pailet, S. Jain, T. Jacob, S. Yada, S. Marella,
P. Salihundam, V. Erraguntla, M. Konow, M. Riepen,
G. Droege, J. Lindemann, M. Gries, T. Apel,
K. Henriss, T. Lund-Larsen, S. Steibl, S. Borkar,
V. De, R. V. D. Wijngaart, and T. Mattson. A 48-core
ia-32 message-passing processor with dvfs in 45nm
cmos. In 2010 IEEE International Solid-State Circuits
Conference - (ISSCC), pages 108–109, Feb 2010.

[17] Intel. Single-chip Cloud Computer.
http://techresearch.intel.com/UserFiles/en-
us/File/terascale/SCC-Overview.pdf,
2009.

[18] N. Ioannou, M. Kauschke, M. Gries, and M. Cintra.
Phase-based application-driven hierarchical power
management on the single-chip cloud computer. In
Proceedings of the 2011 International Conference on
Parallel Architectures and Compilation Techniques,
PACT ’11, pages 131–142, Washington, DC, USA,
2011. IEEE Computer Society.

[19] A. Jaleel. Memory Characterization of Workloads
Using Instrumentation-Driven Simulation. Retrieved
from http://www.glue.umd.edu/ ajaleel/workload/.

[20] Y. Koh, R. Knauerhase, P. Brett, M. Bowman,
Z. Wen, and C. Pu. An analysis of performance
interference eﬀects in virtual environments. In
Performance Analysis of Systems Software, 2007.
ISPASS 2007. IEEE International Symposium on,
pages 200–209, April 2007.

[21] R. Kumar, D. M. Tullsen, P. Ranganathan, N. P.
Jouppi, and K. I. Farkas. Single-isa heterogeneous
multi-core architectures for multithreaded workload
performance. In Proceedings of the 31st Annual
International Symposium on Computer Architecture,
ISCA ’04, Washington, DC, USA, 2004. IEEE
Computer Society.

[22] T. Li, D. Baumberger, D. A. Koufaty, and S. Hahn.
Eﬃcient operating system scheduling for
performance-asymmetric multi-core architectures. In
Proceedings of the 2007 ACM/IEEE Conference on
Supercomputing, SC ’07, pages 1–11, New York, NY,
USA, 2007. ACM.

[23] G. Long, D. Fan, and J. Zhang. Characterizing and
understanding the bandwidth behavior of workloads
on multi-core processors. In Euro-Par ’09: Proceedings
of the 15th International Euro-Par Conference on
Parallel Processing, pages 110–121, Berlin, Heidelberg,
2009. Springer-Verlag.

[24] J. Mars, L. Tang, R. Hundt, K. Skadron, and M. L.
Soﬀa. Bubble-up: Increasing utilization in modern
warehouse scale computers via sensible co-locations. In
Proceedings of the 44th Annual IEEE/ACM
International Symposium on Microarchitecture,
MICRO-44, pages 248–259, New York, NY, USA,
2011. ACM.

[25] T. G. Mattson, M. Riepen, T. Lehnig, P. Brett, W. Haas, P. Kennedy, J. Howard, S. Vangal, N. Borkar, G. Ruhl, and S. Dighe. The 48-core scc processor: The programmer’s view. In Proceedings of the 2010 ACM/IEEE International Conference for High Performance Computing, Networking, Storage and Analysis, SC ’10, pages 1–11, Washington, DC, USA, 2010. IEEE Computer Society.

[26] M. Otoom, A. Jaleel, and P. Trancoso. Using personality metrics to improve cache interference management in multicore processors. In Proceedings of the 14th ACM international Conference on Computing Frontiers, CF ’17, pages 1–4, 2017.

[27] P. Petrides, F. Pratas, L. Sousa, and P. Trancoso. Exploiting location-aware task execution on future large-scale many-core architectures, Technical Report TR-12-4, University of Cyprus, Department of Computer Science, 2012.

[28] B. M. Rogers, A. Krishna, G. B. Bell, K. Vu, X. Jiang, and Y. Solihin. Scaling the bandwidth wall: Challenges in and avenues for cmp scaling. In Proceedings of the 36th Annual International Symposium on Computer Architecture, ISCA ’09, pages 371–382, New York, NY, USA, 2009. ACM.

[29] D. Shelepov and A. Fedorova. Scheduling on heterogeneous multicore processors using architectural signatures. In Proceedings of the Workshop on the Interaction between Operating Systems and Computer Architecture, pages 21–25, 2008.

[30] D. Shelepov, J. C. Saez Alcaide, S. Jeffery, A. Fedorova, N. Perez, Z. F. Huang, S. Blagodurov, and V. Kumar. Hass: A scheduler for heterogeneous multicore systems. SIGOPS Oper. Syst. Rev., 43(2):66–75, Apr. 2009.

[31] F. Sironi, D. Bartolini, S. Campanoni, F. Cancare, H. Hoffmann, D. Sciuto, and M. Santambrogio. Metronome: Operating system level performance management via self-adaptive computing. In Design Automation Conference (DAC), 2012 49th ACM/EDAC/IEEE, pages 856–865, June 2012.

[32] D. Tam, R. Azimi, and M. Stumm. Thread clustering: Sharing-aware scheduling on smp-cmp-smt multiprocessors. In Proceedings of the 2Nd ACM SIGOPS/EuroSys European Conference on Computer Systems 2007, EuroSys ’07, pages 47–58, New York, NY, USA, 2007. ACM.

[33] L. Tang, J. Mars, N. Vachharajani, R. Hundt, and M. L. Soffa. The impact of memory subsystem resource sharing on datacenter applications. In Proceedings of the 38th Annual International Symposium on Computer Architecture, ISCA ’11, pages 283–294, New York, NY, USA, 2011. ACM.

[34] Tilera. Tile-MX Multicore Processor. http://www.tilera.com.

[35] V. K. Vavilapalli, A. C. Murthy, C. Douglas, S. Agarwal, M. Konar, R. Evans, T. Graves, J. Lowe, H. Shah, S. Seth, B. Saha, C. Curino, O. O’Malley, S. Radia, B. Reed, and E. Baldeschwieler. Apache hadoop yarn: Yet another resource negotiator. In Proceedings of the 4th Annual Symposium on Cloud Computing, SOCC ’13, pages 5:1–5:16, New York, NY, USA, 2013. ACM.

[36] A. Verma, P. Ahuja, and A. Neogi. Power-aware dynamic placement of hpc applications. In Proceedings of the 22Nd Annual International Conference on Supercomputing, ICS ’08, pages 175–184, New York, NY, USA, 2008. ACM.

[37] R. West, P. Zaroo, C. A. Waldspurger, and X. Zhang. Online cache modeling for commodity multicore processors. SIGOPS Oper. Syst. Rev., 44(4):19–29, Dec. 2010.

[38] J. A. Winter, D. H. Albonesi, and C. A. Shoemaker. Scalable thread scheduling and global power management for heterogeneous many-core architectures. In Proceedings of the 19th International Conference on Parallel Architectures and Compilation Techniques, PACT ’10, pages 29–40, New York, NY, USA, 2010. ACM.

[39] X. Zhang, S. Dwarkadas, G. Folkmanis, and K. Shen. Processor hardware counter statistics as a first-class system resource. In Proceedings of the 11th USENIX Workshop on Hot Topics in Operating Systems, HOTOS’07, pages 14:1–14:6, Berkeley, CA, USA, 2007. USENIX Association.
