[1] K. Bergman, S. Borkar, D. Campbell et al., “Exascale computing study: Technology challenges in achieving exascale
systems,” DARPA IPTO, Tech. Rep, vol. 15, 2008.

[2] E. N. Elnozahy and J. S. Plank, “Checkpointing for peta-scale
systems: a look into the future of practical rollback-recovery,”
TDSC, vol. 1, no. 2, pp. 97-108, April 2004.

[3] J. F Bartlett, “A nonstop kernel,” in ACM SIGOPS Operating
Systems Review. ACM, 1981, pp. 22-29.

[4] B. Mills, T. Znati, R. Melhem, K. B. Ferreira, and R. E. Grant,
“Energy consumption of resilience mechanisms in large scale
systems,” in PDP’14. TEEE, pp. 528-535.

[5] B. Mills, “Power-aware resilience for exascale computing,”
Ph.D. dissertation, University of Pittsburgh, 2014.

[6] X. Cui et al., “Shadow replication: An energy-aware, faulttolerant computational model for green cloud computing,”
Energies, vol. 7, no. 8, pp. 5151-5176, 2014.

[7] X. Cui, T. Znati, and R. Melhem, “Adaptive and poweraware resilience for extreme-scale computing,” in Scalcom’16, Toulouse, France, July 18-21 2016.

[8] K. M. Chandy and L. Lamport, “Distributed snapshots: Determining global states of distributed systems,” ACM Trans.
Comput. Syst., vol. 3, no. 1, pp. 63-75, Feb. 1985.

[9] R. E. Strom ef al., “Optimistic recovery in distributed systems,” ACM Trans. Comput. Syst., vol. 3, pp. 204-226, 1985.

[10] A. Gainaru, F. Cappello, M. Snir, and W. Kramer, “Fault
prediction under the microscope: A closer look into HPC
systems,” in SC’12, pp. 77:1-77:11.

[11] K. Ferreira, J. Stearley, J. H. Laros, R. Oldfield et al,
“Evaluating the viability of process replication reliability for
exascale systems,” in SC’11, pp. 44:1-44:12.

[12] P. Hargrove and J. Duell, “Berkeley lab checkpoint/restart
(bier) for linux clusters,” in Journal of Physics: Conference
Series, vol. 46, no. 1, 2006, p. 494.

[13] A. Guermouche et al., “Uncoordinated checkpointing without
domino effect for send-deterministic MPI applications,” in
IPDPS, May 2011, pp. 989-1000.

[14] E. Elnozahy, L. Alvisi et al., “A survey of rollback-recovery
protocols in message-passing systems,’ ACM Computing Surveys, vol. 34, no. 3, pp. 375-408, 2002.

[15] S. Gao, B. He, and J. Xu, “Real-time in-memory checkpointing for future hybrid memory systems,” in International
Conference on Supercomputing. ACM, 2015, pp. 263-272.

[16] S. Agarwal et al., “Adaptive incremental checkpointing for
massively parallel systems,” in JCS 04, St. Malo, France.

[17] G. Zheng, L. Shi, and L. V. Kalé, “FTC-Charm++: an inmemory checkpoint-based fault tolerant runtime for Charm++
and MPI,” in Cluster Computing. EEE, 2004, pp. 93-103.

[18] A. Moody, G. Bronevetsky, K. Mohror, and B. Supinski,
“Design, modeling, and evaluation of a scalable multi-level
checkpointing system,” in SC’/0, pp. 1-11.

[19] R. Riesen, K. Ferreira, J. Stearley, R. Oldfield et al., “Redundant computing for exascale systems,’ Sandia National
Laboratories, Tech, Rep., 2010.

[20] F. Cappello, “Fault tolerance in petascale/ exascale systems:
Current knowledge, challenges and research opportunities,”
IJHPCA, vol. 23, no. 3, pp. 212-226, 2009.

[21] C. Engelmann and S. Bohm, “Redundant execution of HPC
applications with MR-MPI,” in PDCN, 2011, pp. 15-17.

[22] J. Elliott et al., “Combining partial redundancy and checkpointing for HPC,” in ICDCS ’12, Washington, DC, US.

[23] X. Ni, E. Meneses, N. Jain, and L. V. Kalé, “ACR: Automatic
checkpoint/restart for soft and hard error protection,” in
SC’13. New York, NY, USA: ACM, pp. 7:1-7:12.

[24] D. Fiala, KF Mueller, C. Engelmann ef al., “Detection and
correction of silent data corruption for large-scale highperformance computing,” in SC’12, Los Alamitos, CA, USA.

[25] R. D. Schlichting and F. B. Schneider, “Fail-stop processors:
An approach to designing fault-tolerant computing systems,”
ACM Trans. Comput. Syst., vol. 1, no. 3, pp. 222-238, 1983.

[26] S. Eyerman and L. Eeckhout, “Fine-grained DVFS using onchip regulators,” ACM Trans. Archit. Code Optim., vol. 8,
no. 1, pp. 1:1-1:24, Feb. 2011.

[27] A. Beguelin et al, “Application level fault tolerance in
heterogeneous networks of workstations,” Journal of Parallel
and Distributed Computing, vol. 43, pp. 147-155, 1997.

[28] G. Bronevetsky, D. Marques et al., “Compiler-enhanced.
incremental checkpointing for OpenMP applications,’ in
IPDPS, May 2009, pp. 1-12.