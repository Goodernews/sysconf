[1] 2017. A timing channel in Jetty. https://github.com/eclipse/jetty.project/commit/
2baa1abe4b1c380a30deacca1ed367466a1a62ea. (2017).
[2] Onur Aciiçmez, Çetin Kaya Koç, and Jean-Pierre Seifert. 2007. On the Power of
Simple Branch Prediction Analysis. In Proceedings of the 2Nd ACM Symposium
on Information, Computer and Communications Security (ASIACCS ’07). ACM,
312–320.
[3] Onur Aciiçmez and Werner Schindler. 2008. A Vulnerability in RSA Implementations Due to Instruction Cache Analysis and Its Demonstration on OpenSSL.
In Proceedings of the 2008 The Cryptopgraphers’ Track at the RSA Conference on
Topics in Cryptology (CT-RSA’08). Springer-Verlag, 256–273.
[4] Elvira Albert, Jesús Correas Fernández, and Guillermo Román-Díez. 2015. Noncumulative Resource Analysis. In Proceedings of the 21st International Conference
on Tools and Algorithms for the Construction and Analysis of Systems - Volume
9035. Springer-Verlag New York, Inc., 85–100.
[5] Nadhem J. AlFardan and Kenneth G. Paterson. 2013. Lucky Thirteen: Breaking
the TLS and DTLS Record Protocols. In 2013 IEEE Symposium on Security and
Privacy, SP 2013, Berkeley, CA, USA, May 19-22, 2013. 526–540.
[6] José Bacelar Almeida, Manuel Barbosa, Gilles Barthe, François Dupressoir, and
Michael Emmi. 2016. Verifying Constant-Time Implementations. In 25th USENIX
Security Symposium, USENIX Security 16, Austin, TX, USA, August 10-12, 2016.
53–70.
[7] Diego Esteban Alonso-Blas and Samir Genaim. 2012. On the Limits of the Classical
Approach to Cost Analysis. In Proceedings of the 19th International Conference on
Static Analysis (SAS’12). Springer-Verlag, 405–421.
[8] Timos Antonopoulos, Paul Gazzillo, Michael Hicks, Eric Koskinen, Tachio Terauchi, and Shiyi Wei. 2017. Decomposition Instead of Self-Composition for
k-Safety. In Proceedings of the ACM Conference on Programming Language Design
and Implementation (PLDI).
[9] Steven Arzt, Siegfried Rasthofer, Christian Fritz, Eric Bodden, Alexandre Bartel,
Jacques Klein, Yves Le Traon, Damien Octeau, and Patrick D. McDaniel. 2014.
FlowDroid: precise context, flow, field, object-sensitive and lifecycle-aware taint
analysis for Android apps. In ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI ’14, Edinburgh, United Kingdom - June 09
- 11, 2014. 259–269.
[10] Lucas Bang, Abdulbaki Aydin, Quoc-Sang Phan, Corina S. Păsăreanu, and Tevfik
Bultan. 2016. String Analysis for Side Channels with Segmented Oracles. In Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations
of Software Engineering (FSE 2016). ACM, 193–204.
[11] Gilles Barthe, Gustavo Betarte, Juan Campo, Carlos Luna, and David Pichardie.
2014. System-level Non-interference for Constant-time Cryptography. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications
Security (CCS ’14). ACM, 1267–1279.
[12] Gilles Barthe, Juan Manuel Crespo, and César Kunz. 2011. Relational Verification Using Product Programs. In FM 2011: Formal Methods - 17th International
Symposium on Formal Methods, Limerick, Ireland, June 20-24, 2011. Proceedings.
200–214.
[13] Gilles Barthe, Juan Manuel Crespo, and César Kunz. 2013. Beyond 2-Safety:
Asymmetric Product Programs for Relational Program Verification. In Logical
Foundations of Computer Science, International Symposium, LFCS 2013, San Diego,
CA, USA, January 6-8, 2013. Proceedings, Sergei N. Artëmov and Anil Nerode
(Eds.), Vol. 7734. Springer, 29–43.
[14] Gilles Barthe, Pedro R D’Argenio, and Tamara Rezk. 2004. Secure information
flow by self-composition. In Computer Security Foundations Workshop, 2004. Proceedings. 17th IEEE. IEEE, 100–114.

[15] Nick Benton. 2004. Simple relational correctness proofs for static analyses and
program transformations. In ACM SIGPLAN Notices, Vol. 39. ACM, 14–25.
[16] Eric Bodden, Andreas Sewe, Jan Sinschek, Hela Oueslati, and Mira Mezini. 2011.
Taming reflection: Aiding static analysis in the presence of reflection and custom
class loaders. In Proceedings of the 33rd International Conference on Software
Engineering, ICSE 2011, Waikiki, Honolulu , HI, USA, May 21-28, 2011. 241–250.
[17] Andrew Bortz and Dan Boneh. 2007. Exposing Private Information by Timing
Web Applications. In World Wide Web. ACM, 621–628.
[18] Marc Brockschmidt, Fabian Emmes, Stephan Falke, Carsten Fuhs, and Jürgen
Giesl. 2016. Analyzing Runtime and Size Complexity of Integer Programs. ACM
Trans. Program. Lang. Syst. 38, 4, Article 13 (Aug. 2016), 50 pages.
[19] David Brumley and Dan Boneh. 2003. Remote Timing Attacks Are Practical.
In Proceedings of the 12th USENIX Security Symposium, Washington, D.C., USA,
August 4-8, 2003.
[20] Quentin Carbonneaux, Jan Hoffmann, and Zhong Shao. 2015. Compositional
Certified Resource Bounds. In Proceedings of the 36th ACM SIGPLAN Conference
on Programming Language Design and Implementation (PLDI ’15). ACM, 467–478.
[21] Ezgi Çiçek, Gilles Barthe, Marco Gaboardi, Deepak Garg, and Jan Hoffmann. 2017.
Relational Cost Analysis. In Proceedings of the 44th ACM SIGPLAN Symposium
on Principles of Programming Languages (POPL 2017). ACM, 316–329.
[22] Shuo Chen, Rui Wang, XiaoFeng Wang, and Kehuan Zhang. 2010. Side-Channel
Leaks in Web Applications: A Reality Today, a Challenge Tomorrow. In 31st IEEE
Symposium on Security and Privacy, S&P 2010, 16-19 May 2010, Berleley/Oakland,
California, USA. 191–206.
[23] Sujit Rokka Chhetri and Mohammad Abdullah Al Faruque. 2017. Side-Channels
of Cyber-Physical Systems: Case Study in Additive Manufacturing. IEEE Design
& Test (2017).
[24] Leonardo De Moura and Nikolaj Bjørner. 2008. Z3: An efficient SMT solver.
In Tools and Algorithms for the Construction and Analysis of Systems. Springer,
337–340.
[25] Guillaume Dufay, Amy Felty, and Stan Matwin. 2005. Privacy-sensitive Information Flow with JML. In Proceedings of the 20th International Conference on
Automated Deduction (CADE’ 20). Springer-Verlag, 116–130.
[26] Edward W. Felten and Michael A. Schneider. 2000. Timing attacks on Web
privacy. In CCS 2000, Proceedings of the 7th ACM Conference on Computer and
Communications Security, Athens, Greece, November 1-4, 2000. 25–32.
[27] Cormac Flanagan and K. Rustan M. Leino. 2001. Houdini, an Annotation Assistant
for ESC/Java. In Proceedings of the International Symposium of Formal Methods
Europe on Formal Methods for Increasing Software Productivity (FME ’01). SpringerVerlag, 500–517.
[28] Cormac Flanagan, K. Rustan M. Leino, Mark Lillibridge, Greg Nelson, James B.
Saxe, and Raymie Stata. 2002. Extended Static Checking for Java. In Proceedings
of the ACM SIGPLAN 2002 Conference on Programming Language Design and
Implementation (PLDI ’02). ACM, New York, NY, USA, 234–245.
[29] Antonio Flores-Montoya and Reiner Hähnle. 2014. Resource Analysis of Complex
Programs with Cost Equations. Springer International Publishing, Cham, 275–295.
[30] Riccardo Focardi and Roberto Gorrieri. 1995. A Classification of Security Properties for Process Algebras1. Journal of Computer security 3, 1 (1995), 5–33.
[31] Karine Gandolfi, Christophe Mourtel, and Francis Olivier. 2001. Electromagnetic
Analysis: Concrete Results. In Proceedings of the Third International Workshop
on Cryptographic Hardware and Embedded Systems (CHES ’01). Springer-Verlag,
251–261.
[32] Nethanel Gelernter and Amir Herzberg. 2015. Cross-Site Search Attacks. In
Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications
Security. ACM, 1394–1405.
[33] Daniel Genkin, Itamar Pipman, and Eran Tromer. 2014. Get Your Hands Off My
Laptop: Physical Side-Channel Key-Extraction Attacks on PCs. In Cryptographic
Hardware and Embedded Systems - CHES 2014 - 16th International Workshop,
Busan, South Korea, September 23-26, 2014. Proceedings. 242–260.
[34] Jan Goguen and Meseguer Jose. 1982. Security policies and security models. In
Symposium on Security and Privacy. IEEE Computer Society Press, 11–20.
[35] James W Gray III. 1992. Toward a mathematical foundation for information flow
security. Journal of Computer Security 1, 3-4 (1992), 255–294.
[36] David Gullasch, Endre Bangerter, and Stephan Krenn. 2011. Cache Games Bringing Access-Based Cache Attacks on AES to Practice. In 32nd IEEE Symposium
on Security and Privacy, S&P 2011, 22-25 May 2011, Berkeley, California, USA. 490–
505.
[37] Sumit Gulwani, Krishna K. Mehra, and Trishul Chilimbi. 2009. SPEED: Precise
and Efficient Static Estimation of Program Computational Complexity. In Proceedings of the 36th Annual ACM SIGPLAN-SIGACT Symposium on Principles of
Programming Languages (POPL ’09). ACM, 127–139.
[38] Andreas Haeberlen, Benjamin C. Pierce, and Arjun Narayan. 2011. Differential
Privacy Under Fire. In 20th USENIX Security Symposium, San Francisco, CA, USA,
August 8-12, 2011, Proceedings.
[39] Jan Hoffmann, Klaus Aehlig, and Martin Hofmann. 2012. Multivariate Amortized
Resource Analysis. ACM Trans. Program. Lang. Syst. 34, 3, Article 14 (Nov. 2012),
62 pages.

[40] Jan Hoffmann, Ankush Das, and Shu-Chun Weng. 2017. Towards Automatic
Resource Bound Analysis for OCaml. In Proceedings of the 44th ACM SIGPLAN
Symposium on Principles of Programming Languages (POPL 2017). ACM, 359–373.
[41] Jan Hoffmann and Martin Hofmann. 2010. Amortized Resource Analysis with
Polynomial Potential: A Static Inference of Polynomial Bounds for Functional Programs. In Proceedings of the 19th European Conference on Programming Languages
and Systems (ESOP’10). Springer-Verlag, 287–306.
[42] Jan Hoffmann and Zhong Shao. 2014. Type-Based Amortized Resource Analysis
with Integers and Arrays. Springer International Publishing, 152–168.
[43] Martin Hofmann and Steffen Jost. 2003. Static Prediction of Heap Space Usage
for First-order Functional Programs. In Proceedings of the 30th ACM SIGPLANSIGACT Symposium on Principles of Programming Languages (POPL ’03). ACM,
185–197.
[44] Bertrand Jeannet and Antoine Miné. 2009. Apron: A Library of Numerical
Abstract Domains for Static Analysis. In Proceedings of the 21st International
Conference on Computer Aided Verification (CAV ’09). Springer-Verlag, 661–667.
[45] Paul Kocher. 1996. Timing attacks on implementations of Diffie-Hellman, RSA,
DSS, and other systems. In Advances in CryptologyâĂŤCRYPTOâĂŹ96. Springer,
104–113.
[46] Paul C. Kocher. 1996. Timing Attacks on Implementations of Diffie-Hellman, RSA,
DSS, and Other Systems. In CRYPTO ’96, 16th Annual International Cryptology
Conference, Santa Barbara, California, USA, August 18-22, 1996, Proceedings. 104–
113.
[47] Shuvendu K. Lahiri and Shaz Qadeer. 2009. Complexity and Algorithms for Monomial and Clausal Predicate Abstraction. In Proceedings of the 22Nd International
Conference on Automated Deduction (CADE-22). Springer-Verlag, 214–229.
[48] Chang Liu, Austin Harris, Martin Maas, Michael Hicks, Mohit Tiwari, and Elaine
Shi. 2015. GhostRider: A Hardware-Software System for Memory Trace Oblivious Computation. In Proceedings of the Twentieth International Conference on
Architectural Support for Programming Languages and Operating Systems (ASPLOS
’15). ACM, 87–101.
[49] Robert Martin, John Demme, and Simha Sethumadhavan. 2012. TimeWarp:
Rethinking Timekeeping and Performance Monitoring Mechanisms to Mitigate
Side-channel Attacks. In Proceedings of the 39th Annual International Symposium
on Computer Architecture (ISCA ’12). IEEE Computer Society, 118–129.
[50] David Molnar, Matt Piotrowski, David Schultz, and David Wagner. 2006. The
Program Counter Security Model: Automatic Detection and Removal of Controlflow Side Channel Attacks. In Proceedings of the 8th International Conference on
Information Security and Cryptology (ICISC’05). Springer-Verlag, 156–168.
[51] Andrew C Myers, Lantian Zheng, Steve Zdancewic, Stephen Chong, and
Nathaniel Nystrom. 2001. Jif: Java information flow. Software release. Located at
http://www. cs. cornell. edu/jif 2005 (2001).
[52] David A. Naumann. 2006. From Coupling Relations to Mated Invariants for Checking Information Flow. Springer Berlin Heidelberg, 279–296.
[53] Van Chan Ngo, Mario Dehesa-Azuara, Matthew Fredrikson, and Jan Hoffmann.
2017. Verifying and Synthesizing Constant-Resource Implementations with
Types. In 38st IEEE Symposium on Security and Privacy, S&P.
[54] Corina Pasareanu, Quoc-Sang Phan, and Pasquale Malacaria. 2016. Multi-Run
Side-Channel Analysis Using Symbolic Execution and Max-SMT. In Computer
Security Foundations Symposium. IEEE.
[55] Corina S. Pasareanu, Quoc-Sang Phan, and Pasquale Malacaria. 2016. Multi-run
Side-Channel Analysis Using Symbolic Execution and Max-SMT. In IEEE 29th
Computer Security Foundations Symposium, CSF 2016, Lisbon, Portugal, June 27 July 1, 2016. 387–400.
[56] François Pottier and Vincent Simonet. 2003. Information Flow Inference for ML.
ACM Trans. Program. Lang. Syst. 25, 1 (Jan. 2003), 117–158.
[57] Ashay Rane, Calvin Lin, and Mohit Tiwari. 2015. Raccoon: Closing Digital SideChannels through Obfuscated Execution. In 24th USENIX Security Symposium
(USENIX Security 15). USENIX Association, Washington, D.C., 431–446.
[58] Ashay Rane, Calvin Lin, and Mohit Tiwari. 2016. Secure, Precise, and Fast FloatingPoint Operations on x86 Processors. In 25th USENIX Security Symposium (USENIX
Security 16). USENIX Association, Austin, TX, 71–86.
[59] Bruno Rodrigues, Fernando Magno Quintão Pereira, and Diego F. Aranha. 2016.
Sparse Representation of Implicit Flows with Applications to Side-channel Detection. In Proceedings of the 25th International Conference on Compiler Construction
(CC 2016). ACM, 110–120.
[60] Andrei Sabelfeld and Andrew C Myers. 2003. Language-based information-flow
security. IEEE Journal on selected areas in communications 21, 1 (2003), 5–19.
[61] Rahul Sharma, Saurabh Gupta, Bharath Hariharan, Alex Aiken, Percy Liang, and
Aditya V. Nori. 2013. A Data Driven Approach for Algebraic Loop Invariants.
In Proceedings of the 22Nd European Conference on Programming Languages and
Systems (ESOP’13). Springer-Verlag, 574–592.
[62] Reza Shokri and Vitaly Shmatikov. 2015. Privacy-Preserving Deep Learning. In
Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications
Security, Denver, CO, USA, October 12-6, 2015. 1310–1321.
[63] Moritz Sinn, Florian Zuleger, and Helmut Veith. 2014. A Simple and Scalable
Static Analysis for Bound Analysis and Amortized Complexity Analysis. Springer

International Publishing, 745–761.
[64] Moritz Sinn, Florian Zuleger, and Helmut Veith. 2017. Complexity and Resource
Bound Analysis of Imperative Programs Using Difference Constraints. Journal
of Automated Reasoning (2017), 1–43.
[65] Marcelo Sousa and Isil Dillig. 2016. Cartesian Hoare Logic for Verifying K-safety
Properties. In Proceedings of the 37th ACM SIGPLAN Conference on Programming
Language Design and Implementation (PLDI ’16). ACM, New York, NY, USA,
57–69.
[66] Tachio Terauchi and Alexander Aiken. 2005. Secure Information Flow as a Safety
Problem. In Static Analysis, 12th International Symposium, SAS 2005, London, UK,
September 7-9, 2005, Proceedings. 352–367.
[67] Raja Vallée-Rai, Phong Co, Etienne Gagnon, Laurie Hendren, Patrick Lam, and
Vijay Sundaresan. 1999. Soot - a Java Bytecode Optimization Framework. In Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative
Research (CASCON ’99). IBM Press, 13–.
[68] Serge Vaudenay. 2002. Security Flaws Induced by CBC Padding - Applications
to SSL, IPSEC, WTLS .... In Advances in Cryptology - EUROCRYPT 2002, International Conference on the Theory and Applications of Cryptographic Techniques,
Amsterdam, The Netherlands, April 28 - May 2, 2002, Proceedings. 534–546.
[69] Jean Yang, Kuat Yessenov, and Armando Solar-Lezama. 2012. A language for
automatically enforcing privacy policies. In ACM SIGPLAN Notices, Vol. 47. ACM,
85–96.
[70] Yuval Yarom, Daniel Genkin, and Nadia Heninger. 2016. CacheBleed: A Timing
Attack on OpenSSL Constant Time RSA. Springer Berlin Heidelberg, 346–367.
[71] Anna Zaks and Amir Pnueli. 2008. CoVaC: Compiler Validation by Program
Analysis of the Cross-Product. In Proceedings of the 15th International Symposium
on Formal Methods (FM ’08). Springer-Verlag, Berlin, Heidelberg, 35–51.
[72] Danfeng Zhang, Aslan Askarov, and Andrew C. Myers. 2012. Language-based
Control and Mitigation of Timing Channels. In Proceedings of the 33rd ACM
SIGPLAN Conference on Programming Language Design and Implementation (PLDI
’12). ACM, 99–110.
[73] Kehuan Zhang, Zhou Li, Rui Wang, XiaoFeng Wang, and Shuo Chen. 2010. Sidebuster: Automated Detection and Quantification of Side-channel Leaks in Web
Application Development. In Computer and Communications Security. ACM, 595–
606.
[74] Florian Zuleger, Sumit Gulwani, Moritz Sinn, and Helmut Veith. 2011. Bound
Analysis of Imperative Programs with the Size-change Abstraction. In Proceedings
of the 18th International Conference on Static Analysis (SAS’11). Springer-Verlag,
280–297.

