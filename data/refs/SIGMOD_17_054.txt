
[1] A. Adya, R. Gruber, B. Liskov, and U. Maheshwari. Efﬁcient

optimistic concurrency control using loosely synchronized clocks. In
Proceedings of the 1995 ACM SIGMOD International Conference on
Management of Data, 1995.

[2] A. Belay, G. Prekas, A. Klimovic, S. Grossman, C. Kozyrakis, and

E. Bugnion. IX: A protected dataplane operating system for high
throughput and low latency. In 11th USENIX Symposium on
Operating Systems Design and Implementation (OSDI 14), 2014.

[3] P. A. Bernstein and N. Goodman. Concurrency control in distributed

database systems. ACM Computing Surveys, 13(2), June 1981.

[4] S. Boyd-Wickizer. Optimizing Communication Bottlenecks in

Multiprocessor Operating System Kernels. PhD thesis, Massachusetts
Institute of Technology, 2013.

[5] M. J. Cahill, U. Röhm, and A. D. Fekete. Serializable isolation for

snapshot databases. In Proceedings of the 2008 ACM SIGMOD
International Conference on Management of Data, 2008.

[6] M. J. Carey and M. Stonebraker. The performance of concurrency

control algorithms for database management systems. In Proceedings
of the 10th International Conference on Very Large Data Bases, 1984.

[7] J. Coburn, T. Bunker, M. Schwarz, R. Gupta, and S. Swanson. From
ARIES to MARS: Transaction support for next-generation, solid-state
drives. In Proc. 24th ACM Symposium on Operating Systems
Principles (SOSP), Farmington, PA, Nov. 2013.

[8] B. Cooper, A. Silberstein, E. Tam, R. Ramakrishnan, and R. Sears.

Benchmarking cloud serving systems with YCSB. In Proc. 1st ACM
Symposium on Cloud Computing (SOCC), Indianapolis, IN, June
2010.

[9] J. C. Corbett, J. Dean, M. Epstein, A. Fikes, C. Frost, J. Furman,

S. Ghemawat, A. Gubarev, C. Heiser, P. Hochschild, W. Hsieh,
S. Kanthak, E. Kogan, H. Li, A. Lloyd, S. Melnik, D. Mwaura,
D. Nagle, S. Quinlan, R. Rao, L. Rolig, Y. Saito, M. Szymaniak,
C. Taylor, R. Wang, and D. Woodford. Spanner: Google’s
globally-distributed database. In Proc. 10th USENIX OSDI. USENIX,
2012.

[10] T. David, R. Guerraoui, and V. Trigonakis. Everything you always

wanted to know about synchronization but were afraid to ask. In
Proceedings of the Twenty-Fourth ACM Symposium on Operating
Systems Principles (SOSP), 2013.

[11] DBx1000: A single node OLTP database management system.

https://github.com/yxymit/DBx1000, 2016.

[12] C. Diaconu, C. Freedman, E. Ismert, P.-A. Larson, P. Mittal,

R. Stonecipher, N. Verma, and M. Zwilling. Hekaton: SQL Server’s
memory-optimized OLTP engine. In Proceedings of the 2013 ACM
SIGMOD International Conference on Management of Data, 2013.

[13] A. Dragojevi´c, D. Narayanan, E. B. Nightingale, M. Renzelmann,

A. Shamis, A. Badam, and M. Castro. No compromises: Distributed
transactions with consistency, availability, and performance. In Proc.
25th ACM Symposium on Operating Systems Principles (SOSP),
Monterey, CA, Oct. 2015.

[14] ERMIA: CC for modern main-memory OLTP systems.

https://github.com/ermia-db/ermia, 2016.

[15] K. P. Eswaran, J. N. Gray, R. A. Lorie, and I. L. Traiger. The notions

of consistency and predicate locks in a database system.
Communications of the ACM, 19(11), Nov. 1976.

[16] J. M. Faleiro and D. J. Abadi. Rethinking serializable multiversion

concurrency control. Proc. VLDB Endowment, 8(11), July 2015.

[17] FOEDUS: Fast optimistic engine for data uniﬁcation services.

https://github.com/hkimura/foedus_code, 2016.

[18] K. Fraser. Practical Lock-Freedom. PhD thesis, University of

Cambridge, 2003.

[19] D. K. Gifford. Information storage in a decentralized computer system.
Technical Report CSL-81-8, Xerox Palo Alto Research Centers, 1983.

[20] R. Guerraoui and M. Kapalka. On the correctness of transactional

memory. In Proceedings of the 13th ACM SIGPLAN Symposium on
Principles and Practice of Parallel Programming, 2008.

[21] T. E. Hart. Comparative Performance of Memory Reclamation

Strategies for Lock-Free and Concurrently-Readable Data Structures.
PhD thesis, University of Toronto, 2005.

[22] P. Helland, H. Sammer, J. Lyon, R. Carr, P. Garrett, and A. Reuter.

Group commit timers and high volume transaction systems. In
Proceedings of the 2nd International Workshop on High Performance
Transaction Systems, 1989.

[23] M. Herlihy and J. E. B. Moss. Transactional memory: Architectural

support for lock-free data structures. In Proceedings of the 20th
Annual International Symposium on Computer Architecture, 1993.

[24] N. Herman, J. P. Inala, Y. Huang, L. Tsai, E. Kohler, B. Liskov, and

L. Shrira. Type-aware transactions for faster concurrent code. In
Proceedings of the Eleventh European Conference on Computer
Systems (EuroSys), 2016.

[25] J. Huang, K. Schwan, and M. K. Qureshi. NVRAM-aware logging in

transaction systems. Proc. VLDB Endowment, 8(4), Dec. 2014.

[26] Intel 64 and IA-32 Architectures Developer’s Manual: Vol. 2B. http:
//www.intel.com/content/dam/www/public/us/en/documents/manuals
/64-ia-32-architectures-software-developer-vol-2b-manual.pdf, 2016.

[27] Intel Xeon Processor E5-2600 v4 Product Family.

http://www.intel.com/content/dam/www/public/us/en/documents/pro
duct-briefs/xeon-e5-brief.pdf, 2016.

[28] E. Jeong, S. Wood, M. Jamshed, H. Jeong, S. Ihm, D. Han, and

K. Park. mTCP: A highly scalable user-level TCP stack for multicore
systems. In 11th USENIX Symposium on Networked Systems Design
and Implementation (NSDI 14), 2014.

[29] R. Kallman, H. Kimura, J. Natkins, A. Pavlo, A. Rasin, S. Zdonik,
E. P. C. Jones, S. Madden, M. Stonebraker, Y. Zhang, J. Hugg, and
D. J. Abadi. H-Store: A high-performance, distributed main memory
transaction processing system. Proc. VLDB Endowment, 1(2), Aug.
2008.

[30] A. Kemper and T. Neumann. HyPer: A hybrid OLTP&OLAP main

memory database system based on virtual memory snapshots. In
Proceedings of the 2011 IEEE 27th International Conference on Data
Engineering, 2011.

[31] K. Kim, T. Wang, R. Johnson, and I. Pandis. ERMIA: Fast

memory-optimized database system for heterogeneous workloads. In
Proceedings of the 2016 ACM SIGMOD International Conference on
Management of Data, 2016.

[32] H. Kimura. FOEDUS: OLTP engine for a thousand cores and

NVRAM. In Proceedings of the 2015 ACM SIGMOD International
Conference on Management of Data, 2015.

[33] H. T. Kung and J. T. Robinson. On optimistic methods for concurrency

control. ACM Trans. Database Syst., 6(2):213–226, June 1981.

[34] M.-Y. Lai and W. K. Wilkinson. Distributed transaction management
in JASMIN. In Proceedings of the 10th International Conference on
Very Large Data Bases, 1984.

[35] P.-A. Larson, S. Blanas, C. Diaconu, C. Freedman, J. M. Patel, and

M. Zwilling. High-performance concurrency control mechanisms for
main-memory databases. Proc. VLDB Endowment, 5(4), Dec. 2011.

[36] P. L. Lehman and S. B. Yao. Efﬁcient locking for concurrent

operations on B-trees. ACM Transactions on Database Systems,
6(4):650–670, Dec. 1981.

[37] V. Leis, A. Kemper, and T. Neumann. Exploiting hardware

transactional memory in main-memory databases. In 2014 IEEE 30th
International Conference on Data Engineering, 2014.

[38] J. Levandoski, D. Lomet, S. Sengupta, R. Stutsman, and R. Wang.

High performance transactions in Deuteronomy. Conference on
Innovative Data Systems Research (CIDR 2015), 2015.

[39] J. Levandoski, D. Lomet, S. Sengupta, R. Stutsman, and R. Wang.

Multi-version range concurrency control in Deuteronomy. Proc.
VLDB Endowment, 8(13), Sept. 2015.

[40] B. Liskov. Practical uses of synchronized clocks in distributed

systems. In Proceedings of the Tenth Annual ACM Symposium on
Principles of Distributed Computing, 1991.

[52] Silo: Multicore in-memory storage engine.

https://github.com/stephentu/silo, 2013.

[53] Telecommunication application transaction processing (TATP)

benchmark. http://tatpbenchmark.sourceforge.net/, 2011.

[54] TPC benchmark C. http://www.tpc.org/tpcc/, 2010.

[55] S. Tu, W. Zheng, E. Kohler, B. Liskov, and S. Madden. Speedy

transactions in multicore in-memory databases. In Proc. 24th ACM
Symposium on Operating Systems Principles (SOSP), Farmington, PA,
Nov. 2013.

[56] VoltDB, the NewSQL database for high velocity applications.

https://voltdb.com/, 2016.

[41] Y. Mao, E. Kohler, and R. T. Morris. Cache craftiness for fast

multicore key-value storage. In Proc. 7th ACM European Conference
on Computer Systems (EuroSys), Bern, Switzerland, Apr. 2012.

[57] T. Wang and H. Kimura. Mostly-optimistic concurrency control for

highly contended dynamic workloads on a thousand cores. Proc.
VLDB Endowment, 10(2), Oct. 2016.

[42] M. M. Michael. Safe memory reclamation for dynamic lock-free

objects using atomic reads and writes. In Proceedings of the
Twenty-ﬁrst Annual Symposium on Principles of Distributed
Computing, 2002.

[43] N. Narula, C. Cutler, E. Kohler, and R. Morris. Phase reconciliation

for contended in-memory transactions. In Proceedings of the 11th
USENIX Conference on Operating Systems Design and
Implementation (OSDI), 2014.

[44] T. Neumann, T. Mühlbauer, and A. Kemper. Fast serializable

multi-version concurrency control for main-memory database systems.
In Proceedings of the 2015 ACM SIGMOD International Conference
on Management of Data, 2015.

[45] C. U. Orji, L. Lilien, and J. Hyziak. A performance analysis of an

optimistic and a basic timestamp-ordering concurrency control
algorithms for centralized database systems. In Proceedings of the 4th
International Conference on Data Engineering, Feb. 1988.

[46] S. Peter, J. Li, I. Zhang, D. R. K. Ports, D. Woos, A. Krishnamurthy,

T. Anderson, and T. Roscoe. Arrakis: The operating system is the
control plane. In 11th USENIX Symposium on Operating Systems
Design and Implementation (OSDI 14), 2014.

[47] K. Petersen, M. J. Spreitzer, D. B. Terry, M. M. Theimer, and A. J.

Demers. Flexible update propagation for weakly consistent replication.
In Proc. 16th ACM Symposium on Operating Systems Principles
(SOSP), Saint-Malô, France, Oct. 1997.

[48] D. R. K. Ports and K. Grittner. Serializable snapshot isolation in

PostgreSQL. Proc. VLDB Endowment, 5(12), Aug. 2012.

[49] K. Ren, T. Diamond, D. J. Abadi, and A. Thomson. Low-overhead
asynchronous checkpointing in main-memory database systems. In
Proceedings of the 2016 ACM SIGMOD International Conference on
Management of Data, 2016.

[50] K. Ren, J. M. Faleiro, and D. J. Abadi. Design principles for scaling
multi-core OLTP under high contention. In Proceedings of the 2016
ACM SIGMOD International Conference on Management of Data,
2016.

[51] N. Shavit and D. Touitou. Software transactional memory. In

Proceedings of the Fourteenth Annual ACM Symposium on Principles
of Distributed Computing, 1995.

[58] Z. Wang, Y. Cui, H. Yi, S. Mu, H. Chen, and J. Li. Unleashing
parallelism in multi-core databases via dependency tracking. In
Proceedings of the 2016 ACM SIGMOD International Conference on
Management of Data, 2016.

[59] Z. Wang, H. Qian, J. Li, and H. Chen. Using restricted transactional
memory to build a scalable in-memory database. In Proceedings of the
Ninth European Conference on Computer Systems (EuroSys), 2014.

[60] X. Wei, J. Shi, Y. Chen, R. Chen, and H. Chen. Fast in-memory

transaction processing using RDMA and HTM. In Proc. 25th ACM
Symposium on Operating Systems Principles (SOSP), Monterey, CA,
Oct. 2015.

[61] Y. Wu and K.-L. Tan. Scalable in-memory transaction processing with
HTM. In 2016 USENIX Annual Technical Conference (USENIX ATC
16), June 2016.

[62] Private communication with Xiangyao Yu, Aug. 2016.

[63] X. Yu, G. Bezerra, A. Pavlo, S. Devadas, and M. Stonebraker. Staring

into the abyss: An evaluation of concurrency control with one
thousand cores. Proc. VLDB Endowment, 8(3), Nov. 2014.

[64] X. Yu, A. Pavlo, D. Sanchez, and S. Devadas. TicToc: Time traveling

optimistic concurrency control. In Proceedings of the 2016 ACM
SIGMOD International Conference on Management of Data, 2016.

[65] Y. Yuan, K. Wang, R. Lee, X. Ding, J. Xing, S. Blanas, and X. Zhang.

BCC: Reducing false aborts in optimistic concurrency control with
low cost for in-memory databases. Proc. VLDB Endowment, 9(6), Jan.
2016.

[66] I. Zhang, N. K. Sharma, A. Szekeres, A. Krishnamurthy, and D. R. K.

Ports. Building consistent transactions with inconsistent replication.
In Proc. 25th ACM Symposium on Operating Systems Principles
(SOSP), Monterey, CA, Oct. 2015.

[67] W. Zheng, S. Tu, E. Kohler, and B. Liskov. Fast databases with fast

durability and recovery through multicore parallelism. In 11th
USENIX Symposium on Operating Systems Design and
Implementation (OSDI 14), Oct. 2014.

