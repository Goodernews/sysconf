
[1] Green Button Initiative. http://www.greenbuttondata.org.

[2] Protocol Buffers. http://code.google.com/p/protobuf.

[3] Stratified sampling. Wikipedia. Posted at https://en.wikipedia.org/
wiki/Stratified_sampling#Disadvantages.

[4] Three sigma rule. Wikipedia. Posted at https://en.wikipedia.org/wiki/
Three_sigma_rule.

[5] Introducing Kale.
introducing-kale/, 2013.

[6] Ganglia Monitoring System. http://ganglia.info/, 2016.

[7] IBM Informix TimeSeries. https://www-01.ibm.com/software/data/
informix/timeseries, 2016.

[8] InfluxDB: Downsampling and Data Retention. https://docs.influxdata.
com/influxdb/v0.9/guides/downsampling_and_retention/, 2016.

[9] Netflix Atlas time-series telemetry platform. https://github.com/
Netflix/atlas, 2016.

[10] Netflix Edda. https://github.com/Netflix/edda, 2016.

[11] SQL for IBM Tivoli Storage Manager. http://thobias.org/tsm/sql/,
2016.

[12] Multivariate normal distribution. _https://en.wikipedia.org/wiki/
Multivariate_normal_distribution, 2017.

[13] G. Adomavicius, R. Sankaranarayanan, S. Sen, and A. Tuzhilin. Incorporating contextual information in recommender systems using
a multidimensional approach. ACM Transactions on Information Systems (TOIS), 23(1):103-145, 2005.

[14] P. K. Agarwal, G. Cormode, Z. Huang, J. M. Phillips, Z. Wei, and
K. Yi. Mergeable summaries. ACM Transactions on Database Systems
(TODS), 38(4):26, 2013.

[15] R. Agarwal, A. Khandelwal, and I. Stoica. Succinct: Enabling queries
on compressed data. In 12th USENIX Symposium on Networked Systems Design and Implementation (NSDI 15), pages 337-350, 2015.

[16] S. Agarwal, H. Milner, A. Kleiner, A. Talwalkar, M. Jordan, S. Madden,
B. Mozafari, and I. Stoica. Knowing when you’re wrong: building fast
and reliable approximate query processing systems. In Proceedings
of the 2014 ACM SIGMOD international conference on Management of
data, pages 481-492, ACM, 2014.

[17] S. Agarwal, B. Mozafari, A. Panda, H. Milner, S. Madden, and I. Stoica.
Blinkdb: queries with bounded errors and bounded response times on
very large data. In Proceedings of the 8th ACM European Conference
on Computer Systems, pages 29-42, ACM, 2013.

[18] M. P. Andersen and D. E. Culler. Btrdb: optimizing storage system
design for timeseries processing. In 14th USENIX Conference on File
and Storage Technologies (FAST 16), pages 39-52, 2016.

[19] C.M. Antunes and A. L. Oliveira. Temporal data mining: An overview.
In KDD workshop on temporal data mining, volume 1, page 13, 2001.

[20] Apache. Apache Commons Math library. http://commons.apache.
org/proper/commons-math/, 2016.

[21] P. Bailis, D. Narayanan, and S. Madden. Macrobase: Analytic monitoring for the internet of things. arXiv preprint arXiv:1603.00567, 2016.

[22] P. Barford and M. Crovella. Generating representative web workloads
for network and server performance evaluation. In ACM SIGMETRICS Performance Evaluation Review, volume 26, pages 151-160. ACM,
1998.

[23] R.M. Bell and Y. Koren. Lessons from the netflix prize challenge. ACM
SIGKDD Explorations Newsletter, 9(2):75—79, 2007.

[24] R. Bhagwan, F. Douglis, K. Hildrum, J. O. Kephart, and W. E. Walsh.
Time-varying management of data storage. In Workshop on Hot Topics
in System Dependability (HotDep), 2005.

[25] L. Bhuvanagiri and S. Ganguly. Estimating Entropy over Data Streams,
pages 148-159. Springer Berlin Heidelberg, Berlin, Heidelberg, 2006.

https://codeascraft.com/2013/06/11/

SOSP *17, October 28, 2017, Shanghai, China

[26] B. H. Bloom. Space/time trade-offs in hash coding with allowable
errors. Commun. ACM, 13(7):422-426, July 1970.

[27] A. Bremler-Barr, E. Cohen, H. Kaplan, and Y. Mansour. Predicting and
bypassing end-to-end internet service degradations. IEEE Journal on
Selected Areas in Communications, 21(6):961-978, 2003.

[28] R. H. Byrd, P. Lu, J. Nocedal, and C. Zhu. A limited memory algorithm for bound constrained optimization. SIAM Journal on Scientific
Computing, 16(5):1190-1208, 1995.

[29] P. G. Campos, F. Diez, and I. Cantador. Time-aware recommender
systems: a comprehensive survey and analysis of existing evaluation
protocols. User Modeling and User-Adapted Interaction, 24(1-2):67-119,
2014,

[30] J. Cipar, G. Ganger, K. Keeton, C. B. Morrey IIL, C. A. Soules, and
A, Veitch. Lazybase: trading freshness for performance in a scalable
database. In Proceedings of the 7th ACM european conference on Computer Systems, pages 169-182, ACM, 2012.

[31] E. Cohen, H. Kaplan, and J. Oldham. Managing tcp connections under
persistent http. Computer Networks, 31(11):1709-1723, 1999.

[32] E. Cohen and M. Strauss. Maintaining time-decaying stream aggregates. In Proceedings of the twenty-second ACM SIGMOD-SIGACTSIGART symposium on Principles of database systems, pages 223-233.
ACM, 2003.

[33] G. Cormode, F. Korn, and S. Tirthapura. Time-decaying aggregates
in out-of-order streams. In Proceedings of the Twenty-seventh ACM
SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, PODS ’08, pages 89-98, New York, NY, USA, 2008. ACM.

[34] C. Cortes and D. Pregibon. Giga-mining.

[35] Cory Watson. Observability at Twitter. https://blog.twitter.com/2013/
observability-at-twitter, 2013.

[36] D. R. Cox. Renewal theory. Methuen, 1962.

[37] M. E. Crovella and A. Bestavros. Self-similarity in world wide web
traffic: evidence and possible causes. IEEE/ACM Transactions on networking, 5(6):835-846, 1997.

[38] H. Cui, K. Keeton, I. Roy, K. Viswanathan, and G. R. Ganger. Using data
transformations for low-latency time series analysis. In Proceedings of
the Sixth ACM Symposium on Cloud Computing, pages 395-407. ACM,
2015,

[39] M. Datar, A. Gionis, P. Indyk, and R. Motwani. Maintaining stream statistics over sliding windows. SIAM journal on computing, 31(6):1794—
1813, 2002.

[40] S. Dawson-Haggerty, A. Krioukov, J. Taneja, S. Karandikar, G. Fierro,
N. Kitaev, and D. E. Culler. Boss: Building operating system services.
In NSDF, 2013.

[41] Dennis Shasha. Time Series in Finance: the array database approach.
http://cs.nyu.edu/shasha/papers/jagtalk.html, 1997.

[42] P. Desnoyers and P. J. Shenoy. Hyperion: High volume stream archival
for retrospective querying. In USENIX Annual Technical Conference,
pages 45-58, 2007.

[43] F. Douglis, J. Palmer, E. S. Richards, D. Tao, W. H. Tetzlaff, J. M. Tracey,
and J. Yin. “position: short object lifetimes require a delete-optimized
storage system". In Proceedings of the 11th workshop on ACM SIGOPS
European workshop, page 6. ACM, 2004.

[44] C. Dovrolis, K. Gummadi, A. Kuzmanovic, and S. D. Meinrath. Measurement lab: overview and an invitation to the research community.
ACM SIGCOMM Computer Communication Review, 40(3):53—56, 2010.

[45] Federal Reserve Economic Data. _https://en.wikipedia.org/wiki/
Federal_Reserve_Economic_Data, 2017.

[46] T. Gupta, R. P. Singh, A. Phanishayee, J. Jung, and R. Mahajan. Bolt:
Data management for connected homes. In 11th USENIX Symposium
on Networked Systems Design and Implementation (NSDI 14), pages
243-256, 2014,
SOSP *17, October 28, 2017, Shanghai, China

[47] E. Hailemariam, R. Goldstein, R. Attar, and A. Khan. Real-time Occupancy Detection Using Decision Trees with Multiple Sensor Types. In
Proc. of Symposium on Simulation for Architecture and Urban Design,
2011.

[48] Price Trends: Internal Hard Drives. https://pcpartpicker.com/trends/
internal-hard-drive/.

[49] C.-T. Ho, R. Agrawal, N. Megiddo, and R. Srikant. Range queries in
olap data cubes. In In Proceedings of the 1997 ACM SIGMOD International Conference on Management of Data, 1997.

[50] InfluxData. Influxdb time-series database. http://influxdb.com, 2015.

[51] K.J. Jacob and D, Shasha. Fintime — a financial benchmark.

[52] Jamie Wilkinson. Google Prometheus: A practical guide to
alerting at scale. https://docs.google.com/presentation/d/
1X1rKozAUuF2MVc1YXEIFWq9wkcWv3Axdldl8LOH9Vik/edit#
slide=id.g598ef96a6_0_341, 2016.

[53] Jason Kincaid. Facebook EdgeRank: The Secret Sauce That Makes
Facebook’s News Feed Tick. https://techcrunch.com/2010/04/22/
facebook-edgerank, 2010.

[54] S. Kandula, A. Shanbhag, A. Vitorovic, M. Olma, R. Grandl, S. Chaudhuri, and B. Ding. Quickr: Lazily approximating complex adhoc
queries in bigdata clusters. 2016.

[55] A. Khandelwal, R. Agarwal, and I. Stoica. Blowfish: dynamic storageperformance tradeoff in data stores. In 13th USENIX Symposium on
Networked Systems Design and Implementation (NSDI 16), pages 485—
500, 2016.

[56] Y. Koren. Collaborative filtering with temporal dynamics. In Proceedings of the 15th ACM SIGKDD international conference on Knowledge
discovery and data mining, pages 447-456. ACM, 2009.

[57] D.M. Lane. Online statistics education: A multimedia course of study.
http://onlinestatbook.com/.

[58] F. Lautenschlager, M. Philippsen, A. Kumlehn, and J. Adersberger.
Chronix: Long term storage and retrieval technology for anomaly detection in operational data. In 15th USENIX Conference on File and
Storage Technologies (FAST 17), pages 229-242, Santa Clara, CA, 2017.
USENIX Association.

[59] D. Leary. Nimble Storage Blog: Why Does Enterprise Storage Cost So Much? . https://www.nimblestorage.com/blog/
why-does-enterprise-storage-cost-so-much/, 2010.

[60] L. Li, W. Chu, J. Langford, and R. E. Schapire. A contextual-bandit approach to personalized news article recommendation. In Proceedings
of the 19th international conference on World wide web, pages 661-670.
ACM, 2010.

[61] Mike Keane. 1.5 million Log Lines per  Second. http://www.bigdataevery where.com/files/chicago/
BDE- 15millionLogLinesPerSecond-KEANE.pdf, 2014.

[62] T. Mitchell. Never-ending learning. Technical report, DTIC Document, 2010.

[63] M. Natrella. NIST/SEMATECH e-handbook of statistical methods.
2010.

[64] NOAA Global Surface Summary of the Day Weather Data. https://
cloud.google.com/bigquery/public-data/noaa-gsod.

[65] R. Peck, C. Olsen, and J. L. Devore. Introduction to statistics and data
analysis. Cengage Learning, 2015.

[66] T. Pelkonen, S. Franklin, J. Teller, P. Cavallaro, Q. Huang, J. Meza, and
K, Veeraraghavan. Gorilla: a fast, scalable, in-memory time series database. Proceedings of the VLDB Endowment, 8(12):1816—1827, 2015.

[67] Power Law. https://en.wikipedia.org/wiki/Power_law.

[68] Prophet: forecasting at scale. https://research.fb.com/
prophet-forecasting-at-scale/, Feb 2017.

[69] A. Rabkin, M. Arye, S. Sen, V. S. Pai, and M. J. Freedman. Aggregation
and degradation in jetstream: Streaming analytics in the wide area. In

Nitin Agrawal and Ashish Vulimiri

11th USENIX Symposium on Networked Systems Design and Implementation (NSDI 14), pages 275-288, 2014.

[70] S. Reddy, M. Mun, J. Burke, D. Estrin, M. Hansen, and M. Srivastava.
Using Mobile Phones To Determine Transportation Modes. ACM
Transactions on Sensor Networks (TOSN), 2010.

[71] C. Reiss, J. Wilkes, and J. L. Hellerstein. Google cluster-usage traces:
format + schema. Technical report, Google Inc., Mountain View, CA,
USA, Nov. 2011. Revised 2014-11-17 for version 2.1. Posted at https://
github.com/google/cluster-data.

[72] RocksDB. RocksDB. http://rocksdb.org/, 2016.

[73] T. Roscoe and S. Hand.  Palimpsest: Soft-capacity storage for
planetary-scale services. In HotOS, pages 127-132, 2003.

[74] B. Sigoure. Opentsdb scalable time series database (tsdb). http://
opentsdb.net, 2012.

[75] R.P. Singh, S. Keshav, and T. Brecht. A Cloud-based Consumer-centric
Architecture for Energy Data Analytics. In Proc. of ACM e-Energy,
2013.

[76] R. S. Sutton. Learning to predict by the methods of temporal differences. Machine learning, 3(1):9-44, 1988.

[77] S.J. Taylor and B. Letham. Facebook open source project: Forecasting
at scale. https://github.com/facebookincubator/prophet, 2017.

[78] Ted Friedman. Gartner Report: “Internet of Things: Biggest Impact
Ever on Information and Master Data” . http://www.gartner.com/
webinar/3291728?srcld=1-7389946120, 2016.

[79] S. Thrun and L. Pratt. Learning to learn. Springer Science & Business
Media, 2012.

[80] M. van  Rijmenam. Self-driving cars will create 2
petabytes of data, what are the big data opportunities for the car industry? https://dataflog.com/read/
self-driving-cars-create-2-petabytes-data-annually/172, 2017.

[81] J. S. Vitter. Random sampling with a reservoir. ACM Transactions on
Mathematical Software (TOMS), 11(1):37-57, 1985.

[82] G. Wallace, F. Douglis, H. Qian, P. Shilane, S. Smaldone, M. Chamness,
and W. Hsu. Characteristics of backup workloads in production systems. In FAST, 2012.

[83] W. W.-S. Wei. Time series analysis. Addison-Wesley publ Reading,
1994,

[84] Wikipedia Traffic Statistics V2. https://aws.amazon.com/datasets/
wikipedia-traffic-statistics-v2/.

[85] J. Wilkes. More Google cluster data. Google research
blog. Posted at http://googleresearch.blogspot.com/2011/11/
more-google-cluster-data.html.

[86] Z. Yang, N. Li, B. Becerik-Gerber, and M. Orosz. A multi-sensor based
occupancy estimation model for supporting demand driven hvac operations. In Proceedings of the 2012 Symposium on Simulation for Architecture and Urban Design, page 2. Society for Computer Simulation
International, 2012.
