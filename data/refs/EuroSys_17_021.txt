[1] A. Barth, C. Jackson, and C. Reis. The security architecture
of the Chromium browser. Technical Report with unspecified
number, Stanford, 2008.

[2] A. Baumann, P. Barham, P.-E. Dagand, T. Harris, R. Isaacs,
S. Peter, T. Roscoe, A. Schiipbach, and A. Singhania. The
multikernel: A new OS architecture for scalable multicore
systems. In ACM Symp. on Operating Systems Principles
(SOSP), Oct 2009.

[3] A. Belay, A. Bittau, A. Mashtizadeh, D. Terei, D. Maziéres,
and C. Kozyrakis. Dune: Safe user-level access to privileged
CPU features. In Symp. on Operating Systems Design and
Implementation (OSDI), Oct. 2012.

[4] A. Belay, G. Prekas, A. Klimovic, S. Grossman, C. Kozyrakis,
and E. Bugnion. IX: A protected dataplane operating system
for high throughput and low latency. In Symp. on Operating
Systems Design and Implementation (OSDI), Oct. 2014.

[5] J. Bernabeu-Auban, P. Hutto, and Y. Khalidi. The architecture
of the Ra kernel. Technical Report GIT-ICS-87135, Georgia
Institute of Technology, 1988.

[6] B. N. Bershad, S. Savage, P. Pardyak, E. G. Sirer, M. E. Fiuczynski, D. Becker, C. Chambers, and S. Eggers. Extensibility safety and performance in the SPIN operating system. In
ACM Symp. on Operating Systems Principles (SOSP), 1995.

[7] J. Bonwick and J. Adams. Magazines and vmem: Extending
the slab allocator to many CPUs and arbitrary resources. In
USENIX Annual Technical Conf., June 2001.

[8] R. H. Campbell, N. Islam, D. Raila, and P. Madany. Designing and implementing Choices: An object-oriented system in
C++. Comm. ACM, Sept. 1993.

[9] M. Castro, M. Costa, J.-P. Martin, M. Peinado, P. Akritidis,
A. Donnelly, P. Barham, and R. Black. Fast byte-granularity
software fault isolation. In ACM Symp. on Operating Systems
Principles (SOSP), 2009.

[10] J. S. Chase, H. M. Levy, M. J. Feeley, and E. D. Lazowska.
Sharing and protection in a single address space operating
system. In IEEE Trans. on Computers, May 1994.

[11] D. R. Cheriton, G. R. Whitehead, and E. W. Sznyter. Binary
emulation of UNIX using the V kernel. In USENIX Summer
Conf, Jane 1990.

[12] D. Chisnall, C. Rothwell, R. N. Watson, J. Woodruff,
M. Vadera, S. W. Moore, M. Roe, B. Davis, and P. G. Neumann. Beyond the PDP-11: Architectural support for a
memory-safe C abstract machine. In Intl. Conf: on Arch. Support for Programming Languages & Operating Systems (ASPLOS), Mar 2015.

[13] R. K. Clark, E. D. Jensen, and F D. Reynolds. An architectural overview of the Alpha real-time distributed kernel. In
USENIX Workshop on Micro-kernels and Other Kernel Architectures, Apr 1992.

[14] M. Dashti, A. Fedorova, J. Funston, F. Gaud, R. Lachaize,
B. Lepers, V. Quéma, and M. Roth. Traffic management: A
holistic approach to memory placement on NUMA systems.
In Intl. Conf: on Arch. Support for Programming Languages
& Operating Systems (ASPLOS), Mar 2013.

[15] Dell. Dell DVD store database test suite. http://linux.
de1l.com/dvdstore.

[16] J. B. Dennis and E. C. V. Horn. Programming semantics for
multiprogrammed computations. Comm. ACM, Mar 1966.

[17] U. Drepper. ELF Handling For Thread-Local Storage. Red
Hat Inc., Feb 2003.

[18] D. Engler, M. Kaashoek, and J. O’Toole. Exokernel, an
operating system architecture for application-level resource
management. In ACM Symp. on Operating Systems Principles
(SOSP), 1995.

[19] U. Erlingsson, M. Abadi, M. Vrable, M. Budiu, and G. C.
Necula. XFI: Software guards for system address spaces.
In Symp. on Operating Systems Design and Implementation
(OSDI), 2006.

[20] B. Ford and R. Cox. Vx32: Lightweight user-level sandboxing
on the x86. In USENIX Annual Technical Conf:, 2008.

[21] B. Ford and J. Lepreau. Evolving Mach 3.0 to a migrating
thread model. In USENIX Annual Technical Conf., 1994.

[22] B. Gamsa, O. Krieger, and M. Stumm. Optimizing IPC performance for shared-memory multiprocessors. In Indl. Conf:
on Parallel Processing (ICPP), Aug 1994.

[23] D. Golub, R. Dean, A. Forin, and R. Rashid. Unix as an
application program. In USENIX Summer Conf., June 1990.

[24] J. Gosling, B. Joy, and G. Steele. The Java Language Specification. Addison-Wesley, 1996.

[25] C. Gray, M. Chapman, P. Chubb, D. Mosberger-Tang, and
G. Heiser. Itanium — a system implementor’s tale. In
USENIX Annual Technical Conf:, Apr 2005.

[26] M. Guillemont. The Chorus distributed operating system:
design and implementation. In ACM Inil. Symp. on Local
Computer Networks, 1982.

[27] G. Hamilton and P. Kougiouris. The Spring nucleus: A microkernel for objects. In USENIX Summer Conf., Jun 1993.

[28] G. Heiser, K. Elphinstone, S. Russell, and J. Vochteloo.
Mungi: A distributed single-address-space operating system.
In Australasian Computer Science Conf. (ACSC), Jan 1994.

[29] J. N. Herder, H. Bos, B. Gras, P- Homburg, and A. S. Tanenbaum. MINIX 3: A highly reliable, self-repairing operating
system. In Operating Systems Review, Jul 2006.

[30] W. Huang, J. Liu, M. Koop, B. Abali, and D. Panda. Nomad:
Migrating OS-bypass networks in virtual machines. In Jnil.
Conf. on Virtual execution environment (VEE), June 2007.

[31] G. C. Hunt and J. R. Larus. Singularity: Rethinking the
software stack. Operating Systems Review, Apt. 2007.

[32] Power ISA ™, IBM, version 2.06 revision B edition, Jul 2010.

[33] M. F. Kaashoek, D. R. Engler, G. R. Ganger, H. M. Bricefio,
R. Hunt, D. Maziéres, T. Pinckney, R. Grimm, J. Jannotti,
and K. Mackenzie. Application performance and flexibility
on exokernel systems. In ACM Symp. on Operating Systems
Principles (SOSP), 1997.

[34] A. Kivity, D. Laor, G. Costa, P. Enberg, N. Har’El, D. Marti,
and V. Zolotarov. OSv — optimizing the operating system
for virtual machines. In USENIX Annual Technical Conf, Jun
2014.
[35] E. J. Koldinger, J. S. Chase, and S. J. Eggers. Architectural
support for single address space operating systems. In Intl.
Conf. on Arch. Support for Programming Languages & Operating Systems (ASPLOS), 1992.

[36] O. Krieger, M. Auslander, B. Rosenburg, R. W. Wisniewski,
J. Xenidis, D. D. Silva, M. Ostrowski, J. Appavoo, M. Butrico,
M. Mergen, A. Waterland, and V. Uhlig. K42: Building a
complete operating system. In EuroSys, Apr 2006.

[37] C. Lattner and V. Adve. LLVM: A compilation framework for
lifelong program analysis & transformation. In Jnil. Symp. on
Code Generation and Optimization (CGO), Mar. 2004.

[38] J. R. Levine. Linkers and Loaders. Morgan Kaufmann, 1999.

[39] H. M. Levy. Capability-Based Computer Systems. Digital
Press, 1984.

[40] C. Li, C. Ding, and K. Shen. Quantifying the cost of context
switch. In ACM Workshop on Experimental Computer Science
(ExpCS), Jun 2007.

[41] W. Li, Y. Xia, H. Chen, B. Zang, and H. Guan. Reducing
world switches in virtualized environment with flexible crossworld calls. In Intl. Symp. on Computer Architecture (ISCA),
June 2015.

[42] J. Liedtke. A persistent system in real use — experiences of
the first 13 years. In Intl. Workshop on Object Orientation in
Operating Systems (TWOOOS), 1993.

[43] J. Liedtke. On microkernel construction. In ACM Symp. on
Operating Systems Principles (SOSP), 1995.

[44] A. Madhavapeddy, R. Mortier, C. Rotsos, D. Scott, B. Singh,
T. Gazagnaire, S. Smith, S. Hand, and J. Crowcroft. Unikernels: Library operating systems for the cloud. In Intl. Conf:
on Arch, Support for Programming Languages & Operating
Systems (ASPLOS), Apr 2013.

[45] T. Maeda. Kernel mode linux. Linux Journal, May 2003.

[46] A. Massalin. Synthesis: An Efficient Implementation of Fundamental Operating System Services. PhD thesis, Columbia
University, 1992.

[47] S. J. Mullender. The Amoeba distributed operating system:
Selected papers, 1984-1987. Technical report, Centrum voor
Wiskunde en Informatica, 1987.

[48] Open Market. FastCGI. http://www. fastcgi.com.

[49] E. I. Organick. The B5700 / B6700 series. Computer System
Organization, 1973.

[50] S. Peter, J. Li, I. Zhang, D. R. K. Ports, D. Woos, A. Krishnamurthy, T. Anderson, and T. Roscoe. Arrakis: The operating
system is the control plane. In Symp. on Operating Systems
Design and Implementation (OSDI), Oct 2014.

[51] D. E. Porter, S. Boyd-Wickizer, J. Howell, R. Olinsky, and.
G. Hunt. Rethinking the library OS from the top down. In
Intl. Conf. on Arch. Support for Programming Languages &
Operating Systems (ASPLOS), Mar 2011.

[52] D. Redell, Y. Dalal, T. Horsley, H. Lauer, W. Lynch,
P. McJones, H. Murray, and S. Purcell. Pilot: An operating
system for a personal computer. In Comm. ACM, Feb 1980.

[53] J. H. Saltzer. Protection and the control of information sharing
in Multics. In Comm. ACM, July 1974.

[54] D. Sehr, R. Muth, C. Biffle, V. Khimenko, E. Pasko,
K. Schimpf, B. Yee, and B. Chen. Adapting software fault
isolation to contemporary CPU architectures. In USENIX Security, Aug 2010.

[55] K. Shvachko, H. Kuang, S. Radia, and R. Chansler. The
Hadoop distributed file system. In Mass Storage Systems and
Technologies, MSST, May 2010.

[56] L. Soares and M. Stumm. FlexSC: Flexible system call
scheduling with exception-less system calls. In Symp. on
Operating Systems Design and Implementation (OSDI), Oct
2010.

[57] R. Strackx and F. Piessens. Fides: Selectively hardening software application components against kernel-level or processlevel malware. In ACM Conf: on Computer & Communications Security (CCS), Oct 2012.

[58] M. M. Swift, B. N. Bershad, and H. M. Levy. Improving the
reliability of commodity operating systems. In ACM Symp. on
Operating Systems Principles (SOSP), 2003.

[59] D. Swinehart, P. Zellweger, R. Beach, and R. Hagmann. A
structural view of the Cedar programming environment. In
ACM Trans. on Programming Languages and Systems, Oct
1986.

[60] D. Tsafrir. The context-switch overhead inflicted by hardware
interrupts (and the enigma of do-nothing loops). In ACM
Workshop on Experimental Computer Science (ExpCS), Jun
2007.

[61] L. Vilanova, M. Ben-Yehuda, N. Navarro, Y. Etsion, and
M. Valero. CODOMs: Protecting software with code-centric
memory domains. In Intl. Symp. on Computer Architecture
(ISCA), June 2014.

[62] C. Villavieja, V. Karakostas, L. Vilanova, Y. Etsion,
A. Ramirez, A. Mendelson, N. Navarro, A. Cristal, and O. S.
Unsal. DiDi: Mitigating the performance impact of TLB
shootdowns using a shared TLB directory. In Intl. Conf: on
Parallel Arch. and Compilation Techniques (PACT), Oct 2011.

[63] E. Witchel, J. Cates, and K. Asanovi¢é. Mondrian memory
protection. In Intl. Conf. on Arch. Support for Programming
Languages & Operating Systems (ASPLOS), Oct 2002.

[64] J. Woodruff, R. N. M. Watson, D. Chisnall, S. W. Moore,
J. Anderson, B. Davis, B. Laurie, P. G. Neumann, R. Norton,
and M. Roe. The CHERI capability model: Revisiting RISC
in an age of risk. In Intl. Symp. on Computer Architecture
(ISCA), June 2014.

[65] B. Yee, D. Sehr, G. Dardyk, J. B. Chen, R. Muth, T. Ormandy,
S. Okasaka, N. Narula, and N. Fullagar. Native Client: A
sandbox for portable, untrusted x86 native code. Comm. ACM,
Jan 2010.

[66] M. Zaharia, M. Chowdhury, M. J. Franklin, S. Shenker, and
I. Stoica. Spark: Cluster computing with working sets. In Hot
topics in cloud computing (HotCloud), June 2010.

[67] E. Zhai, G. D. Cummings, and Y. Dong. Live migration
with pass-through device for Linux VM. In Ottawa Linux
Symposium, July 2008.