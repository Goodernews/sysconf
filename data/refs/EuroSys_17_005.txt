[1] Apache Beam. http://beam. incubator .apache.org.

[2] Cloud Dataflow. https: //cloud. google.com/dataflow.

[3] Apache Flink. http: //flink.apache.org.

[4] GlusterFS. https: //www.gluster .org.

[5] Apache Hadoop. http: //hadoop.apache.org.

[6] Spark MLIib. http: //spark. apache. org/m11ib.

[7] Apache REEF. http: //reef .apache. org.

[8] Apache Spark. http://spark.apache.org.

[9] Page view statistics for Wikimedia projects. https://
dumps .wikimedia.org/other/pagecounts-raw.

[10] Yahoo! Music User Ratings of Songs with Artist, Album,
and Genre Meta Information, v. 1.0. https: //webscope.
sandbox. yahoo.com/catalog.php?datatype=r.

[11] C. de Boor. A Practical Guide to Splines. Springer New York,
2001.

[12] J. Dean and S. Ghemawat. Mapreduce: Simplified data processing on large clusters. In OSDI, 2004.

[13] T. Hastie, R. Tibshirani, and J. Friedman. The Elements of
Statistical Learning: Data Mining, Inference, and Prediction.
Springer Publishing Company, New York, NY, 2009.

[14] B. Hindman, A. Konwinski, M. Zaharia, A. Ghodsi, A. D.
Joseph, R. Katz, S. Shenker, and I. Stoica. Mesos: A platform
for fine-grained resource sharing in the data center. In NSDI,
2011.

[15] M. Isard, M. Budiu, Y. Yu, A. Birrell, and D. Fetterly. Dryad:
Distributed data-parallel programs from sequential building
blocks. In ZuroSys, 2007.

[16] Q. Ke, M. Isard, and Y. Yu. Optimus: A dynamic rewriting
framework for data-parallel execution plans. In EuroSys,
2013.

588

[17] S. Y. Ko, I. Hoque, B. Cho, and I. Gupta. On availability of
intermediate data in cloud computations. In HotOS, 2009.

[18] Y. Koren, R. Bell, and C. Volinsky. Matrix factorization
techniques for recommender systems. Computer, 2009.

[19] D. Lo, L. Cheng, R. Govindaraju, P. Ranganathan, and
C. Kozyrakis. Heracles: Improving resource efficiency at
scale. In ESCA, 2015.

[20] M. Pundir, L. M. Leslie, I. Gupta, and R. H. Campbell. Zorro:
Zero-cost reactive failure recovery in distributed graph processing. In SOCC, 2015.

[21] C. Reiss, A. Tumanov, G. R. Ganger, R. H. Katz, and M. A.
Kozuch. Heterogeneity and dynamicity of clouds at scale:
Google trace analysis. In SOCC, 2012.

[22] S. Schelter, S. Ewen, K. Tzoumas, and V. Markl. All roads
lead to rome: optimistic recovery for distributed iterative data
processing. In ACM CIKM, 2013.

[23] P. Sharma, T. Guo, X. He, D. Irwin, and P. Shenoy.
Flint: Batch-interactive data-intensive processing on transient
servers. In EuroSys, 2016.

[24] V. K. Vavilapalli, A. C. Murthy, C. Douglas, S. Agarwal,
M. Konar, R. Evans, T. Graves, J. Lowe, H. Shah, S. Seth,
B. Saha, C. Curino, O. Oâ€™Malley, S. Radia, B. Reed, and
E. Baldeschwieler. Apache hadoop yarn: Yet another resource
negotiator. In SOCC, 2013.

[25] A. Verma, L. Pedrosa, M. Korupolu, D. Oppenheimer,
E. Tune, and J. Wilkes. Large-scale cluster management at
Google with Borg. In EuroSys, 2015.

[26] M. Weimer, Y. Chen, B.-G. Chun, T. Condie, C. Curino,
C. Douglas, Y. Lee, T. Majestro, D. Malkhi, S. Matusevych,
B. Myers, S. Narayanamurthy, R. Ramakrishnan, S. Rao,
R. Sears, B. Sezgin, and J. Wang. Reef: Retainable evaluator execution framework. In ACM SIGMOD, 2015.

[27] J. Wilkes and C. Reiss. ClusterData2011_2 traces.
https://github.com/google/cluster-data/blob/
master/ClusterData2011_2.md.

[28] E. P. Xing, Q. Ho, W. Dai, J. K. Kim, J. Wei, S. Lee, X. Zheng,
P. Xie, A. Kumar, and Y. Yu. Petuum: A new platform for
distributed machine learning on big data. In ACM SIGKDD,
2015.

[29] Y. Yan, Y. Gao, Y. Chen, Z. Guo, B. Chen, and T. Moscibroda. Tr-spark: Transient computing for big data analytics.
In SOCC, 2016.

[30] X. Yang, S. M. Blackburn, and K. S. McKinley. Elfen scheduling: Fine-grain principled borrowing from latency-critical
workloads using simultaneous multithreading. In USENIX
ATC, 2016.

[31] M. Zaharia, M. Chowdhury, T. Das, A. Dave, J. Ma, M. McCauley, M. Franklin, S. Shenker, and I. Stoica. Resilient distributed datasets: A fault-tolerant abstraction for in-memory
cluster computing. In NSDI, 2012.

[32] Y. Zhang, G. Prekas, G. M. Fumarola, M. Fontoura, I. n. Goiri,
and R. Bianchini. History-based harvesting of spare cycles
and storage in large-scale datacenters. In OSDI, 2016.