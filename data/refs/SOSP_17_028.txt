
[1] 2014. Supporting filesystems in persistent memory. https://lwn.net/
Articles/610174/. (Sept. 2014).
[2] 2015.
Linux control group v2.
https://www.kernel.org/doc/
Documentation/cgroup-v2.txt. (Oct. 2015).
[3] 2017. Amazon S3. (Aug. 2017). https://aws.amazon.com/s3/.
[4] 2017. Apache ZooKeeper. https://zookeeper.apache.org. (Aug. 2017).
[5] 2017. Bandwidth: a memory bandwidth benchmark. (Aug. 2017).
http://zsmith.co/bandwidth.html.
[6] 2017. Elevator algorithm. https://en.wikipedia.org/wiki/Elevator_
algorithm. (Aug. 2017).
[7] 2017.
Intel Optane Memory.
(Aug. 2017).
http:
//www.intel.com/content/www/us/en/architecture-and-technology/
optane-memory.html.
[8] 2017. lvmcache – LVM caching. http://man7.org/linux/man-pages/
man7/lvmcache.7.html. (Aug. 2017).
[9] 2017. NVM Express 1.2.1. http://www.nvmexpress.org/wp-content/
uploads/NVM_Express_1_2_1_Gold_20160603.pdf. (Aug. 2017).
[10] 2017. Persistent Memory Programming. (Aug. 2017). http://pmem.io/.

Strata: A Cross Media File System
[11] 2017. Product Brief: Intel Optane SSD DC P4800X Series. (Aug.
2017). http://www.intel.com/content/www/us/en/solid-state-drives/
optane-ssd-dc-p4800x-brief.html.
[12] 2017. Redis. http://redis.io. (Aug. 2017).
[13] 2017. rsockets library. (Aug. 2017). https://github.com/ofiwg/
librdmacm.
[14] 2017. SPECsfs2014. (Aug. 2017). https://www.spec.org/sfs2014/.
[15] 2017. SQLite. https://sqlite.org. (Aug. 2017).
[16] 2017. The Sprite Operating System. https://www2.eecs.berkeley.edu/
Research/Projects/CS/sprite/sprite.html. (Aug. 2017).
[17] T. E. Anderson, M. D. Dahlin, J. M. Neefe, D. A. Patterson, D. S.
Roselli, and R. Y. Wang. 1995. Serverless Network File Systems. In
Proceedings of the Fifteenth ACM Symposium on Operating Systems
Principles (SOSP ’95). ACM, New York, NY, USA, 109–126. https:
//doi.org/10.1145/224056.224066
[18] Berk Atikoglu, Yuehai Xu, Eitan Frachtenberg, Song Jiang, and Mike
Paleczny. 2012. Workload analysis of a large-scale key-value store. In
Proceedings of the 12th ACM SIGMETRICS/PERFORMANCE joint international conference on Measurement and Modeling of Computer Systems. London, England, UK, 53–64. https://doi.org/10.1145/2254756.
2254766
[19] Srivatsa S. Bhat, Rasha Eqbal, Austin T. Clements, M. Frans Kaashoek,
and Nickolai Zeldovich. 2017. Scaling a file system to many cores using
an operation log. In Proceedings of the 26th Symposium on Operating
Systems Principles (SOSP ’17).
[20] Peter M. Chen, Edward K. Lee, Garth A. Gibson, Randy H. Katz,
and David A. Patterson. 1994. RAID: High-performance, Reliable
Secondary Storage. ACM Comput. Surv. 26, 2 (June 1994).
[21] Vijay Chidambaram, Thanumalayan Sankaranarayana Pillai, Andrea C.
Arpaci-Dusseau, and Remzi H. Arpaci-Dusseau. 2013. Optimistic
Crash Consistency. In Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles (SOSP ’13). ACM, New York,
NY, USA, 228–243. https://doi.org/10.1145/2517349.2522726
[22] Jeremy Condit, Edmund B. Nightingale, Christopher Frost, Engin
Ipek, Benjamin Lee, Doug Burger, and Derrick Coetzee. 2009. Better I/O Through Byte-addressable, Persistent Memory. In Proceedings of the ACM SIGOPS 22Nd Symposium on Operating Systems
Principles (SOSP ’09). ACM, New York, NY, USA, 133–146. https:
//doi.org/10.1145/1629575.1629589
LevelDB: A Fast Persis[23] J. Dean and S. Ghemawat. 2011.
tent Key-Value Store. https://opensource.googleblog.com/2011/07/
leveldb-fast-persistent-key-value-store.html. (2011).
[24] Biplob Debnath, Sudipta Sengupta, and Jin Li. 2010. FlashStore: High
Throughput Persistent Key-value Store. Proc. VLDB Endow. 3, 1-2
(Sept. 2010), 1414–1425. https://doi.org/10.14778/1920841.1921015
[25] Subramanya R. Dulloor, Sanjay Kumar, Anil Keshavamurthy, Philip
Lantz, Dheeraj Reddy, Rajesh Sankaran, and Jeff Jackson. 2014. System
Software for Persistent Memory. In Proceedings of the Ninth European
Conference on Computer Systems (EuroSys ’14). ACM, New York, NY,
USA, Article 15, 15 pages. https://doi.org/10.1145/2592798.2592814
[26] Tyler Harter, Chris Dragga, Michael Vaughn, Andrea C. ArpaciDusseau, and Remzi H. Arpaci-Dusseau. 2011. A File is Not a
File: Understanding the I/O Behavior of Apple Desktop Applications.
In Proceedings of the Twenty-Third ACM Symposium on Operating
Systems Principles (SOSP ’11). ACM, New York, NY, USA, 71–83.
https://doi.org/10.1145/2043556.2043564
[27] T. Haynes and D. Noveck. 2015. Network File System (NFS) Version
4 Protocol. (March 2015). https://tools.ietf.org/html/rfc7530.
[28] Dave Hitz, James Lau, and Michael Malcolm. 1994. File System Design
for an NFS File Server Appliance. In Proceedings of the USENIX
Winter 1994 Technical Conference on USENIX Winter 1994 Technical
Conference (WTEC’94). USENIX Association, Berkeley, CA, USA,

SOSP’17, October 2017, Shanghai, China
19–19. http://dl.acm.org/citation.cfm?id=1267074.1267093
[29] Cheng Huang, Huseyin Simitci, Yikang Xu, Aaron Ogus, Brad Calder,
Parikshit Gopalan, Jin Li, and Sergey Yekhanin. 2012. Erasure Coding in Windows Azure Storage. In Proceedings of the 2012 USENIX
Conference on Annual Technical Conference (USENIX ATC’12).
[30] Intel Corporation. 2017. Storage Performance Development Kit. (Aug.
2017). http://www.spdk.io.
[31] William K. Josephson, Lars A. Bongo, Kai Li, and David Flynn. 2010.
DFS: A File System for Virtualized Flash Storage. Trans. Storage 6,
3, Article 14 (Sept. 2010), 25 pages. https://doi.org/10.1145/1837915.
1837922
[32] Changman Lee, Dongho Sim, Joo-Young Hwang, and Sangyeun Cho.
2015. F2FS: A New File System for Flash Storage. In Proceedings
of the 13th USENIX Conference on File and Storage Technologies
(FAST’15). USENIX Association, Berkeley, CA, USA, 273–286. http:
//dl.acm.org/citation.cfm?id=2750482.2750503
[33] Cheng Li, Philip Shilane, Fred Douglis, Hyong Shim, Stephen Smaldone, and Grant Wallace. 2014. Nitro: A Capacity-optimized SSD
Cache for Primary Storage. In Proceedings of the 2014 USENIX Conference on USENIX Annual Technical Conference (USENIX ATC’14).
USENIX Association, Berkeley, CA, USA, 501–512. http://dl.acm.org/
citation.cfm?id=2643634.2643686
[34] Mike Mammarella, Shant Hovsepian, and Eddie Kohler. 2009. Modular
Data Storage with Anvil. In Proceedings of the ACM SIGOPS 22Nd
Symposium on Operating Systems Principles (SOSP ’09). ACM, New
York, NY, USA, 147–160. https://doi.org/10.1145/1629575.1629590
[35] Avantika Mathur, Mingming Cao, Suparna Bhattacharya, Andreas Dilger, Alex Tomas, and Laurent Vivier. 2007. The new ext4 filesystem:
current status and future plans. In Proceedings of the Linux Symposium,
Vol. 2. Ottawa, ON, Canada.
[36] Cade Metz. 2016. The Epic Story of Dropbox’s Exodus From the
Amazon Cloud Empire. (March 2016). https://www.wired.com/2016/
03/epic-story-dropboxs-exodus-amazon-cloud-empire/.
[37] Mihir Nanavati, Jake Wires, and Andrew Warfield. 2017. Decibel: Isolation and Sharing in Disaggregated Rack-Scale Storage. In 14th USENIX
Symposium on Networked Systems Design and Implementation (NSDI
17). USENIX Association, Boston, MA, 17–33. https://www.usenix.
org/conference/nsdi17/technical-sessions/presentation/nanavati
[38] Edmund B. Nightingale, Kaushik Veeraraghavan, Peter M. Chen,
and Jason Flinn. 2006. Rethink the Sync. In Proceedings of the
7th Symposium on Operating Systems Design and Implementation
(OSDI ’06). USENIX Association, Berkeley, CA, USA, 1–14. http:
//dl.acm.org/citation.cfm?id=1298455.1298457
[39] Patrick O’Neil, Edward Cheng, Dieter Gawlick, and Elizabeth O’Neil.
1996. The Log-Structured Merge-Tree (LSM-Tree). In Acta Informatica.
[40] John Ousterhout, Arjun Gopalan, Ashish Gupta, Ankita Kejriwal, Collin
Lee, Behnam Montazeri, Diego Ongaro, Seo Jin Park, Henry Qin,
Mendel Rosenblum, Stephen Rumble, Ryan Stutsman, and Stephen
Yang. 2015. The RAMCloud Storage System. ACM Trans. Comput.
Syst. 33, 3, Article 7 (Aug. 2015), 55 pages. https://doi.org/10.1145/
2806887
[41] Simon Peter, Jialin Li, Irene Zhang, Dan R. K. Ports, Doug Woos,
Arvind Krishnamurthy, Thomas Anderson, and Timothy Roscoe. 2014.
Arrakis: The Operating System is the Control Plane. In Proceedings
of the 11th USENIX Conference on Operating Systems Design and
Implementation (OSDI’14). USENIX Association, Berkeley, CA, USA,
1–16. http://dl.acm.org/citation.cfm?id=2685048.2685050
[42] Thanumalayan Sankaranarayana Pillai, Vijay Chidambaram, Ramnatthan Alagappan, Samer Al-Kiswany, Andrea C. Arpaci-Dusseau,
and Remzi H. Arpaci-Dusseau. 2014. All File Systems Are Not Created
Equal: On the Complexity of Crafting Crash-consistent Applications.

SOSP’17, October 2017, Shanghai, China
In Proceedings of the 11th USENIX Conference on Operating Systems
Design and Implementation (OSDI’14). USENIX Association, Berkeley, CA, USA, 433–448. http://dl.acm.org/citation.cfm?id=2685048.
2685082
[43] Kai Ren and Garth Gibson. 2013. TABLEFS: Enhancing Metadata Efficiency in the Local File System. In Proceedings of the
2013 USENIX Conference on Annual Technical Conference (USENIX
ATC’13). USENIX Association, Berkeley, CA, USA, 145–156. http:
//dl.acm.org/citation.cfm?id=2535461.2535480
[44] Andy M Rudoff. 2016. Deprecating the PCOMMIT Instruction.
(Sept. 2016).
https://software.intel.com/en-us/blogs/2016/09/12/
deprecate-pcommit-instruction.
[45] Stephen M. Rumble, Ankita Kejriwal, and John Ousterhout. 2014.
Log-structured Memory for DRAM-based Storage. In Proceedings
of the 12th USENIX Conference on File and Storage Technologies
(FAST’14). USENIX Association, Berkeley, CA, USA, 1–16. http:
//dl.acm.org/citation.cfm?id=2591305.2591307
[46] Linpeng Tang, Qi Huang, Wyatt Lloyd, Sanjeev Kumar, and Kai Li.
2015. RIPQ: Advanced Photo Caching on Flash for Facebook. In Proceedings of the 13th USENIX Conference on File and Storage Technologies (FAST’15). USENIX Association, Berkeley, CA, USA, 373–386.
http://dl.acm.org/citation.cfm?id=2750482.2750510
[47] Vasily Tarasov, Erez Zadok, and Spencer Shepler. 2016. Filebench: A
Flexible Framework for File System Benchmarking. USENIX ;login:
41, 1 (2016).
[48] Chandramohan A. Thekkath, Timothy Mann, and Edward K. Lee. 1997.
Frangipani: A Scalable Distributed File System. In Proceedings of the
Sixteenth ACM Symposium on Operating Systems Principles (SOSP
’97). ACM, New York, NY, USA, 224–237. https://doi.org/10.1145/

Y. Kwon et al.
268998.266694
[49] Chia-Che Tsai, Yang Zhan, Jayashree Reddy, Yizheng Jiao, Tao Zhang,
and Donald E. Porter. 2015. How to Get More Value from Your File
System Directory Cache. In Proceedings of the 25th Symposium on
Operating Systems Principles (SOSP ’15). ACM, New York, NY, USA,
441–456. https://doi.org/10.1145/2815400.2815405
[50] Haris Volos, Sanketh Nalli, Sankarlingam Panneerselvam,
Venkatanathan Varadarajan, Prashant Saxena, and Michael M.
Swift. 2014. Aerie: Flexible File-system Interfaces to Storage-class
Memory. In Proceedings of the Ninth European Conference on
Computer Systems (EuroSys ’14). ACM, New York, NY, USA, Article
14, 14 pages. https://doi.org/10.1145/2592798.2592810
[51] Scott Watanabe. 2009. Solaris 10 ZFS Essentials. Prentice Hall.
[52] Jian Xu and Steven Swanson. 2016. NOVA: A Log-structured File
System for Hybrid Volatile/Non-volatile Main Memories. In Proceedings of the 14th Usenix Conference on File and Storage Technologies (FAST’16). USENIX Association, Berkeley, CA, USA, 323–338.
http://dl.acm.org/citation.cfm?id=2930583.2930608
[53] Jun Yuan, Yang Zhan, William Jannen, Prashant Pandey, Amogh
Akshintala, Kanchan Chandnani, Pooja Deo, Zardosht Kasheff, Leif
Walsh, Michael Bender, Martin Farach-Colton, Rob Johnson, Bradley C.
Kuszmaul, and Donald E. Porter. 2016. Optimizing Every Operation in a Write-optimized File System. In 14th USENIX Conference
on File and Storage Technologies (FAST 16). USENIX Association,
Santa Clara, CA, 1–14. https://www.usenix.org/conference/fast16/
technical-sessions/presentation/yuan
[54] Yiying Zhang and Steven Swanson. 2015. A study of application
performance with non-volatile main memory. In 31st Symposium on
Mass Storage Systems and Technologies (MSST).

