[1] S. Antonatos, K. G. Anagnostakis, and E. P. Markatos,
“Generating realistic workloads for network intrusion detection systems,” SIGSOFT Softw. Eng. Notes,
vol. 29, 2004.
[2] J. B. D. Cabrera, J. Gosar, W. Lee, and R. K. Mehra,
“On the statistical distribution of processing times
in network intrusion detection,” in 2004 43rd IEEE
Conf. on Decision and Control (CDC), vol. 1, 2004.
[3] R. Mijumbi, J. Serrat, J.-L. Gorricho, N. Bouten,
F. De Turck, and R. Boutaba, “Network function virtualization: State-of-the-art and research challenges,”
IEEE Communications Surveys & Tutorials, vol. 18,
no. 1, 2015.
[4] Y. Li and M. Chen, “Software-deﬁned network function
virtualization: a survey,” IEEE Access, vol. 3, 2015.
[5] “Intel Xeon Phi product family,” http://www.intel.
com/content/www/us/en/processors/xeon/xeon-phidetail.html, accessed: 2016-12-10.
[6] “Intel vectorization tools,” https://software.intel.com/
en-us/articles/intel-vectorization-tools, accessed: 201612-10.
[7] “The importance of vectorization for Intel
Many Integrated Core Architecture (Intel MIC
architecture),”
https://software.intel.com/enus/articles/the-importance-of-vectorization-for-intelmany-integrated-core-architecture-intel-mic, accessed:
2016-12-10.
[8] T. Mytkowicz, M. Musuvathi, and W. Schulte, “Dataparallel ﬁnite-state machines,” in Proc. of the 19th
International Conference on Architectural Support for
Programming Languages and Operating Systems, ser.
ASPLOS ’14. ACM, 2014.
[9] E. Sitaridi, O. Polychroniou, and K. A. Ross, “SIMDaccelerated regular expression matching,” in Proc. of
the 12th Int. Workshop on Data Management on New
Hardware, ser. DaMoN ’16. ACM, 2016.
[10] P. Jiang and G. Agrawal, “Combining SIMD and
Many/Multi-core parallelism for ﬁnite state machines
with enumerative speculation,” in Proceedings of the
22Nd ACM SIGPLAN Symposium on Principles and
Practice of Parallel Programming, ser. PPoPP ’17.
ACM, 2017.
[11] A. V. Aho and M. J. Corasick, “Efﬁcient string matching: An aid to bibliographic search,” Commun. ACM,
vol. 18, no. 6, Jun. 1975.
[12] B. Choi, J. Chae, M. Jamshed, K. Park, and D. Han,
“DFC: Accelerating string pattern matching for network applications,” in 13th USENIX Symposium on
Networked Systems Design and Implementation (NSDI
16). USENIX Association, 2016.
[13] I. Moraru and D. G. Andersen, “Exact pattern matching
with feed-forward bloom ﬁlters,” J. Exp. Algorithmics,
vol. 17, Sep. 2012.
[14] “Snort rules and IDS software download,” https://www.
snort.org/downloads, accessed: 2016-12-10.
[15] “Scaling CloudFlare’s massive WAF,” https://www.
scalescale.com/scaling-cloudﬂares-massive-waf/,
accessed: 2016-12-10.
[16] “Gather Scatter operations,” http://insidehpc.com/2015/
05/gather-scatter-operations/, accessed: 2016-12-10.
[17] O. Polychroniou, A. Raghavan, and K. A. Ross,
“Rethinking SIMD vectorization for in-memory
databases,” in Proc. of the 2015 ACM SIGMOD
Int. Conf. on Management of Data, ser. SIGMOD ’15.
ACM, 2015.
[18] J. Hofmann, J. Treibig, G. Hager, and G. Wellein,
“Comparing the performance of different x86 SIMD
instruction sets for a medical imaging application
on modern multi- and manycore chips,” in Proc. of
the 2014 Workshop on Programming Models for
SIMD/Vector Processing, ser. WPMVP ’14. ACM,
2014.

[19] O. Polychroniou and K. A. Ross, “Vectorized Bloom
ﬁlters for advanced SIMD processors,” in Proc. of the
Tenth Int. Workshop on Data Management on New
Hardware, ser. DaMoN ’14. ACM, 2014.
[20] M. Roesch, “Snort - lightweight intrusion detection
for networks,” in Proc. of the 13th USENIX Conf. on
System Administration. USENIX Association, 1999.
[21] A. Shiravi, H. Shiravi, M. Tavallaee, and A. A. Ghorbani, “Toward developing a systematic approach to
generate benchmark datasets for intrusion detection,”
Computers & Security, vol. 31, no. 3, 2012.
[22] “UNB ISCX intrusion detection evaluation dataset,”
http://www.unb.ca/research/iscx/dataset/iscx-IDSdataset.html, accessed: 2016-12-10.
[23] “DARPA intrusion detection data sets,” https://www.ll.
mit.edu/ideval/data/, accessed: 2016-12-10.
[24] M. V. Mahoney and P. K. Chan, “An analysis of the
1999 DARPA/Lincoln Laboratory evaluation data for
network anomaly detection,” in Int. Workshop on
Recent Advances in Intrusion Detection. Springer,
2003.
[25] G. M. Amdahl, “Validity of the single processor approach to achieving large scale computing capabilities,”
in Proc. of the April 18-20, 1967, Spring Joint Computer Conference, ser. AFIPS ’67 (Spring). ACM,
1967.
[26] M. Norton, “Optimizing pattern matching for intrusion
detection,” Sourceﬁre, Inc., Columbia, MD, 2004.
[27] S. Wu and U. Manber, “A fast algorithm for multipattern searching,” University of Arizona. Department
of Computer Science, Tech. Rep. TR-94-17, 1994.
[28] S. Faro and M. O. Külekci, Fast Multiple String Matching Using Streaming SIMD Extensions Technology.
Springer, 2012.
[29] D. P. Scarpazza, O. Villa, and F. Petrini, “Peakperformance DFA-based string matching on the Cell
processor,” in 2007 IEEE International Parallel and
Distributed Processing Symposium, 2007.
[30] G. Vasiliadis, S. Antonatos, M. Polychronakis, E. P.
Markatos, and S. Ioannidis, Gnort: High Performance
Network Intrusion Detection Using Graphics Processors. Springer, 2008.
[31] C. S. Kouzinopoulos and K. G. Margaritis, “String
matching on a multicore GPU using CUDA,” in Informatics, PCI’09. 13th Panhellenic Con. on. IEEE,
2009.
[32] I. Sourdis and D. Pnevmatikatos, “Pre-decoded CAMs
for efﬁcient and high-speed nids pattern matching,”
in Field-Programmable Custom Computing Machines,
FCCM 2004. 12th Annual IEEE Symposium on, 2004.