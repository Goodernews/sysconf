[1] R. Bryant, R. Katz, and E. Lazowska. Big-data computing: Creating
revolutionary breakthroughs in commerce, science and society.
[Online]. Available: http://cra.org/ccc/wp-content/uploads/sites/2/2015/
05/Big Data.pdf
[2] N. Kim, Z. Zheng, S. Elmetwaly, and T. Schlick, “Rna graph partitioning
for the discovery of rna modularity: A novel application of graph
partition algorithm to biology,” PLoS ONE, vol. 9, no. 9, 2014.
[3] J. Ehm, B. Scholz-Reiter, T. Makuschewitz, and E. M. Frazzon, “Graphbased integrated production and intermodal transport scheduling with
capacity restrictions,” CIRP Journal of Manufacturing Science and
Technology, vol. 9, pp. 23–30, 2015.
[4] R. Puzis, Y. Altshuler, Y. Elovici, S. Bekhor, Y. Shiftan, and A. Pentland,
“Augmented betweenness centrality for environmentally aware trafﬁc
monitoring in transportation networks,” Journal of Intelligent Transportation Systems, vol. 17, pp. 91–105, 2013.
[5] B. Yao, X. Xiao, F. Li, and Y. Wu, “Dynamic monitoring of optimal
locations in road network databases,” The International Journal on Very
Large Data Bases, vol. 23, no. 5, pp. 697–720, 2014.
[6] P. Santi, G. Resta, M. Szell, S. Sobolevsky, S. H. Strogatz, and C. Ratti,
“Quantifying the beneﬁts of vehicle pooling with shareability networks,”
Proceedings of the National Academy of Sciences of the United States
of America (PNAS), vol. 11, no. 37, p. 1329013294, 2014.
[7] D. M. Romero, W. Galuba, S. Asur, and B. A. Huberman, “Inﬂuence and
passivity in social media,” in Proceedings of International Conference
Companion on World Wide Web (WWW’11), 2011, pp. 113–114.
[8] S. Ghemawat and J. Dean, “Mapreduce: simpliﬁed data processing on
large clusters,” Communications of the ACM, vol. 51, no. 3, pp. 107–113,
2008.
[9] J. Lin and M. Schatz, “Design patterns for efﬁcient graph algorithms
in MapReduce,” in Proceddings of Workshop on Mining and Learning
with Graphs, 2010.
[10] E. J. Gonzalez, L. Yucheng, G. Haijie, B. Danny, and G. Carlos,
“Powergraph: Distributed graph-parallel computation on natural graphs,”
in Proceedings of Conference on Operating Systems Design and Implementation (OSDI’12), 2012, pp. 17–30.
[11] G. Malewicz, M. H. Austern, A. J. Bik, J. C. Dehnert, I. Horn, N. Leiser,
and G. Czajkowski, “Pregel: A system for large-scale graph processing,”
in Proceddings of Conference on Management of Data (SIGMOD’10),
2010, pp. 135–146.
[12] L. G. Valiant, “A bridging model for parallel computation,” Commun.
ACM, vol. 33, no. 8, pp. 103–111, 1990.
[13] Apache. Giraph. [Online]. Available: http://giraph.apache.org/
[14] S. Salihoglu. GPS: Graph processing system. [Online]. Available:
http://infolab.stanford.edu/gps/
[15] R. S. Xin, J. E. Gonzalez, M. J. Franklin, and I. Stoica, “GraphX: A
resilient distributed graph system on spark,” in Proceddings of Workshop
on Graph Data Management Experience and Systems (GRADES’13),
2013.
[16] B. Yegnanarayana, Artiﬁcial Neural Networks. Prentice-Hall of India
Pvt.Ltd, 2004.
[17] A. Karatzoglou and D. Meyer, “Support vector machines in r,” Journal
of Statistical Software, vol. 15, 2006.
[18] S. Salihoglu and J. Widom, “GPS: A graph processing system,” in
Proceddings of Conference on Advances in Social Networks Analysis
and Mining (ASONAM’12), 2012.
[19] A. Lumsdaine, D. Gregor, B. Hendrickson, and J. Berry, “Challenges
in parallel graph processing,” PARALLEL PROCESSING LETTERS,
vol. 17, pp. 5–20, 2007.
[20] M. Han, K. Daudjee, K. Ammar, M. T. Özsu, X. Wang, and T. Jin,
“An experimental comparison of pregel-like graph processing systems,”
Proceedings of VLDB Endowment, vol. 7, no. 12, pp. 1047–1058, 2014.
[21] Apache. Mina. [Online]. Available: http://mina.apache.org
[22] D. Fylstra, L. Lasdon, J. Watson, and A. Waren, “Design and use of the
microsoft excel solver,” Interfaces, vol. 28, no. 5, pp. 29–55, 1998.
[23] S. Shalev-Shwartz and S. Ben-David, Understanding Machine Learning:
From Theory to Algorithms. Cambridge University Press, 2014.
[24] W. Dawoud, I. Takouna, and C. Meined, “Elastic virtual machine
for ﬁne-grained cloud resource provisioning,” in Global Trends in
Computing and Communication Systems. Springer, 2012, pp. 11–25.
[25] A. M. Jubril, “A nonlinear weights selection in weighted sum for convex
multiobjective optimization,” Ser. Math. Inform, vol. 27, pp. 357–372,
2012.
[26] Apache. Hadoop. [Online]. Available: http://hadoop.apache.org/
[27] Xen project. [Online]. Available: http://xenproject.org/
[28] D. Rajan and D. Thain, “Designing self-tuning split-map-merge applications for high cost-efﬁciency in the cloud,” IEEE Transactions on Cloud
Computing, vol. 99, 2015.
[29] A. Greenberg, J. Hamilton, D. A. Maltz, and P. Patel, “The cost of a
cloud: Research problems in data center networks,” SIGCOMM Comput.
Commun. Rev., vol. 39, pp. 68–73, 2008.
[30] T. de Paula Peixoto. Graph-tool - an efﬁcient python module for
manipulation and statistical analysis of graphs. [Online]. Available:
https://graph-tool.skewed.de/
[31] J. Leskovec. SNAP:stanford network analysis project. [Online].
Available: http://snap.stanford.edu/
[32] J. Kunegis. Koblenz network collection (konect). [Online]. Available:
http://konect.uni-koblenz.de/networks/
[33] A. Ching, S. Edunov, M. Kabiljo, D. Logothetis, and S. Muthukrishnan,
“One trillion edges: Graph processing at facebook-scale,” Proc. VLDB
Endow., vol. 8, no. 12, pp. 1804–1815, 2015.
[34] M. Wu, F. Yang, J. Xue, W. Xiao, Y. Miao, L. Wei, H. Lin, Y. Dai,
and L. Zhou, “Gram: Scaling graph computation to the trillions,”
in Proceedings of the Sixth ACM Symposium on Cloud Computing
(SoCC’15), 2015, pp. 408–421.
[35] Y. Lu, J. Cheng, D. Yan, and H. Wu, “Large-scale distributed graph
computing systems: An experimental evaluation,” Proc. VLDB Endow.,
vol. 8, no. 3, pp. 281–292, 2014.
[36] Y. Guo, M. Biczak, A. L. Varbanescu, A. Iosup, C. Martella, and T. L.
Willke, “How well do graph-processing platforms perform? an empirical
performance evaluation and analysis,” in Proceedings of the 2014
IEEE 28th International Parallel and Distributed Processing Symposium
(IPDPS’14), 2014, pp. 395–404.
[37] A. Abdolrashidi, L. Ramaswamy, and D. S. Narron, “Performance
modeling of computation and communication tradeoffs in vertex-centric
graph processing clusters,” in Procs of International Conference on
Collaborative Computing: Networking, Applications and Worksharing,
2014.
[38] R. Chen, J. Shi, Y. Chen, and H. Chen, “Powerlyra: Differentiated graph
computation and partitioning on skewed graphs,” in Proceedings of the
Tenth European Conference on Computer Systems (EuroSys’15), 2015,
pp. 1:1–1:15.
[39] J. Xue, Z. Yang, Z. Qu, S. Hou, and Y. Dai, “Seraph: An efﬁcient,
low-cost system for concurrent graph processing,” in Proceedings of
Symposium on High-performance Parallel and Distributed Computing
(HPDC’14), 2014, pp. 227–238.
[40] M. Redekopp, Y. Simmhan, and V. Prasanna, “Optimizations and analysis of BSP graph processing models on public clouds,” in Proceedings of
International Symposium on Parallel & Distributed Processing (IPDPS’13), 2013, pp. 203–214.
[41] Z. Li, R. Duan, L. Wang, S. Lu, Z. Qin, and R. S. M. Goh, “Hierarchical
parallelization and runtime scheduling for pregel-like graph processing
systems,” in Proceedings of the 2014 IEEE 6th International Conference
on Cloud Computing Technology and Science (CLOUDCOM’14), 2014,
pp. 491–498.
[42] M. Then, M. Kaufmann, F. Chirigati, T.-A. Hoang-Vu, K. Pham,
A. Kemper, T. Neumann, and H. T. Vo, “The more the merrier: Efﬁcient
multi-source graph traversal,” Proc. VLDB Endow., vol. 8, no. 4, pp.
449–460, 2014.
[43] D. Yuan, Y. Yang, X. Liu, and J. Chen, “A cost-effective strategy
for intermediate data storage in scientiﬁc cloud workﬂow systems,”
in Proceedings of International Symposium on Parallel & Distributed
Processing (IPDPS’10), 2010, pp. 1–12.
[44] Z. Wu, M. Butkiewicz, D. Perkins, E. Katz-Bassett, and H. V. Madhyastha, “Spanstore: Cost-effective geo-replicated storage spanning multiple cloud services,” in Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles (SOSP’13), 2013, pp. 292–308.
[45] A. C. Zhou and B. He, “Transformation-based monetary cost optimizations for workﬂows in the cloud,” IEEE Transactions on Cloud
Computing, vol. 2, no. 1, 2014.
[46] T. Duong, J. Zhong, W. Cai, Z. Li, and S. Zhou, “Ra2: Predicting simulation execution time for cloud-based design space explorations,” in Procs
of Symposium on Distributed Simulation and Real-Time Applications
(DS-RT ’16), 2016.
[47] D. Pandiarajan and D. Thain, “Designing self-tuning split-map-merge
applications for high cost-efﬁciency in the cloud,” IEEE Transactions
on Cloud Computing, no. 99, 2015.