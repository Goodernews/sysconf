[1] ECMAScript. http:/Awww.ecmascript.org/.

[2] JavaScriptCore. https://trac.webkit.org/wiki/JavaScriptCore.

[3] Node.js. https://nodejs.org/.

[4] Octane Benchmark. https://developers.google.com/octane/.

[5] Python Programming Language. https://www.python.org/.

[6] Ruby on Rails. http://rubyonrails.org/.

[7] Ruby Programming Language. https://www.ruby-lang.org/.

[8] SunSpider Benchmark. https://webkit.org/perf/sunspider/sunspider.html.

[9] The Chromium Projects. https:/Awww.chromium.org/.
[10] Tizen. https://www.tizen.org/.
[11] V8 JavaScript Engine. https://developers.google.com/v8/.
[12] Varun Agrawal, Abhiroop Dabral, Tapti Palit, Yongming Shen, and Michael
Ferdman. 2015. Architectural Support for Dynamic Linking. In Proceedings of
the Twentieth International Conference on Architectural Support for Programming
Languages and Operating Systems (ASPLOS ’15). ACM, New York, NY, USA,
691-702. https://doi.org/10.1145/2694344.2694392
[13] Wonsun Ahn, Jiho Choi, Thomas Shull, Maria J. Garzaran, and Josep Torrellas.
2014, Improving JavaScript Performance by Deconstructing the Type System. In
Proceedings of the 35th ACM SIGPLAN Conference on Programming Language
Design and Implementation (PLDI ’ 14). ACM, New York, NY, USA, 496-507.
https://doi.org/10.1145/2594291 2594332
[14] Owen Anderson, Emily Fortuna, Luis Ceze, and Susan Eggers. 2011. Checked
Load: Architectural Support for JavaScript Type-checking on Mobile Processors.
In Proceedings of the 2011 IEEE 17th International Symposium on High Performance Computer Architecture (HPCA ’11). 419-430. https://doi.org/10.1109/
HPCA.2011.5749748
[15] Benedikt Meurer. 2017. V8: Behind the Scenes (February Edition feat. A tale of
TurboFan). http://benediktmeurer.de/2017/03/01/v8-behind-the-scenes-februaryedition/. (March 2017).
[16] Burton H. Bloom. 1970. Space/Time Trade-offs in Hash Coding with Allowable
Errors. Commun. ACM 13, 7 (July 1970), 422-426. https://doi.org/10.1145/
362686.362692
[17] Trevor E. Carlson, Wim Heirman, Stijn Eyerman, Ibrahim Hur, and Lieven
Eeckhout. 2014. An Evaluation of High-Level Mechanistic Core Models.
ACM Trans. Archit. Code Optim. 11, 3, Article 28 (Aug. 2014), 25 pages.
https://doi.org/10.1145/2629677

[18] Gaurav Chadha, Scott Mahlke, and Satish Narayanasamy. 2015. Accelerating
Asynchronous Programs Through Event Sneak Peek. In Proceedings of the 42Nd
Annual International Symposium on Computer Architecture (ISCA ’15). ACM,
New York, NY, USA, 642-654. https://doi.org/10.1145/2749469.2750373

[19] Craig Chambers, David Ungar, and Elgin Lee. 1989. An Efficient Implementation
of SELF, a Dynamically-typed Object-oriented Language Based on Prototypes. In
Conference Proceedings on Object-oriented Programming Systems, Languages
and Applications (OOPSLA 89). ACM, New York, NY, USA, 49-70. https:
/doi.org/10.1145/74877.74884

[20] L. Peter Deutsch and Allan M. Schiffman. 1984. Efficient Implementation of
the Smalltalk-80 System. In Proceedings of the 11th ACM SIGACT-SIGPLAN
Symposium on Principles of Programming Languages (POPL ’84). ACM, New
York, NY, USA, 297-302. https://doi.org/10.1145/800017.800542

[21] Gem Dot, Alejandro Martinez, and Antonio Gonzalez. 2016. ERICO: Effective
Removal of Inline Caching Overhead in Dynamic Typed Languages. In Proceedings of the 2016 IEEE 23rd International Conference on High Performance
Computing (HiPC ’ 16). 372-381. https://doi.org/10.1109/HiPC.2016.050

[22] Chen Lei Faroog, Muhammad Umar and Lizy K. John. 2010. Value Based BTB
Indexing for Indirect Jump Prediction. In Proceedings of the 2010 IEEE 16th
International Symposium on High Performance Computer Architecture (HPCA
710). 1-11. https://doi.org/10.1109/HPCA.2010.5416659

[23] Urs Hélzle, Craig Chambers, and David Ungar. 1991. Optimizing DynamicallyTyped Object-Oriented Languages With Polymorphic Inline Caches. In Proceedings of the European Conference on Object-Oriented Programming (ECOOP ’91).
Springer-Verlag, London, UK, UK, 21-38. http://dl.acm.org/citation.cfm?id=
646149.679193

[24] José A. Joao, Onur Mutlu, Hyesoon Kim, Rishi Agarwal, and Yale N. Patt.
2008. Improving the Performance of Object-oriented Languages with Dynamic Predication of Indirect Jumps. In Proceedings of the 13th International
Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS XIII). ACM, New York, NY, USA, 80-90. https:
//doi.org/10.1145/134628 1.1346293

[25] Channoh Kim, Sungmin Kim, Hyeon Gyu Cho, Dooyoung Kim, Jachyeok Kim,
Young H. Oh, Hakbeom Jang, and Jae W. Lee. 2016. Short-Circuit Dispatch: Accelerating Virtual Machine Interpreters on Embedded Processors. In Proceedings
of the 43rd Annual International Symposium on Computer Architecture (ISCA
’16). 291-303. https://doi.org/10.1109/ISCA.2016.34

[26] Hyesoon Kim, José A. Joao, Onur Mutlu, Chang Joo Lee, Yale N. Patt, and
Robert Cohn. 2007. VPC Prediction: Reducing the Cost of Indirect Branches via
Hardware-based Dynamic Devirtualization. In Proceedings of the 34th Annual
International Symposium on Computer Architecture (ISCA ’07). ACM, New York,
NY, USA, 424-435. hittps://doi.org/10.1145/1250662.1250715

[27] Johnny K. F. Lee and Alan Jay Smith. 1984. Branch Prediction Strategies and
Branch Target Buffer Design. Computer 17, 1 (Jan. 1984), 6-22. https://doi.org/
10.1109/MC.1984.1658927

[28] Chi-Keung Luk, Robert Cohn, Robert Muth, Harish Patil, Artur Klauser, Geoff
Lowney, Steven Wallace, Vijay Janapa Reddi, and Kim Hazelwood. 2005. Pin:
Building Customized Program Analysis Tools with Dynamic Instrumentation. In
Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language
Design and Implementation (PLDI ’05). ACM, New York, NY, USA, 190-200.
https://doi.org/10.1145/1065010.1065034

[29] Mojtaba Mehrara, Po-Chun Hsu, Mehrzad Samadi, and Scott Mahlke. 2011.
Dynamic Parallelization of JavaScript Applications Using an Ultra-lightweight
Speculation Mechanism. In Proceedings of the 2011 IEEE 17th International
Symposium on High Performance Computer Architecture (HPCA ’11), TEEE
Computer Society, Washington, DC, USA, 87-98. http://dl.acm.org/citation.cfm?
id=2014698.2014898

[30] Mojtaba Mehrara and Scott Mahlke. 2011. Dynamically Accelerating Clientside Web Applications Through Decoupled Execution. In Proceedings of the
9th Annual IEEE/ACM International Symposium on Code Generation and Optimization (CGO ’11). IEEE Computer Society, Washington, DC, USA, 74-84.
http://dl.acm.org/citation.cfm?id=2 190025.2190055

[31] Kristen Nygaard and Ole-Johan Dahl. 1978. The Development of the SIMULA
Languages. SIGPLAN Not. 13, 8 (Aug. 1978), 245-272. https://doi.org/10.1145/
960118.808391

[32] Yuhao Zhu, Daniel Richins, Matthew Halpern, and Vijay Janapa Reddi. 2015.
Microarchitectural Implications of Event-driven Server-side Web Applications. In
Proceedings of the 48th International Symposium on Microarchitecture (MICRO48). ACM, New York, NY, USA, 762-774. https://doi.org/10.1145/2830772.
2830792