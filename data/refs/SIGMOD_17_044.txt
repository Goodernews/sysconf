[1] K. S. Bøgh, I. Assent, and M. Magnani. Efficient
GPU-based skyline computation. In DaMoN, pages 5:1–6,
2013.
[2] K. S. Bøgh, S. Chester, and I. Assent. Work-efficient
parallel skyline computation for the GPU. PVLDB,
8(9):962–973, 2015.
[3] K. S. Bøgh, S. Chester, and I. Assent. SkyAlign: a
portable, work-efficient skyline algorithm for multicore and
GPU architectures. VLDB J, 25(6):817–841, 2016.
[4] K. S. Bøgh, S. Chester, D. Šidlauskas, and I. Assent.
Hashcube: A data structure for space- and query-efficient
skycube compression. In CIKM, pages 1767–1770, 2014.
[5] S. Börzsönyi, D. Kossman, and K. Stocker. The skyline
operator. In ICDE, pages 421–430, 2001.
[6] S. Breß, M. Heimel, N. Siegmund, L. Bellatreche, and
G. Saake. Gpu-accelerated database systems: Survey and
open challenges. Trans. Large-Scale Data- and
Knowledge-Centered Systems, 15:1–35, 2014.
[7] L. Chen and X. Lian. Dynamic skyline queries in metric
spaces. In EDBT, pages 333–343, 2008.
[8] S. Chester, D. Šidlauskas, I. Assent, and K. S. Bøgh.
Scalable parallelization of skyline computation for
multi-core processors. In ICDE, pages 1083–1094, 2015.
[9] S.-R. Cho, J. Lee, S.-W. Hwang, H. Han, and S.-W. Lee.
VSkyline: Vectorization for efficient skyline computation.
SIGMOD Rec., 39(2):19–26, 2010.
[10] W. Choi, L. Liu, and B. Yu. Multi-criteria decision making
with skyline computation. In IRI, pages 316–323, 2012.
[11] J. Chomicki, P. Ciaccia, and N. Meneghetti. Skyline
queries, front and back. SIGMOD Rec., 42(3):6–18, 2013.
[12] M. Endres and W. Kießling. High parallel skyline
computation over low-cardinality domains. In ADBIS,
pages 97–111, 2014.
[13] M. Endres, P. Roocks, and W. Kießling. Scalagon: An
efficient skyline algorithm for all seasons. In DASFAA,
pages 292–308, 2015.
[14] E. Gamma, R. Helm, R. Johnson, and J. Vlissides. Design
Patterns: Elements of Reusable Object-Oriented Software,
pages 325–330. Addison-Wesley, 1994.
[15] J. He, S. Zhang, and B. He. In-cache query co-processing
on coupled CPU-GPU architectures. PVLDB,
8(4):329–340, 2014.
[16] M. Heimel, M. Saecker, H. Pirk, S. Manegold, and
V. Markl. Hardware-oblivious parallelism for in-memory
column-stores. PVLDB, 6(9):709–720, 2013.
[17] H. Im, J. Park, and S. Park. Parallel skyline computation
on multicore architectures. Inf. Syst., 36(4):808–823, 2011.
[18] W. Jin, A. K. H. Tung, M. Ester, and J. Han. On efficient
processing of subspace skyline queries on high dimensional
data. In SSDBM, pages 1–12, 2007.
[19] G. T. Kailasam, J.-S. Lee, J.-W. Rhee, and J. Kang.
Efficient skycube computation using point and
domain-based filtering. Inf. Sci., 180(7):1090–1103, 2010.
[20] H. Köhler, J. Yang, and X. Zhou. Efficient parallel skyline
processing using hyperplane projections. In SIGMOD,
pages 85–96, 2011.
[21] J. Lee and S.-w. Hwang. BSkyTree: scalable skyline
computation using a balanced pivot selection. In EDBT,
pages 195–206, 2010.
[22] J. Lee and S.-w. Hwang. QSkycube: efficient skycube
computation using point-based space partitioning. PVLDB,
4(3):185–196, 2010.
[23] J. Lee and S.-w. Hwang. Scalable skyline computation
using a balanced pivot selection technique. Inf. Sys.,
39:1–24, 2014.
[24] J. Lee and S.-w. Hwang. Toward efficient multidimensional
subspace skyline computation. VLDB J, 23(1):129–145,
2014.
[25] Y. Li and J. M. Patel. BitWeaving: fast scans for main
memory data processing. In SIGMOD, pages 289–300, 2013.

[26] S. Liknes, A. Vlachou, C. Doulkeridis, and K. Nørvåg.
APSkyline: Improved skyline computation for multicore
architectures. In DASFAA, pages 312–326, 2014.
[27] MapD Technologies, Inc. The world’s fastest platform for
data exploration. White paper, 2016.
http://go.mapd.com/rs/116-GLR-105/images/MapD%
20Technical%20Whitepaper%20Summer%202016.pdf.
[28] S. Meraji, B. Schiefer, L. Pham, L. Chu, P. Kokosielis,
A. Storm, W. Young, C. Ge, G. Ng, and K. Kanagaratnam.
Towards a hybrid design for fast query processing in DB2
with BLU acceleration using graphical processing units: A
technology demonstration. In SIGMOD, pages 1951–1960,
2016.
[29] S. Park, T. Kim, J. Park, J. Kim, and H. Im. Parallel
skyline computation on multicore architectures. In ICDE,
pages 760–771, 2009.
[30] J. Pei, W. Jin, M. Ester, and Y. Tao. Catching the best
views of the skyline: a semantic approach based on decisive
subspaces. In VLDB, pages 253–264, 2005.
[31] J. Pei, Y. Yuan, X. Lin, W. Jin, M. Ester, Q. Liu,
W. Wang, Y. Tao, J. X. Yu, and Q. Zhang. Towards
multidimensional subspace skyline analysis. TODS,
31(4):1335–1381, 2006.
[32] H. Pirk, S. Manegold, and M. L. Kersten. Waste not...
efficient co-processing of relational data. In ICDE, pages
508–519, 2014.
[33] J. Power, Y. Li, M. D. Hill, J. M. Patel, and D. A. Wood.
Toward GPUs being mainstream in analytic processing: An
initial argument using simple scan-aggregate queries. In
DaMoN, pages 11:1–11:8, 2015.
[34] C. Raı̈ssi, J. Pei, and T. Kister. Computing closed
skycubes. PVLDB, 3(1):838–847, 2010.
[35] Y. Tao, X. Xiao, and J. Pei. SUBSKY: Efficient
computation of skylines in subspaces. In ICDE, pages
65–74, 2006.
[36] R. R. Veloso, L. Cerf, C. Raı̈ssi, and W. Meira Jr.
Distributed skycube computation with anthill. In
SBAC-PAD, pages 33–40, 2011.
[37] A. Vlachou, C. Doulkeridis, Y. Kotidis, and
M. Vazirgiannis. SKYPEER: Efficient subspace skyline
computation over distributed data. In ICDE, pages
416–425, 2007.
[38] L. Woods, G. Alonso, and J. Teubner. Parallel computation
of skyline queries. In FCCM, pages 1–8, 2013.
[39] T. Xia and D. Zhang. Refreshing the sky: the compressed
skycube with efficient support for frequent updates. In
SIGMOD, pages 491–502, 2006.
[40] T. Xia, D. Zhang, Z. Fang, C. Chen, and J. Wang. Online
subspace skyline query processing using the compressed
skycube. TODS, 37(2), 2012.
[41] Y. Yuan, X. Lin, Q. Liu, W. Wang, J. X. Yu, and
Q. Zhang. Efficient computation of the skyline cube. In
VLDB, pages 241–252, 2005.
[42] K. Zhang, D. Yang, H. Gao, J. Li, H. Wang, and Z. Cai.
VMPSP: Efficient skyline computation using VMP-based
space partitioning. In DASFAA Workshops, pages 179–193,
2016.
[43] S. Zhang, N. Mamoulis, and D. W. Cheung. Scalable
skyline computation using object-based space partitioning.
In SIGMOD, pages 483–494, 2009.

