[1] ]3D XPoint Technology Revolutionizes Storage
Memory. http://www.intel.com/content/
www/us/en/architecture-and-technology/
3d-xpoint-technology-animation.html,
2015.

[2] K. Agrawal, C. E. Leiserson, and J. Sukha. Memory
Models for Open-nested Transactions. In Proceedings of the 2006 Workshop on Memory System Performance and Correctness, MSPC ’06, pages 70-81,
2006.

[3] J. Arulraj, A. Pavlo, and S. Dulloor. Let’s Talk
About Storage & Recovery Methods for NonVolatile Memory Database Systems. In Proceedings
of the 2015 ACM SIGMOD International Conference on Management of Data, pages 707-722, 2015.

[4] B. Bridge. NVM-Direct library. https: //github.
com/oracle/NVM-Direct, 2015.

[5] Z. Caklovic. Bringing Persistent Memory Technology to SAP HANA: Opportunities and Challenges.
In Annual SNIA Persistent Memory Summit, 2017.

[6] D. R. Chakrabarti, H. Boehm, and K. Bhandari. Atlas: leveraging locks for non-volatile memory consistency. In Proceedings of the 2014 ACM International Conference on Object Oriented Programming
Systems Languages & Applications, OOPSLA 2014,
part of SPLASH 2014, Portiand, OR, USA, October
20-24, 2014, pages 433-452, 2014.

[7] A. Chatzistergiou, M. Cintra, and S. D. Viglas.
REWIND: recovery write-ahead system for inmemory non-volatile data-structures. PVLDB,
8(5):497-508, 2015.

[8] J. Coburn, A. M. Caulfield, A. Akel, L. M. Grupp,
R. K. Gupta, R. Jhala, and S. Swanson. NV-Heaps:
Making Persistent Objects Fast and Safe with Nextgeneration, Non-volatile Memories. In Proceedings
of the Sixteenth International Conference on Architectural Support for Programming Languages and
Operating Systems, pages 105-118, 2011.

[9] B. F. Cooper, A. Silberstein, E. Tam, R. Ramakrishnan, and R. Sears. Benchmarking cloud serving
systems with YCSB. In Proceedings of the Ist ACM
Symposium on Cloud Computing, pages 143-154,
2010.
[10] J. Corbet. Supporting filesystems in persistent memory. https://lwn.net/Articles/
610174/, 2014.

[11] G. DeCandia, D. Hastorun, M. Jampani, G. Kakulapati, A. Lakshman, A. Pilchin, S$. Sivasubramanian,
P. Vosshall, and W. Vogels. Dynamo: Amazon’s
highly available key-value store. In Proceedings
of the 21st ACM Symposium on Operating Systems
Principles 2007, pages 205—220, 2007.

[12] S. Dulloor, S. Kumar, A. Keshavamurthy, P. Lantz,
D. Reddy, R. Sankaran, and J. Jackson. System
software for persistent memory. In 9th EuroSys
Conference, page 15, 2014.

[13] Everspin: The MRAM Company. https: //www.
everspin.com/.

[14] B. Fitzpatrick. Distributed caching with memcached.
Linux Journal, 2004(124), 2004.

[15] E. Giles, K. Doshi, and P. J. Varman. SoftWrAP:
A lightweight framework for transactional support
of storage class memory. In JEEE 31st Symposium
on Mass Storage Systems and Technologies, MSST
2015, Santa Clara, CA, USA, May 30 - June 5, 2015,
pages 1-14, 2015.

[16] A. Goel, B. Chopra, C. Gerea, D. Matani, J. Metzler,
F. Ul Haq, and J. Wiener. Fast Database Restarts at
Facebook. In Proceedings of the 2014 ACM SIGMOD International Conference on Management of
Data, SIGMOD °14, pages 541-549, 2014.

[17] M. Herlihy and E. Koskinen. Transactional boosting:
a methodology for highly-concurrent transactional
objects. In Proceedings of the 13th ACM SIGPLAN
Symposium on Principles and Practice of Parallel
Programming, PPOPP 2008, Salt Lake City, UT,
USA, February 20-23, 2008, pages 207-216, 2008.

[18] M. Hosomi, H. Yamagishi, T. Yamamoto, K. Bessho,
Y. Higo, K. Yamane, H. Yamada, M. Shoji,
H. Hachino, C. Fukumoto, H. Nagao, and H. Kano.
A novel nonvolatile memory with spin torque transfer magnetization switching: Spin-RAM. Jnternational Electron Devices Meeting, pages 459-462,
2005.

[19] Y. Huai. Spin-Transfer Torque MRAM (STTMRAM): Challenges and Prospects. AAPPS Bulletin, 18(6):33-40, 2008.
[20] A. Kolli, S. Pelley, A. Saidi, P, M. Chen, and T. F.
Wenisch. High-Performance Transactions for Persistent Memories. In 2/th ACM International Conference on Architectural Support for Programming
Languages and Operating Systems, 2016.

[21] A. Lakshman and P. Malik. Cassandra: A Decentralized Structured Storage System. SIGOPS Operating
Systems Review, 44(2):35—40, 2010.

[22] LevelDB — a fast and lightweight key/value database
library. http: //leveldb.org/.

[23] Memcached — a distributed memory object caching
system. https: //memcached.org/.

[24] J. E. B. Moss. Nested Transactions: An Approach to
Reliable Distributed Computing. Technical report,
Massachusetts Institute of Technology, Cambridge,
MA, USA, 1981.

[25] Nantero. http: //www.nantero.com/.

[26] I. Oukid, W. Lehner, T. Kissinger, T. Willhalm, and
P. Bumbulis. Instant recovery for main memory
databases. In 7th Biennial Conference on Innovative
Data Systems Research, 2015.

[27] pmem.io: Persistent Memory Programming. http:
//pmem.io/, 2015.

[28] Redis — in-memory data structure store, http: //
redis.io/.

[29] A. Rudoff.
MIT instruction.
Deprecating the PCOMhttps://software.
intel. com/en-us/blogs/2016/09/12/
deprecate-pcommit-instruction.

[30] D. B. Strukov, G. S. Snider, D. R. Stewart, and R. S.
Williams. The missing Memristor found. Nature,
453:80-83, 2008.

[31] The SNIA NVM Programming Technical
Working Group. NVM Programming Model
(Version 1.0.0 Revision 10), Working Draft.
http://snia.org/sites/default/files/
NVMProgrammingModel_viri0DRAFT . pdf,

2013.

[32] Transactional Memory in GCC. https://gec.
gnu. org/wiki/TransactionalMemory.

[33] H. Volos, A. J. Tack, and M. M. Swift. Mnemosyne:
lightweight persistent memory. In Proceedings of
the 16th International Conference on Architectural
Support for Programming Languages and Operating

Systems, pages 91-104, 2011.

[34] M. Wong (Editor). Working Draft, Technical
Specification for C++ Extensions for Transactional
Memory. http://www.open-std.org/jtc1/
sc22/wg21/docs/papers/2014/n4301 . pdf,
2014.

[35] Y. Zhang and S. Swanson. A study of application
performance with non-volatile main memory. In
IEEE 31st Symposium on Mass Storage Systems and
Technologies, pages 1-10, 2015.