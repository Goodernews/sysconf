[1] MANTHUR, A., CAO, M., AND BHATTACHARYA,
S. The New ext4 File System: Current Status and
Future Plans. In Proceedings of Linux Symposium
(2007).

[2] E4defrag - Online Defragmenter for Ext4 File System. http: //manpages.ubuntu.com/manpages/
trusty/man8/e4defrag.8.html

[3] Condusiv Diskeeper. http: //www.condusiv.
com/products/diskeeper/

[4] Auslogics Disk Defrag. http: //auslogics.com/
en/software/disk-defrag/

[5] Defraggler.
defraggler

http://www. piriform.com/

[6] Smart Defrag. http://www.iobit.com/en/
iobitsmartdefrag.php?7a

[7] Samsung SSD Performance Enhancement &
Maintenance. http: //www.samsung.com/
semiconductor/minisite/ssd/support/
fags—03. html
[8] Frequently Asked Questions for Intel Solid State
Drives. http://www.intel.com/content/www/
us/en/support/software/000006110.html
[9] Crucial SSD and HDD Support & Maintenance. http://www.crucial.com/usa/en/
support-system-maintenance-defragmenthard-drive
[10] KEHRER, O. O&O Defrag and Solid State
Drives. http://www.oo-software.com/en/
docs/whitepaper/ood_ssd.pdf
[11] LIND, A. Auslogics: How to Defrag Disk Drives
The Right Way. http://www.auslogics.com/
en/articles/how-to-defrag/
[12] Windows 8 TRIM SSD Instead of Defragmentation. http://www.eightforums.com/
tutorials/8615-optimize-drives-defraghdd-trim-ssd-windows-8-a.html
[13] Windows 10 TRIM SSD Instead of Defragmentation. http://www.tenforums.com/tutorials/
8933-optimize-defrag-drives-windows-10-a.
html
[14] Embedded MultiMediaCard (e.MMC). http:
//www.jedec.org/standards-documents/
technology-focus-areas/
flash-memory-ssds-ufs-emmc/e-mmc
[15] Universal Flash Storage (UFS). http:
//www.jedec.org/standards-documents/
focus/flash/universal-flash-storage-ufs
[16] AGRAWAL, N., PRABHAKARAN, V., WOBBER,
T., DAVIS, J. D., MANASSE, M., AND PANIGRAHY, R. Design Tradeoffs for SSD Performance.
In Proceedings of the USENIX Annual Technical
Conference (2008).
[17] KANG, J.-U., KIM, J.-S., PARK, C., PARK, H.,
AND LEE, J. A Multi-channel Architecture for
High-performance NAND Flash-based Storage System. Journal of Systems Architecture: the EUROMICRO Journal (2007).
[18] PARK, S.-H., HA, S.-H., BANG, K., AND
CHUNG, E.-Y. Design and Analysis of Flash Translation Layers for Multi-channel NAND Flash-based
Storage devices. IEEE Transactions on Consumer
Electronics (2009).
[19] HU, Y., JIANG, H., FANG, D., TIAN, L., AND
LUO, H. Performance Impact and Interplay of SSD
Parallelism Through Advanced Commands, Allocation Strategy and Data Granularity. In Proceedings
of the ACM International Conference on Supercomputing (2011), pp. 96–107.
[20] JUNG, M., AND KANDEMIR, M. T. An Evaluation of Different Page Allocation Strategies on
High-Speed SSDs. In Proceedings of the USENIX
Workshop on Hot Topics in Storage and File Systems
(2012).
[21] JUNG, M., WILSON III, E. H., AND KANDEMIR,
M. T. Physically Addressed Queueing (PAQ): Improving Parallelism in Solid State Disks. In Proceedings of the International Symposium on Computer Architecture (2012), pp. 404–415
[22] JI, C., CHANG, L., SHI, L., WU, C., LI, Q., AND
XUE, C. J. An Empirical Study of File-System Fragmentation in Mobile Storage Systems. In Proceedings of the USENIX Workshop on Hot Topics in Storage and File Systems (2016).
[23] CONWAY, A., BAKSHI, A., JIAO, Y., ZHAN, Y.,
BENDER, M. A., JANNEN, W., JOHNSON, R.,
KUSZMAUL, B. C., PORTER, D. E., YUAN, J.,
AND FARACH-COLTON, M. File Systems Fated for
Senescence? Nonsense, Says Science!. In Proceedings of the USENIX Conference on File and Storage
Technologies (2017).
[24] KINSELLA, J. The Impact of Disk Fragmentation. http://condusiv.com/disk-defrag/
fragmentation-impact/
[25] KESSLER, M. Maintaining Windows 2000
Peak Performance Through Defragmentation.
https://msdn.microsoft.com/en-us/
library/bb742585.aspx
[26] SINOFSKY, S. Disk Defragmentation
Background and Engineering the Windows 7 Improvements. https://blogs.
msdn.microsoft.com/e7/2009/01/25/
disk-defragmentation-background-andengineering-the-windows-7-improvements/
[27] SAMSUNG 843T Data Center Series.
http://memorysolution.de/mso_upload/
out/all/SM843T_Specification_v1.0.pdf
[28] KUMAR, U. Understanding Android’s
Application Update Cycles. https:
//www.nowsecure.com/blog/2015/06/08/
understanding-android-s-applicationupdate-cycles/
[29] Twitter Version History. https://www.apk4fun.
com/history/2699/
[30] HECHTEL, E. How Smartphones and
Mobile Internet Have Changed Our Lives.
https://testobject.com/blog/2016/01/
smartphones-mobile-internet-changed-ourlife.html
[31] CHOI, H.-J., LIM, S.-H., AND PARK, K.-H.
JFTL: A Flash Translation Layer Based on A Journal
Remapping for Flash Memory. ACM Transactions
on Storage (2009).
[32] KANG, W.-H., LEE, S.-W., MOON, B., OH, G.-
H., AND MIN, C. X-FTL: Transactional FTL for
SQLite Databases. In Proceedings of the ACM SIGMOD International Conference on Management of
Data (2013), pp. 97–108.
[33] ZHANG, Y., ARULRAJ, L. P., ARPACI-DUSSEAU,
A. C., AND ARPACI-DUSSEAU, R. H. Deindirection for Flash-based SSDs with Nameless
Writes. In Proceedings of the USENIX Conference
on File and Storage Technologies (2012).
[34] OH, G., SEO, C., MAYURAM, R., KEE, Y., AND
LEE, S. SHARE Interface in Flash Storage for Relational and NoSQL Databases. In Proceedings of the
International Conference on Management of Data
(2016), pp. 343–354.
[35] PARK, J., KANG, D.-H., AND EOM, Y.-I. File
Defragmentation Scheme for A Log-structured File
System. In Proceedings of the ACM SIGOPS AsiaPacific Workshop on Systems (2016), pp. 19.
[36] TRAEGER, A. An Introduction to Linux Block I/O.
http://researcher.ibm.com/researcher/
files/il-AVISHAY/01-block_io-v1.3.pdf
[37] I/O Schedulers. http://www.makelinux.net/
books/lkd2/ch13lev1sec5
[38] T10, TECHNICAL COMMITTEE OF THE INTERNATIONAL COMMITTEE ON INFORMATION
TECHNOLOGY STANDARDS. SCSI TEST UNIT
READY Command. http://www.t10.org/ftp/
t10/document.06/06-022r0.pdf
[39] T10, TECHNICAL COMMITTEE OF THE INTERNATIONAL COMMITTEE ON INFORMATION TECHNOLOGY STANDARDS. SCSI Block Commands
- 3 (SBC-3). http://www.t10.org/ftp/t10/
document.05/05-344r0.pdf
[40] ANDERSON, D. C., CHASE, J. S., GADDE, S.,
GALLATIN, A. J., AND YOCUM, K. G. Cheating the I/O Bottleneck: Network Storage with
Trapeze/Myrinet. In Proceedings of the USENIX Annual Technical Conference (1998).
[41] AHMAD, I., GULATI, A., AND MASHTIZADEH,
A. vIC: Interrupt Coalescing for Virtual Machine
Storage Device I/O. In Proceedings of the USENIX
Annual Technical Conference (2011).
[42] HAHN, S.S. Impact of File Fragmentation on Android Smartphones. http:
//cares.snu.ac.kr/?view=publications&
menuN=34#2017_Technical_Report
