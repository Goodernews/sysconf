REFERENCES

[1] G. Malewicz, M. H. Austern, A. J. Bik, J. C. Dehnert, I. Horn,
N. Leiser, and G. Czajkowski, “Pregel: a system for largescale graph processing,” in Proceedings of the 2010 ACM
SIGMOD International Conference on Management of data.
ACM, 2010, pp. 135-146.

[2] A. Ching, S. Edunov, M. Kabiljo, D. Logothetis, and
S. Muthukrishnan, “One trillion edges: Graph processing
at facebook-scale,” Proceedings of the VLDB Endowment,
vol. 8, no. 12, pp. 1804-1815, 2015.

[3] D. Yan, J. Cheng, K. Xing, Y. Lu, W. Ng, and Y. Bu, “Pregel
algorithms for graph connectivity problems with performance
guarantees,’ Proceedings of the VLDB Endowment, vol. 7,
no. 14, pp. 1821-1832, 2014.

[4] S. Salihoglu and J. Widom, “Gps: A graph processing system,” in Proceedings of the 25th International Conference
on Scientific and Statistical Database Management. ACM,
2013, p. 22.

[5] C. Zhou, J. Gao, B. Sun, and J. X. Yu, “Mocgraph: Scalable
distributed graph processing using message online computing,” Proceedings of the VLDB Endowment, vol. 8, no. 4, pp.
377-388, 2014.

[6] F Yang, J. Li, and J. Cheng, “Husky: Towards a more
efficient and expressive distributed computing framework,”
Proceedings of the VLDB Endowment, vol. 9, no. 5, pp. 420—
431, 2016.

[7] J. E. Gonzalez, Y. Low, H. Gu, D. Bickson, and C. Guestrin,
“Powergraph: Distributed graph-parallel computation on natural graphs.” in OSDI, vol. 12, no. 1, 2012, p. 2.

[8] R. Chen, J. Shi, Y. Chen, and H. Chen, “Powerlyra: Differentiated graph computation and partitioning on skewed
graphs,” in Proceedings of the Tenth European Conference
on Computer Systems. ACM, 2015, p. 1.

[9] J. E. Gonzalez, R. S. Xin, A. Dave, D. Crankshaw, M. J.
Franklin, and I. Stoica, “Graphx: Graph processing in a
distributed dataflow framework.” in OSDIJ, vol. 14, 2014, pp.
599-613.

[10] I. Hoque and I. Gupta, “Lfgraph: Simple and fast distributed
graph analytics,” in Proceedings of the First ACM SIGOPS
Conference on Timely Results in Operating Systems. ACM,
2013, p. 9.

[11] A. Iosup, T. Hegeman, W. L. Ngai, S. Heldens, A. Prat-Pérez,
T. Manhardto, H. Chafio, M. Capota, N. Sundaram, M. Anderson et al., “Ldbc graphalytics: A benchmark for largescale graph analysis on parallel and distributed platforms,”
Proceedings of the VLDB Endowment, vol. 9, no. 13, pp.
1317-1328, 2016.

[12] Y. Lu, J. Cheng, D. Yan, and H. Wu, “Large-scale distributed
graph computing systems: An experimental evaluation,” Proceedings of the VLDB Endowment, vol. 8, no. 3, pp. 281-292,
2014.

[13] H. Hu, Y. Wen, T.-S. Chua, and X. Li, “Toward scalable
systems for big data analytics: A technology tutorial,’ JEEE
Access, vol. 2, pp. 652-687, 2014.

[14] A. Kyrola, G. E. Blelloch, C. Guestrin et al., “Graphchi:
Large-scale graph computation on just a pe.” in OSDI, vol. 12,
2012, pp. 31-46.

[15] J. Cheng, Q. Liu, Z. Li, W. Fan, J. C. Lui, and C. He, “Venus:
Vertex-centric streamlined graph computation on a single pc,”
in Data Engineering (ICDE), 2015 IEEE 31st International
Conference on. YEEE, 2015, pp. 1131-1142.

[16] A. Roy, I. Mihailovic, and W. Zwaenepoel, “X-stream: edgecentric graph processing using streaming partitions,” in Proceedings of the Twenty-Fourth ACM Symposium on Operating
Systems Principles. ACM, 2013, pp. 472-488.

[17] X. Zhu, W. Han, and W. Chen, “Gridgraph: Large-scale graph
processing on a single machine using 2-level hierarchical
partitioning.” in USENIX Annual Technical Conference, 2015,
pp. 375-386.

[18] D. Yan, Y. Huang, J. Cheng, and H. Wu, “Efficient processing
of very large graphs in a small cluster,’ arXiv preprint
arXiv: 1601.05590, 2016.

[19] A. Roy, L. Bindschaedler, J. Malicevic, and W. Zwaenepoel,
“Chaos: Scale-out graph processing from secondary storage,”
in Proceedings of the 25th Symposium on Operating Systems
Principles. ACM, 2015, pp. 410-424.

[20] J. Shun and G. E. Blelloch, “Ligra: a lightweight graph
processing framework for shared memory,” in ACM Sigplan
Notices, vol. 48, no. 8. ACM, 2013, pp. 135-146.

[21] M. Wu, F. Yang, J. Xue, W. Xiao, Y. Miao, L. Wei, H. Lin,
Y. Dai, and L. Zhou, “Gram: scaling graph computation to
the trillions,” in Proceedings of the Sixth ACM Symposium on
Cloud Computing. ACM, 2015, pp. 408-421.

[22] D. Yan, J. Cheng, Y. Lu, and W. Ng, “Effective techniques
for message reduction and load balancing in distributed
graph computation,” in Proceedings of the 24th International
Conference on World Wide Web. ACM, 2015, pp. 1307-—
1317.

[23] K. Shvachko, H. Kuang, S. Radia, and R. Chansler, “The
hadoop distributed file system,” in Mass storage systems and
technologies (MSST), 2010 IEEE 26th symposium on. TEEE,
2010, pp. 1-10.

[24] P. J. Braam and R. Zahir, “Lustre: A scalable, high performance file system,” Cluster File Systems, Inc, 2002.

[25] P. Sun, Y. Wen, T. N. B. Duong, and S. Yan, “Timed dataflow:
Reducing communication overhead for distributed machine
learning systems,” in Parallel and Distributed Systems (ICPADS), 2016 IEEE 22nd International Conference on. TEEE,
2016, pp. 1110-1117.