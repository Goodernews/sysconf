[1] Andrea Arcangeli, Izik Eidus, and Chris Wright. 2009. Increasing memory density
by using KSM. In Proceedings of the Linux Symposium. 19-28.

[2] Microsoft Azure. https://azure.microsoft.com.

[3] Sean Barker, Timothy Wood, Prashant Shenoy, and Ramesh Sitaraman. 2012. An
Empirical Study of Memory Sharing in Virtual Machines. In USENIX Annual
Technical Conference. USENIX, Boston, MA, 273-284.

[4] Thomas W. Barr, Alan L. Cox, and Scott Rixner. 2011. SpecTLB: A Mechanism
for Speculative Address Translation. In Proceedings of the 38th Annual International Symposium on Computer Architecture (ISCA ’11). ACM, New York, NY,
USA, 307-318. https://doi.org/10.1145/2000064.2000101

[5] Luiz Andre Barroso and Urs Hoelzle. 2009. The Datacenter As a Computer: An
Introduction to the Design of Warehouse-Scale Machines (1st ed.). Morgan and
Claypool Publishers.

[6] Edouard Bugnion, Scott Devine, Kinshuk Govil, and Mendel Rosenblum. 1997.
Disco: Running Commodity Operating Systems on Scalable Multiprocessors.
ACM Trans. Comput. Syst. 15, 4 (Nov. 1997), 412-447. https://doi.org/10.1145/
265924.265930

[7] John B. Carter, Wilson C. Hsieh, Leigh Stoller, Mark R. Swanson, Lixin Zhang,

Erik Brunvand, Al Davis, Chen-Chi Kuo, Ravindra Kuramkote, Michael A. Parker,

Lambert Schaelicke, and Terry Tateyama. 1999. Impulse: Building a Smarter

Memory Controller. In JEEE International Symposium on High Performance

Computer Architecture (HPCA).

[8] Rodrigo Ceron, Rafael Folco, Breno Leitao, and Humberto Tsubamoto. Power Sys
tems Memory Deduplication. http://www.redbooks.ibm.com/abstracts/redp4827.

html.

[9] Nadav Chachmon, Daniel Richins, Robert Cohn, Magnus Christensson, Wen
zhi Cui, and Vijay Janapa Reddi. 2016. Simulation and Analysis Engine for

Scale-Out Workloads. In Proceedings of the 2016 International Conference on

Supercomputing (ICS ’16). ACM, New York, NY, USA, Article 22, 13 pages.

https://doi.org/10.1145/2925426.2926293

[10] C.R. Chang, J. J. Wu, and P. Liu. 2011. An Empirical Study on Memory Sharing
of Virtual Machines for Server Consolidation. In 2011 IEEE Ninth International
Symposium on Parallel and Distributed Processing with Applications. 244-249,
https://doi.org/10.1109/ISPA.2011.31

[11] David Cheriton, Amin Firoozshahian, Alex Solomatnikov, John P. Stevenson, and
Omid Azizi, 2012, HICAMP: Architectural Support for Efficient Concurrency-safe
Shared Structured Data Access. In Proceedings of the Seventeenth International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS XVII). ACM, New York, NY, USA, 287-300. https://doi.org/
10.1145/2150976.215 1007

[12] IBM Cloud. https://Awww.ibm.com/cloud-computing.

[13] Brian F. Cooper, Adam Silberstein, Erwin Tam, Raghu Ramakrishnan, and Russell
Sears. 2010. Benchmarking Cloud Serving Systems with YCSB. In Proceedings
of the Ist ACM Symposium on Cloud Computing (SoCC ’10). ACM, New York,
NY, USA, 143-154. https://doi.org/10.1145/1807 128.1807 152

[14] Jeffrey Dean and Luiz Andre Barroso. 2013. The Tail at Scale. Communications of the ACM, 56 (2013), 74-80. http://cacm.acm.org/magazines/2013/2/
160173-the-tail-at-scale/fulltext

[15] Timothy J. Dell. 1997. A White Paper on the Benefits of Chipkill-Correct ECC
for PC Server Main Memory. In IBM Executive Overview.

[16] Umesh Deshpande, Xiaoshuang Wang, and Kartik Gopalan. 2011. Live Gang Migration of Virtual Machines. In Proceedings of the 20th International Symposium
on High Performance Distributed Computing (HPDC ’11). ACM, New York, NY,
USA, 135-146. https://doi.org/10.1145/1996130.1996151

[17] Y. Du, M. Zhou, B. R. Childers, D. Mosse, and R. Melhem. 2015. Supporting
superpages in non-contiguous physical memory. In IEEE International Symposium
on High Performance Computer Architecture (HPCA). 223-234. https://doi.org/
10.1109/HPCA.2015.7056035

[18] Amazon EC2. https://aws.amazon.com/ec2.

[19] Google Compute Engine. https://cloud.google.com/compute.

[20] Mikinori Eto and Hidenori Umeno. 2008. Design and implementation of content
based page sharing method in Xen. In International Conference on Control, Automation and Systems (ICCAS). 2919-2922. https://doi.org/10.1109/ICCAS.2008.
4694255

[21] Linux Kernel JHash Header File. http://Ixr.free-electrons.com/source/include/
linux/jhash.h.

[22] Fei Guo, Seongbeom Kim, Yury Baskakov, and Ishan Banerjee. 2015. Proactively
Breaking Large Pages to Improve Memory Overcommitment Performance in
VMware ESXi. In Proceedings of the 11th ACM SIGPLAN/SIGOPS International
Conference on Virtual Execution Environments (VEE ’15), ACM, New York, NY,
USA, 39-51. https://doi.org/10.1145/2731186.2731187

[23] Diwaker Gupta, Sangmin Lee, Michael Vrable, Stefan Savage, Alex C. Snoeren,
George Varghese, Geoffrey M. Voelker, and Amin Vahdat. 2008. Difference
Engine: Harnessing Memory Redundancy in Virtual Machines. In Proceedings of
the 8th USENIX Conference on Operating Systems Design and Implementation
(OSDP08). USENIX Association, Berkeley, CA, USA, 309-322. http://dl.acm.
org/citation.cfm?id=1855741.1855763

[24] R. W. Hamming. 1950. Error detecting and error correcting codes. The Bell
System Technical Journal 29, 2 (April 1950), 147-160. https://doi.org/10.1002/j.
1538-7305.1950.tb00463.x

[25] Milad Hashemi, Khubaib, Eiman Ebrahimi, Onur Mutlu, and Yale N. Patt. 2016.
Accelerating Dependent Cache Misses with an Enhanced Memory Controller.
In Proceedings of the 43rd International Symposium on Computer Architecture
(ISCA 716), TEEE Press, Piscataway, NJ, USA, 444-455. https://doi.org/10.1109/
ISCA.2016.46

[26] H. Hassan, G. Pekhimenko, N. Vijaykumar, V. Seshadri, D. Lee, O. Ergin, and O.
Mutlu. 2016. ChargeCache: Reducing DRAM latency by exploiting row access
locality. In 2016 IEEE International Symposium on High Performance Computer
Architecture (HPCA). 581-593. https://doi.org/10.1109/HPCA.2016.7446096

[27] Benjamin Hindman, Andy Konwinski, Matei Zaharia, Ali Ghodsi, Anthony D.
Joseph, Randy Katz, Scott Shenker, and Ion Stoica. 2011. Mesos: A Platform for Fine-grained Resource Sharing in the Data Center. In Proceedings
of the 8th USENIX Conference on Networked Systems Design and Implementation (NSDI’ 11). USENIX Association, Berkeley, CA, USA, 295-308. http:
//dl.acm.org/citation.cfm ?id=1972457,. 1972488

[28] M. Y. Hsiao. 1970. A Class of Optimal Minimum Odd-weight-column SEC-DED
Codes. IBM Journal of Research and Development 14, 4 July 1970), 395-401.
https://doi.org/10.1147/rd. 144.0395

[29] Ubuntu Cloud Images. https://cloud-images.ubuntu.com.

[30] Intel. Intel Clear Containers. https://clearlinux.org/features/intel-clear-containers

[31] Intel. Intel Clear Containers: A Breakthrough Combination of Speed and Workload
Isolation. https://clearlinux.org/sites/default/files/vmscontainers_wp_v5.pdf

[32] Engin Ipek, Onur Mutlu, José F Martinez, and Rich Caruana. 2008. SelfOptimizing Memory Controllers: A Reinforcement Learning Approach. In 2008
International Symposium on Computer Architecture.

[33] H. Kasture and D. Sanchez. 2016. Tailbench: a benchmark suite and evaluation
methodology for latency-critical applications. In 2016 IEEE International Symposium on Workload Characterization (IISWC). 1-10. https://doi.org/10.1109/
TISWC.2016.7581261

[34] Y. Kim, D. Han, O. Mutlu, and M. Harchol-Balter. 2010. ATLAS: A scalable and
high-performance scheduling algorithm for multiple memory controllers, In JEEE
International Symposium on High-Performance Computer Architecture (HPCA).
1-12. https://doi.org/10.1109/HPCA.2010.5416658

[35] Y. Kim, M. Papamichael, O. Mutlu, and M. Harchol-Balter. 2010. Thread Cluster
Memory Scheduling: Exploiting Differences in Memory Access Behavior. In
43rd Annual IEEE/ACM International Symposium on Microarchitecture. 65-16.
https://doi.org/10.1109/MICRO.2010.51

[36] Sheng Li, Jung Ho Ahn, Richard D. Strong, Jay B. Brockman, Dean M. Tullsen,
and Norman P. Jouppi. 2009. McPAT: An Integrated Power, Area, and Timing
Modeling Framework for Multicore and Manycore Architectures. In 42nd Annual
IEEE/ACM International Symposium on Microarchitecture (MICRO 42). ACM,
New York, NY, USA, 469-480. https://doi.org/10.1145/1669112.1669172

[37] Kernel Virtual Machine. https://www.linux-kvm.org.

[38] Linux Programmer’s Manual MADVISE(2).
pages/man2/madvise.2.html.

[39] Peter S. Magnusson, Magnus Christensson, Jesper Eskilson, Daniel Forsgren,

Gustav Hallberg, Johan Hégberg, Fredrik Larsson, Andreas Moestedt, and Bengt

Werner. 2002. Simics: A Full System Simulation Platform. Computer 35, 2 (Feb.

2002), 50-58. https://doi.org/10.1109/2.982916

[40] Grzegorz Mités, Derek G. Murray, Steven Hand, and Michael A. Fetterman.

2009. Satori: Enlightened Page Sharing. In Proceedings of the 2009 Conference

on USENIX Annual Technical Conference (USENIX’09). USENIX Association,

Berkeley, CA, USA, 1-1. http://dl.acm.org/citation.cfm?id=1855807.1855808

[41] Panagiota Nikolaou, Yiannakis Sazeides, Lorena Ndreu, and Marios Kleanthous.
2015. Modeling the Implications of DRAM Failures and Protection Techniques
on Datacenter TCO. In Proceedings of the 48th International Symposium on
Microarchitecture (MICRO-48). ACM, New York, NY, USA, 572-584. https:
//doi.org/10.1145/2830772.2830804

[42] Openstack. https://www.openstack.org.

[43] Binh Pham, Jan Vesely, Gabriel H. Loh, and Abhishek Bhattacharjee. 2015. Large
Pages and Lightweight Memory Management in Virtualized Environments: Can
You Have It Both Ways?. In Proceedings of the 48th International Symposium
on Microarchitecture (MICRO-48). ACM, New York, NY, USA, 1-12. https:
//doi.org/10.1145/2830772.2830773

[44] RedHat. https://www.redhat.com.

[45] RedHat. https://www.redhat.com/en/resources/kvm-kernel-based-virtualmachine.

[46] Scott Rixner, William J. Dally, Ujval J. Kapasi, Peter Mattson, and John D. Owens.
2000. Memory Access Scheduling. In Proceedings of the 27th Annual International Symposium on Computer Architecture (ISCA ’00). ACM, New York, NY,
USA, 128-138.

[47] A. F. Rodrigues, K. S. Hemmert, B. W. Barrett, C. Kersey, R. Oldfield, M. Weston,
R. Risen, J. Cook, P. Rosenfeld, E. Cooper-Balls, and B. Jacob. 2011. The
Structural Simulation Toolkit. SIGMETRICS Perform. Eval. Rev. 38, 4 (March
2011), 37-42. https://doi.org/10.1145/1964218.1964225

[48] P. Rosenfeld, E. Cooper-Balls, and B. Jacob. 2011. DRAMSim2: A Cycle Accurate
Memory System Simulator. IEEE Computer Architecture Letters 10, 1 (Jan 2011),
16-19. https://doi.org/10.1109/L-CA.2011.4

[49] Yiannakis Sazeides, Emre Ozer, Danny Kershaw, Panagiota Nikolaou, Marios
Kleanthous, and Jaume Abella. 2013. Implicit-storing and Redundant-encodingof-attribute Information in Error-correction-codes. In Proceedings of the 46th
Annual IEEE/ACM International Symposium on Microarchitecture (MICRO-46).
ACM, New York, NY, USA, 160-171. https://doi.org/10.1145/2540708.2540723

[50] Ubuntu Server. https://Awww.ubuntu.com/server.

[51] Jaewoong Sim, Gabriel H. Loh, Vilas Sridharan, and Mike O’Connor. 2013.
Resilient Die-stacked DRAM Caches. In Proceedings of the 40th Annual International Symposium on Computer Architecture (ISCA ’13). ACM, New York, NY,
USA, 416-427. https://doi.org/10.1145/2485922.2485958

[52] J.P. Stevenson. Fine-grain In-memory Deduplication for Large-scale Workloads,
PhD Thesis, Stanford University, Department of Electrical Engineering. https:
/oooks.google.com/books?id=tsjdnQAACAAJ

[53] Yingying Tian, Samira M. Khan, Daniel A. Jiménez, and Gabriel H. Loh. 2014.
Last-level Cache Deduplication. In Proceedings of the 28th ACM International
Conference on Supercomputing (ICS ’14). ACM, New York, NY, USA, 53-62.
https://doi.org/10.1145/2597652.2597655

[54] UKSM. http://kerneldedup.org/.

[55] Carl A. Waldspurger. 2002. Memory Resource Management in VMware ESX
Server. SIGOPS Oper. Syst. Rev. 36, SI (Dec. 2002), 181-194. https://doi.org/10.
1145/844128.844146

[56] Timothy Wood, Gabriel Tarasuk-Levin, Prashant Shenoy, Peter Desnoyers, Emmanuel Cecchet, and Mark D. Corner. 2009. Memory Buddies: Exploiting Page
Sharing for Smart Colocation in Virtualized Data Centers. In Proceedings of the
2009 ACM SIGPLAN/SIGOPS International Conference on Virtual Execution
Environments (VEE ’09). ACM, New York, NY, USA.