[1] Fusion of parallel array operations. pages 71-85, 2016.

[2] A.-L. Barabasi and R. Albert. Emergence of scaling in random networks. science, 286(5439):509-512, 1999,

[3] N. Bell and M. Garland. Efficient sparse matrix-vector multiplication on CUDA. NVIDIA Technical Report NVR-2008-004, NVIDIA
Corporation, Dec. 2008.

[4] R. F. Boisvert, R. Pozo, K. A. Remington, R. F. Barrett, and J. Dongarra. Matrix market: a web resource for test matrix collections. In
Quality of Numerical Software, pages 125-137, 1996.

Proc. ACM Meas. Anal. Comput. Syst., Vol. 1, No. 1, Article 13. Publication date: June 2017.
[5]

[6]
[7]
[8]

[9]

A Simple Yet Effective Balanced Edge Partition Model
for Parallel Computing + 13:21

U. Bondhugula, A. Hartono, J. Ramanujam, and P. Sadayappan. A practical automatic polyhedral parallelizer and locality optimizer. In
Proceedings of the 2008 ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 08, pages 101-113, New
York, NY, USA, 2008. ACM.

F. Bourse, M. Lelarge, and M. Vojnovic. Balanced graph edge partition. In Proceedings of the 20th ACM SIGKDD International Conference
on Knowledge Discovery and Data Mining, KDD ’14, pages 1456-1465, New York, NY, USA, 2014. ACM.

U. V. Catalytirek and C. Aykanat. PaToH: a multilevel hypergraph partitioning tool, version 3.0. Bilkent University, Department of
Computer Engineering, Ankara, 6533, 1999.

S. Che, M. Boyer, J. Meng, D. Tarjan, J. W. Sheaffer, S.-H. Lee, and K. Skadron. Rodinia: A benchmark suite for heterogeneous computing.
In Proceedings of the 2009 IEEE International Symposium on Workload Characterization (IISWC), ISWC ’09, pages 44-54, Washington, DC,
USA, 2009. IEEE Computer Society.

A, Corrigan, F, Camelli, R. Léhner, and J. Wallin. Running unstructured grid cfd solvers on modern graphics hardware. In 19th AIAA
Computational Fluid Dynamics Conference, number AIAA 2009-4001, June 2009.

[10] A. Corrigan, F. Camelli, R. LAGhner, and J. Wallin. Running unstructured grid-based cfd solvers on modern graphics hardware. Int. }.
Numer. Meth. Fluids, 66:221-229, 2011.

[11] S. Dalton and N. Bell. CUSP: A C++ templated sparse matrix library, 2014.

[12] T. A. Davis and Y. Hu. The university of florida sparse matrix collection. ACM Trans. Math. Softw., 38(1):1:1-1:25, Dec. 2011.

[13] C. Ding and K. Kennedy. Improving cache performance in dynamic applications through data and computation reorganization at
run time. In Proceedings of the ACM SIGPLAN 1999 Conference on Programming Language Design and Implementation, PLDI ’99, pages
229-241, New York, NY, USA, 1999. ACM.

[14] C. Ding and K. Kennedy. Improving effective bandwidth through compiler enhancement of global cache reuse. Journal of Parallel and
Distributed Computing, 64(1):108-134, 2004.

[15] G. Even. Fast approximate graph partitioning algorithms. SIAM 7. Comput., 28(6):2187-2214, Aug. 1999.

[16] J. E. Gonzalez, Y. Low, H. Gu, D. Bickson, and C. Guestrin. Powergraph: Distributed graph-parallel computation on natural graphs. In
OSDI, volume 12, page 2, 2012.

[17] B. Hendrickson and T. G. Kolda. Graph partitioning models for parallel computing. Parallel Comput., 26(12):1519-1534, Nov. 2000.

[18] B. Hendrickson and T. G. Kolda. Partitioning rectangular and structurally unsymmetric sparse matrices for parallel processing. SIAM
Journal on Scientific Computing, 21(6):2048—2072, 2000.

[19] M.R. Hestenes and E. Stiefel. Methods of conjugate gradients for solving linear systems. 1952.

[20] G. Karypis and V. Kumar. Metis-unstructured graph partitioning and sparse matrix ordering system, version 2.0. 1995.

[21] G. Karypis and V. Kumar. hMETIS 1.5: A hypergraph partitioning package. Technical report, Department of Computer Science,
University of Minnesota, 1998.

[22] R. Krauthgamer, J. S. Naor, and R. Schwartz. Partitioning graphs into balanced components. In Proceedings of the Twentieth Annual
ACM-SIAM Symposium on Discrete Algorithms, SODA ’09, pages 942-949, Philadelphia, PA, USA, 2009. Society for Industrial and Applied
Mathematics.

[23] Y. Low, D. Bickson, J. Gonzalez, C. Guestrin, A. Kyrola, and J. M. Hellerstein. Distributed graphlab: a framework for machine learning
and data mining in the cloud. Proceedings of the VLDB Endowment, 5(8):716—727, 2012.

[24] G. Malewicz, M. H. Austern, A. J. Bik, J. C. Dehnert, I. Horn, N. Leiser, and G. Czajkowski. Pregel: a system for large-scale graph
processing. In Proceedings of the 2010 ACM SIGMOD International Conference on Management of data, pages 135-146. ACM, 2010.

[25] NVIDIA. NVIDIA’s Next Generation CUDA Compute Architecture: Kepler GK110. 2012.

[26] NVIDIA. cuSPARSE library. 2014.

[27] C. Tsourakakis, C. Gkantsidis, B. Radunovic, and M. Vojnovic. Fennel: Streaming graph partitioning for massive scale graphs. In
Proceedings of the 7th ACM International Conference on Web Search and Data Mining, WSDM °14, pages 333-342, New York, NY, USA,
2014, ACM.

[28] B. Wu, Z. Zhao, E. Z. Zhang, Y. Jiang, and X. Shen. Complexity analysis and algorithm design for reorganizing data to minimize
non-coalesced memory accesses on gpu. In Proceedings of the 18th ACM SIGPLAN Symposium on Principles and Practice of Parallel
Programming, PPoPP ’13, pages 57-68, New York, NY, USA, 2013. ACM.

[29] E. Z. Zhang, Y. Jiang, Z. Guo, K. Tian, and X. Shen. On-the-fly elimination of dynamic irregularities for gpu computing. In Proceedings
of the Sixteenth International Conference on Architectural Support for Programming Languages and Operating Systems, ASPLOS XVI,
pages 369-380, New York, NY, USA, 2011. ACM.
