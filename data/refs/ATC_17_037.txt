[1] A HO , A. V., D ENNING , P. J., AND U LLMAN , J. D. Principles
of Optimal Page Replacement. J. ACM 18, 1 (Jan. 1971), 80–93.
[2] A PPLEBY, A. SMHasher and MurmurHash. https://code.
google.com/p/smhasher/.
[3] B ECKMANN , N., AND S ANCHEZ , D. Talus: A Simple Way to
Remove Cliffs in Cache Performance. In Proceedings of the 21st
international symposium on High Performance Computer Architecture (HPCA-21) (February 2015).
[4] B ELADY, L. A. A Study of Replacement Algorithms for Virtual
Storage Computers. IBM Systems Journal 5, 2 (1966), 78–101.
[5] C IDON , A., E ISENMAN , A., A LIZADEH , M., AND K ATTI , S.
Cliffhanger: Scaling Performance Cliffs in Web Memory Caches.
In 13th USENIX Symposium on Networked Systems Design and
Implementation (NSDI 16) (Santa Clara, CA, 2016), USENIX
Association, pp. 379–392.
[6] G RYSKI , D. go-arc git repository. https://github.com/
dgryski/go-arc/.
[7] H U , X., WANG , X., Z HOU , L., L UO , Y., D ING , C., AND
WANG , Z. Kinetic Modeling of Data Eviction in Cache. In
Proceedings of the 2016 USENIX Conference on Usenix Annual
Technical Conference (Berkeley, CA, USA, 2016), USENIX ATC
’16, USENIX Association, pp. 351–364.
[8] J IANG , S. LIRS source code. Private communication, Oct 2016.
[9] J IANG , S., AND Z HANG , X. LIRS: An Efficient Low Interreference Recency Set Replacement Policy to Improve Buffer
Cache Performance. In Proceedings of the 2002 ACM SIGMETRICS International Conference on Measurement and Modeling of
Computer Systems (New York, NY, USA, 2002), SIGMETRICS
’02, ACM, pp. 31–42.
[10] J OHNSON , T., AND S HASHA , D. 2Q: A Low Overhead High
Performance Buffer Management Replacement Algorithm. In
Proceedings of the 20th International Conference on Very Large
Data Bases (San Francisco, CA, USA, 1994), VLDB ’94, Morgan Kaufmann Publishers Inc., pp. 439–450.
[11] KOLLER , R., M ASHTIZADEH , A. J., AND R ANGASWAMI , R.
Centaur: Host-Side SSD Caching for Storage Performance Control. 2015 IEEE International Conference on Autonomic Computing (ICAC) (2015), 51–60.
[12] KOLLER , R., AND R ANGASWAMI , R. I/O Deduplication: Utilizing Content Similarity to Improve I/O Performance. Trans.
Storage 6, 3 (Sept. 2010), 13:1–13:26.
[13] M ATTSON , R. L., G ECSEI , J., S LUTZ , D. R., AND T RAIGER ,
I. L. Evaluation Techniques for Storage Hierarchies. IBM Systems Journal 9, 2 (June 1970), 78–117.
[14] M EGIDDO , N., AND M ODHA , D. S. ARC: A Self-Tuning,
Low Overhead Replacement Cache. In Proceedings of the 2nd
USENIX Conference on File and Storage Technologies (Berkeley,
CA, USA, 2003), FAST ’03, USENIX Association, pp. 115–130.
[15] NARAYANAN , D., D ONNELLY, A., AND ROWSTRON , A. Write
Off-loading: Practical Power Management for Enterprise Storage. Trans. Storage 4, 3 (Nov. 2008), 10:1–10:23.
[16] N IU , Q., D INAN , J., L U , Q., AND S ADAYAPPAN , P. PARDA: A
Fast Parallel Reuse Distance Analysis Algorithm. In Proceedings
of the 2012 IEEE 26th International Parallel and Distributed Processing Symposium (Washington, DC, USA, 2012), IPDPS ’12,
IEEE Computer Society, pp. 1284–1294.
[17] O’N EIL , E. J., O’N EIL , P. E., AND W EIKUM , G. The LRUK Page Replacement Algorithm for Database Disk Buffering. In
Proceedings of the 1993 ACM SIGMOD International Conference on Management of Data (New York, NY, USA, 1993), SIGMOD ’93, ACM, pp. 297–306.
[18] Q URESHI , M. K., AND PATT, Y. N. Utility-Based Cache Partitioning: A Low-Overhead, High-Performance, Runtime Mechanism to Partition Shared Caches. In Proceedings of the 39th
Annual IEEE/ACM International Symposium on Microarchitecture (Washington, DC, USA, 2006), MICRO 39, IEEE Computer
Society, pp. 423–432.
[19] S AEMUNDSSON , T. cache algorithm git repository. https://
github.com/trauzti/cache/.
[20] S AEMUNDSSON , T., B JORNSSON , H., C HOCKLER , G., AND
V IGFUSSON , Y. Dynamic Performance Profiling of Cloud
Caches. In Proceedings of the ACM Symposium on Cloud Computing (New York, NY, USA, 2014), SOCC ’14, ACM, pp. 28:1–
28:14.
[21] S ALTZER , J. H., AND K AASHOEK , M. F. Principles of Computer System Design: An Introduction. Morgan Kaufmann Publishers Inc., San Francisco, CA, USA, 2009.
[22] S TEFANOVICI , I., T HERESKA , E., O’S HEA , G., S CHROEDER ,
B., BALLANI , H., K ARAGIANNIS , T., ROWSTRON , A., AND
TALPEY, T. Software-defined Caching: Managing Caches in
Multi-tenant Data Centers. In Proceedings of the Sixth ACM Symposium on Cloud Computing (New York, NY, USA, 2015), SoCC
’15, ACM, pp. 174–181.
[23] WALDSPURGER , C. A., PARK , N., G ARTHWAITE , A., AND
A HMAD , I. Efficient MRC Construction with SHARDS. In Proceedings of the 13th USENIX Conference on File and Storage
Technologies (Berkeley, CA, USA, 2015), FAST ’15, USENIX
Association, pp. 95–110.
[24] WANG , Y., S HU , J., Z HANG , G., X UE , W., AND Z HENG , W.
SOPA: Selecting the Optimal Caching Policy Adaptively. Trans.
Storage 6, 2 (July 2010), 7:1–7:18.
[25] W IKIPEDIA. LIRS caching algorithm — Wikipedia, the free encyclopedia, 2017. [Online; accessed 22-Jan-2017].
[26] W IRES , J., I NGRAM , S., D RUDI , Z., H ARVEY, N. J. A., AND
WARFIELD , A. Characterizing Storage Workloads with Counter
Stacks. In Proceedings of the 11th USENIX Conference on Operating Systems Design and Implementation (Berkeley, CA, USA,
2014), OSDI ’14, USENIX Association, pp. 335–349.
[27] Z HAO , W., AND WANG , Z. Dynamic Memory Balancing
for Virtual Machines. In Proceedings of the 2009 ACM SIGPLAN/SIGOPS International Conference on Virtual Execution
Environments (New York, NY, USA, 2009), VEE ’09, ACM,
pp. 21–30.
[28] Z HOU , P., PANDEY, V., S UNDARESAN , J., R AGHURAMAN , A.,
Z HOU , Y., AND K UMAR , S. Dynamic Tracking of Page Miss Ratio Curve for Memory Management. In Proceedings of the 11th
International Conference on Architectural Support for Programming Languages and Operating Systems (New York, NY, USA,
2004), ASPLOS XI, ACM, pp. 177–188.
