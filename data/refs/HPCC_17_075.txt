[1] S. A. Edwards and E. A. Lee, “The case for the precision timed
(pret) machine,” in Proceedings of the 44th annual Design Automation
Conference. ACM, 2007, pp. 264–265.
[2] E. A. Lee, “The problem with threads,” Computer, vol. 39, no. 5, pp.
33–42, 2006.
[3] C. M. Kirsch and R. Sengupta, “The evolution of real-time programming,” Handbook of Real-Time and Embedded Systems, pp. 11–1, 2006.
[4] T. A. Henzinger, B. Horowitz, and C. M. Kirsch, “Giotto: A triggered
language for embedded programming,” in International Workshop on
Embedded Software. Springer, 2001, pp. 166–184.
[5] E. Farcas, C. Farcas, W. Pree, and J. Templ, “Transparent distribution
of real-time components based on logical execution time,” in ACM
SIGPLAN Notices, vol. 40, no. 7. ACM, 2005, pp. 31–39.
[6] A. Ghosal, T. A. Henzinger, C. M. Kirsch, and M. A. Sanvido, “Eventdriven programming with logical execution times,” in International
Workshop on Hybrid Systems: Computation and Control. Springer,
2004, pp. 357–371.
[7] J. Liu and E. A. Lee, “Timed multitasking for real-time embedded
software,” IEEE Control Systems, vol. 23, no. 1, pp. 65–75, 2003.
[8] A. Ghosal, A. Sangiovanni-Vincentelli, C. M. Kirsch, T. A. Henzinger,
and D. Iercan, “A hierarchical coordination language for interacting realtime tasks,” in EMSOFT’2006. ACM, pp. 132–141.
[9] T. A. Henzinger and C. M. Kirsch, “The embedded machine: Predictable,
portable real-time code,” ACM Transactions on Programming Languages
and Systems (TOPLAS), vol. 29, no. 6, p. 33, 2007.
[10] D. Watt, Programming XC on XMOS devices. XMOS Limited, 2009.
[11] S. Louise, M. Lemerre, C. Aussagues, and V. David, “The oasis kernel: A
framework for high dependability real-time systems,” in High-Assurance
Systems Engineering (HASE), 2011 IEEE 13th International Symposium
on. IEEE, 2011, pp. 95–103.
[12] M. Nasri, G. Fohler, and M. Kargahi, “A framework to construct customized harmonic periods for real-time systems,” in Real-Time Systems
(ECRTS)’2014. IEEE, pp. 211–220.
[13] S. Lu, S. Park, E. Seo, and Y. Zhou, “Learning from mistakes: a
comprehensive study on real world concurrency bug characteristics,”
in ACM Sigplan Notices, vol. 43, no. 3. ACM, 2008, pp. 329–339.
[14] C. Hewitt and H. Zenil, What is computation? Actor model versus
Turings model. World Scientiﬁc Publishing Singapore, 2013.
[15] H. Kopetz, “The time-triggered approach to real-time system design,” in
Predictably Dependable Computing Systems. Springer,1995, pp. 53–66.
[16] Kopetz, “Event-triggered versus time-triggered real-time systems,” Operating Systems of the 90s and Beyond, pp. 86–101, 1991.
[17] B. Sun, X. Li, B. Wan, C. Wang, X. Zhou, and X. Chen, “Deﬁnitions
of predictability for cyber physical systems,” Journal of Systems Architecture, vol. 63, pp. 48–60, 2016.
[18] J. A. Stankovic, M. Spuri, K. Ramamritham, and G. Buttazzo, Deadline
scheduling for real-time systems: EDF and related algorithms. Springer
Science & Business Media, 2012, vol. 460.
[19] F. Eisenbrand and T. Rothvoß, “Static-priority real-time scheduling: Response time computation is np-hard,” in Real-Time Systems Symposium,
2008. IEEE, 2008, pp. 397–406.
[20] C. Spitzer, “The avionics handbook ed. rc dorf.” The Electrical Engineering Handbook Series, CRC Press, Boca Raton, 2001.
[21] R. Barry, Using the FreeRTOS real time kernel: a practical guide. Real
Time Engineers, 2010.
[22] J. L. Jean et al., “Microc/os-ii the real-time kernel,” 2002.
[23] C. M. Kirsch, M. A. Sanvido, and T. A. Henzinger, “A programmable
microkernel for real-time systems,” in VEE’2005. ACM, pp. 35–45.
[24] D. May, The xmos xs1 architecture. XMOS, 2009.
