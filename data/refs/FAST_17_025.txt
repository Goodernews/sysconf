[1] AGRAWAL, N., PRABHAKARAN, V., WOBBER,
T., DAVIS, J. D., MANASSE, M., AND PANIGRAHY, R. Design tradeoffs for ssd performance.
In USENIX Annual Technical Conference (ATC)
(2008), pp. 57–70.
[2] AXBOE, J. Fio - Flexible I/O tester. URL
http://freecode. com/projects/fio (2014).
[3] BJØRLING, M. fio LightNVM I/O Engine.
URL https://github.com/MatiasBjorling/lightnvmfio (2016).
[4] BJØRLING, M., AXBOE, J., NELLANS, D., AND
BONNET, P. Linux Block IO: Introducing MultiQueue SSD Access on Multi-Core Systems. In Proceedings of the 6th International Systems and Storage Conference (SYSTOR) (2013).
[5] BJØRLING, M., BONNET, P., BOUGANIM, L.,
AND DAYAN, N. The necessary death of the block
device interface. In 6th Biennial Conference on
Innovative Data Systems Research (CIDR) (2013),
pp. 1–4.
[6] BONNET, P., AND BOUGANIM, L. Flash device
support for database management. In CIDR 2011,
Fifth Biennial Conference on Innovative Data Systems Research, Asilomar, CA, USA, January 9-12,
2011, Online Proceedings (2011), pp. 1–8.
[7] CAI, Y., HARATSCH, E. F., MUTLU, O., AND
MAI, K. Error patterns in MLC NAND flash memory: Measurement, characterization, and analysis.
In Design, Automation & Test in Europe Conference & Exhibition (DATE) (2012), IEEE, pp. 521–
526.
[8] CAI, Y., HARATSCH, E. F., MUTLU, O., AND
MAI, K. Threshold voltage distribution in mlc
nand flash memory: Characterization, analysis, and
modeling. In Proceedings of the Conference on Design, Automation and Test in Europe (San Jose, CA,
USA, 2013).
[9] CAI, Y., LUO, Y., GHOSE, S., AND MUTLU, O.
Read disturb errors in MLC NAND flash memory: Characterization, mitigation, and recovery.
In 45th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (2015),
IEEE, pp. 438–449.
[10] CAI, Y., MUTLU, O., HARATSCH, E. F., AND
MAI, K. Program interference in MLC NAND
flash memory: Characterization, modeling, and
mitigation. In IEEE 31st International Conference
on Computer Design (ICCD) (2013).
[11] CHEN, F., LEE, R., AND ZHANG, X. Essential roles of exploiting internal parallelism of flash
memory based solid state drives in high-speed data
processing. In IEEE 17th International Symposium on High Performance Computer Architecture
(2011), IEEE, pp. 266–277.
[12] CHEN, F., LUO, T., AND ZHANG, X. CAFTL :
A Content-Aware Flash Translation Layer Enhancing the Lifespan of Flash Memory based Solid State
Drives. 9th USENIX Conference on File and Storage Technologies (FAST) (2011).
[13] CRUCIAL. The Crucial M550 SSD.
http://www.crucial.com/usa/en/
storage-ssd-m550, 2013.
[14] CURRY, M. L., SKJELLUM, A., WARD, H. L.,
AND BRIGHTWELL, R. Accelerating reedsolomon coding in raid systems with gpus. In
IEEE International Symposium on Parallel and
Distributed Processing (April 2008), pp. 1–6.
[15] DEAN, J., AND BARROSO, L. A. The Tail at Scale.
Commun. ACM 56, 2 (Feb. 2013), 74–80.
[16] DONG, G., XIE, N., AND ZHANG, T. On the use
of soft-decision error-correction codes in NAND
flash memory. IEEE Transactions on Circuits and
Systems I: Regular Papers 58, 2 (2011), 429–439.
[17] DONG, S., CALLAGHAN, M., GALANIS, L.,
BORTHAKUR, D., SAVOR, T., AND STUMM, M.
Optimizing Space Amplification in RocksDB. 8th
Biennial Conference on Innovative Data Systems
Research (CIDR) (2017).
[18] FILKS, V., UNSWORTH, J., AND CHANDRASEKARAN, A. Magic Quadrant for Solid-State
Arrays. Tech. rep., Gartner, 2016.
[19] FLOYER, D. Flash Enterprise Adoption Projections. Tech. rep., Wikibon, 2016.
[20] FUSION-IO. Introduces "Flashback" Protection
Bring Protective RAID Technology to Solid State
Storage and Ensuring Unrivaled Reliability with
Redundancy. Businesswire, 2008.
[21] GONZÁLEZ, J., AND BJØRLING, M. Multi-Tenant
I/O Isolation with Open-Channel SSDs. Nonvolatile Memory Workshop (NVMW) (2017).
[22] GONZÁLEZ, J., BJØRLING, M., LEE, S., DONG,
C., AND HUANG, Y. R. Application-Driven Flash
Translation Layers on Open-Channel SSDs. Nonvolatile Memory Workshop (NVMW) (2014).
[23] HAO, M., SOUNDARARAJAN, G.,
KENCHAMMANA-HOSEKOTE, D., CHIEN,
A. A., AND GUNAWI, H. S. The tail at store:
a revelation from millions of hours of disk and
SSD deployments. In 14th USENIX Conference
on File and Storage Technologies (FAST) (2016),
pp. 263–276.
[24] HARDOCK, S., PETROV, I., GOTTSTEIN, R., AND
BUCHMANN, A. Noftl: Database systems on ftlless flash storage. Proceedings of the VLDB Endowment 6, 12 (2013), 1278–1281.
[25] HOLT, K. Information technology—scsi block
commands—3 (sbc-3). Tech. rep., T10/03-224,
Working Draft, 2003.
[26] HUANG, J., BADAM, A., CAULFIELD, L., NATH,
S., SENGUPTA, S., SHARMA, B., AND QURESHI,
M. K. Flashblox: Achieving both performance
isolation and uniform lifetime for virtualized ssds.
In 15th USENIX Conference on File and Storage
Technologies (FAST) (2017), USENIX.
[27] JOSEPHSON, W. K., BONGO, L. A., LI, K., AND
FLYNN, D. DFS: A File System for Virtualized
Flash Storage. ACM Transactions on Storage 6, 3
(Sept. 2010), 1–25.
[28] KANG, J.-U., HYUN, J., MAENG, H., AND CHO,
S. The Multi-streamed Solid-State Drive. In 6th
USENIX Workshop on Hot Topics in Storage and
File Systems (HotStorage) (2014).
[29] KANG, W.-H., LEE, S.-W., MOON, B., OH, G.-
H., AND MIN, C. X-FTL: transactional FTL for
SQLite databases. In Proceedings of the ACM SIGMOD International Conference on Management of
Data (2013), pp. 97–108.
[30] KIM, J., LEE, D., AND NOH, S. H. Towards SLO
Complying SSDs Through OPS Isolation. In 13th
USENIX Conference on File and Storage Technologies (FAST) (2015), pp. 183–189.
[31] KING, M., DELLETT, L., AND SULLIVAN, K. Annual High Performance Computing Trends Survey.
Tech. rep., DDN, 2016.
[32] KOPYTOV, A. Sysbench: a system performance
benchmark. URL: http://sysbench. sourceforge. net
(2004).
[33] LEE, C., SIM, D., HWANG, J., AND CHO, S.
F2FS: A new file system for flash storage. In 13th
USENIX Conference on File and Storage Technologies (FAST) (2015), pp. 273–286.
[34] LEE, S., LIU, M., JUN, S., XU, S., KIM, J., AND
ARVIND. Application-Managed Flash. In 14th
USENIX Conference on File and Storage Technologies (FAST) (2016), pp. 339–353.
[35] LIU, M., JUN, S.-W., LEE, S., HICKS, J., ET AL.
minFlash: A minimalistic clustered flash array.
In Design, Automation & Test in Europe Conference & Exhibition (DATE) (2016), IEEE, pp. 1255–
1260.
[36] LU, L., PILLAI, T. S., ARPACI-DUSSEAU, A. C.,
AND ARPACI-DUSSEAU, R. H. WiscKey: separating keys from values in SSD-conscious storage.
In 14th USENIX Conference on File and Storage
Technologies (FAST) (2016), pp. 133–148.
[37] LU, Y., SHU, J., AND ZHENG, W. Extending the
Lifetime of Flash-based Storage Through Reducing
Write Amplification from File Systems. In Proceedings of the 11th USENIX Conference on File
and Storage Technologies (2013), USENIX Association, pp. 257–270.
[38] MÁRMOL, L., SUNDARARAMAN, S., TALAGALA, N., RANGASWAMI, R., DEVENDRAPPA,
S., RAMSUNDAR, B., AND GANESAN, S.
NVMKV: A Scalable and Lightweight Flash Aware
Key-Value Store. 6th USENIX Workshop on Hot
Topics in Storage and File Systems (2014).
[39] MATSUNOBU, Y. Rocksdb storage engine for
mysql. In FOSDEM 2016 (2016).
[40] MEZA, J., WU, Q., KUMAR, S., AND MUTLU,
O. A large-scale study of flash memory failures
in the field. In ACM SIGMETRICS Performance
Evaluation Review (2015), vol. 43, ACM, pp. 177–
190.
[41] MICHELONI, R., MARELLI, A., AND ESHGHI, K.
Inside solid state drives (SSDs), vol. 37. Springer
Science & Business Media, 2012.
[42] NARAYANAN, I., WANG, D., JEON, M.,
SHARMA, B., CAULFIELD, L., SIVASUBRAMANIAM, A., CUTLER, B., LIU, J., KHESSIB, B.,
AND VAID, K. SSD Failures in Datacenters: What,
When and Why? In Proceedings of the ACM SIGMETRICS International Conference on Measurement and Modeling of Computer Science (2016),
ACM, pp. 407–408.
[43] NVMHCI WORK GROUP. NVM Express 1.2.1,
2016.
[44] O’DWYER, A. Handbook of PI and PID controller
tuning rules, vol. 57. World Scientific, 2009.
[45] OUYANG, J., LIN, S., JIANG, S., AND HOU, Z.
SDF: Software-defined flash for web-scale internet storage systems. In Proceedings of the 19th
international conference on Architectural support
for programming languages and operating systems
(2014).
[46] OUYANG, X., NELLANS, D., WIPFEL, R.,
FLYNN, D., AND PANDA, D. Beyond block
I/O: Rethinking traditional storage primitives. In
High Performance Computer Architecture (HPCA)
(2011), IEEE, pp. 301–311.
