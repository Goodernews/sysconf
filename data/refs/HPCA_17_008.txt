[1] D. Jevdjic, S. Volos, and B. Falsafi, “Die-stacked DRAM
Caches for Servers: Hit Ratio, Latency, or Bandwidth? Have It
All with Footprint Cache,” in Proceedings of the 40th Annual
International Symposium on Computer Architecture, ISCA
°13, (New York, NY, USA), pp. 404-415, ACM, 2013.

[2] G. Dhiman, R. Ayoub, and T. Rosing, “PDRAM: A hybrid PRAM and DRAM main memory system,” in Design
Automation Conference, 2009. DAC ’09. 46th ACM/IEEE,
pp. 664-669, July 2009.

[3] O. Mutlu, “Memory scaling: A systems architecture perspective,” in 2013 5th IEEE International Memory Workshop,
pp. 21-25, IEEE, 2013.

[4] Y. Zhong, X. Shen, and C. Ding, “Program Locality Analysis
Using Reuse Distance,” ACM Trans. Program. Lang. Syst.,
vol. 31, pp. 20:1-20:39, Aug 2009.

[5] Y. Zhong, M. Orlovich, X. Shen, and C. Ding, “Array
Regrouping and Structure Splitting Using Whole-program
Reference Affinity,’ in Proceedings of the ACM SIGPLAN
2004 Conference on Programming Language Design and
Implementation, PLDI ’04, (New York, NY, USA), pp. 255-—
266, ACM, 2004.

[6] K. Beyls and E. H. D’ Hollander, “Reuse distance as a metric
for cache behavior,” in In Proceedings of the IASTED Conference on Parallel and Distributed Computing and Systems,
pp. 617-662, 2001.

[7] C. CaBcaval and D. A. Padua, “Estimating cache misses and
locality using stack distances,” in Proceedings of the 17th
annual international conference on Supercomputing, pp. 150—
159, ACM, 2003.

[8] E. Berg and E. Hagersten, “StatCache: A Probabilistic Approach to Efficient and Accurate Data Locality Analysis,” in
Proceedings of the 2004 IEEE International Symposium on
Performance Analysis of Systems and Software, ISPASS ’04,
(Washington, DC, USA), pp. 20-27, IEEE Computer Society,
2004.

[9] A. Awad and Y. Solihin, “STM: Cloning the spatial and
temporal memory access behavior,’ in 20/4 IEEE 20th
International Symposium on High Performance Computer
Architecture (HPCA), pp. 237-247, Feb 2014.

[10] G. Balakrishnan and Y. Solihin, “WEST: Cloning data cache
behavior using Stochastic Traces,’ in [EEE International
Symposium on High-Performance Comp Architecture, pp. 112, Feb 2012.

[11] A. Seznec, “Decoupled sectored caches: conciliating low tag
implementation cost and low miss ratio,” in Computer Architecture, 1994., Proceedings the 21st Annual International
Symposium on, pp. 384-393, Apr 1994.

[12] J. B. Rothman and A. J. Smith, “Sector cache design and
performance,” in Modeling, Analysis and Simulation of Com
puter and Telecommunication Systems, 2000. Proceedings.
Sth International Symposium on, pp. 124-133, 2000.

[13] B. Cuesta, Q. Cai, N. Hyuseinova, S. Ozdemir, M. Nicolaides,
and F. Zyulkyarov, “Sectored cache with hybrid line granularity,” July 3 2014. US Patent App. 13/729,523.

[14] D. Jevdjic, G. H. Loh, C. Kaynak, and B. Falsafi, “Unison
Cache: A Scalable and Effective Die-Stacked DRAM Cache,”
in Proceedings of the 47th Annual IEEE/ACM International
Symposium on Microarchitecture, MICRO-47, (Washington,
DC, USA), pp. 25-37, IEEE Computer Society, 2014.

[15] K. Ganesan, J. Jo, and L. K. John, “Synthesizing memorylevel parallelism aware miniature clones for SPEC CPU2006
and ImplantBench workloads,” in Performance Analysis of
Systems Software (ISPASS), 2010 IEEE International Symposium on, pp. 33-44, March 2010.

[16] L. Eeckhout, K. de Bosschere, and H. Neefs, “Performance
analysis through synthetic trace generation,” in Performance
Analysis of Systems and Software, 2000. ISPASS. 2000 IEEE
International Symposium on, pp. 1-6, 2000.

[17] R. L. Mattson, J. Gecsei, D. R. Slutz, and I. L. Traiger,
“Evaluation techniques for storage hierarchies,” IBM Systems
Journal, vol. 9, no. 2, pp. 78-117, 1970.

[18] F. Olken, “Efficient methods for calculating the success function of fixed-space replacement policies,” tech. rep., Lawrence
Berkeley Lab., CA (USA), 1981.

[19] G. Almasi, C. Cascaval, and D. A. Padua, “Calculating Stack
Distances Efficiently,” in Proceedings of the 2002 Workshop
on Memory System Performance, MSP ’02, (New York, NY,
USA), pp. 37-43, ACM, 2002.

[20] A. Joshi, L. Eeckhout, R. H. Bell, and L. John, “Performance
Cloning: A Technique for Disseminating Proprietary Applications as Benchmarks,” in 2006 IEEE International Symposium
on Workload Characterization, pp. 105-115, Oct 2006.

[21] A. Joshi, L. Eeckhout, and L. John, “The return of synthetic
benchmarks,” in 2008 SPEC Benchmark Workshop, pp. 1-11,
2008.

[22] Q. Niu, J. Dinan, Q. Lu, and P. Sadayappan, “PARDA: A
Fast Parallel Reuse Distance Analysis Algorithm,” in Parallel
Distributed Processing Symposium (IPDPS), 2012 IEEE 26th
International, pp. 1284-1294, May 2012.

[23] N. Binkert, B. Beckmann, G. Black, S. K. Reinhardt, A. Saidi,
A. Basu, J. Hestness, D. R. Hower, T. Krishna, S. Sardashti,
R. Sen, K. Sewell, M. Shoaib, N. Vaish, M. D. Hill, and D. A.
Wood, “The Gem5 Simulator,’ SIGARCH Comput. Archit.
News, vol. 39, pp. 1-7, Aug 2011.

[24] J. Edler and M. D. Hill, “Dinero IV trace-driven uniprocessor
cache simulator,” 1998.

[25] J. L. Henning, “SPEC CPU2006 Benchmark Descriptions,”
SIGARCH Comput. Archit. News, vol. 34, pp. 1-17, Sep 2006.
J. L. Wolf, H. S. Stone, and D. Thiébaut, “Synthetic Traces for
Trace-Driven Simulation of Cache Memories,” JEEE Trans.
Comput., vol. 41, pp. 388-410, Apr 1992.

[26] J. Weinberg and A. E. Snavely, “Accurate Memory Signatures
and Synthetic Address Traces for HPC Applications,” in
Proceedings of the 22Nd Annual International Conference on
Supercomputing, ICS ’08, (New York, NY, USA), pp. 36-45,
ACM, 2008.

[27] W. S. Wong and R. J. T. Morris, “Benchmark synthesis
using the LRU cache hit function,’ JEEE Transactions on
Computers, vol. 37, pp. 637-645, Jun 1988.

[28] L. Eeckhout and K. D. Bosschere, “Hybrid analyticalstatistical modeling for efficiently exploring architecture and
workload design spaces,” in Parallel Architectures and Compilation Techniques, 2001. Proceedings. 2001 International
Conference on, pp. 25-34, 2001.

[29] R. K. V. Maeda, P. Yang, X. Wu, Z. Wang, J. Xu, Z. Wang,
H. Li, L. H. K. Duong, and Z. Wang, “JADE: A Heterogeneous Multiprocessor System Simulation Platform Using
Recorded and Statistical Application Models,” in Proceedings
of the Ist International Workshop on Advanced Interconnect
Solutions and Technologies for Emerging Computing Systems,
AISTECS ’16, (New York, NY, USA), pp. 8:1-8:6, ACM,
2016.

[30] C. M. Olschanowsky, M. M. Tikir, L. Carrington, and
A. Snavely, “PSnAP: Accurate Synthetic Address Streams
Through Memory Profiles,” in Proceedings of the 22Nd
International Conference on Languages and Compilers for
Parallel Computing, LCPC’09, (Berlin, Heidelberg), pp. 353367, Springer-Verlag, 2010.

[31] Y. Zhong, C. Ding, and K. Kennedy, “Reuse distance analysis
for scientific programs,” in Proceedings of Workshop on
Languages, Compilers, and Run-time Systems for Scalable
Computers, 2002.

[32] C. Nugteren, G. J. van den Braak, H. Corporaal, and H. Bal,
“A detailed GPU cache model based on reuse distance
theory,” in 2014 IEEE 20th International Symposium on High
Performance Computer Architecture (HPCA), pp. 37-48, Feb
2014.

[33] M. Badr and N. E. Jerger, “SynFull: Synthetic traffic models
capturing cache coherent behaviour,” in 2014 ACM/IEEE 41st
International Symposium on Computer Architecture (ISCA),
pp. 109-120, June 2014.

[34] Y. Jiang, E. Z. Zhang, K. Tian, and X. Shen, Js Reuse Distance
Applicable to Data Locality Analysis on Chip Multiprocessors?, pp. 264-282. Berlin, Heidelberg: Springer Berlin
Heidelberg, 2010.

[35] J. Shao, Reducing main memory access latency through
SDRAM address mapping techniques and access reordering
mechanisms. PhD thesis, Michigan Technological University,
2006.

[36] N. Beckmann and D. Sanchez, “Modeling cache performance
beyond LRU,” in 2016 IEEE International Symposium on
High Performance Computer Architecture (HPCA), pp. 225—
236, March 2016.

[37] X. Shen, J. Shaw, B. Meeker, and C. Ding, “Locality Approximation Using Time,” in Proceedings of the 34th Annual ACM
SIGPLAN-SIGACT Symposium on Principles of Programming
Languages, POPL ’07, (New York, NY, USA), pp. 55-61,
ACM, 2007.

[38] X. Xiang, C. Ding, H. Luo, and B. Bao, “HOTL: A Higher
Order Theory of Locality,” SIGARCH Comput. Archit. News,
vol. 41, pp. 343-356, Mar 2013.

[39] J. Weinberg, M. O. McCracken, E. Strohmaier, and
A. Snavely, “Quantifying Locality In The Memory Access
Patterns of HPC Applications,” in Proceedings of the 2005
ACM/IEEE Conference on Supercomputing, SC ’05, (Washington, DC, USA), pp. 50—, IEEE Computer Society, 2005.
[40] E. Berg and E. Hagersten, “Fast Data-locality Profiling of
Native Execution,” SIGMETRICS Perform. Eval. Rev., vol. 33,
pp. 169-180, June 2005.

[41] S. Ghosh, M. Martonosi, and S. Malik, “Cache Miss Equations: A Compiler Framework for Analyzing and Tuning Memory Behavior,” ACM Trans. Program. Lang. Syst.,
vol. 21, pp. 703-746, July 1999.