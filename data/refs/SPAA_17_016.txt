[1] U. A. Acar, G. E. Blelloch, and R. D. Blumofe. 2002. The Data Locality of Work
Stealing. Theory of Computing Systems 35, 3 (2002). Springer.
[2] D. Ajwani, N. Sitchinava, and N. Zeh. 2010. Geometric algorithms for privatecache chip multiprocessors. In Proc. Eur. Symp. Alg. (ESA). 75–86.
[3] L. Arge, M. T. Goodrich, N. Nelson, and N. Sitchinava. 2008. Fundamental parallel
algorithms for private-cache chip multiprocessors. In ACM SPAA. 197–206.
[4] L. Arge, M. T. Goodrich, and N. Sitchinava. 2010. Parallel external memory graph
algorithms. In IEEE IPDPS.
[5] Gianfranco Bilardi, Andrea Pietracaprina, Geppino Pucci, Michele Scquizzato,
and Francesco Silvestri. 2016. Network-Oblivious Algorithms. JACM 63 (2016),
Article 3.
[6] G. Blelloch, R. A. Chowdhury, P. Gibbons, V. Ramachandran, S. Chen, and M.
Kozuch. 2008. Provably Good Multicore Cache Performance for Divide-andConquer Algorithms. In Proc. ACM-SIAM SODA. 501–510.
[7] G. E. Blelloch, P. B. Gibbons, and H. V. Simhadri. 2010. Low depth cache-oblivious
algorithms. In Proc. ACM SPAA. 189–199.
[8] R. Blumofe and C. E. Leiserson. 1999. Scheduling multithreaded computations
by work stealing. JACM (1999), 720–748.
[9] R. Chowdhury, H. Le, and V. Ramachandran. 2010. Cache-oblivious dynamic
programming for multicores. IEEE/ACM Trans. Computational Biology (TCBB) 7
(2010), 495–510.
[10] R. A. Chowdhury and V. Ramachandran. 2010. The Cache-oblivious Gaussian
Elimination Paradigm: Theoretical Framework, Parallelization and Experimental
Evaluation. Theory of Computing Systems 47, 1 (2010), 878–919.
[11] Rezaul Alam Chowdhury and Vijaya Ramachandran. 2008. Cache-efficient
dynamic programming algorithms for multicores. In Proc. ACM SPAA. 207–216.
[12] Rezaul Alam Chowdhury, Vijaya Ramachandran, Francesco Silvestri, and Brandon Blakeley. 2013. Oblivious algorithms for multicores and network of processors. Jour. Parallel and Distr. Computing 23 (2013), 911–925.
[13] R. Cole and V. Ramachandran. 2011. Efficient Resource Oblivious Algorithms for
Multicores. CoRR arXiv:1103.4071 [cs.DC] (2011).
[14] R. Cole and V. Ramachandran. 2012. Efficient Resource Oblivious Algorithms for
Multicores with False Sharing. In Proc. IEEE IPDPS.
[15] R. Cole and V. Ramachandran. 2012. Revisiting the Cache Miss Analysis of
Multithreaded Algorithms. In Proc. LATIN’12.
[16] R. Cole and V. Ramachandran. 2017. Bounding Cache Miss Costs of Multithreaded
Computations Under General Schedulers. CoRR arXiv:1705.08350 [cs.DC] (2017).
[17] Richard Cole and Vijaya Ramachandran. 2017. Resource Oblivious Sorting on
Multicores. ACM Trans. on Parallel Computing (TOPC) 3 (2017). Article 23.
[18] T. Cormen, C. E. Leiserson, R. L. Rivest, and C. Stein. 2009. Introduction to
Algorithms, Third Edition. MIT Press.
[19] M. Frigo, C. E. Leiserson, H. Prokop, and S. Ramachandran. 2012. Cache-Oblivious
Algorithms. ACM Trans. Algor. 4 (2012), 285–297.
[20] M. Frigo and V. Strumpen. 2009. The Cache Complexity of Multithreaded Cache
Oblivious Algorithms. Theory of Computing Systems 45 (2009), 203–233.
[21] Y. Gao, I. Zhao, R. Barik, R. Raman, and V. Sarkar. 2009. Work-first and help-first
scheduling policies for async-finish task parallelism. In IEEE IPDPS.
[22] N. Sitchinava and N. Zeh. 2012. A parallel buffer heap. In ACM SPAA. 214–223.
[23] Leslie G. Valiant. 2008. A Bridging Model for Multi-core Computing. In Proc. Eur.
Symp. Alg. (ESA). 13–28.

