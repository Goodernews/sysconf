[1] Hiroyuki Akinaga and Hisashi Shima. 2010. Resistive random access memory
(ReRAM) based on metal oxides. In IEEE, Vol. 98, Issue: 12. 2237 – 2251.
https://doi.org/10.1109/JPROC.2010.2070830
[2] C. Scott Ananian, Krste Asanovic, Bradley C. Kuszmaul, Charles E. Leiserson,
and Sean Lie. 2005. Unbounded Transactional Memory. In Proceedings of
the 11th International Symposium on High-Performance Computer Architecture
(HPCA ’05). IEEE Computer Society, Washington, DC, USA, 316–327. https:
//doi.org/10.1109/HPCA.2005.41
[3] ARM. 2016.
ARMv8-A architecture evolution.
(January 2016).
https://community.arm.com/groups/processors/blog/2016/01/05/armv8-aarchitecture-evolution.
[4] NVM Library Team at Intel. 2016. Persistent Memory Programming. (August
2016). http://pmem.io.
[5] Amro Awad, Sergey Blagodurov, and Yan Solihin. 2016. Write-Aware Management of NVM-based Memory Extensions. In Proceedings of the 2016 International Conference on Supercomputing (ICS ’16). ACM, New York, NY, USA,
Article 9, 12 pages. https://doi.org/10.1145/2925426.2926284
[6] Amro Awad, Pratyusa Manadhata, Stuart Haber, Yan Solihin, and William
Horne. 2016. Silent Shredder: Zero-Cost Shredding for Secure Non-Volatile
Main Memory Controllers. In Proceedings of the Twenty-First International
Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS ’16). ACM, New York, NY, USA, 263–276. https:
//doi.org/10.1145/2872362.2872377
[7] Colin Blundell, Milo M.K. Martin, and Thomas F. Wenisch. 2009. InvisiFence:
Performance-transparent Memory Ordering in Conventional Multiprocessors. In
Proceedings of the 36th Annual International Symposium on Computer Architecture (ISCA ’09). ACM, New York, NY, USA, 233–244. https://doi.org/10.1145/
1555754.1555785
[8] Luis Ceze, Karin Strauss, James Tuck, Josep Torrellas, and Jose Renau. 2006.
CAVA: Using Checkpoint-assisted Value Prediction to Hide L2 Misses. ACM
Trans. Archit. Code Optim. 3, 2 (June 2006), 182–208. https://doi.org/10.1145/
1138035.1138038
[9] Luis Ceze, James Tuck, Pablo Montesinos, and Josep Torrellas. 2007. BulkSC:
Bulk Enforcement of Sequential Consistency. In Proceedings of the 34th Annual
International Symposium on Computer Architecture (ISCA ’07). ACM, New York,
NY, USA, 278–289. https://doi.org/10.1145/1250662.1250697
[10] Marcelo Cintra, José F. Martínez, and Josep Torrellas. 2000. Architectural
Support for Scalable Speculative Parallelization in Shared-memory Multiprocessors. In Proceedings of the 27th Annual International Symposium on Computer Architecture (ISCA ’00). ACM, New York, NY, USA, 13–24. https:
//doi.org/10.1145/339647.363382
[11] Joel Coburn, Adrian M. Caulfield, Ameen Akel, Laura M. Grupp, Rajesh K. Gupta,
Ranjit Jhala, and Steven Swanson. 2011. NV-Heaps: Making Persistent Objects
Fast and Safe with Next-generation, Non-volatile Memories. In Proceedings of
the Sixteenth International Conference on Architectural Support for Programming
Languages and Operating Systems (ASPLOS XVI). ACM, New York, NY, USA,
105–118. https://doi.org/10.1145/1950365.1950380
[12] Jeremy Condit, Edmund B. Nightingale, Christopher Frost, Engin Ipek, Benjamin Lee, Doug Burger, and Derrick Coetzee. 2009. Better I/O Through Byteaddressable, Persistent Memory. In Proceedings of the ACM SIGOPS 22Nd Symposium on Operating Systems Principles (SOSP ’09). ACM, New York, NY, USA,
133–146. https://doi.org/10.1145/1629575.1629589
[13] Intel Corp. 2016. Intel 64 and IA-32 Architectures Developer’s Manual: Vol. 3A.
Intel.
[14] Amit Gandhi, Haitham Akkary, Ravi Rajwar, Srikanth T. Srinivasan, and Konrad
Lai. 2005. Scalable Load and Store Processing in Latency Tolerant Processors.
In Proceedings of the 32Nd Annual International Symposium on Computer Architecture (ISCA ’05). IEEE Computer Society, Washington, DC, USA, 446–457.
https://doi.org/10.1109/ISCA.2005.46
[15] Kourosh Gharachorloo, Anoop Gupta, and John Hennessy. 1991. Two Techniques
to Enhance the Performance of Memory Consistency Models. In In Proceedings
of the 1991 International Conference on Parallel Processing. 355–364.
[16] Chris Gniady and Babak Falsafi. 2002. Speculative Sequential Consistency with
Little Custom Storage. In Proceedings of the 2002 International Conference on
Parallel Architectures and Compilation Techniques (PACT ’02). IEEE Computer
Society, Washington, DC, USA, 179–188. http://dl.acm.org/citation.cfm?id=
[17] Chris Gniady, Babak Falsafi, and T. N. Vijaykumar. 1999. Is SC + ILP = RC?.
In Proceedings of the 26th Annual International Symposium on Computer Architecture (ISCA ’99). IEEE Computer Society, Washington, DC, USA, 162–171.
https://doi.org/10.1145/300979.300993
[18] Lance Hammond, Brian D. Carlstrom, Vicky Wong, Ben Hertzberg, Mike Chen,
Christos Kozyrakis, and Kunle Olukotun. 2004. Programming with Transactional
Coherence and Consistency (TCC). In Proceedings of the 11th International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS XI). ACM, New York, NY, USA, 1–13. https://doi.org/10.1145/
1024393.1024395
[19] Maurice Herlihy and J. Eliot B. Moss. 1993. Transactional Memory: Architectural
Support for Lock-free Data Structures. In ISCA ’93: Proceedings of the 20th
Annual International Symposium on Computer Architecture. ACM Press, New
York, NY, USA, 289–300. https://doi.org/10.1145/165123.165164
[20] Intel. 2016.
Deprecate PCommit Instruction.
(September 2016).
https://software.intel.com/en-us/blogs/2016/09/12/deprecate-pcommitinstruction.
[21] Intel and Micron. 2015. Intel and Micron Produce Breakthrough Memory Technology. (Jul. 2015). https://newsroom.intel.com/news-releases/intel-and-micronproduce-breakthrough-memory-technology.
[22] Arpit Joshi, Vijay Nagarajan, Marcelo Cintra, and Stratis Viglas. 2015. Efficient
Persist Barriers for Multicores. In Proceedings of the 48th International Symposium on Microarchitecture (MICRO-48). ACM, New York, NY, USA, 660–671.
https://doi.org/10.1145/2830772.2830805
[23] T. Kawahara, R. Takemura, K. Miura, J. Hayakawa, S. Ikeda, Y. Lee, R. Sasaki, Y.
Goto, K. Ito, T. Meguro, F. Matsukura, H. Takahashi, H. Matsuoka, and H. Ohno.
2007. 2Mb Spin-Transfer Torque RAM (SPRAM) with Bit-by-Bit Bidirectional
Current Write and Parallelizing-Direction Current Read. In IEEE International
Solid-State Circuits Conference. Digest of Technical Papers. https://doi.org/10.
1109/ISSCC.2007.373503
[24] N. Kirman, M. Kirman, M. Chaudhuri, and J. F. Martinez. 2005. Checkpointed
Early Load Retirement. In Proceedings of the 11th International Symposium on
High Performance Computer Architecture.
[25] Aasheesh Kolli, Steven Pelley, Ali Saidi, Peter M. Chen, and Thomas F. Wenisch.
2016. High-Performance Transactions for Persistent Memories. In Proceedings
of the Twenty-First International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS ’16). ACM, New York,
NY, USA, 399–411. https://doi.org/10.1145/2872362.2872381
[26] Mark H. Kryder and Chang Soo Kim. 2009. After Hard Drives – What Comes
Next? IEEE Transactions on Magnetics, Vol. 45, Issue: 10, 3406–3413. https:
//doi.org/10.1109/TMAG.2009.2024163
[27] Emre Kultursay, Mahmut Kandemir, Anand Sivasubramaniam, and Onur Mutlu.
2013. Evaluating STT-RAM as an energy-effcient main memory alternative. In
IEEE International Symposium on Performance Analysis of Systems and Software.
https://doi.org/10.1109/ISPASS.2013.6557176
[28] Benjamin C. Lee, Engin Ipek, Onur Mutlu, and Doug Burger. 2009. Architecting
Phase Change Memory As a Scalable Dram Alternative. In Proceedings of the
36th Annual International Symposium on Computer Architecture (ISCA ’09).
ACM, New York, NY, USA, 2–13. https://doi.org/10.1145/1555754.1555758
[29] Benjamin C. Lee, Ping Zhou, Jun Yang, Youtao Zhang, Bo Zhao, Engin Ipek,
Onur Mutlu, and Doug Burger. 2010. Phase-Change Technology and the Future
of Main Memory. IEEE Micro 30, 1 (Jan. 2010), 143–143. https://doi.org/10.
1109/MM.2010.24
[30] Youyou Lu, Jiwu Shu, Long Sun, and Onur Mutlu. 2014. Loose-Ordering Consistency for persistent memory. In Computer Design, 2014 32nd IEEE International
Conference on (ICCD’14). https://doi.org/DOI:10.1109/ICCD.2014.6974684
[31] José F. Martínez and Josep Torrellas. 2002. Speculative Synchronization: Applying Thread-level Speculation to Explicitly Parallel Applications. In Proceedings
of the 10th International Conference on Architectural Support for Programming
Languages and Operating Systems (ASPLOS X). ACM, New York, NY, USA,
18–29. https://doi.org/10.1145/605397.605400
[32] C. Mohan, Don Haderle, Bruce Lindsay, Hamid Pirahesh, and Peter Schwarz.
1992. ARIES: A Transaction Recovery Method Supporting Fine-granularity
Locking and Partial Rollbacks Using Write-ahead Logging. ACM Trans. Database
Syst. 17, 1 (March 1992), 94–162. https://doi.org/10.1145/128765.128770
[33] Iulian Moraru, David G. Andersen, Michael Kaminsky, Niraj Tolia, Parthasarathy
Ranganathan, and Nathan Binkert. 2013. Consistent, Durable, and Safe Memory
Management for Byte-addressable Non Volatile Main Memory. In Proceedings
of the First ACM SIGOPS Conference on Timely Results in Operating Systems
(TRIOS ’13). ACM, New York, NY, USA, Article 1, 17 pages. https://doi.org/10.
1145/2524211.2524216
[34] Onur Mutlu, Jared Stark, Chris Wilkerson, and Yale N. Patt. 2003. Runahead Execution: An Alternative to Very Large Instruction Windows for Out-of-Order Processors. In Proceedings of the 9th International Symposium on High-Performance
Computer Architecture (HPCA ’03). IEEE Computer Society, Washington, DC,
USA, 129–. http://dl.acm.org/citation.cfm?id=822080.822823
S. Shin et al.
[35] Vijay S. Pai, Parthasarathy Ranganathan, Sarita V. Adve, and Tracy Harton. 1996.
An Evaluation of Memory Consistency Models for Shared-memory Systems
with ILP Processors. In Proceedings of the Seventh International Conference
on Architectural Support for Programming Languages and Operating Systems
(ASPLOS VII). ACM, New York, NY, USA, 12–23. https://doi.org/10.1145/
237090.237142
[36] Avadh Patel, Furat Afram, Shunfei Chen, and Kanad Ghose. 2011. MARSSx86:
A Full System Simulator for x86 CPUs. In Design Automation Conference.
[37] Steven Pelley, Peter M. Chen, and Thomas F. Wenisch. 2014. Memory Persistency. In Proceeding of the 41st Annual International Symposium on Computer Architecuture (ISCA ’14). IEEE Press, Piscataway, NJ, USA, 265–276.
https://doi.org/10.1145/2678373.2665712
[38] Raghunath Rajachandrasekar, Sreeram Potluri, Akshay Venkatesh, Khaled Hamidouche, Md. Wasi-ur Rahman, and Dhabaleswar K. (DK) Panda. 2014. MICCheck: A Distributed Check Pointing Framework for the Intel Many Integrated
Cores Architecture. In Proceedings of the 23rd International Symposium on Highperformance Parallel and Distributed Computing (HPDC ’14). ACM, New York,
NY, USA, 121–124. https://doi.org/10.1145/2600212.2600713
[39] Ravi Rajwar and James R. Goodman. 2001. Speculative Lock Elision: Enabling
Highly Concurrent Multithreaded Execution. In Proceedings of the 34th Annual
ACM/IEEE International Symposium on Microarchitecture (MICRO 34). IEEE
Computer Society, Washington, DC, USA, 294–305. http://dl.acm.org/citation.
cfm?id=563998.564036
[40] Parthasarathy Ranganathan, Vijay S. Pai, and Sarita V. Adve. 1997. Using Speculative Retirement and Larger Instruction Windows to Narrow the Performance
Gap Between Memory Consistency Models. In Proceedings of the Ninth Annual
ACM Symposium on Parallel Algorithms and Architectures (SPAA ’97). ACM,
New York, NY, USA, 199–210. https://doi.org/10.1145/258492.258512
[41] Jinglei Ren, Jishen Zhao, Samira Khan, Jongmoo Choi, Yongwei Wu, and Onur
Mutlu. 2015. ThyNVM: Enabling Software-transparent Crash Consistency in
Persistent Memory Systems. In Proceedings of the 48th International Symposium
on Microarchitecture (MICRO-48). ACM, New York, NY, USA, 672–685. https:
//doi.org/10.1145/2830772.2830802
[42] Srikanth T. Srinivasan, Ravi Rajwar, Haitham Akkary, Amit Gandhi, and Mike
Upton. 2004. Continual Flow Pipelines. In Proceedings of the 11th International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS XI). ACM, New York, NY, USA, 107–119. https://doi.org/10.
1145/1024393.1024407
[43] J. Steffan and T Mowry. 1998. The Potential for Using Thread-Level Data
Speculation to Facilitate Automatic Parallelization. In Proceedings of the 4th
International Symposium on High-Performance Computer Architecture (HPCA
’98). IEEE Computer Society, Washington, DC, USA, 2–. http://dl.acm.org/
citation.cfm?id=822079.822712
[44] J. Greggory Steffan, Christopher B. Colohan, Antonia Zhai, and Todd C. Mowry.
2000. A Scalable Approach to Thread-level Speculation. In Proceedings of the
27th Annual International Symposium on Computer Architecture (ISCA ’00).
ACM, New York, NY, USA, 1–12. https://doi.org/10.1145/339647.339650
[45] Haris Volos, Andres Jaan Tack, and Michael M. Swift. 2011. Mnemosyne:
Lightweight Persistent Memory. In Proceedings of the Sixteenth International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS XVI). ACM, New York, NY, USA, 91–104. https://doi.org/10.
1145/1950365.1950379
[46] Chundong Wang, Qingsong Wei, Jun Yang, Cheng Chen, and Mingdi Xue. 2015.
How to Be Consistent with Persistent Memory? An Evaluation Approach. In IEEE
International Conference on Networking, Architecture and Storage (NAS’15).
https://doi.org/DOI:10.1109/NAS.2015.7255223
[47] Thomas F. Wenisch, Anastasia Ailamaki, Babak Falsafi, and Andreas Moshovos.
2007. Mechanisms for Store-wait-free Multiprocessors. In Proceedings of the 34th
Annual International Symposium on Computer Architecture (ISCA ’07). ACM,
New York, NY, USA, 266–277. https://doi.org/10.1145/1250662.1250696
[48] Jun Yang, Qingsong Wei, Cheng Chen, Chundong Wang, Khai Leong Yong, and
Bingsheng He. 2015. NV-Tree: Reducing Consistency Cost for NVM-based
Single Level Systems. In Proceedings of the 13th USENIX Conference on File
and Storage Technologies (FAST’15). USENIX Association, Berkeley, CA, USA,
167–181. http://dl.acm.org/citation.cfm?id=2750482.2750495
[49] Jishen Zhao, Sheng Li, Doe Hyun Yoon, Yuan Xie, and Norman P. Jouppi. 2013.
Kiln: Closing the Performance Gap Between Systems with and Without Persistence Support. In Proceedings of the 46th Annual IEEE/ACM International
Symposium on Microarchitecture (MICRO-46). ACM, New York, NY, USA, 421–
432. https://doi.org/10.1145/2540708.2540744
