[1] Attila T. Áfra and László Szirmay-Kalos. 2014. Stackless MultiBVH Traversal for CPU, MIC and GPU Ray Tracing. Comput.
Graph. Forum 33, 1 (Feb. 2014), 129–140. https://doi.org/10.
1111/cgf.12259
[2] Timo Aila and Tero Karras. 2010. Architecture Considerations
for Tracing Incoherent Rays. In Proceedings of the Conference
on High Performance Graphics (HPG ’10). Eurographics Association, Aire-la-Ville, Switzerland, Switzerland, 113–122.
[3] Timo Aila and Samuli Laine. 2009. Understanding the Eﬃciency
of Ray Traversal on GPUs. In Proceedings of the Conference on
High Performance Graphics 2009 (HPG ’09). ACM, New York,
NY, USA, 145–149.
[4] Timo Aila, Samuli Laine, and Tero Karras. 2012. Understanding
the Eﬃciency of Ray Traversal on GPUs – Kepler and Fermi
Addendum. NVIDIA Technical Report NVR-2012-02. NVIDIA
Corporation.
[5] A Bakhoda, G. L Yuan, W. W. L Fung, H Wong, and T. M
Aamodt. 2009. Analyzing CUDA workloads using a detailed
GPU simulator. In IEEE International Symposium on PERFORMANCE Analysis of Systems and Software. 163–174.
[6] Jon Louis Bentley. 1975. Multidimensional Binary Search Trees
Used for Associative Searching. Commun. ACM 18, 9 (Sept.
1975), 509–517.
[7] Nicolas Brunie, Sylvain Collange, and Gregory Diamos. 2012. Simultaneous Branch and Warp Interweaving for Sustained GPU
Performance. In Proceedings of the 39th Annual International
Symposium on Computer Architecture (ISCA ’12). IEEE Computer Society, Washington, DC, USA, 49–60.
[8] Tomáš Davidovič, Jaroslav Křivánek, Miloš Hašan, and Philipp
Slusallek. 2014. Progressive Light Transport Simulation on the
GPU: Survey and Improvements. ACM Trans. Graph. 33, 3, Article 29 (June 2014), 19 pages. https://doi.org/10.1145/2602144
[9] Gregory Diamos, Benjamin Ashbaugh, Subramaniam Maiyuran,
Andrew Kerr, Haicheng Wu, and Sudhakar Yalamanchili. 2011.
SIMD Re-convergence at Thread Frontiers. In Proceedings of the
44th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO-44). ACM, New York, NY, USA, 477–488.
https://doi.org/10.1145/2155620.2155676
[10] Ahmed ElTantawy, Jessica Wenjie Ma, Mike O’Connor, and
Tor M. Aamodt. 2014. A scalable multi-path microarchitecture
for eﬃcient GPU control flow. 2014 IEEE 20th International
Symposium on High Performance Computer Architecture (HPCA) 00 (2014), 248–259.
[11] Marcos Fajardo. 2014. How Ray Tracing Conquered Cinematic Rendering, Keynote. In Proceedings of High Performance
Graphics (HPG ’14).
[12] Wilson W. L. Fung and Tor M. Aamodt. 2011. Thread Block
Compaction for Eﬃcient SIMT Control Flow. In Proceedings of
the 2011 IEEE 17th International Symposium on High Performance Computer Architecture (HPCA ’11). IEEE Computer
Society, Washington, DC, USA, 25–36.
[13] Wilson W. L. Fung, Ivan Sham, George Yuan, and Tor M. Aamodt. 2007. Dynamic Warp Formation and Scheduling for Eﬃcient GPU Control Flow. In Proceedings of the 40th Annual IEEE/ACM International Symposium on Microarchitecture
(MICRO 40). IEEE Computer Society, Washington, DC, USA,
407–420.
[14] Venkatraman Govindaraju, Peter Djeu, Karthikeyan Sankaralingam, Mary Vernon, and William R. Mark. 2008. Toward a
Multicore Architecture for Real-time Ray-tracing. In Proceedings
of the 41st Annual IEEE/ACM International Symposium on
Microarchitecture (MICRO 41). IEEE Computer Society, Washington, DC, USA, 176–187.
[15] Khronos Group. 2016. The OpenCL C Specification V2.0. Technical Report.
[16] Imagination. 2017. PowerVR Graphics Processors. Technical
Report.
[17] S. Keely. 2014. Reduced Precision for Hardware Ray Tracing
in GPUs. In Proceedings of High Performance Graphics (HPG ’14). Eurographics Association, Aire-la-Ville, Switzerland,
Switzerland, 29–40.
[18] Daniel Kopta, Konstantin Shkurko, Josef Spjut, Erik Brunvand, and Al Davis. 2013. An Energy and Bandwidth Eﬃcient Ray Tracing Architecture. In Proceedings of the 5th HighPerformance Graphics Conference (HPG ’13). ACM, New York,
NY, USA, 121–128.
[19] D. Kopta, J. Spjut, E. Brunvand, and A. Davis. 2010. Eﬃcient
MIMD architectures for high-performance ray tracing. In IEEE
International Conference on Computer Design. 9–16.
[20] Samuli Laine, Tero Karras, and Timo Aila. 2013. Megakernels
Considered Harmful: Wavefront Path Tracing on GPUs. In Proceedings of the 5th High-Performance Graphics Conference (HPG ’13). ACM, New York, NY, USA, 137–143. https://doi.org/
10.1145/2492045.2492060
[21] Won-Jong Lee, Youngsam Shin, Jaedon Lee, Jin-Woo Kim, JaeHo Nah, Seokyoon Jung, Shihwa Lee, Hyun-Sang Park, and TackDon Han. 2013. SGRT: A Mobile GPU Architecture for Realtime Ray Tracing. In Proceedings of the 5th High-Performance
Graphics Conference (HPG ’13). ACM, New York, NY, USA,
109–119.
[22] G. Liktor and K. Vaidyanathan. 2016. Bandwidth-eﬃcient BVH
Layout for Incremental Hardware Traversal. In Proceedings of
High Performance Graphics (HPG ’16). Eurographics Association, Aire-la-Ville, Switzerland, 51–61.
[23] Jiayuan Meng, David Tarjan, and Kevin Skadron. 2010. Dynamic
Warp Subdivision for Integrated Branch and Memory Divergence
Tolerance. In Proceedings of the 37th Annual International Symposium on Computer Architecture (ISCA ’10). ACM, New York,
NY, USA, 235–246.
[24] Jae-Ho Nah, Jeong-Soo Park, Chanmin Park, Jin-Woo Kim, YunHye Jung, Woo-Chan Park, and Tack-Don Han. 2011. T&I Engine: Traversal and Intersection Engine for Hardware Accelerated Ray Tracing. In Proceedings of the 2011 SIGGRAPH Asia
Conference (SA ’11). ACM, New York, NY, USA, Article 160,
10 pages.
[25] Veynu Narasiman, Michael Shebanow, Chang Joo Lee, Rustam
Miftakhutdinov, Onur Mutlu, and Yale N. Patt. 2011. Improving
GPU Performance via Large Warps and Two-level Warp Scheduling. In Proceedings of the 44th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO-44). ACM, New
York, NY, USA, 308–317.
[26] NVIDIA Corporation. 2012. NVIDIA Kepler GK110 Architecture Whitepaper V1.0. Technical Report.
[27] NVIDIA Corporation. 2017. CUDA C Programming Guide V8.0.
Technical Report.
[28] Sreepathi Pai and Keshav Pingali. 2016. A Compiler for Throughput Optimization of Graph Algorithms on GPUs. In Proceedings of the 2016 ACM SIGPLAN International Conference on
Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA 2016). ACM, New York, NY, USA, 1–19.
https://doi.org/10.1145/2983990.2984015
[29] Luke Peterson and Tobias Hector. 2016.
Ray Tracing
on the Wizard GPU. In Imagination Developers Connection (IDC ’16).
https://community.imgtec.com/downloads/
ray-tracing-api-overview/
[30] Matt Pharr and Greg Humphreys. 2004. Physically Based Rendering: From Theory to Implementation. Morgan Kaufmann
Publishers Inc., San Francisco, CA, USA.
[31] Karthik Ramani, Christiaan P. Gribble, and Al Davis. 2009.
StreamRay: A Stream Filtering Architecture for Coherent Ray
Tracing. In Proceedings of the 14th International Conference
on Architectural Support for Programming Languages and Operating Systems (ASPLOS XIV). ACM, New York, NY, USA,
325–336.

[32] Minsoo Rhu and Mattan Erez. 2012. CAPRI: Prediction of
Compaction-adequacy for Handling Control-divergence in GPGPU Architectures. In Proceedings of the 39th Annual International Symposium on Computer Architecture (ISCA ’12). IEEE
Computer Society, Washington, DC, USA, 61–71.
[33] Minsoo Rhu and M. Erez. 2013. The dual-path execution model
for eﬃcient GPU control flow. In Proceedings of IEEE Symp.
on High Performance Computer Architecture (HPCA ’13). 235–
246.
[34] Timothy G. Rogers, Mike O’Connor, and Tor M. Aamodt. 2012.
Cache-Conscious Wavefront Scheduling. In Proceedings of the
2012 45th Annual IEEE/ACM International Symposium on
Microarchitecture (MICRO-45). IEEE Computer Society, Washington, DC, USA, 72–83.
[35] Jörg Schmittler, Sven Woop, Daniel Wagner, Wolfgang J. Paul,
and Philipp Slusallek. 2004. Realtime Ray Tracing of Dynamic Scenes on an FPGA Chip. In Proceedings of the ACM SIGGRAPH/EUROGRAPHICS Conference on Graphics Hardware
(HWWS ’04). ACM, New York, NY, USA, 95–106.
[36] Josef Spjut, Andrew Kensler, Daniel Kopta, and Erik Brunvand.
2009. TRaX: A Multicore Hardware Architecture for Real-time
Ray Tracing. Trans. Comp.-Aided Des. Integ. Cir. Sys. 28, 12
(Dec. 2009), 1802–1815.
[37] Markus Steinberger, Michael Kenzel, Pedro Boechat, Bernhard
Kerbl, Mark Dokter, and Dieter Schmalstieg. 2014. Whippletree:
Task-based Scheduling of Dynamic Workloads on the GPU. ACM
Trans. Graph. 33, 6, Article 228 (Nov. 2014), 11 pages. https://
doi.org/10.1145/2661229.2661250
[38] Aniruddha S. Vaidya, Anahita Shayesteh, Dong Hyuk Woo, Roy
Saharoy, and Mani Azimi. 2013. SIMD Divergence Optimization
Through Intra-warp Compaction. In Proceedings of the 40th Annual International Symposium on Computer Architecture (ISCA ’13). ACM, New York, NY, USA, 368–379.
[39] Sven Woop, Jörg Schmittler, and Philipp Slusallek. 2005. RPU: A
Programmable Ray Processing Unit for Realtime Ray Tracing. In
ACM SIGGRAPH 2005 Papers (SIGGRAPH ’05). ACM, New
York, NY, USA, 434–444.
[40] Joseph Zambreno and Michael Steﬀen. 2010. Improving SIMT Efficiency of Global Rendering Algorithms with Architectural Support for Dynamic Micro-Kernels. 2010 43rd Annual IEEE/ACM
International Symposium on Microarchitecture (MICRO 2010)
(2010), 237–248.