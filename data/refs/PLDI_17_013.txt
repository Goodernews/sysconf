[1] APRON. APRON numerical abstract domain library. URL
http: //apron.cri.ensmp.fr/library/.

[2] R. Backhouse and B. Carré. Regular algebra applied to pathfinding problems. J. Inst. Maths. Applics., 15, 1975.

[3] D. Beyer and M. Keremoglu. CPAchecker: A tool for configurable software verification. In CAV, 2011.

[4] S. Biallas, J. Brauer, A. King, and S. Kowalewski. Loop
leaping with closures. In SAS, 2012.
[5] A. Bouajjani, J. Esparza, and O. Maler. Reachability analysis

of pushdown automata: Application to model checking. In
CONCUR, 1997.

[6] M. Bozga, R. Iosif, F Koneény, and T. Vojnar. Tool demonstration of the FLATA counter automata toolset. In Workshop
on Invariant Generation, 2012.

[7] Q. Carbonneaux, J. Hoffmann, and Z. Shao. Compositional
certified resource bounds. In PLDI, 2015.

[8] Q. Carbonneaux, J. Hoffmann, and Z. Shao. Compositional certified resource bounds (extended version).
YALEU/DCS/TR-1505, Yale Univ., New Haven, CT, Apr.
2015.

[9] B. Carré. An algebra for network routing problems. J. Inst.
Maths. Applics., 7, 1971.

[10] P. Cousot and R. Cousot. Abstract interpretation: A unified
lattice model for static analysis of programs by construction
or approximation of fixpoints. In POPL, 1977.

[11] P. Cousot and N. Halbwachs. Automatic discovery of linear
constraints among variables of a program. In POPL, 1978.

[12] L. de Moura and N. Bjgrner. Z3: An efficient SMT solver. In
TACAS, 2008.

[13] J. Esparza, S. Kiefer, and M. Luttenberger. Newtonian program analysis. J. ACM, 57(6), 2010.

[14] A. Farzan and Z. Kincaid. Compositional recurrence analysis.
In FMCAD, 2015.
[15] A. Finkel, B.Willems, and P. Wolper. A direct symbolic

approach to model checking pushdown systems. ENTCS, 9,
1997.

[16] P. Ganty, R. Iosif, and F. Koneény. Underapproximation
of procedure summaries for integer programs. Softw. Tools
for Tech. Transfer, 2016. Corrected version available as
arXiv:1210.4289v3 (10.1007/s10009-016-0420-7).

[17] M. Gondran and M. Minoux. Graphs, Dioids and Semirings:
New Models and Algorithms. Springer-Verlag, 2010.

[18] L. Gonnord and P. Schrammel. Abstract acceleration in linear
relation analysis. SCP, 93, 2014.

[19] S. Gulwani and F. Zuleger. The reachability-bound problem.
In PLDJ, 2010.

[20] S. Gulwani, K. Mehra, and T. Chilimbi. SPEED: Precise and
efficient static estimation of program computational complexity. In POPL, 2009.

[21] A. Gurfinkel, T. Kahsai, A. Komuravelli, and J. Navas. The
SeaHorn verification framework. In CAV, 2015.

[22] M. Heizmann, J. Christ, D. Dietsch, E. Ermis, J. Hoenicke,
M. Lindenmann, A. Nutz, C. Schilling, and A. Podelski. Ultimate Automizer with SMTInterpol (competition contribution). In TACAS, 2013.

[23] B. Jeannet, P. Schrammel, and S. Sankaranarayanan. Abstract
acceleration of general linear loops. In POPL, 2014.

[24] E. Karpenkov, D. Monniaux, and P. Wendler. Program analysis with local policy iteration. In VMCAI, 2016.

[25] N. Kidd, A. Lal, and T. Reps. The
Weighted Automaton Library, 2007. URL
http: //www.cs.wisc.edu/wpis/wpds/download.php.

[26] G. Kildall. A unified approach to global program optimization. In POPL, 1973.

[27] Z. Kincaid, J. Breck, A. Forouhi Boroujeni, and T. Reps.
Compositional recurrence analysis revisited. TR-1840, Comp.
Sci. Dept., Univ. of Wisconsin, Madison, WI, Oct. 2016. Revised, Apr. 2017.

[28] D. Kroening, N. Sharygina, S. Tonetta, A. Tsitovich, and
C. Wintersteiger. Loop summarization using abstract transformers. In ATVA, 2008.

[29] A. Lal and T. Reps. Improving pushdown system model
checking. In CAV, 2006.

[30] A. Lal and T. Reps. Reducing concurrent analysis under
a context bound to sequential analysis. Formal Methods in
System Design, 35(1):73-97, 2009.

[31] A. Lal, T. Touili, N. Kidd, and T. Reps. Interprocedural
analysis of concurrent programs under a context bound. In
TACAS, 2008.

[32] J. Leroux and G. Sutre. Accelerated data-flow analysis. In
SAS, 2007.

[33] T. Reps. Program analysis via graph reachability. IST, 40,
1998.

[34] T. Reps, S. Schwoon, S. Jha, and D. Melski. Weighted
pushdown systems and their application to interprocedural
dataflow analysis. SCP, 58, 2005.

[35] T. Reps, E. Turetsky, and P. Prabhu. Newtonian program
analysis via tensor product. In POPL, 2016.

[36] G. Rote. Path problems in graphs. In Computational Graph
Theory (Computing Supplementum 7). Springer-Verlag, 1990.

[37] B. Ryder and M. Paul. Elimination algorithms for data flow
analysis. ACM Comput. Surv., 18(3):277-316, 1986.

[38] M. Sharir and A. Pnueli. Two approaches to interprocedural
data flow analysis. In Program Flow Analysis: Theory and
Applications. Prentice-Hall, 1981.

[39] SVCOMP16. Sth Int. competition
ware verification (SV-COMPI6), 2016.
https://sv-comp.sosy-lab. org/2016/.

[40] R. Tarjan. Fast algorithms for solving path problems. J. ACM,
28(3):594-614, 1981.

