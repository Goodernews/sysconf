[1] A. Juels and A. Oprea, “New approaches to security and availability for
cloud data,” Commun. ACM, vol. 56, no. 2, pp. 64–73, Feb. 2013.
[2] C. Song, Z. Qu, N. Blumm, and A.-L. Barabási, “Limits of predictability
in human mobility,” Science, vol. 327, no. 5968, pp. 1018–1021, 2010.
[3] P. R. Lei, T. J. Shen, W. C. Peng, and I. J. Su, “Exploring spatialtemporal trajectory model for location prediction,” in 2011 IEEE 12th
International Conference on Mobile Data Management, vol. 1, June
2011, pp. 58–67.
[4] Y. Wang, B. Veeravalli, and C.-K. Tham, “On data staging algorithms
for shared data accesses in clouds,” IEEE Transactions on Parallel and
Distributed Systems, vol. 99, no. PrePrints, 2012.
[5] L. A. Belady, “A study of replacement algorithms for a virtual-storage
computer,” IBM Syst. J., vol. 5, no. 2, pp. 78–101, Jun. 1966.
[6] B. Veeravalli, “Network caching strategies for a shared data distribution
for a predeﬁned service demand sequence,” IEEE Transactions on
Knowledge and Data Engineering, vol. 15, no. 6, Nov. 2003.
[7] G. Chockler, G. Laden, and Y. Vigfusson, “Data caching as a cloud
service,” in Proceedings of the 4th International Workshop on Large
Scale Distributed Systems and Middleware, ser. LADIS ’10, 2010, pp.
18–21.
[8] ——, “Design and implementation of caching services in the cloud,”
IBM Journal of Research and Development, vol. 55, no. 6, pp. 9:1–
9:11, Nov 2011.
[9] N. L. Scouarnec, C. Neumann, and G. Straub, “Cache policies for cloudbased systems: To keep or not to keep,” in 2014 IEEE 7th International
Conference on Cloud Computing, June 2014, pp. 1–8.
[10] M. Kallahalla and P. J. Varman, “Pc-opt: Optimal ofﬂine prefetching and
caching for parallel i/o systems,” IEEE Trans. Comput., vol. 51, no. 11,
pp. 1333–1344, Nov. 2002.
[11] B. S. Gill, “On multi-level exclusive caching: Ofﬂine optimality and
why promotions are better than demotions,” in Proceedings of the 6th
USENIX Conference on File and Storage Technologies, ser. FAST’08,
2008, pp. 4:1–4:17.
[12] A. Jain and C. Lin, “Back to the future: Leveraging belady’s algorithm
for improved cache replacement,” in the 43th International Symposium
on Computer Architecture (ISCA), 2016.
[13] S. Jiang and X. Zhang, “Lirs: An efﬁcient low inter-reference recency
set replacement policy to improve buffer cache performance,” in Proceedings of the 2002 ACM SIGMETRICS International Conference on
Measurement and Modeling of Computer Systems, ser. SIGMETRICS
’02, 2002, pp. 31–42.
[14] M. Chaudhuri, “Pseudo-lifo: The foundation of a new family of replacement policies for last-level caches,” in Proceedings of the 42Nd Annual
IEEE/ACM International Symposium on Microarchitecture, ser. MICRO
42, 2009, pp. 401–412.
[15] D. A. Jiménez, “Insertion and promotion for tree-based pseudolru lastlevel caches,” in Proc. of the 46th Annual IEEE/ACM International
Symposium on Microarchitecture, ser. MICRO-46, 2013, pp. 284–296.
[16] D. Sleator and R. Tarjan, “Amortized efﬁciency of list update and paging
rules,” Communication of ACM, vol. 28, pp. 202–208, 1985.
[17] M. Charikar, D. Halperin, and R. Motwani, “The dynamic servers
problem,” in Proceedings of the ninth annual ACM-SIAM symposium
on Discrete algorithms, ser. SODA ’98, Philadelphia, PA, USA, 1998,
pp. 410–419.
[18] D. Halperin, J. Latombe, and R. Motwani, “Dynamic maintenance of
kinematic structures,” Stanford, CA, USA, Tech. Rep., 1995.
[19] B. Veeravalli and E. Yew, “Network caching strategies for reservationbased multimedia serives on high-speed networks,” Data&Knowledge
Engineering, vol. 41, no. 1, Apr. 2002.
[20] W. Shi and C. Su, “The rectilinear steiner arborescence problem is npcomplete,” in Proceedings of the eleventh annual ACM-SIAM symposium
on Discrete algorithms, ser. SODA ’00, Philadelphia, PA, USA, 2000,
pp. 780–787.
