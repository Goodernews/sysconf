[1] Adrian M. Caulfield, Arup De, Joel Coburn,
Todor I. Mollow, Rajesh K. Gupta, and Steven
Swanson. Moneta: A High-Performance Storage Array Architecture for Next-Generation, Nonvolatile Memories. In Proceedings of the 43rd Annual IEEE/ACM International Symposium on Microarchitecture, MICRO ’10, pages 385–395, 2010.
[2] Jisoo Yang, Dave B. Minturn, and Frank Hady.
When Poll is Better Than Interrupt. In Proceedings of the 10th USENIX Conference on File and
Storage Technologies, FAST’12, pages 1–7, 2012.
[3] Steven Swanson and Adrian M. Caulfield. Refactor,
Reduce, Recycle: Restructuring the I/O Stack for
the Future of Storage. IEEE Computer, 46(8):52–
59, August 2013.
[4] Michael Wei, Matias Bjorling, and Philippe Bonnet. I/O Speculation for the Microsecond Era. In
Proceedings of the USENIX Annual Technical Conference, ATC’14, pages 475–481, 2014.
[5] Sangyeun Cho, Chanik Park, Hyunok Oh,
Sungchan Kim, Youngmin Yi, and Gregory R.
Ganger. Active Disk Meets Flash: A Case for
Intelligent SSDs. In Proceedings of the 27th
International ACM Conference on International
Conference on Supercomputing, ICS ’13, pages
91–102, 2013.
[6] Jaeyoung Do, Yang-Suk Kee, Jignesh M. Patel,
Chanik Park, Kwanghyun Park, and David J. DeWitt. Query Processing on Smart SSDs: Opportunities and Challenges. In Proceedings of the
ACM SIGMOD International Conference on Management of Data, SIGMOD ’13, pages 1221–1230,
2013.
[7] Boncheol Gu, Andre S. Yoon, Duck-Ho Bae, Insoon Jo, Jinyoung Lee, Jonghyun Yoon, Jeong-Uk
Kang, Moonsang Kwon, Chanho Yoon, Sangyeun
Cho, Jaeheon Jeong, and Duckhyun Chang. Biscuit: A Framework for Near-data Processing of Big
Data Workloads. In Proceedings of the 43rd International Symposium on Computer Architecture,
ISCA ’16, pages 153–165, 2016.
[8] Sudharsan Seshadri, Mark Gahagan, Sundaram
Bhaskaran, Trevor Bunker, Arup De, Yanqin Jin,
Yang Liu, and Steven Swanson. Willow: A Userprogrammable SSD. In Proceedings of the 11th
USENIX Conference on Operating Systems Design
and Implementation, OSDI’14, pages 67–80, 2014.

[9] Intel.
Intel Optane Technology.
http//www.intel.com/content/www/us/
en/architecture-and-technology/
intel-optane-technology.html/.

[10] Rick Merritt.
3D XPoint Steps Into the
Light. http://www.eetimes.com/document.
asp?doc_id=1328682, 2016.
[11] Ian Cutress. Intel’s 140GB Optane 3D XPoint
PCIe SSD Spotted at IDF.
http://www.anandtech.com/show/10604/
intels-140gb-optane-3d-xpoint-pcie-ssdspotted-at-idf, 2016.
[12] Rob Davis. The Network is the New Storage Bottleneck.
https://www.datanami.com/2016/
11/10/network-new-storage-bottleneck/,
2016.
[13] Gunna Marripudi and llker Cebeli. How Networking Affects Flash Storage Systems. Flash Memory
Summit 2016.
[14] Mingzhe Hao, Gokul Soundararajan, Deepak
Kenchammana-Hosekote, Andrew A. Chien, and
Haryadi S. Gunawi. The Tail at Store: A Revelation
from Millions of Hours of Disk and SSD Deployments. In Proceedings of the 14th USENIX Conference on File and Storage Technologies, FAST’16,
pages 263–276, 2016.
[15] John Colgrove, John D. Davis, John Hayes,
Ethan L. Miller, Cary Sandvig, Russell Sears, Ari
Tamches, Neil Vachharajani, and Feng Wang. Purity: Building Fast, Highly-Available Enterprise
Flash Storage from Commodity Components. In
Proceedings of the ACM SIGMOD International
Conference on Management of Data, SIGMOD’15,
pages 1683–1694, 2015.
[16] EMC.
EMC All-Flash Array.
https:
//www.emc.com/collateral/data-sheet/
h12451-xtremio-4-system-specifications-ss.
pdf.
[17] PureStorage.
Purestorage All-Flash Array.
https://www.purestorage.com/content/
dam/purestorage/pdf/datasheets/ps_
ds5p_flasharraym_04.pdf.
[18] SolidFire. SolidFire All-Flash Array. http:
//info.solidfire.com/rs/solidfire/
images/SolidFire_ProductDatasheet.pdf.
[19] Nimble. Nimble All-Flash Array. https://www.
nimblestorage.com/technology-products/
all-flash-array-specifications/.
[20] Jian Ouyang, Shiding Lin, Song Jiang, Zhenyu
Hou, Yong Wang, and Yuanzheng Wang. SDF:
Software-defined Flash for Web-scale Internet Storage Systems. In Proceedings of the 19th International Conference on Architectural Support for
Programming Languages and Operating Systems,
ASPLOS’14, pages 471–484, 2014.
[21] Yongseok Oh, Eunjae Lee, Choulseung Hyun,
Jongmoo Choi, Donghee Lee, and Sam H. Noh.
Enabling Cost-Effective Flash based Caching with
an Array of Commodity SSDs. In Proceedings of
the 16th Annual Middleware Conference, Middleware’15, pages 63–74, 2015.
[22] Dimitris Skourtis, Dimitris Achlioptas, Noah
Watkins, Carlos Maltzahn, and Scott Brandt. Flash
on Rails: Consistent Flash Performance through
Redundancy. In Proceedings of the USENIX Annual Technical Conference, ATC’14, pages 462–
474, 2014.
[23] Myoungsoo Jung, Wonil Choi, John Shalf, and
Mahmut Taylan Kandemir. Triple-A: A Non-SSD
Based Autonomic All-Flash Array for High Performance Storage Systems. In Proceedings of the 19th
International Conference on Architectural Support
for Programming Languages and Operating Systems, ASPLOS’14, pages 441–454, 2014.
[24] Bo Mao, Hong Jiang, Suzhen Wu, Lei Tian, Dan
Feng, Jianxi Chen, and Lingfang Zeng. HPDA:
A Hybrid Parity-Based Disk Array for Enhanced
Performance and Reliability. ACM Transactions on
Storage, 8(1):26–52, 2012.
[25] Tzi cker Chiueh, Weafon Tsao, Hou-Chiang Sun,
Tiang-Fang Chien, An-Nan Chang, and ChengDing Chen. Software Orchestrated Flash Array. In
Proceedings of the 7th ACM International Systems
and Storage Conference, SYSTOR’14, pages 1–11,
2014.
[26] Feng Chen, David A. Koufaty, and Xiaodong
Zhang. Understanding Intrinsic Characteristics and
System Implications of Flash Memory Based Solid
State Drives. In Proceedings of the 11th ACM SIGMETRICS/International Joint Conference on Measurement and Modeling of Computer Systems, SIGMETRICS’09, pages 181–192, 2009.
[27] Jaeho Kim, Donghee Lee, and Sam H. Noh. Towards SLO Complying SSDs Through OPS Isolation. In Proceedings of the 13th USENIX Conference on File and Storage Technologies, FAST’15,
pages 183–189, 2015.

[28] Jens Axboe. FIO: Flexible I/O Tester. https://
github.com/axboe/fio.
[29] Changwoo Min, Kangnyeon Kim, Hyunjin Cho,
Sang-Won Lee, and Young Ik Eom. SFS: Random
Write Considered Harmful in Solid State Drives.
In Proceedings of the 10th USENIX Conference
on File and Storage Technologies, FAST’12, pages
12–12, 2012.
[30] Changman Lee, Dongho Sim, Jooyoung Hwang,
and Sangyeun Cho. F2FS: A New File System
for Flash Storage. In Proceedings of the 13th
USENIX Conference on File and Storage Technologies, FAST’15, pages 273–286, 2015.
[31] Aayush Gupta, Youngjae Kim, and Bhuvan Urgaonkar. DFTL: a Flash Translation Layer Employing Demand-based Selective Caching of Pagelevel Address Mappings. In Proceedings of the 14th
International Conference on Architectural Support
for Programming Languages and Operating Systems, ASPLOS’09, pages 229–240, 2009.
[32] Guanying Wu and Xubin He. Reducing SSD Read
Latency via NAND Flash Program and Erase Suspension. In Proceedings of the 10th USENIX
Conference on File and Storage Technologies,
FAST’12, pages 10–10, 2012.
[33] Junghee Lee, Youngjae Kim, Galen M. Shipman,
Sarp Oral, and Jongman Kim. Preemptible I/O
Scheduling of Garbage Collection for Solid State
Drives. IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, 32(2):247–
260, 2013.
[34] Ken Smith. Understanding SSD Overprovisioning.
Flash Memory Summit 2012.
[35] Ji-Yong Shin, Mahesh Balakrishnan, Tudor Marian, and Hakim Weatherspoon. Gecko: ContentionOblivious Disk Arrays for Cloud Storage. In Proceedings of the 11th USENIX Conference on File
and Storage Technologies, FAST’13, pages 285–
297, 2013.
[36] Wiki.
Logical Volume Manager.
https:
//en.wikipedia.org/wiki/Logical_
Volume_Manager_(Linux).