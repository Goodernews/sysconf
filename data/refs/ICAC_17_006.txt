[1] The
computer
language
benchmarks
game.
http://benchmarksgame.alioth.debian.org/.
[2] G. Almási, R. Bellofatto, J. Brunheroto, C. Caşcaval, J. Castaños,
L. Ceze, P. Crumley, C. C. Erway, J. Gagliano, D. Lieber, X. Martorell,
J. E. Moreira, A. Sanomiya, and K. Strauss. An overview of the blue
gene/l system software organization. In Proceedings of the Euro-Par
Conference on Parallel and Distributed Computing (EuroPar 2003),
Aug. 2003.
[3] G. Ammons, J. Appavoo, M. Butrico, D. Da Silva, D. Grove,
K. Kawachiya, O. Krieger, B. Rosenburg, E. V. Hensbergen, and R. W.
Wisniewski. Libra: A library operating system for a jvm in a virtualized
execution environment. In Proceedings of the 3rd International Conference on Virtual Execution Environments (VEE 2007), pages 44–54,
June 2007.
[4] M. Bauer, S. Treichler, E. Slaughter, and A. Aiken. Legion: Expressing
locality and independence with logical regions. In Proceedings of
Supercomputing (SC 2012), Nov. 2012.
[5] P. Beckman. Argo: An exascale operating system. http://www.mcs.anl.
gov/project/argo-exascale-operating-system.
[6] A. Belay, A. Bittau, A. Mashtizadeh, D. Terei, D. Mazières, and
C. Kozyrakis. Dune: Safe user-level access to privileged CPU features.
In Proceedings of the 10th USENIX Conference on Operating Systems
Design and Implementation (OSDI 2012), pages 335–348, Oct. 2012.
[7] B. N. Bershad, S. Savage, P. Pardyak, E. G. Sirer, M. E. Fiuczynski,
D. Becker, C. Chambers, and S. Eggers. Extensibility, safety and
performance in the SPIN operating system. In Proceedings of the 15th
ACM Symposium on Operating Systems Principles (SOSP 1995), pages
267–283, Dec. 1995.
[8] G. E. Blelloch, S. Chatterjee, J. Hardwick, J. Sipelstein, and M. Zagha.
Implementation of a portable nested data-parallel language. Journal of
Parallel and Distributed Computing, 21(1):4–14, Apr. 1994.
[9] A. C. Bomberger, W. S. Frantz, A. C. Hardy, N. Hardy, C. R. Landau,
and J. S. Shapiro. The KeyKOS nanokernel architecture. In Proceedings
of the USENIX Workshop on Micro-kernels and Other Kernel Architectures, pages 95–112, Apr. 1992.
[10] J. Dongarra and M. A. Heroux. Toward a new metric for ranking high
performance computing systems. Technical Report SAND2013-4744,
Sandia National Laboratories, June 2013.
[11] D. R. Engler and M. F. Kaashoek. Exterminate all operating system
abstractions. In Proceedings of the 5th Workshop on Hot Topics in
Operating Systems (HotOS 1995), pages 78–83, May 1995.
[12] D. R. Engler, M. F. Kaashoek, and J. O’Toole, Jr. Exokernel: An operating system architecture for application-level resource management.
In Proceedings of the 15th ACM Symposium on Operating Systems
Principles (SOSP 1995), pages 251–266, Dec. 1995.
[13] D. G. Feitelson and L. Rudolph. Gang scheduling performance beneﬁts
for ﬁne-grain synchronization. Journal of Parallel and Distributed
Computing, 16(4):306–318, Dec. 1992.
[14] M. Felleisen, R. B. Findler, M. Flatt, S. Krishnamurthi, E. Barzilay,
J. McCarthy, and S. Tobin-Hochstadt. The Racket Manifesto. In T. Ball,
R. Bodik, S. Krishnamurthi, B. S. Lerner, and G. Morrisett, editors,
1st Summit on Advances in Programming Languages (SNAPL 2015),
volume 32 of Leibniz International Proceedings in Informatics (LIPIcs),
pages 113–128, Dagstuhl, Germany, 2015. Schloss Dagstuhl–LeibnizZentrum fuer Informatik.
[15] M. Flatt and PLT. Reference: Racket. Technical Report PLT-TR-2010-1,
PLT Design Inc., 2010. https://racket-lang.org/tr1/.
[16] M. Giampapa, T. Gooding, T. Inglett, and R. W. Wisniewski. Experiences with a lightweight supercomputer kernel: Lessons learned from
Blue Gene’s CNK. In Proceedings of Supercomputing (SC 2010), Nov.
2010.
[17] K. Hale and P. Dinda. Enabling hybrid parallel runtimes through
kernel and virtualization support. In Proceedings of the 12th ACM
SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (VEE 2016), April 2016.
[18] K. C. Hale and P. A. Dinda. A case for transforming parallel runtimes
into operating system kernels. In Proceedings of the 24th ACM
Symposium on High-performance Parallel and Distributed Computing
(HPDC 2015), June 2015.
[19] M. A. Heroux, J. Dongarra, and P. Luszczek. HPCG technical speciﬁcation. Technical Report SAND2013-8752, Sandia National Laboratories,
October 2013.
[20] G. C. Hunt and J. R. Larus. Singularity: Rethinking the software stack.
SIGOPS Operating Systems Review, 41(2):37–49, Apr. 2007.
[21] S. M. Kelly and R. Brightwell. Software architecture of the light
weight kernel, Catamount. In Proceedings of the 2005 Cray User Group
Meeting (CUG 2005), May 2005.
[22] J. Lange, K. Pedretti, T. Hudson, P. Dinda, Z. Cui, L. Xia, P. Bridges,
A. Gocke, S. Jaconette, M. Levenhagen, and R. Brightwell. Palacios
and kitten: New high performance operating systems for scalable virtualized and native supercomputing. In Proceedings of the 24th IEEE
International Parallel and Distributed Processing Symposium (IPDPS
2010), Apr. 2010.
[23] R. Liu, K. Klues, S. Bird, S. Hofmeyr, K. Asanović, and J. Kubiatowicz.
Tessellation: Space-time partitioning in a manycore client OS. In
Proceedings of the 1st USENIX Conference on Hot Topics in Parallelism
(HotPar 2009), pages 10:1–10:6, Mar. 2009.
[24] A. Madhavapeddy, R. Mortier, C. Rotsos, D. Scott, B. Singh, T. Gazagnaire, S. Smith, S. Hand, and J. Crowcroft. Unikernels: Library operating
systems for the cloud. In Proceedings of the 18th International
Conference on Architectural Support for Programming Languages and
Operating Systems (ASPLOS 2013), pages 461–472, Mar. 2013.
[25] A. B. Montz, D. Mosberger, S. W. O’Malley, L. L. Peterson, and T. A.
Proebsting. Scout: A communications-oriented operating system. In
Proceedings of the 5th Workshop on Hot Topics in Operating Systems
(HotOS 1995), pages 58–61, May 1995.
[26] J. Oayang, B. Kocoloski, J. Lange, and K. Pedretti. Achieving performance isolation with lightweight co-kernels. In Proceedings of the
24th International ACM Symposium on High Performance Parallel and
Distributed Computing, (HPDC 2015), June 2015.
[27] J. Ouyang, B. Kocoloski, J. R. Lange, and K. Pedretti. Achieving
performance isolation with lightweight co-kernels. In Proceedings of
the 24th International Symposium on High-Performance Parallel and
Distributed Computing, pages 149–160, June 2015.
[28] T. Roscoe. Linkage in the Nemesis single address space operating
system. ACM SIGOPS Operating Systems Review, 28(4):48–55, Oct.
1994.
[29] T. Shimosawa, B. Geroﬁ, M. Takagi, G. Nakamura, T. Shirasawa,
Y. Saeki, M. Shimizu, A. Hori, and Y. Ishikawa. Interface for heterogeneous kernels: A framework to enable hybrid os designs targeting
high performance computing on manycore architectures. In Proceedings
of the IEEE International Conference on High Performance Computing
(HiPC 2014), Dec. 2014.
[30] J. Swaine, K. Tew, P. Dinda, R. Findler, and M. Flatt. Back to the
futures: Incremental parallelization of existing sequential runtime systems. In Proceedings of the ACM SIGPLAN International Conference on
Object-Oriented Programming, Systems, Languages, and Applications
(OOPSLA 2010), October 2010.
[31] K. Tew, J. Swaine, M. Flatt, R. Findler, and P. Dinda. Places: Adding
message passing parallelism to racket. In Proceedings of the 2011
Dynamic Languages Symposium (DLS 2011), October 2011.
[32] R. W. Wisniewski, T. Inglett, P. Keppel, R. Murty, and R. Riesen. mOS:
An architecture for extreme-scale operating systems. In Proceedings of
the 4th International Workshop on Runtime and Operating Systems for
Supercomputers (ROSS 2014), pages 2:1–2:8, June 2014.
[33] K. Yaghmour. Adaptive domain environment for operating systems.
http://www.opersys.com/ftp/pub/Adeos/adeos.pdf.
