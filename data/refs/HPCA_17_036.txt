[1] B. Dally, “Power, programmability, and granularity: The
challenges of exascale computing,” in Parallel Distributed
Processing Symposium (IPDPS), 2011 IEEE International,
2011.
[2] S. Jeloka, N. B. Akesh, D. Sylvester, and D. Blaauw, “A 28
nm configurable memory (tcam/bcam/sram) using push-rule
6t bit cell enabling logic-in-memory,” IEEE Journal of SolidState Circuits, 2016.
[3] M. Kang, E. P. Kim, M. s. Keel, and N. R. Shanbhag,
“Energy-efficient and high throughput sparse distributed
memory architecture,” in 2015 IEEE International Symposium
on Circuits and Systems (ISCAS), 2015.
[4] P. A. La Fratta and P. M. Kogge, “Design enhancements for
in-cache computations,” in Workshop on Chip Multiprocessor
Memory Systems and Interconnects, 2009.
[5] F. Duarte and S. Wong, “Cache-based memory copy hardware
accelerator for multicore systems,” Computers, IEEE Transactions on, vol. 59, no. 11, 2010.
[6] D. Patterson, T. Anderson, N. Cardwell, R. Fromm, K. Keeton, C. Kozyrakis, R. Thomas, and K. Yelick, “A case for
intelligent ram,” Micro, IEEE, 1997.
[7] V. Seshadri, Y. Kim, C. Fallin, D. Lee, R. Ausavarungnirun, G. Pekhimenko, Y. Luo, O. Mutlu, P. B. Gibbons,
M. A. Kozuch, and T. C. Mowry, “Rowclone: Fast and
energy-efficient in-dram bulk data copy and initialization,”
in Proceedings of the 46th Annual IEEE/ACM International
Symposium on Microarchitecture, ser. MICRO-46.
[8] J. Ahn, S. Yoo, O. Mutlu, and K. Choi, “Pim-enabled instructions: A low-overhead, locality-aware processing-in-memory
architecture,” in Proceedings of the 42Nd Annual International Symposium on Computer Architecture, ser. ISCA ’15,
2015.
[9] O. L. Lempel, “2nd generation intel core processor family:intel core i7, i5 and i3,” ser. HotChips ’11, 2011.
[10] S. C. Woo, M. Ohara, E. Torrie, J. P. Singh, and A. Gupta,
“The splash-2 programs: Characterization and methodological
considerations,” in Proceedings of the 22Nd Annual International Symposium on Computer Architecture, 1995.
[11] J. Jalminger and P. Stenstrom, “A novel approach to cache
block reuse predictions,” in Parallel Processing, 2003. Proceedings. 2003 International Conference on, 2003.
[12] S. V. Adve and M. D. Hill, “Weak ordering&mdash;a new
definition,” in Proceedings of the 17th Annual International
Symposium on Computer Architecture, ser. ISCA ’90.
[13] J. B. Sartor, W. Heirman, S. M. Blackburn, L. Eeckhout,
and K. S. McKinley, “Cooperative cache scrubbing,” in
Proceedings of the 23rd international conference on Parallel
architectures and compilation, 2014.
[14] M. Wilkening, V. Sridharan, S. Li, F. Previlon, S. Gurumurthi,
and D. R. Kaeli, “Calculating architectural vulnerability factors for spatial multi-bit transient faults,” in Proceedings
of the 47th Annual IEEE/ACM International Symposium on
Microarchitecture, 2014.
[15] “Xml parsing accelerator with intel streaming simd extensions
4 (intel sse4),” Intel Developer Zone, 2015.

[16] Q. Guo, X. Guo, Y. Bai, and E. İpek, “A resistive tcam
accelerator for data-intensive computing,” in Proceedings of
the 44th Annual IEEE/ACM International Symposium on
Microarchitecture, ser. MICRO-44, 2011.
[17] “Cray Assembly Language (CAL) for Cray X1 Systems
Reference Manual. version 1.2. Cray Inc., ,” 2003.
[18] S. Kanev, J. P. Darago, K. Hazelwood, P. Ranganathan,
T. Moseley, G.-Y. Wei, and D. Brooks, “Profiling a
warehouse-scale computer,” in Proceedings of the 42Nd Annual International Symposium on Computer Architecture, ser.
ISCA ’15.
[19] M. Calhoun, S. Rixner, and A. Cox, “Optimizing kernel block
memory operations,” in Workshop on Memory Performance
Issues, 2006.
[20] X. Yang, S. M. Blackburn, D. Frampton, J. B. Sartor, and
K. S. McKinley, “Why nothing matters: The impact of
zeroing,” ser. OOPSLA ’11.
[21] T. Carlson, W. Heirman, and L. Eeckhout, “Sniper: Exploring
the level of abstraction for scalable and accurate parallel
multi-core simulation,” in High Performance Computing,
Networking, Storage and Analysis (SC), 2011 International
Conference for, 2011.
[22] S. Li, J. H. Ahn, R. Strong, J. Brockman, D. Tullsen, and
N. Jouppi, “Mcpat: An integrated power, area, and timing
modeling framework for multicore and manycore architectures,” in Microarchitecture, 2009. MICRO-42. 42nd Annual
IEEE/ACM International Symposium on, 2009.
[23] R. M. Yoo, A. Romano, and C. Kozyrakis, “Phoenix rebirth:
Scalable mapreduce on a large-scale shared-memory system,”
in Proceedings of the 2009 IEEE International Symposium on
Workload Characterization (IISWC), ser. IISWC ’09, 2009.
[24] “Fastbit: An efficient compressed bitmap index technology,”
”https://sdm.lbl.gov/fastbit/,2015”.
[25] “The STAR experiment.” http://www.star.bnl.gov/.
[26] J.-J. Wu, Y.-H. Chen, M.-F. Chang, P.-W. Chou, C.-Y. Chen,
H.-J. Liao, M.-B. Chen, Y.-H. Chu, W.-C. Wu, and H. Yamauchi, “A large sigma vth vdd tolerant zigzag 8t sram with
area-efficient decoupled differential sensing and fast writeback scheme,” Solid-State Circuits, IEEE Journal of, 2011.
[27] J. H. Lee, J. Sim, and H. Kim, “Bssync: Processing near memory for machine learning workloads with bounded staleness
consistency models,” in Proceedings of the 2015 International
Conference on Parallel Architecture and Compilation (PACT),
ser. PACT ’15.
[28] L. Yavits, A. Morad, and R. Ginosar, “Computer architecture
with associative processor replacing last-level cache and simd
accelerator,” IEEE Transactions on Computers, 2015.
[29] V. Seshadri, K. Hsieh, A. Boroum, D. Lee, M. Kozuch,
O. Mutlu, P. Gibbons, and T. Mowry, “Fast bulk bitwise and
and or in dram,” Computer Architecture Letters, 2015.
[30] S. Li, C. Xu, Q. Zou, J. Zhao, Y. Lu, and Y. Xie, “Pinatubo:
A processing-in-memory architecture for bulk bitwise operations in emerging non-volatile memories,” in Proceedings of
the 53rd Annual Design Automation Conference, ser. DAC
’16.
[31] M. Kang, M. S. Keel, N. R. Shanbhag, S. Eilert, and
K. Curewitz, “An energy-efficient vlsi architecture for pattern
recognition via deep embedding of computation in sram,” in
2014 IEEE International Conference on Acoustics, Speech
and Signal Processing (ICASSP), 2014.
[32] K. Pagiamtzis and A. Sheikholeslami, “Content-addressable
memory (cam) circuits and architectures: a tutorial and survey,” Solid-State Circuits, IEEE Journal of, 2006.
