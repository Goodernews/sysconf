[1] Apache. 2016. Types of compaction. http://cassandra.apache.

org/doc/latest/operating/compaction.html. (2016).

154

SoCC ’17, September 24–27, 2017, Santa Clara, CA, USA

Fei Mei et al.

[2] Berk Atikoglu, Yuehai Xu, Eitan Frachtenberg, Song Jiang, and
Mike Paleczny. 2012. Workload Analysis of a Large-Scale Key-
Value Store. In ACM SIGMETRICS Performance Evaluation
Review, Vol. 40. ACM, 53–64.

[3] Oana Balmau, Diego Didona, Rachid Guerraoui, Willy
Zwaenepoel, Huapeng Yuan, Aashray Arora, Karan Gupta, and
Pavan Konka. 2017. TRIAD: Creating Synergies Between Mem-
ory, Disk and Log in Log Structured Key-Value Stores. In 2017
USENIX Annual Technical Conference (USENIX ATC ’17).

[4] Michael A Bender, Martin Farach-Colton, Jeremy T Fineman,
Yonatan R Fogel, Bradley C Kuszmaul, and Jelani Nelson. 2007.
Cache-Oblivious Streaming B-trees. In Proceedings of the nine-
teenth annual ACM symposium on Parallel algorithms and ar-
chitectures. ACM, 81–92.

[5] Gerth Stolting Brodal and Rolf Fagerberg. 2003. Lower Bounds for
External Memory Dictionaries. In Proceedings of the fourteenth
annual ACM-SIAM symposium on Discrete algorithms. Society
for Industrial and Applied Mathematics, 546–554.

[6] Adam L Buchsbaum, Michael H Goldwasser, Suresh Venkatasub-
ramanian, and Jeﬀery Westbrook. 2000. On External Memory
Graph Traversal. In SODA. 859–860.

[7] Fay Chang, Jeﬀrey Dean, Sanjay Ghemawat, Wilson C Hsieh,
Deborah A Wallach, Mike Burrows, Tushar Chandra, Andrew
Fikes, and Robert E Gruber. 2008. Bigtable: A Distributed
Storage System for Structured Data. ACM Transactions on
Computer Systems (TOCS) 26, 2 (2008).

[8] Vijay Chidambaram, Thanumalayan Sankaranarayana Pillai, An-
drea C. Arpaci-Dusseau, and Remzi H. Arpaci-Dusseau. 2013. Op-
timistic Crash Consistency. In Proceedings of the Twenty-Fourth
ACM Symposium on Operating Systems Principles (SOSP ’13).
228–243.

[9] Vijay Chidambaram, Tushar Sharma, Andrea C Arpaci-Dusseau,
and Remzi H Arpaci-Dusseau. 2012. Consistency Without Or-
dering. In Proceedings of the 10th USENIX Symposium on File
and Storage Technologies (FAST ’12). San Jose, California.

[10] John Colgrove, John D Davis, John Hayes, Ethan L Miller, Cary
Sandvig, Russell Sears, Ari Tamches, Neil Vachharajani, and Feng
Wang. 2015. Purity: Building Fast, Highly-Available Enterprise
Flash Storage from Commodity Components. In Proceedings of
the 2015 ACM SIGMOD International Conference on Manage-
ment of Data (SIGMOD ’15). ACM, 1683–1694.

[11] Brian F. Cooper, Raghu Ramakrishnan, Utkarsh Srivastava, Adam
Silberstein, Philip Bohannon, Hans-Arno Jacobsen, Nick Puz,
Daniel Weaver, and Ramana Yerneni. 2008. PNUTS: Yahoo!’s
Hosted Data Serving Platform. Proc. VLDB Endow. 1, 2 (Aug.
2008), 1277–1288.

[12] DataStax. 2017. DSE 5.1 Administrator Guide: Changing Logging
Locations. https://docs.datastax.com/en/dse/5.1/dse-admin/
datastax_enterprise/conﬁg/chgLogLocations.html. (2017).

[13] Shakuntala Gupta Edward and Navin Sabharwal. 2015. MongoDB

Explained. In Practical MongoDB. Springer, 159–190.

[14] Dawson R Engler and M Frans Kaashoek. 1995. Exterminate
All Operating System Abstractions. In Fifth Workshop on Hot
Topics in Operating Systems (HotOS-V). IEEE, 78–83.

[15] John Esmet, Michael A Bender, Martin Farach-Colton, and
Bradley C Kuszmaul. 2012. The TokuFS Streaming File Sys-
tem. In 4th USENIX Workshop on Hot Topics in Storage and
File Systems (HotStorage ’12).

[16] Facebook. 2013. RocksDB. http://rocksdb.org/. (2013).
[17] Facebook. 2017. RocksDB Tuning Guide. https://github.com/

facebook/rocksdb/wiki/RocksDB-Tuning-Guide. (2017).

[18] Gregory R Ganger and Yale N Patt. 1994. Metadata Update
Performance in File Systems. In Proceedings of the 1st USENIX
conference on Operating Systems Design and Implementation.
USENIX Association.

[19] Sanjay Ghemawat and Jeﬀ Dean. 2011. LevelDB. http://leveldb.

[20] Jon Haddad. 2017. Understanding the Nuance of Compaction in
Apache Cassandra. http://thelastpickle.com/blog/2017/03/16/
compaction-nuance.html. (2017).

[21] Robert Hagmann. 1987. Reimplementing the Cedar File System

Using Logging and Group Commit. Vol. 21. ACM.

[22] Xiao-Yu Hu, Evangelos Eleftheriou, Robert Haas, Ilias Iliadis, and
Roman Pletka. 2009. Write Ampliﬁcation Analysis in Flash-Based
Solid State Drives. In Proceedings of SYSTOR 2009: The Israeli
Experimental Systems Conference. ACM.

[23] InﬂuxData, Inc. 2017. The Modern Engine for Metrics and Events.

https://www.inﬂuxdata.com/. (2017).

org. (2011).

[24] HV Jagadish, PPS Narayan, Sridhar Seshadri, S Sudarshan, and
Incremental Organization for Data

Rama Kanneganti. 1997.
Recording and Warehousing. In VLDB, Vol. 97. 16–25.

[25] William Jannen, Jun Yuan, Yang Zhan, Amogh Akshintala, John
Esmet, Yizheng Jiao, Ankur Mittal, Prashant Pandey, Phaneendra
Reddy, Leif Walsh, et al. 2015. BetrFS: A Right-Optimized Write-
Optimized File System. In 13th USENIX Conference on File
and Storage Technologies (FAST ’15). 301–315.

[26] Sooman Jeong, Kisung Lee, Seongjin Lee, Seoungbum Son, and
Youjip Won. 2013. I/O Stack Optimization for Smartphones. In
2013 USENIX Annual Technical Conference (USENIX ATC
’13). 309–320.

[27] Jeong-Uk Kang, Jeeseok Hyun, Hyunjoo Maeng, and Sangyeun
Cho. 2014. The Multi-streamed Solid-State Drive. In 6th USENIX
Workshop on Hot Topics in Storage and File Systems (HotStor-
age ’14).

[28] Hyojun Kim, Nitin Agrawal, and Cristian Ungureanu. 2012. Re-
visiting Storage for Smartphones. ACM Transactions on Storage
(TOS) 8, 4 (2012).

[29] Wook-Hee Kim, Jinwoong Kim, Woongki Baek, Beomseok Nam,
and Youjip Won. 2016. NVWAL: Exploiting NVRAM in Write-
Ahead Logging. In Proceedings of the Twenty-First Interna-
tional Conference on Architectural Support for Programming
Languages and Operating Systems. ACM, 385–398.

[30] Ryusuke Konishi, Yoshiji Amagai, Koji Sato, Hisashi Hifumi, Seiji
Kihara, and Satoshi Moriai. 2006. The Linux Implementation of
a Log-structured File System. ACM SIGOPS Operating Systems
Review 40, 3 (2006), 102–107.

[31] TJ Kowalski. 1990. Fsck - The Unix File System Check Program.

In UNIX Vol. II. WB Saunders Company, 581–592.

[32] Avinash Lakshman and Prashant Malik. 2010. Cassandra: A De-
centralized Structured Storage System. ACM SIGOPS Operating
Systems Review 44, 2 (2010), 35–40.

[33] Changman Lee, Dongho Sim, Jooyoung Hwang, and Sangyeun
Cho. 2015. F2FS: A New File System for Flash Storage. In 13th
USENIX Conference on File and Storage Technologies (FAST
’15).

[34] Sungjin Lee, Ming Liu, Sang Woo Jun, Shuotao Xu, Jihong Kim,
and Arvind Arvind. 2016. Application-Managed Flash. In 14th
USENIX Conference on File and Storage Technologies (FAST
’16). 339–353.

[35] Cheng Li, Philip Shilane, Fred Douglis, Darren Sawyer, and Hy-
ong Shim. 2014. Assert (! Deﬁned (Sequential I/O)). In 6th
USENIX Workshop on Hot Topics in Storage and File Systems
(HotStorage ’14).

[36] Raymond A Lorie. 1977. Physical Integrity in a Large Segmented
Database. ACM Transactions on Database Systems (TODS) 2,
1 (1977), 91–104.

[37] Lanyue Lu, Thanumalayan Sankaranarayana Pillai, Andrea C
Arpaci-Dusseau, and Remzi H Arpaci-Dusseau. 2016. WiscKey:
Separating Keys from Values in SSD-conscious Storage. In 14th
USENIX Conference on File and Storage Technologies (FAST
’16). 133–148.

[38] Ao Ma, Chris Dragga, Andrea C Arpaci-Dusseau, Remzi H Arpaci-
Dusseau, and Marshall Kirk Mckusick. 2014. Ffsck: The Fast
File-System Checker. ACM Transactions on Storage (TOS) 10,
1 (2014).

[39] Leonardo Marmol, Swaminathan Sundararaman, Nisha Talagala,
and Raju Rangaswami. 2015. NVMKV: A Scalable, Lightweight,
FTL-aware Key-Value Store. In 2015 USENIX Annual Technical
Conference (USENIX ATC ’15). 207–219.

[40] Avantika Mathur, Mingming Cao, Suparna Bhattacharya, Andreas
Dilger, Alex Tomas, and Laurent Vivier. 2007. The New Ext4
Filesystem: Current Status and Future Plans. In Proceedings of
the Linux symposium, Vol. 2. Citeseer, 21–33.

[41] Marshall K McKusick, William N Joy, Samuel J Leﬄer, and
Robert S Fabry. 1984. A Fast File System for UNIX. ACM
Transactions on Computer Systems (TOCS) 2, 3 (1984), 181–
197.

[42] Michael Kerrisk. 2017. Linux Programmer’s Manual. http://man7.

org/linux/man-pages/man2/sync_ﬁle_range.2.html. (2017).

[43] Changwoo Min, Kangnyeon Kim, Hyunjin Cho, Sang-Won Lee,
and Young Ik Eom. 2012. SFS: Random Write Considered Harmful
in Solid State Drives. In 10th USENIX Conference on File and
Storage Technologies (FAST ’12).

[44] J. Mohan, R. Kadekodi, and V Chidambaram. 2017. Analyzing
IO Ampliﬁcation in Linux File Systems. ArXiv e-prints (July
2017). arXiv:cs.OS/1707.08514

155

LSM-tree Managed Storage for Large-Scale Key-Value Store

SoCC ’17, September 24–27, 2017, Santa Clara, CA, USA

[45] Rajesh Nishtala, Hans Fugal, Steven Grimm, Marc Kwiatkowski,
Herman Lee, Harry C Li, Ryan McElroy, Mike Paleczny, Daniel
Peek, Paul Saab, et al. 2013. Scaling Memcache at Facebook. In
10th USENIX Symposium on Networked Systems Design and
Implementation (NSDI ’13). 385–398.

[46] Patrick Oneil, Edward Cheng, Dieter Gawlick, and Elizabeth
Oneil. 1996. The Log-structured Merge-tree (LSM-tree). Acta
Informatica (1996).

[47] Mike Owens and Grant Allen. 2010. SQLite. Springer.
[48] Anastasios Papagiannis, Giorgos Saloustros, Pilar González-Férez,
and Angelos Bilas. 2016. Tucana: Design and Implementation of
a Fast and Eﬃcient Scale-up Key-value Store. In 2016 USENIX
Annual Technical Conference (USENIX ATC ’16).

[49] Anastasios Papagiannis, Giorgos Saloustros, Manolis Marazakis,
and Angelos Bilas. 2017. Iris: An Optimized I/O Stack for Low-
latency Storage Devices. ACM SIGOPS Operating Systems
Review 50, 1 (2017), 3–11.

[50] Zachary Nathaniel Joseph Peterson. 2002. Data Placement for
Copy-on-Write Using Virtual Contiguity. Ph.D. Dissertation.
University of California Santa Cruz.

[51] Thanumalayan Sankaranarayana Pillai, Vijay Chidambaram,
Ramnatthan Alagappan, Samer Al-Kiswany, Andrea C Arpaci-
Dusseau, and Remzi H Arpaci-Dusseau. 2014. All File Systems
Are Not Created Equal: On the Complexity of Crafting Crash-
Consistent Applications. In Proceedings of the 11th USENIX
conference on Operating Systems Design and Implementation
(OSDI ’14). Broomﬁeld, CO, 433–448.

[52] Pandian Raju, Rohan Kadekodi, Vijay Chidambaram, and Ittai
Abraham. 2017. PebblesDB: Simultaneously Increasing Write
Throughput and Decreasing Write Ampliﬁcation in Key-Value
Stores. In Proceedings of the 26th ACM Symposium on Operating
Systems Principles (SOSP ’17). Shanghai, China.

[53] Remzi H. Arpaci-Dusseau and Andrea C. Arpaci-Dusseau. 2015.
Crash Consistency: FSCK and Journaling. http://pages.cs.wisc.
edu/~remzi/OSTEP/ﬁle-journaling.pdf. (2015).

[54] Kai Ren and Garth Gibson. 2013. TABLEFS: Enhancing Metadata
Eﬃciency in the Local File System. In 2013 USENIX Annual
Technical Conference (USENIX ATC ’13). 145–156.

[55] Ohad Rodeh, Josef Bacik, and Chris Mason. 2013. BTRFS: The
Linux B-Tree Filesystem. ACM Transactions on Storage (TOS)
9, 3 (2013).

[56] Mendel Rosenblum and John K Ousterhout. 1992. The Design
and Implementation of a Log-Structured File System. ACM
Transactions on Computer Systems (TOCS) 10, 1 (1992), 26–
52.

[57] Russell Sears and Raghu Ramakrishnan. 2012. bLSM: A General
Purpose Log Structured Merge Tree. In Proceedings of the 2012
ACM SIGMOD International Conference on Management of
Data (SIGMOD ’12). ACM, 217–228.

[58] DJ Sheehy and D Smith. 2010. Bitcask: A Log-Structured Hash

Table for Fast Key/Value Data. White paper, April (2010).

[59] Pradeep J Shetty, Richard P Spillane, Ravikant R Malpani, Bi-
nesh Andrews, Justin Seyster, and Erez Zadok. 2013. Building
Workload-Independent Storage with VT-Trees. In 11th USENIX
Conference on File and Storage Technologies (FAST ’13). 17–
30.

[60] Kent Smith. 2011. Garbage Collection. SandForce, Flash Memory

Summit, Santa Clara, CA (2011), 1–9.

[61] SQLite. 2016. SQLite4: LSM Design Overview. https://www.

sqlite.org/src4/doc/trunk/www/lsm.wiki. (2016).

[62] Michael Stonebraker. 1981. Operating System Support for Data-

base Management. Commun. ACM 24, 7 (1981), 412–418.

[63] Pure Storage. 2017. From Big Data to Big Intelligence. https:

//www.purestorage.com/products/ﬂashblade.html. (2017).

[64] ZhaoHui Tang and Jamine Maclennan. 2005. Data Mining with

SQL Server 2005. John Wiley & Sons.

[65] Tokutek, Inc. 2013. TokuDB: MySQL Performance, MariaDB

Performance. (2013).

[66] Mehul Nalin Vora. 2011. Hadoop-HBase for Large-Scale Data. In
2011 international conference on Computer science and network
technology (ICCSNT), Vol. 1. IEEE, 601–605.

[67] Peng Wang, Guangyu Sun, Song Jiang, Jian Ouyang, Shiding
Lin, Chen Zhang, and Jason Cong. 2014. An Eﬃcient Design and
Implementation of LSM-Tree based Key-Value Store on Open-
Channel SSD. In Proceedings of the Ninth European Conference
on Computer Systems (EuroSys ’14). ACM.

[68] Ext4 Wiki. 2011. Life of an Ext4 Write Request. https://ext4.wiki.
kernel.org/index.php/Life_of_an_ext4_write_request. (2011).

[69] Xingbo Wu, Yuehai Xu, Zili Shao, and Song Jiang. 2015. LSM-trie:
An LSM-tree-based Ultra-Large Key-Value Store for Small Data.
In 2015 USENIX Annual Technical Conference (USENIX ATC
’15).

[70] Jingpei Yang, Ned Plasson, Greg Gillis, Nisha Talagala, and
Swaminathan Sundararaman. 2014. Don’t Stack Your Log On
My Log. In 2nd Workshop on Interactions of NVM/Flash with
Operating Systems and Workloads (INFLOW ’14).

