[1] Y. Saad, Iterative methods for sparse linear systems. SIAM, 2003.
[2] T. A. Davis, Direct methods for sparse linear systems. SIAM, 2006.
[3] S. Balay, W. D. Gropp, L. C. McInnes, and B. F. Smith, “Efficient management of parallelism in object-oriented numerical software libraries,”
in Modern software tools for scientific computing. Springer, 1997, pp.
163–202.
[4] S. Balay et. al, “PETSc Web page,” http://www.mcs.anl.gov/petsc,
2017. [Online]. Available: http://www.mcs.anl.gov/petsc
[5] S. Balay, W. D. Gropp, L. C. McInnes, and B. F. Smith, “Efficient
management of parallelism in object oriented numerical software libraries,” in Modern Software Tools in Scientific Computing, E. Arge,
A. M. Bruaset, and H. P. Langtangen, Eds. Birkhäuser Press, 1997,
pp. 163–202.
[6] M. Heroux, R. Bartlett, V. H. R. Hoekstra, J. Hu, T. Kolda, R. Lehoucq,
K. Long, R. Pawlowski, E. Phipps, A. Salinger et al., “An overview of
trilinos,” Citeseer, Tech. Rep., 2003.
[7] E. Jessup, P. Motter, B. Norris, and K. Sood, “Performance-based
numerical solver selection in the Lighthouse framework,” SIAM Journal
on Scientific Computing, vol. 38, no. 5, pp. S750–S771, 2016.
[8] E. Alpaydin, Introduction to machine learning. MIT press, 2014.
[9] J. P. Singh, E. Rothberg, and A. Gupta, “Modeling communication
in parallel algorithms: A fruitful interaction between theory and
systems?” in Proceedings of the Sixth Annual ACM Symposium
on Parallel Algorithms and Architectures, ser. SPAA ’94. New
York, NY, USA: ACM, 1994, pp. 189–199. [Online]. Available:
http://doi.acm.org/10.1145/181014.181329
[10] D. E. Culler, R. M. Karp, D. Patterson, A. Sahay, E. E.
Santos, K. E. Schauser, R. Subramonian, and T. von Eicken,
“LogP: A practical model of parallel computation,” Commun. ACM,
vol. 39, no. 11, pp. 78–85, Nov. 1996. [Online]. Available:
http://doi.acm.org/10.1145/240455.240477
[11] T. J. Ashby, P. Ghysels, W. Heirman, and W. Vanroose, “The impact of
global communication latency at extreme scales on Krylov methods,”
in Proceedings of Algorithms and Architectures for Parallel Processing.
[12] J. Fettig, W.-Y. Kwok, and F. Saied, “Scaling behavior of linear
solvers on large linux clusters,” National Center for Supercomputing
Applications at the University of Illinois at Urbana-Champaign, IL,
2002.
[13] R. D. Falgout and U. M. Yang, “hypre: A library of high performance
preconditioners,” in International Conference on Computational Science.
Springer, 2002, pp. 632–641.
[14] T. A. Davis and Y. Hu, “The University of Florida sparse matrix collection,” ACM Transactions on Mathematical Software (TOMS), vol. 38,
no. 1, p. 1, 2011.
[15] R. Kirkby, E. Frank, and P. Reutemann, “Weka explorer user guide for
version 3-5-8,” University of Waikato, 2007.
[16] N. Z. Hamilton, “Correlation-based feature subset selection for machine
learning,” New Zealand, 1998.
[17] T. S. Coffey, C. T. Kelley, and D. E. Keyes, “Pseudo-transient continuation and differential-algebraic equations,” SIAM J. Sci. Comput., vol. 25,
no. 2, 2003.
[18] W. K. Anderson, W. D. Gropp, D. K. Kaushik, and et al, “Achieving
high sustained performance in an unstructured mesh CFD application,”
in SC99, 1999.
[19] B. Fryxell, K. Olson, P. Ricker, and et al, “FLASH: An adaptive-mesh
hydrodynamics code for modeling astrophysical thermonuclear flashes,”
Astrophys. J. Suppl., 2000.
[20] X. Z. Tang, G. Y. Fu, S. C. Jardin, and et al, “Resistive magnetohydrodynamics simulation of fusion plasmas,” Princeton Plasma Physics
Laboratory, Tech. Rep. PPPL-3532, 2001.