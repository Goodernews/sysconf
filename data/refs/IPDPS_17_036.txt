[1] N. Alon, A. Barak, and U. Manber. On disseminating
information reliably without broadcasting. In 7th Intl. Conf.
on Distr. Comp. Sys. (ICDCS), pages 74–81, Berlin, 1987.
[2] T. Angskun, G. Bosilca, and J. Dongarra. Binomial graph:
A scalable and fault-tolerant logical network topology.
In
I. Stojmenovic, R. Thulasiram, L. Yang, W. Jia, M. Guo,
and R. de Mello, editors, Parallel and Distributed Processing
and Applications, volume 4742 of Lecture Notes in Computer
Science, pages 471–482. Springer, 2007.
[3] T. Angskun, G. Fagg, G. Bosilca, J. Pjesivac-Grbovic, and
J. Dongarra. Self-healing network for scalable fault-tolerant
runtime environments. Future Generation Computer Systems,
26(3):479 – 485, 2010.
[4] H. Attiya and J. Welch. Distributed Computing: Fundamen-
tals, Simulations and Advanced Topics (2nd edition). John
Wiley Interscience, 2004.
[5] A. Barak and O. La’adan. The mosix multicomputer operating
system for high performance cluster computing.
Future
Gener. Comput. Syst., 13(4-5):361–372, 1998.
[6] K. P. Birman, M. Hayden, O. Ozkasap, Z. Xiao, M. Budiu,
and Y. Minsky. Bimodal multicast. ACM Trans. Comput.
Syst., 17(2):41–88, 1999.
[7] E. Boutin, J. Ekanayake, W. Lin, B. Shi, J. Zhou, Z. Qian,
M. Wu, and L. Zhou. Apollo: Scalable and coordinated
scheduling for cloud-scale computing. In Proc. 11th USENIX
Conf. on Operating Systems Design and Implementation,
OSDI’14, pages 285–300, 2014.

[8] D. Buntinas. Scalable distributed consensus to support mpi
fault tolerance.
In Proc. IEEE 26th Int’l Symp. Parallel &
Distributed Processing (IPDPS), pages 1240–1249, 2012.
[9] D. Culler, R. Karp, D. Patterson, A. Sahay, K. E. Schauser,
E. Santos, R. Subramonian, and T. von Eicken.
Logp:
Towards a realistic model of parallel computation. In Proc.
4th ACM SIGPLAN Symp. on Principles and Practice of
Parallel Programming, PPOPP ’93, pages 1–12, 1993.
[10] A. H. Dekker and B. D. Colbert. Network robustness and
graph topology.
In Proc. 27th Conf. on Computer Science
(ACSC ’04), Volume 26, pages 359–368, 2004.
[11] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson,
S. Shenker, H. Sturgis, D. Swinehart, and D. Terry. Epidemic
algorithms for replicated database maintenance. In Proc. 6th
ACM Symp. on Principles of Distributed Computing, PODC
’87, pages 1–12, 1987.
[12] Z. Drezner and A. Barak. An asynchronous algorithm for
scattering information between the active nodes of a multi-
computer system. J. Par. Distrib. Comp., 3(3):344–351, 1986.
[13] P. Felber and F. Pedone. Probabilistic atomic broadcast. In
Proc. 21st IEEE Symp. on Reliable Distributed Systems, pages
170–179, 2002.
[14] Global Scientiﬁc Information and Computing Center. Failure
History of TSUBAME2.0 and TSUBAME2.5, 2014.
[15] J. Gray and L. Lamport. Consensus on transaction commit.
ACM Trans. Database Syst., 31(1):133–160, 2006.
[16] V. Hadzilacos and S. Toueg. Distributed systems (2nd ed.).
chapter Fault-tolerant Broadcasts and Related Problems, pages
97–145. 1993.
[17] V. Hadzilacos and S. Toueg. A modular approach to fault-
tolerant broadcasts and related problems. Technical report,
Cornell Univ., Ithaca, NY, 1994.
[18] T. Herault, A. Bouteiller, G. Bosilca, M. Gamell, K. Teranishi,
M. Parashar, and J. Dongarra. Practical scalable consensus
for pseudo-synchronous distributed systems.
In Proc. Int’l
Conf. for High Performance Computing, Networking, Storage
and Analysis, SC ’15, pages 31:1–31:12, 2015.
[19] T. Hoeﬂer, C. Siebert, and W. Rehm. A practically constant-
time MPI Broadcast Algorithm for large-scale InﬁniBand
Clusters with Multicast.
In Proc. 21st IEEE Int’l Par. &
Distr. Proc. Symp. (CAC’07 Workshop), page 232, 2007.
[20] Message Passing Interface Forum. MPI: A Message-Passing
Interface Standard Version 3.0, Sep. 2012.
[21] Q. Sun and D. C. Sturman. A gossip-based reliable multicast
for large-scale high-throughput applications.
In Proc. 2000
Int’l Conf. on Dependable Systems and Networks (DSN ’00),
page 347, 2000.
[22] L. G. Valiant. A bridging model for parallel computation.
Comm. ACM, 33(8):103–111, 1990.
[23] R. Van Renesse, K. P. Birman, and W. Vogels. Astrolabe:
A robust and scalable technology for distributed system
monitoring, management, and data mining. ACM Trans.
Comput. Syst., 21(2):164–206, 2003.

