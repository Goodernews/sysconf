[1] Mark Aagaard, Byron Cook, Nancy A. Day, and Robert B. Jones. 2001. A Framework for Microprocessor Correctness Statements. In Correct Hardware Design
and Verification Methods (CHARME). 433-448.

[2] Mark Aagaard, Robert B. Jones, Thomas F. Melham, John W. O’Leary, and CarlJohan H. Seger. 2000. A Methodology for Large-Scale Hardware Verification.
In Formal Methods in Computer-Aided Design, Third International Conference,
FMCAD 2000. 263-282. https://doi.org/10.1007/3-540-40922-X_17

[3] Jade Alglave, Mark Batty, Alastair Donaldson, Ganesh Gopalakrishnan, Jeroen
Ketema, Daniel Poetzl, Tyler Sorensen, and John Wickerson. 2015. GPU Concurrency: Weak behaviours and programming assumptions. In 20th International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS).

[4] Jade Alglave, Luc Maranget, and Michael Tautschnig. 2014. Herding cats: Modelling, Simulation, Testing, and Data-mining for Weak Memory. ACM Transactions
on Programming Languages and Systems (TOPLAS) 36 (July 2014). Issue 2.

[5] ARM. 2011. Cortex-A9 MPCore, programmer advice notice, read-after-read
hazards. ARM Reference 761319. (2011). http://infocenter.arm.com/help/topic/
com.arm.doc.uan0004a/UAN0004A_a9_read_read.pdf.

[6] ARM. 2017. ARM Architecture Reference Manual ARMv8, for ARMv8-A architecture profile. (2017). https://static.docs.arm.com/ddi0487/b/DD10487B_a_armv8_
arm.pdf

[7] Mark Batty, Kayvan Memarian, Scott Owens, Susmit Sarkar, and Peter Sewell.
2012. Clarifying and Compiling C/C++ Concurrency: from C++11 to POWER. In
39th Annual Symposium on Principles of Programming Languages (POPL).

[8] Mark Batty, Scott Owens, Susmit Sarkar, Peter Sewell, , and Tjark Weber. 2011.
Mathematizing C++ Concurrency. In 38h Annual Symposium on Principles of
Programming Languages, (POPL).

[9] Colin Blundell, Milo Martin, and Thomas Wenisch. 2009. InvisiFence:
Performance-Transparent Memory Ordering in Conventional Multiprocessors.
In 36th International Symposium on Computer Architecture (ISCA).

[10] Hans-J. Boehm and Sarita Adve. 2008. Foundations of the C++ Concurrency
Memory Model. In 29th Conference on Programming Language Design and Implementation (PLDI).

[11] James Bornholt and Emina Torlak. 2017. Synthesizing Memory Models from
Framework Sketches and Litmus Tests. In 38th Conference on Programming Language Design and Implementation (PLDI). ACM.

[12] Cadence Design Systems, Inc. 2015. JasperGold Apps User’s Guide. (2015).

[13] Cadence Design Systems, Inc. 2016. JasperGold Engine Selection Guide. (2016).

[14] Eduard Cerny, Surrendra Dudani, John Havlicek, Dmitry Korchemny, et al. 2015.
SVA: The Power of Assertions in SystemVerilog. Springer.

[15] Luis Ceze, James Tuck, Pablo Montesinos, and Josep Torrellas. 2007. BulkSC:
Bulk Enforcement of Sequential Consistency. In 34th International Symposium on
Computer Architecture (ISCA).

[16] comododragon. 2016. Stores are not working. (2016). https://github.com/ucbbar/vscale/issues/13.

[17] The Coq development team. 2004. The Coq proof assistant reference manual,
version 8.0. LogiCal Project. http://coq.inria.fr

[18] The diy development team. 2012. A don’t (diy) tutorial, version 5.01. http://diy.
inria.fr/doc/index.html

[19] Shaked Flur, Kathryn E. Gray, Christopher Pulte, Susmit Sarkar, Ali Sezgin,
Luc Maranget, Will Deacon, and Peter Sewell. 2016. Modelling the ARMv8
architecture, operationally: concurrency and ISA. In 43rd Annual Symposium on
Principles of Programming Languages, (POPL). 608-621.

[20] Harry D. Foster. 2015. Trends in Functional Verification: A 2014 Industry Study.
In 52nd Design Automation Conference (DAC).

[21] Kathryn E. Gray, Gabriel Kerneis, Dominic P. Mulligan, Christopher Pulte, Susmit
Sarkar, and Peter Sewell. 2015. An integrated concurrency and core-ISA architectural envelope definition, and test oracle, for IBM POWER multiprocessors. In
48th International Symposium on Microarchitecture (MICRO). 635-646.

[22] R. Guanciale, H. Nemati, C. Baumann, and M. Dam. 2016. Cache Storage Channels:
Alias-Driven Attacks and Verified Countermeasures. In 2016 IEEE Symposium on
Security and Privacy (SP). 38-55. https://doi.org/10.1109/SP.2016.11

[23] Mark Hachman. 2014. Intel finds specialized TSX enterprise bug on Haswell,
Broadwell CPUs. (2014). http://www.peworld.com/article/2464880/intel-findsspecialized-tsx-enterprise-bug-on-haswell-broadwell-cpus.html.

[24] Sudheendra Hangal, Durgam Vahia, Chaiyasit Manovit, and Juin-Yeu Joseph Lu.
2004. TSOtool: A Program for Verifying Memory Systems Using the Memory
Consistency Model. In 31st International Symposium on Computer Architecture
(ISCA).

[25] IBM. 2013. Power ISA Version 2.07. (2013).

[26] IEEE. 2010. IEEE Standard for Property Specification Language (PSL). IEEE Std
1850-2010 (Revision of IEEE Std1850-2005) (April 2010).

[27] IEEE. 2013. IEEE Standard for SystemVerilog—Unified Hardware Design, Specification, and Verification Language. IEEE Std 1800-2012 (Revision of IEEE Sid
1800-2009) (Feb 2013), 1-1315. https://doi.org/10.1109/IEEESTD.2013.6469140

Y. A. Manerkar et al.

[28] Intel. 2013. Intel 64 and IA-32 Architectures Software Developer’s Manual. (2013). http://www.intel.com/content/dam/www/public/us/en/documents/
manuals/64-ia-32-architectures-software-developer-manual-325462.pdf

[29] L. Lamport. 1979. How to Make a Multiprocessor Computer That Correctly
Executes Multiprocess Programs. IEEE Transactions on Computing 28, 9 (1979).

[30] Yunsup Lee, Albert Ou, and Albert Magyar. 2015. Z-Scale: Tiny 32-bit RISC-V
Systems. (2015). https://riscv.org/wp-content/uploads/2015/06/riscv-zscaleworkshop-june2015.pdf.

[31] Daniel Lustig, Michael Pellauer, and Margaret Martonosi. 2014. PipeCheck: Specifying and Verifying Microarchitectural Enforcement of Memory Consistency
Models. In 47th International Symposium on Microarchitecture (MICRO).

[32] Daniel Lustig, Geet Sethi, Margaret Martonosi, and Abhishek Bhattacharjee. 2016.
COATCheck: Verifying Memory Ordering at the Hardware-OS Interface. In 21st
International Conference on Architectural Support for Programming Languages and
Operating Systems (ASPLOS).

[33] Daniel Lustig, Caroline Trippel, Yatin A. Manerkar, Margaret Martonosi,
and Michael Pellauer. 2017. Check Research Tools and Papers. (2017).
http://check.cs.princeton.edu/.

[34] Albert Magyar. 2016. Verilog version of Z-scale. (2016). https://github.com/ucbbar/vscale.

[35] Yatin A. Manerkar, Daniel Lustig, Michael Pellauer, and Margaret Martonosi. 2015.
CcCICheck: Using jzshb Graphs to Verify the Coherence-consistency Interface. In
48th International Symposium on Microarchitecture (MICRO).

[36] Yatin A. Manerkar, Caroline Trippel, Daniel Lustig, Michael Pellauer, and Margaret Martonosi. 2016. Counterexamples and Proof Loophole for the C/C++ to
POWER and ARMv7 Trailing-Sync Compiler Mappings. CoRR abs/1611.01507
(2016). http://arxiv.org/abs/1611.01507

[37] Jeremy Manson, William Pugh, and Sarita Adve. 2005. The Java Memory Model.
In 32nd Annual Symposium on Principles of Programming Languages, (POPL).

[38] A. Meixner and DJ. Sorin. 2009. Dynamic Verification of Memory Consistency
in Cache-Coherent Multithreaded Computer Architectures. IEEE Transactions on
Dependable and Secure Computing (TDSC) (2009).

[39] Scott Owens, Susmit Sarkar, and Peter Sewell. 2009. A better x86 memory model:
x86-TSO. Conference on Theorem Proving in Higher Order Logics (TPHOLs) (2009).

[40] Michael Pellauer, Mieszko Lis, Don Baltus, and Rishiyur S. Nikhil. 2005. Synthesis
of synchronous assertions with guarded atomic actions. In 3rd ACM & IEEE International Conference on Formal Methods and Models for Co-Design (MEMOCODE).

[41] Alastair Reid, Rick Chen, Anastasios Deligiannis, David Gilday, David Hoyes,
Will Keen, Ashan Pathirane, Owen Shepherd, Peter Vrabel, and Ali Zaidi. 2016.
End-to-End Verification of Processors with ISA-Formal. In 28th International
Conference on Computer Aided Verification (CAV).

[42] RISC-V Foundation. 2015. RISC-V in Verilog. (2015). https://riscv.org/2015/09/riscv-in-verilog/.

[43] Susmit Sarkar, Kayvan Memarian, Scott Owens, Mark Batty, Peter Sewell, Luc
Maranget, Jade Alglave, and Derek Williams. 2012. Synchronising C/C++ and
POWER. In 33rd Conference on Programming Language Design and Implementation
(PLDI). 311-322. https://doi.org/10.1145/2254064.2254102

[44] Susmit Sarkar, Peter Sewell, Jade Alglave, Luc Maranget, and Derek Williams.
2011. Understanding POWER Microprocessors. In 32nd Conference on Programming Language Design and Implementation (PLDI).

[45] Tyler Sorensen and Alastair F. Donaldson. 2016. Exposing Errors Related to Weak
Memory in GPU Applications. In 37th Conference on Programming Language
Design and Implementation (PLDI). ACM.

[46] SPARC. 1994. SPARC Architecture Manual, version 9. (1994).

[47] Daryl Stewart, David Gilday, Daniel Nevill, and Thomas Roberts. 2014. Processor
memory system verification using DOGReL: a language for specifying end-to-end
properties. In International Workshop on Design and Implementation of Formal
Tools and Systems (DIFTS).

[48] Pramod Subramanyan, Yakir Vizel, Sayak Ray, and Sharad Malik. 2015. Templatebased Synthesis of Instruction-level Abstractions for SoC Verification. In Proceedings of the 15th Conference on Formal Methods in Computer-Aided Design (FMCAD
°15). 8. http://dLacm.org/citation.cim?id=2893529.2893557

[49] Caroline Trippel, Yatin A. Manerkar, Daniel Lustig, Michael Pellauer, and Margaret Martonosi. 2017. TriCheck: Memory Model Verification at the Trisection of
Software, Hardware, and ISA. In 22nd International Conference on Architectural
Support for Programming Languages and Operating Systems (ASPLOS).

[50] Babu Turumella and Mukesh Sharma. 2008. Assertion-based Verification of a 32
Thread SPARC CMT Microprocessor. In Proceedings of the 45th Annual Design
Automation Conference (DAC). https://doiorg/10.1145/1391469.1391535

[51] Muralidaran Vijayaraghavan, Adam Chlipala, Arvind, and Nirav Dave. 2015.
Modular Deductive Verification of Multiprocessor Hardware Designs. In 27th
International Conference on Computer Aided Verification (CAV).

[52] Mark Walton. 2016. Intel Skylake bug causes PCs to freeze during complex
workloads. (2016). https://arstechnica.com/gadgets/2016/01/intel-skylake-bugcauses-pes-to-freeze-during-complex-workloads/.

[53] Ping Yeung and K. Larsen. 2005. Practical Assertion-based Formal Verification
for SoC Designs. In 2005 International Symposium on System-on-Chip. 58-61.