[1] ABD-EL-MALEK, M., II, W. V. C., CRANOR, C., GANGER,
G. R., HENDRICKS, J., KLOSTERMAN, A. J., MESNIER, M. P.,
PRASAD, M., SALMON, B., SAMBASIVAN, R. R., SINNAMOHIDEEN, S., STRUNK, J. D., THERESKA, E., WACHS, M., AND
WYLIE, J. J. Ursa minor: Versatile cluster-based storage. In
FAST (2005), G. Gibson, Ed., USENIX.
[2] AGARWAL, S., DUNAGAN, J., JAIN, N., SAROIU, S., AND
WOLMAN, A. Volley: Automated data placement for geodistributed cloud services. In NSDI (2010), USENIX Association, pp. 17–32.
[3] AGGARWAL, G., MOTWANI, R., AND ZHU, A. The load rebalancing problem. J. Algorithms 60, 1 (2006), 42–59.
[4] AGUILERA, M. K., KEETON, K., MERCHANT, A.,
MUNISWAMY-REDDY, K.-K., AND UYSAL, M. Improving recoverability in multi-tier storage systems. In DSN (2007),
IEEE Computer Society, pp. 677–686.
[5] ALBRECHT, C., MERCHANT, A., STOKELY, M., WALIJI, M.,
LABELLE, F., COEHLO, N., SHI, X., AND SCHROCK, E. Janus:
Optimal flash provisioning for cloud storage workloads. In
USENIX Annual Technical Conference (2013), USENIX Association, pp. 91–102.
[6] ALVAREZ, G. A., BOROWSKY, E., GO, S., ROMER, T. H.,
BECKER-SZENDY, R. A., GOLDING, R. A., MERCHANT, A.,
SPASOJEVIC, M., VEITCH, A. C., AND WILKES, J. Minerva:
An automated resource provisioning tool for large-scale storage
systems. ACM Trans. Comput. Syst. 19, 4 (2001), 483–518.
[7] ANDERSON, E., HOBBS, M., KEETON, K., SPENCE, S.,
UYSAL, M., AND VEITCH, A. C. Hippodrome: Running circles around storage administration. In FAST (2002), D. D. E.
Long, Ed., USENIX, pp. 175–188.
[8] ANDERSON, E., SPENCE, S., SWAMINATHAN, R., KALLAHALLA, M., AND WANG, Q. Quickly finding near-optimal storage designs. ACM Trans. Comput. Syst. 23, 4 (2005), 337–374.
[9] ARDEKANI, M. S., AND TERRY, D. B. A self-configurable georeplicated cloud storage system. In OSDI (2014), J. Flinn and
H. Levy, Eds., USENIX Association, pp. 367–381.
[10] ASANOVIC, K. Firebox: A hardware building block for
2020 warehouse-scale computers. Keynote presentation, 2014
USENIX Conference on File and Storage Technologies (FAST).
[11] BARR, J. Amazon EBS (Elastic Block Store) - Bring
Us Your Data. https://aws.amazon.com/blogs/aws/
amazon-elastic/, August 2008.
[12] CULLY, B., WIRES, J., MEYER, D. T., JAMIESON, K.,
FRASER, K., DEEGAN, T., STODDEN, D., LEFEBVRE, G.,
FERSTAY, D., AND WARFIELD, A. Strata: scalable highperformance storage on virtualized non-volatile memory. In FAST
(2014), B. Schroeder and E. Thereska, Eds., USENIX, pp. 17–31.
[13] DENNING, P. working set model of program behavior. Communications of the ACM (1968).
[14] DÓSA, G. The tight bound of first fit decreasing bin-packing
algorithm is FFD(i) <= 11/9OPT(i) + 6/9. In ESCAPE (2007),
vol. 4614 of Lecture Notes in Computer Science, Springer, pp. 1–
11.
[15] DOWDY, L. W., AND FOSTER, D. V. Comparative models of
the file assignment problem. ACM Comput. Surv. 14, 2 (1982),
287–313. comments: ACM Computing Surveys 15(1): 81-82
(1983).
[16] ELLARD, D., LEDLIE, J., MALKANI, P., AND SELTZER, M. I.
Passive nfs tracing of email and research workloads. In FAST
(2003), J. Chase, Ed., USENIX.
[17] EMC. DSSD D5. https://www.emc.com/en-us/storage/
flash/dssd/dssd-d5/index.htm, 2016.
[18] Flexible io tester. http://git.kernel.dk/?p=fio.git;a=
summary.
[19] FREUDER, E. A sufficient condition for backtrack-free search.
Communications of the ACM 29, 1 (1982), 24–32.
[20] GHEMAWAT, S., GOBIOFF, H., AND LEUNG, S.-T. The google
file system. In ACM SIGOPS operating systems review (2003),
vol. 37, pp. 29–43.
[21] GOEL, A., SHAHABI, C., YAO, S.-Y. D., AND ZIMMERMANN,
R. SCADDAR: An efficient randomized technique to reorganize
continuous media blocks. In ICDE (2002), IEEE Computer Society, pp. 473–482.
[22] GRAHAM, R. L. Bounds on multiprocessing anomalies and related packing algorithms. In Proceedings of the May 16-18, 1972,
spring joint computer conference (New York, NY, USA, 1972),
AFIPS ’72 (Spring), ACM, pp. 205–217.
[23] GUERRA, J., PUCHA, H., GLIDER, J. S., BELLUOMINI, W.,
AND RANGASWAMI, R. Cost effective storage using extent based
dynamic tiering. In FAST (2011), USENIX, pp. 273–286.
[24] HARALICK, R., AND ELLIOT, G. Increasing tree search efficiency for constraint satisfaction problems. Artificial Intelligence
14, 3 (1980), 263–313.
[25] HEBRARD, E., HNICH, B., O’SULLIVAN, B., AND WALSH, T.
Finding diverse and similar solutions in constraint programming.
In AAAI (2005), M. M. Veloso and S. Kambhampati, Eds., AAAI
Press / The MIT Press, pp. 372–377.
[26] HONICKY, R. J., AND MILLER, E. L. A fast algorithm for online placement and reorganization of replicated data. In IPDPS
(2003), IEEE Computer Society, p. 57.
[27] HONICKY, R. J., AND MILLER, E. L. Replication under scalable
hashing: A family of algorithms for scalable decentralized data
distribution. In IPDPS (2004), IEEE Computer Society.
[28] HUNT, P., KONAR, M., JUNQUEIRA, F. P., AND REED, B.
Zookeeper: Wait-free coordination for internet-scale systems. In
USENIX Annual Technical Conference (2010), P. Barham and
T. Roscoe, Eds., USENIX Association.
[29] KANDULA, S., SENGUPTA, S., GREENBERG, A., PATEL, P.,
AND CHAIKEN, R. The nature of data center traffic: measurements & analysis. In Proceedings of the 9th ACM SIGCOMM
conference on Internet measurement conference (New York, NY,
USA, 2009), IMC ’09, ACM, pp. 202–208.
[30] KARGER, D., LEHMAN, E., LEIGHTON, T., PANIGRAHY, R.,
LEVINE, M., AND LEWIN, D. Consistent hashing and random
trees: distributed caching protocols for relieving hot spots on the
world wide web. In Proceedings of the twenty-ninth annual ACM
symposium on Theory of computing (New York, NY, USA, 1997),
STOC ’97, ACM, pp. 654–663.
[31] KASHYAP, S. R., KHULLER, S., WAN, Y.-C. J., AND GOLUBCHIK, L. Fast reconfiguration of data placement in parallel
disks. In ALENEX (2006), R. Raman and M. F. Stallmann, Eds.,
SIAM, pp. 95–107.
[32] KHULLER, S., KIM, Y.-A., AND MALEKIAN, A. Improved
approximation algorithms for data migration. Algorithmica 63,
1-2 (2012), 347–362.
[33] KHULLER, S., KIM, Y. A., AND WAN, Y.-C. J. Algorithms
for data migration with cloning. SIAM J. Comput. 33, 2 (2004),
448–461.
[34] KUBIATOWICZ, J., BINDEL, D., CHEN, Y., CZERWINSKI, S.,
EATON, P., GEELS, D., GUMMADI, R., RHEA, S., WEATHERSPOON, H., WEIMER, W., WELLS, C., AND ZHAO, B.
OceanStore: an architecture for global-scale persistent storage.
SIGPLAN Not. 35, 11 (2000), 190–201.
[35] LIN, L., ZHU, Y., YUE, J., CAI, Z., AND SEGEE, B. Hot random off-loading: A hybrid storage system with dynamic data migration. In MASCOTS (2011), IEEE Computer Society, pp. 318–
325.
[36] MACKWORTH, A. K. Consistency in networks of relations. Artificial Intelligence 8, 1 (1977), 99–118.
[37] NARAYANAN, D., DONNELLY, A., THERESKA, E., ELNIKETY,
S., AND ROWSTRON, A. I. T. Everest: Scaling down peak loads
through i/o off-loading. In OSDI (2008), USENIX Association,
pp. 15–28.
[38] NIGHTINGALE, E. B., ELSON, J., FAN, J., HOFMANN, O. S.,
HOWELL, J., AND SUZUE, Y. Flat datacenter storage. In OSDI
(2012), USENIX Association, pp. 1–15.
[39] ONGARO, D., RUMBLE, S. M., STUTSMAN, R., OUSTERHOUT, J. K., AND ROSENBLUM, M. Fast crash recovery in
RAMCloud. In SOSP (2011), ACM, pp. 29–41.
[40] PETERSEN, C. Introducing Lightning: A
flexible NVMe JBOF. https://code.
facebook.com/posts/989638804458007/
introducing-lightning-a-flexible-nvme-jbof/,
March 2016.
[41] ROWSTRON, A., AND DRUSCHEL, P. Pastry: Scalable, decentralized object location, and routing for large-scale peer-to-peer
systems. In Middleware 2001 (2001), Springer, pp. 329–350.
[42] SAITO, Y., FRÃŸLUND, S., VEITCH, A. C., MERCHANT, A.,
AND SPENCE, S. FAB: building distributed enterprise disk arrays
from commodity components. In ASPLOS (2004), ACM, pp. 48–
58.
[43] SANTOS, J. R., MUNTZ, R. R., AND RIBEIRO-NETO, B. A.
Comparing random data allocation and data striping in multimedia servers. In SIGMETRICS (2000), ACM, pp. 44–55.
[44] SCHIEX, T., FARGIER, H., AND VERFAILLIE, G. Valued constraint satisfaction problems: Hard and easy problems. In IJCAI
(1) (1995), Morgan Kaufmann, pp. 631–639.
[45] SEO, B., AND ZIMMERMANN, R. Efficient disk replacement
and data migration algorithms for large disk subsystems. TOS 1,
3 (2005), 316–345.
[46] SHAMMA, M., MEYER, D. T., WIRES, J., IVANOVA, M.,
HUTCHINSON, N. C., AND WARFIELD, A. Capo: Recapitulating storage for virtual desktops. In FAST (2011), G. R. Ganger
and J. Wilkes, Eds., USENIX, pp. 31–45.
[47] SHVACHKO, K., KUANG, H., RADIA, S., AND CHANSLER, R.
The hadoop distributed file system. In Proceedings of the 2010
IEEE 26th Symposium on Mass Storage Systems and Technologies (MSST) (Washington, DC, USA, 2010), MSST ’10, IEEE
Computer Society, pp. 1–10.
[48] STOICA, I., MORRIS, R., KARGER, D., KAASHOEK, M. F.,
AND BALAKRISHNAN, H. Chord: A Scalable Peer-to-peer
Lookup Service for Internet Applications. In ACM SIGCOMM
2001 (Aug. 2001).
[49] STRUNK, J. D., THERESKA, E., FALOUTSOS, C., AND
GANGER, G. R. Using utility to provision storage systems. In
FAST (2008), M. Baker and E. Riedel, Eds., USENIX, pp. 313–
328.
[50] WANG, X., LI, Y., LUO, Y., HU, X., BROCK, J., DING, C.,
AND WANG, Z. Optimal footprint symbiosis in shared cache. In
CCGRID (2015), IEEE Computer Society, pp. 412–422.
[51] WEIL, S. A., BRANDT, S. A., MILLER, E. L., LONG, D. D. E.,
AND MALTZAHN, C. Ceph: A scalable, high-performance distributed file system. In OSDI (2006), USENIX Association,
pp. 307–320.
[52] WEIL, S. A., BRANDT, S. A., MILLER, E. L., AND
MALTZAHN, C. CRUSH: Controlled, scalable, decentralized
placement of replicated data. In Proceedings of the 2006
ACM/IEEE Conference on Supercomputing (New York, NY,
USA, 2006), SC ’06, ACM.
[53] WEIL, S. A., LEUNG, A. W., BRANDT, S. A., AND
MALTZAHN, C. RADOS: a scalable, reliable storage service for
petabyte-scale storage clusters. In PDSW (2007), ACM Press,
pp. 35–44.
[54] WILKES, J., GOLDING, R. A., STAELIN, C., AND SULLIVAN,
T. The HP AutoRAID hierarchical storage system. ACM Trans.
Comput. Syst. 14, 1 (1996), 108–136.
[55] WIRES, J., INGRAM, S., DRUDI, Z., HARVEY, N. J. A., AND
WARFIELD, A. Characterizing storage workloads with counter
stacks. In OSDI (2014), J. Flinn and H. Levy, Eds., USENIX
Association, pp. 335–349.
[56] WONG, T. M., AND WILKES, J. My cache or yours? making
storage more exclusive. In USENIX Annual Technical Conference, General Track (2002), C. S. Ellis, Ed., USENIX, pp. 161–
175.
[57] ZHENG, W., AND ZHANG, G. Fastscale: Accelerate RAID scaling by minimizing data migration. In FAST (2011), USENIX,
pp. 149–161.
