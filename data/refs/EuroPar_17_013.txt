[1] Belady, L.A.: A study of replacement algorithms for a virtual-storage computer.

IBM Syst. J. 5, 78–101 (1966)

[2] Bienia, C.: Benchmarking modern multiprocessors. Ph.D. thesis, Princeton (2011)

[3] Blumofe, R., Joerg, C., Kuszmaul, B., et al.: Cilk: an eﬃcient multithreaded runtime system. J. Parallel Distrib. Comput. 37, 55–69 (1995)

[4] Casas, M., et al.: Runtime-aware architectures. In: Träﬀ, J.L., Hunold, S., Versaci,

F. (eds.) Euro-Par 2015. LNCS, vol. 9233, pp. 16–27. Springer, Heidelberg (2015).

doi:10.1007/978-3-662-48096-0 2

[5] Chamberlain, B., Callahan, D., Zima, H.: Parallel programmability and the Chapel

language. Int. J. High Perform. Comput. Appl. 21, 291–312 (2007–2008)

[6] Chasapis, D., Casas, M., Moretó, M., Vidal, R., Ayguadé, E., Labarta, J., Valero,

M.: PARSECSs: evaluating the impact of task parallelism in the PARSEC benchmark suite. In: TACO (2015)

[7] Chen, W., Liu, P., Stelzer, K.: Implementation of a pseudo-LRU algorithm in a

partitioned cache, US Patent 7,069,390 (2006)

[8] Davis, T., Hu, Y.: The University of Florida sparse matrix collection. ACM Trans.

Math. Softw. 38(1), 1 (2011)

[9] Jaleel, A., Theobald, K.B., Steely Jr., S.C., Emer, J.: High performance cache

replacement using re-reference interval prediction (RRIP). SIGARCH Comput.

Arch. News 38, 60–71 (2010)

[10]  Jaulmes, L., Casas, M., Moretó, M., et al.: Exploiting asynchrony from exact forward recovery for due in iterative solvers. In: SC (2015)

[11]  Kale, L.V., Krishnan, S.: CHARM++: a portable concurrent object oriented system based on C++. In: OOPSLA (1993)

[12]  Manivannan, M., Papaefstathiou, V., Pericas, M., Stenstrom, P.: RADAR:

runtime-assisted dead region management for last-level caches. In: HPCA (2016)

[13]  Manivannan, M., Stenstrom, P.: Runtime-guided cache coherence optimizations in

multi-core architectures. In: IPDPS (2014)

[14]  Sun Microsystems: UltraSPARC T2 supplement to the UltraSPARC architecture

2007, draft D1.4.3 (2007)

[15]  OpenMP Arch. Rev. Board: OpenMP Application Program Interface, v4.0 (2013)

[16]  Pan, A., Pai, V.S.: Runtime-driven shared last-level cache management for taskparallel programs. In: SC (2015)

[17]  Papaefstathiou, V., Katevenis, M.G., Nikolopoulos, D.S., Pnevmatikatos, D.:

Prefetching and cache management using task lifetimes. In: ICS (2013)

[18]  Qureshi, M., Jaleel, A., Patt, Y., Steely, S., Emer, J.: Set-dueling-controlled adaptive insertion for high-performance caching. In: Micro. IEEE (2008)

[19]  Qureshi, M.K., Jaleel, A., Patt, Y.N., Steely, S.C., Emer, J.: Adaptive insertion

policies for high performance caching. In: ISCA (2007)

[20]  Qureshi, M.K., Lynch, D.N., Mutlu, O., Patt, Y.N.: A case for MLP-aware cache

replacement. In: ISCA (2006)

[21]  Reinders, J.: Intel Threading Building Blocks. First edn. (2007)

[22]  Rico, A., Duran, A., Cabarcas, F., Etsion, Y., Ramirez, A., Valero, M.: Trace-driven

simulation of multithreaded applications. In: ISPASS (2011)

[23]  Rico, A., Cabarcas, F., Villavieja, C., et al.: On the simulation of large-scale architectures using multiple application abstraction levels. In: TACO (2012)

[24]  Shewchuk, J.R.: An introduction to the conjugate gradient method without the

agonizing pain. Technical report (1994)

[25]  Teruel, X.: OmpSs quick overview, a practical approach (2013)

[26]  Valero, M., Moreto, M., Casas, M., Ayguade, E., Labarta, J.: Runtime-aware architectures: a ﬁrst approach. Supercomp. Front. Innov. 1, 29–44 (2014)

[27]  Wu, C.J., Jaleel, A., Hasenplaugh, W., et al.: SHiP: signature-based hit predictor

for high performance caching. In: MICRO (2011)

[28]  Wulf, W.A., McKee, S.A.: Hitting the memory wall: implications of the obvious.

SIGARCH Comput. Arch. News 23, 20–24 (1995)
