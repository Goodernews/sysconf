[1] G. Cugola and A. Margara, “Processing ﬂows of information: From data
stream to complex event processing,” ACM Computing Surveys, vol. 44,
no. 3, p. 15, 2012.
[2] D. Kliazovich, J. E. Pecero, A. Tchernykh, P. Bouvry, S. U. Khan,
and A. Y. Zomaya, “Ca-dag: Communication-aware directed acyclic
graphs for modeling cloud computing applications,” in Intl. Conference
on Cloud Computing, CLOUD ’13, (Washington, DC), pp. 277–284,
IEEE, 2013.
[3] S. Deng, L. Huang, J. Taheri, and A. Y. Zomaya, “Computation
ofﬂoading for service workﬂow in mobile cloud computing,” IEEE
Transactions on Parallel and Distributed Systems, vol. 26, pp. 3317–
3329, Dec. 2015.
[4] Q. Jiang, Y. C. Lee, and A. Y. Zomaya, “Executing large scale scientiﬁc
workﬂow ensembles in public clouds,” in Intl. Conference on Parallel
Processing (ICPP), (Washington, DC, USA), pp. 520–529, IEEE Computer Society, 2015.
[5] Y. C. Lee, H. Han, A. Y. Zomaya, and M. Yousif, “Resource-efﬁcient
workﬂow scheduling in clouds,” Knowledge-Based Systems, vol. 80 (C),
pp. 153–162, May 2015.
[6] M. HoseinyFarahabady, H. R. D. Samani, L. M. Leslie, Y. C. Lee, and
A. Y. Zomaya, “Handling uncertainty: Pareto-efﬁcient BoT scheduling
on hybrid clouds,” in Proc. of International Conference on Parallel
Processing, ICPP ’13, (Washington, DC), pp. 419–428, IEEE, 2013.
[7] M. HoseinyFarahabady, Y. C. Lee, and A. Y. Zomaya, “Randomized
approximation scheme for resource allocation in hybrid-cloud environments,” J. Supercomput., vol. 69, pp. 576–592, Aug. 2014.
[8] M. HoseinyFarahabady, Y. C. Lee, and A. Y. Zomaya., “Pareto-optimal
cloud bursting,” IEEE Transactions on Parallel and Distributed Systems,
vol. 25 (10), pp. 2670–2682, 2014.
[9] S. Babu, R. Motwani, K. Munagala, I. Nishizawa, and J. Widom,
“Adaptive ordering of pipelined stream ﬁlters,” in ACM SIGMOD Intl.
Conference on Management of data, pp. 407–418, ACM, 2004.
[10] B. Gedik, S. Schneider, M. Hirzel, and K.-L. Wu, “Elastic scaling for
data stream processing,” IEEE Transactions on Parallel and Distributed
Systems, vol. 25, no. 6, pp. 1447–1463, 2014.
[11] B. Gedik, H. Andrade, K.-L. Wu, P. S. Yu, and M. Doo, “Spade:
the system s declarative stream processing engine,” in SIGMOD Intl.
Conference on Management of Data, pp. 1123–1134, ACM, 2008.
[12] M. Hirzel, R. Soulé, S. Schneider, B. Gedik, and R. Grimm, “A catalog
of stream processing optimizations,” ACM Computing Surveys, vol. 46,
no. 4, p. 46, 2014.
[13] B. Peng, M. Hosseini, Z. Hong, R. Farivar, and R. Campbell, “Rstorm: Resource-aware scheduling in storm,” in Annual Middleware
Conference, pp. 149–161, ACM, 2015.
[14] H. C. Andrade, B. Gedik, and D. S. Turaga, Fundamentals of Stream
Processing: Application Design, Systems, and Analytics. Cambridge
University Press, 2014.
[15] D. J. Abadi, D. Carney, U. Çetintemel, M. Cherniack, et al., “Aurora: a
new model and architecture for data stream management,” Very Large
Data Bases (VLDB) Journal, vol. 12, no. 2, pp. 120–139, 2003.
[16] D. J. Abadi, Y. Ahmad, M. Balazinska, et al., “The design of the borealis
stream processing engine.,” in Cidr, vol. 5, pp. 277–289, 2005.

[17] A. Storm, “Storm, distributed and fault-tolerant realtime computation,”
2014.
[18] B. Babcock, S. Babu, M. Datar, R. Motwani, and J. Widom, “Models
and issues in data stream systems,” in ACM SIGMOD-SIGACT-SIGART
Symposium on Principles of Database Systems, pp. 1–16, ACM, 2002.
[19] C. H. Xia, J. A. Broberg, Z. Liu, and L. Zhang, “Distributed resource allocation in stream processing systems,” in Intl. Conferece on
Distributed Computing, DISC’06, (Berlin, Heidelberg), pp. 489–504,
Springer-Verlag, 2006.
[20] T. Lorido-Botran, J. Miguel-Alonso, and J. A. Lozano, “A review of
auto-scaling techniques for elastic applications in cloud environments,”
Journal of Grid Computing, vol. 12, no. 4, pp. 559–592, 2014.
[21] T. De Matteis and G. Mencagli, “Proactive elasticity and energy awareness in data stream processing,” Journal of Systems and Software, 2016.
[22] A. E. Kiasari, Z. Lu, and A. Jantsch, “An analytical latency model for
networks-on-chip,” Transactions on Very Large Scale Integration (VLSI)
Systems, vol. 21, no. 1, pp. 113–123, 2013.
[23] G. Bolch, S. Greiner, H. de Meer, and K. S. Trivedi, Queueing networks and Markov chains: modeling and performance evaluation with
computer science applications. John Wiley & Sons, 2006.
[24] D. Gross, Fundamentals of queueing theory. John Wiley & Sons, 2008.
[25] L. Aniello, R. Baldoni, and L. Querzoni, “Adaptive online scheduling in
storm,” in Intl. Conference on Distributed Event-based Systems, pp. 207–
218, ACM, 2013.
[26] M. R. H. Farahabady, H. R. D. Samani, Y. Wang, A. Y. Zomaya, and
Z. Tari, “A qos-aware controller for apache storm,” in IEEE 15th Intl.
Symposium on Network Computing and Applications (NCA), pp. 334–
342, IEEE, 2016.
[27] D. Carney, U. Çetintemel, M. Cherniack, C. Convey, et al., “Monitoring
streams: a new class of data management applications,” in 28th Intl.
conference on Very Large Data Bases, pp. 215–226, VLDB Endowment,
2002.
[28] T. Heinze, L. Aniello, L. Querzoni, and Z. Jerzak, “Cloud-based data
stream processing,” in Intl. Conference on Distributed Event-Based
Systems, pp. 238–245, ACM, 2014.
[29] P. Padala, K.-Y. Hou, K. G. Shin, X. Zhu, M. Uysal, Z. Wang, S. Singhal,
and A. Merchant, “Automated control of multiple virtualized resources,”
in European Conference on Computer Systems, pp. 13–26, ACM, 2009.
[30] L. Neumeyer, B. Robbins, A. Nair, and A. Kesari, “S4: Distributed
stream computing platform,” in Intl. Conference on Data Mining Workshops, pp. 170–177, IEEE, 2010.
[31] I. Pietri and R. Sakellariou, “Mapping virtual machines onto physical
machines in cloud computing: A survey,” ACM Computing Surveys,
vol. 49, no. 3, p. 49, 2016.
[32] A. Toshniwal, S. Taneja, A. Shukla, et al., “Storm at twitter,” in Proc. of
ACM SIGMOD Intl. Conference on Management of data, pp. 147–156,
ACM, 2014.
[33] J. Xu, Z. Chen, J. Tang, and S. Su, “T-storm: trafﬁc-aware online
scheduling in storm,” in Intl. Conference on Distributed Computing
Systems (ICDCS), pp. 535–544, IEEE, 2014.
[34] N. Marz, “Storm: Distributed and fault-tolerant realtime computation,”
2013.
[35] J. S. van der Veen, B. van der Waaij, et al., “Dynamically scaling apache
storm for the analysis of streaming data,” in Intl. Conference On Big
Data Computing Service and Applications (BigDataService), pp. 154–
161, IEEE, 2015.
[36] K. Wahner, “Real-time stream processing as game changer in a big data
world with hadoop and data warehouse,” 2014.
[37] M. Datar, Algorithms for Data Stream Systems. PhD thesis, Stanford,
CA, USA, 2004.
[38] B. Babcock, S. Babu, M. Datar, R. Motwani, and D. Thomas, “Operator
scheduling in data stream systems,” The VLDB Journal, vol. 13, pp. 333–
353, Dec. 2004.