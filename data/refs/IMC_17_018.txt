[1] Android debug bridge. https://developer.android.com/studio/command-line/adb.html.
[2] Chrome
debugging
protocol.
https://developer.chrome.com/devtools/docs/
debugger-protocol.
[3] Chromium. https://www.chromium.org/Home.
[4] I. grigorik. deciphering the critical rendering path. https://calendar.perfplanet.com/2012/
deciphering-the-critical-rendering-path/.
[5] IETF QUIC WG. https://github.com/quicwg.
[6] Linux network emulation.
http://www.linuxfoundation.org/collaborate/workgroups/
networking/netem.
[7] Linux traffic control. http://linux.die.net/man/8/tc.
[8] Playing with QUIC. https://www.chromium.org/quic/playing-with-quic.
[9] QUIC: A UDP-Based Secure and Reliable Transport for HTTP/2. https://tools.ietf.org/html/
draft-tsvwg-quic-protocol-02.
[10] QUIC
at
10,000
feet.
https://docs.google.com/document/d/
1gY9-YNDNAB1eip-RTPbqphgySwSNSDHLq9D5Bty4FSU.
[11] QUIC Loss Recovery And Congestion Control.
https://tools.ietf.org/html/
draft-tsvwg-quic-loss-recovery-01.
[12] QUIC
Wire
Layout
Specification.
https://docs.google.com/document/d/
1WJvyZflAO2pq77yOLbp9NsGjC1CHetAXV8I0fQe-B_U.
[13] Tcp probe. https://wiki.linuxfoundation.org/networking/tcpprobe.
[14] Welch’s t-test. https://en.wikipedia.org/wiki/Welch%27s_t-test.
[15] I. Beschastnikh, Y. Brun, S. Schneider, M. Sloan, and M. D. Ernst. Leveraging Existing Instrumentation to Automatically Infer Invariant-constrained Models. In Proceedings of the 19th
ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, 2011.
[16] P. Biswal and O. Gnawali. Does quic make the web faster? In IEEE GLOBECOM, 2016.
[17] G. Carlucci, L. De Cicco, and S. Mascolo. HTTP over UDP: an experimental investigation of
QUIC. In Proc. of SAC, 2015.
[18] Chromium Blog. A QUIC update on Google’s experimental transport. http://blog.chromium.
org/2015/04/a-quic-update-on-googles-experimental.html, April 2015.
[19] C.
Cimpanu.
Google
Creates
New
Algorithm
for
Handling
TCP
Traffic
Congestion
Control.
http://news.softpedia.com/news/
google-creates-new-algorithm-for-handling-tcp-traffic-congestion-control-508398.shtml,
September 2016.
[20] S. R. Das. Evaluation of QUIC on web page performance. Master’s thesis, Massachusetts
Institute of Technology, 2014.
[21] M. Dong, Q. Li, D. Zarchy, P. B. Godfrey, and M. Schapira. PCC: Re-architecting congestion
control for consistent high performance. In Proc. of USENIX NSDI, 2015.
[22] N. Dukkipati, N. Cardwell, Y. Cheng, and M. Mathis.
Tail Loss Probe (TLP):
An Algorithm for Fast Recovery of Tail Losses.
https://tools.ietf.org/html/

A. Molavi Kakhki et al.
draft-dukkipati-tcpm-tcp-loss-probe-01, February 2013.
[23] M. Fischlin and F. Günther. Multi-stage key exchange and the case of Google’s QUIC protocol.
In Proc. of ACM CCS, 2014.
[24] S. Ha and I. Rhee. Taming the elephants: New tcp slow start. In Comput. Netw., 2011.
[25] T. Jager, J. Schwenk, and J. Somorovsky. On the security of TLS 1.3 and QUIC against weaknesses in PKCS# 1 v1. 5 encryption. In Proc. of ACM CCS, 2015.
[26] A. Langley, A. Riddoch, A. Wilk, A. Vicente, C. Krasic, D. Zhang, F. Yang, F. Kouranov, I. Swett,
J. Iyengar, J. Bailey, J. Dorfman, J. Kulik, J. Roskind, P. Westin, R. Tenneti, R. Shade, R. Hamilton,
V. Vasiliev, W.-T. Chang, and Z. Shi. The QUIC transport protocol: Design and Internet-scale
deployment. In Proc. of ACM SIGCOMM, 2017.
[27] R. Lychev, S. Jero, A. Boldyreva, and C. Nita-Rotaru. How secure and quick is QUIC? provable
security and performance analyses. In Proc. of IEEE Security and Privacy, 2015.
[28] M. Mathis, N. Dukkipati, and Y. Cheng. Proportional rate reduction for TCP. https://tools.ietf.
org/html/rfc6937, May 2013.
[29] S. McQuistin and C. S. Perkins. Is explicit congestion notification usable with udp? In Proc. of
IMC, 2015.
[30] P. Megyesi, Z. Krämer, and S. Molnár. How quick is QUIC? In Proc. of ICC, May 2016.
[31] A. Molavi Kakhki, F. Li, D. Choffnes, A. Mislove, and E. Katz-Bassett. BingeOn under the microscope: Understanding T-Mobile’s zero-rating implementation. In ACM SIGCOMM Internet-QoE
Workshop, Aug. 2016.
[32] R. Netravali, A. Sivaraman, S. Das, A. Goyal, K. Winstein, J. Mickens, and H. Balakrishnan.
Mahimahi: Accurate Record-and-replay for HTTP. In Proc. of USENIX ATC, 2015.
[33] A. Nikravesh, H. Yao, S. Xu, D. R. Choffnes, and Z. M. Mao. Mobilyzer: An open platform for
controllable mobile network measurements. In Proc. of MobiSys, 2015.
[34] J. Odvarko, A. Jain, and A. Davies. HTTP Archive (HAR) format. https://dvcs.w3.org/hg/
webperf/raw-file/tip/specs/HAR/Overview.html, August 2012.
[35] I. Swett. QUIC congestion control and loss recovery. https://docs.google.com/presentation/d/
1T9GtMz1CvPpZtmF8g-W7j9XHZBOCp9cu1fW0sMsmpoo.
[36] I. Swett. QUIC Deployment Experience @Google. https://www.ietf.org/proceedings/96/slides/
slides-96-quic-3.pdf, 2016.
[37] I.
Swett.
QUIC
FEC
v1.
https://docs.google.com/document/d/
1Hg1SaLEl6T4rEU9j-isovCo8VEjjnuCPTcLNJewj7Nk/edit, February 2016.
[38] A. Vernersson. Analysis of UDP-based reliable transport using network emulation. Master’s
thesis, Luleå University of Technology, 2015.
[39] X. S. Wang, A. Balasubramanian, A. Krishnamurthy, and D. Wetherall. How speedy is SPDY?
In Proc. of USENIX NSDI, 2014.
[40] X. Xu, Y. Jiang, T. Flach, E. Katz-Bassett, D. R. Choffnes, and R. Govindan. Investigating transparent web proxies in cellular networks. In Proc. PAM, 2015.
[41] Zhang, Ming and Karp, Brad and Floyd, Sally and Peterson, Larry. RR-TCP: A ReorderingRobust TCP with DSACK. In Proceedings of the 11th IEEE International Conference on Network

