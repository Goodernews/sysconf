[1] A Javascript Implementation of SipHash-24.
https://github.com/jedisct1/
siphash-js.
[2] Aliyun ECS (Elastic Compute Service). https:
//www.aliyun.com/product/ECS.
[3] Aliyun OSS (Object Storage Service). https://
www.aliyun.com/product/OSS.
[4] eBACS: ECRYPT Benchmarking of Cryptographic Systems. https://bench.cr.yp.
to/results-hash.html.
[5] Internet users in the world.
http://www.
internetlivestats.com/internetusers/.
[6] Reading Files in JavaScript Using the File
APIs.
https://www.html5rocks.com/
en/tutorials/file/dndfiles/.
[7] rsync Web Site. http://www.samba.org/
rsync.
[8] J. Alakuijala, B. Cox, and J. Wassenberg.
Fast Keyed Hash/Pseudo-random Function Using
SIMD Multiply and Permute.
arXiv preprint
arXiv:1612.06257, 2016.
[9] A. Appleby. Murmur3 hash function. https://
github.com/aappleby/smhasher.
[10] J.-P. Aumasson and D. J. Bernstein. SipHash: a
Fast Short-input PRF. In International Conference
on Cryptology in India, pages 489–508. Springer,
2012.
[11] M. Bellare, R. Canetti, and H. Krawczyk. Keying
Hash Functions for Message Authentication. In Annual International Cryptology Conference, pages
1–15. Springer, 1996.
[12] Y. Cui, Z. Lai, X. Wang, N. Dai, and C. Miao.
QuickSync: Improving Synchronization Efficiency
for Mobile Cloud Storage Services. In Proceedings
of the 21st Annual International Conference on Mobile Computing and Networking (MobiCom), pages
592–603. ACM, 2015.
[13] P. Deutsch and J.-L. Gailly. Zlib Compressed Data
Format Specification Version 3.3. Technical report,
RFC Network Working Group, 1996.
[14] I. Drago, E. Bocchi, M. Mellia, H. Slatman, and
A. Pras. Benchmarking Personal Cloud Storage.

In Proceedings of the 13th ACM Internet Measurement Conference (IMC), pages 205–212. ACM,
2013.
[15] I. Drago, M. Mellia, M. Munafò, A. Sperotto,
R. Sadre, and A. Pras. Inside Dropbox: Understanding Personal Cloud Storage Services. In Proceedings of the 12th ACM Internet Measurement
Conference (IMC), pages 481–494. ACM, 2012.
[16] B. Jenkins. Spookyhash: A 128-Bit Noncryptographic Hash, 2012. http://burtleburtle.
net/bob/hash/spooky.html.
[17] Z. Li, C. Jin, T. Xu, C. Wilson, Y. Liu, L. Cheng,
Y. Liu, Y. Dai, and Z.-L. Zhang. Towards Networklevel Efficiency for Cloud Storage Services. In Proceedings of the 14th ACM Internet Measurement
Conference (IMC), pages 115–128. ACM, 2014.
[18] Z. Li, X. Wang, N. Huang, M. A. Kaafar, Z. Li,
J. Zhou, G. Xie, and P. Steenkiste. An Empirical Analysis of a Large-scale Mobile Cloud Storage
Service. In Proceedings of the 16th ACM Internet
Measurement Conference (IMC), pages 287–301.
ACM, 2016.
[19] Z. Li, C. Wilson, Z. Jiang, Y. Liu, B. Zhao,
C. Jin, Z.-L. Zhang, and Y. Dai.
Efficient Batched Synchronization in Dropbox-like
Cloud Storage Services.
In Proceedings of
the 14th ACM/IFIP/USENIX International Middleware Conference (Middleware), pages 307–327.
Springer, 2013.
[20] M. Lillibridge, K. Eshghi, D. Bhagwat, V. Deolalikar, G. Trezis, and P. Camble. Sparse Indexing: Large Scale, Inline Deduplication Using
Sampling and Locality. In Proceedings of the 6th
USENIX Conference on File and Storage Technologies (FAST), pages 111–123, 2009.
[21] L. C. Noll. FNV Hash. http://www.isthe.
com/chongo/tech/comp/fnv/.
[22] G. Pike and J. Alakuijala.
Introducing
Cityhash.
http://googleopensource.blogspot.com/2011/04/
introducingcityhash.html.
[23] R. L. Rivest et al. RFC 1321: The MD5 Messagedigest Algorithm. Internet activities board, 143,
1992.
[24] W. Xia, H. Jiang, D. Feng, and Y. Hua. SiLo:
A Similarity-Locality based Near-Exact Deduplication Scheme with Low RAM Overhead and High
Throughput. In Proceedings of the 2011 USENIX
Annual Technical Conference (ATC), pages 26–28,
2011.
[25] W. Xia, H. Jiang, D. Feng, and Y. Hua. Similarity
and Locality Based Indexing for High Performance
Data Deduplication. IEEE Transactions on Computers, 64(4):1162–1176, 2015.
[26] W. Xia, Y. Zhou, H. Jiang, D. Feng, Y. Hua, Y. Hu,
Q. Liu, and Y. Zhang. FastCDC: a Fast and Efficient Content-defined Chunking Approach for Data
Deduplication. In Proceedings of the 2016 USENIX
Annual Technical Conference (ATC), pages 101–
114, 2016.
