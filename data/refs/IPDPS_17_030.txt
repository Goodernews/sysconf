[1] T. Hoeﬂer, W. Gropp, M. Snir, and W. Kramer, “Performance
Modeling for Systematic Performance Tuning,” in Proc. Intl.
Conf. for High Performance Computing, Networking, Storage
and Analysis (SC’11), SotP Session, Seattle, WA, USA, 2011,
pp. 6:1–6:12.

[2] J. Reinders, J. Jeffers, and A. Sodani, Intel Xeon Phi Pro-
cessor. High Performance Programming. Knights Landing
Edition. Boston, MA, USA: Morgan Kaufmann Publishers
Inc., 2016.

[3] E. Gardner, “What public disclosures has Intel made about
Knights Landing?” https://software.intel.com/en-us/articles/
what-disclosures-has-intel-made-about-knights-landing,
2016.

[4] A. Sodani, “Knights Landing: 2nd Generation Intel Xeon Phi
Processor,” in Hot Chips: A Symposium on High Performance
Chips (HC27), Cupertino, CA, USA, 2015.

[5] D. Hackenberg, D. Molka, and W. E. Nagel, “Cache Coher-
ence Protocol and Memory Performance of the Intel Haswell-
EP Architecture,” in Proc. 44th Intl. Conf. on Parallel Pro-
cessing (ICPP’15), Beijing, China, 2015, pp. 739–748.

[6] S. Ramos and T. Hoeﬂer, “Modeling communication in cache-
coherent SMP systems: a case-study with Xeon Phi,” in Proc.
22nd Intl. Symposium on High-performance Parallel and
Distributed Computing (HPDC’13), New York, NY, USA,
2013, pp. 97–108.

[7] D. Molka, D. Hackenberg, R. Schoene, and M. S. Mueller,
“Memory Performance and Cache Coherency Effects on an
Intel Nehalem Multiprocessor System,” in Proc. 18th Intl.
Conf. on Parallel Architectures and Compilation Techniques
(PACT’09), Raleigh, NC, USA, 2009, pp. 261–270.

[8] D. Hackenberg, D. Molka, and W. E. Nagel, “Comparing
Cache Architectures and Coherency Protocols on x86-64
Multicore SMP Systems,” in Proc. 42nd IEEE/ACM Intl.
Symp. on Microarchitecture (MICRO’42), New York, NY,
USA, 2009, pp. 413–422.

[9] S. Ramos and T. Hoeﬂer, “Benchmark Suite for Modeling

Intel Xeon Phi,” http://gac.des.udc.es /∼sramos/xeon phi
bench/xeon phi bench.html.

[10] J. D. McCalpin, “Memory Bandwidth and Machine Balance
in Current High Performance Computers,” IEEE Technical
Committee on Computer Architecture (TCCA) Newsletter, pp.
19–25, 1995.

[11] G. Paoloni, “How to Benchmark Code Execution Times on
Intel IA-32 and IA-64 Instruction Set Architectures,” Intel
White Paper 324264-001, 2010.

[12] S. Ramos and T. Hoeﬂer, “Cache Line Aware Algorithm De-
sign for Cache-Coherent Architectures,” IEEE Transactions
on Parallel & Distributed Systems (TPDS), vol. 27, no. 10,
pp. 2824–2837, 2016.

[13] S. Li, T. Hoeﬂer, and M. Snir, “NUMA-Aware Shared Mem-
ory Collective Communication for MPI,” in Proc. 22nd Intl.
Symposium on High-performance Parallel and Distributed
Computing (HPDC’13), 2013, pp. 85–96.

[14] N. Satish, C. Kim et al., “Fast Sort on CPUs and GPUs: A
Case for Bandwidth Oblivious SIMD Sort,” in Proc. ACM
SIGMOD Intl. Conf. on Management of Data (SIGMOD’10),
Indianapolis, IN, USA, 2010, pp. 351–362.

[15] S. Saini, J. Chang, and H. Jin, “Performance Evaluation of
the Intel Sandy Bridge Based NASA Pleiades Using Scientiﬁc
and Engineering Applications,” in Proc. 4th Intl. WS. on
Perf. Modeling, Bench. and Sim. of HPC Systems (PMBS’13),
Denver, CO, USA, 2013.

[16] H. Wong, M. M. Papadopoulou, M. Sadooghi-Alvandi, and
A. Moshovos, “Demystifying GPU microarchitecture through
microbenchmarking,” in Proc. IEEE Intl. Symposium on Per-
formance Analysis of Systems & Software (ISPASS’10), White
Plains, NY, USA, 2010, pp. 235–246.

[17] X. Mei, K. Zhao, C. Liu, and X. Chu, “Benchmarking the
Memory Hierarchy of Modern GPUs,” in Proc. 11th IFIP
WG 10.3 Intl. Conf. on Network and parallel Computing
(NPC’14), Ilan, Taiwan, 2014, pp. 144–156.

[18] D. Petrovi´c, O. Shahmirzadi, T. Ropars, and A. Schiper,
“High-performance RMA-based Broadcast on the Intel SCC,”
in Proc. 24th ACM Symposium on Parallelism in Algorithms
and Architectures (SPAA’12), Pittsburgh, PA, USA, 2012, pp.
121–130.

[19] D. Doerﬂer, J. Deslippe et al., “Applying the Rooﬂine Per-
to the Intel Xeon Phi Knights Landing
formance Model
Processor,” in IXPUG Workshop: Application Performance
on Intel Xeon Phi – Being Prepared for KNL and Beyond,
Frankfurt, Germany, 2016.

[20] S. Muralidharan, K. OBrien, and C. Lalanne, “A Semi-
Automated Tool Flow for Rooﬂine Anaylsis of OpenCL
Kernels on Accelerators,” in Proc. 1st Intl. Workshop on
Heterogeneous High-performance Reconﬁgurable Computing
(H2RC’15), Austin, TX, USA, 2015.

