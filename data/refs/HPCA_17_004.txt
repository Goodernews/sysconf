[1] H. Park, Y. Park, and S. Mahlke, “Polymorphic pipeline array: A flexible
multicore accelerator with virtualized execution for mobile multimedia
applications,” in MICRO-42, 2009.
[2] R. Hameed, W. Qadeer, M. Wachs, O. Azizi, A. Solomatnikov, B. C.
Lee, S. Richardson, C. Kozyrakis, and M. Horowitz, “Understanding
sources of inefficiency in general-purpose chips,” in ISCA-37, 2010.
[3] C. Johnson, D. Allen, J. Brown, S. VanderWiel, R. Hoover, H. Achilles,
C.-Y. Cher, G. May, H. Franke, J. Xenedis, and C. Basso, “A wire-speed
powertm processor: 2.3ghz 45nm soi with 16 cores and 64 threads,” in
ISSCC, 2010.
[4] M. Shah, R. Golla, G. Grohoski, P. Jordan, J. Barreh, J. Brooks,
M. Greenberg, G. Levinsky, M. Luttrell, C. Olson, Z. Samoail, M. Smittle, and T. Ziaja, “Sparc t4: A dynamically threaded server-on-a-chip,”
IEEE Micro, vol. 32, pp. 8–19, Mar. 2012.
[5] V. Govindaraju, C.-H. Ho, T. Nowatzki, J. Chhugani, N. Satish,
K. Sankaralingam, and C. Kim, “Dyser: Unifying functionality and
parallelism specialization for energy-efficient computing,” IEEE Micro,
vol. 32, pp. 38–51, Sept. 2012.
[6] A. Krishna, T. Heil, N. Lindberg, F. Toussi, and S. VanderWiel,
“Hardware acceleration in the ibm poweren processor: Architecture and
performance,” in PACT-21, 2012.
[7] J. Cong, M. A. Ghodrat, M. Gill, B. Grigorian, and G. Reinman,
“Architecture support for accelerator-rich cmps,” in DAC-49, 2012.
[8] W. Qadeer, R. Hameed, O. Shacham, P. Venkatesan, C. Kozyrakis,
and M. A. Horowitz, “Convolution engine: Balancing efficiency and
flexibility in specialized computing,” in ISCA-40, 2013.
[9] H. Esmaeilzadeh, A. Sampson, L. Ceze, and D. Burger, “Neural acceleration for general-purpose approximate programs,” in MICRO-45,
2012.
[10] R. Sampson, M. Yang, S. Wei, C. Chakrabarti, and T. F. Wenisch,
“Sonic millip3de: A massively parallel 3d-stacked accelerator for 3d
ultrasound,” in HPCA-19, 2013.
[11] H. Esmaeilzadeh, E. Blem, R. St. Amant, K. Sankaralingam, and
D. Burger, “Dark silicon and the end of multicore scaling,” in ISCA38, 2011.
[12] G. Venkatesh, J. Sampson, N. Goulding, S. Garcia, V. Bryksin, J. LugoMartinez, S. Swanson, and M. B. Taylor, “Conservation cores: Reducing
the energy of mature computations,” in ASPLOS-XV, 2010.
[13] J. Cong, M. A. Ghodrat, M. Gill, B. Grigorian, and G. Reinman,
“Architecture support for domain-specific accelerator-rich cmps,” ACM
Trans. Embed. Comput. Syst., vol. 13, pp. 131:1–131:26, Apr. 2014.
[14] O. Kocberber, B. Grot, J. Picorel, B. Falsafi, K. Lim, and P. Ranganathan, “Meet the walkers: Accelerating index traversals for inmemory databases,” in MICRO-46, 2013.
[15] M. Lavasani, H. Angepat, and D. Chiou, “An fpga-based in-line accelerator for memcached,” Computer Architecture Letters, vol. 13, no. 2,
pp. 57–60, 2014.
[16] K. Lim, D. Meisner, A. G. Saidi, P. Ranganathan, and T. F. Wenisch,
“Thin servers with smart pipes: Designing soc accelerators for memcached,” in ISCA-40, 2013.
[17] Y.-k. Choi, J. Cong, Z. Fang, Y. Hao, G. Reinman, and P. Wei, “A quantitative analysis on microarchitectures of modern cpu-fpga platforms,”
in DAC-53, 2016.
[18] HSA Foundation, HSA Platform System Architecture Specification 1.0,
2015.
[19] Advanced Micro Devices, Inc., AMD I/O Virtualization Technology
(IOMMU) Specification, 2011.
[20] ARM Ltd., ARM System Memory Management Unit Architecture Specification, 2015.
[21] Intel Corporation, Intel Virtualization Technology for Directed I/O
Architecture, 2014.
[22] A. Kegel, P. Blinzer, A. Basu, and M. Chan, “Virtualizing io through io
memory management unit (iommu),” in ASPLOS-XXI Tutorials, 2016.
[23] E. S. Chung, J. D. Davis, and J. Lee, “Linqits: Big data on little clients,”
in ISCA-40, 2013.
[24] T. Moreau, M. Wyse, J. Nelson, A. Sampson, H. Esmaeilzadeh, L. Ceze,
and M. Oskin, “Snnap: Approximate computing on programmable socs
via neural acceleration,” in HPCA-21, 2015.
[25] B. Pichai, L. Hsu, and A. Bhattacharjee, “Architectural support for
address translation on gpus: Designing memory management units for
cpu/gpus with unified address spaces,” in ASPLOS-XIX, 2014.
[26] J. Power, M. D. Hill, and D. A. Wood, “Supporting x86-64 address
translation for 100s of gpu lanes,” in HPCA-20, 2014.
[27] T. W. Barr, A. L. Cox, and S. Rixner, “Translation caching: Skip, don’t
walk (the page table),” in ISCA-37, 2010.
[28] R. Bhargava, B. Serebrin, F. Spadini, and S. Manne, “Accelerating twodimensional page walks for virtualized systems,” in ASPLOS-XIII, 2008.
[29] Intel Corporation, TLBs, Paging-Structure Caches, and Their Invalidation, 2008.
[30] Y. S. Shao, S. Xi, V. Srinivasan, G.-Y. Wei, and D. Brooks, “Toward
cache-friendly hardware accelerators,” in Proc. Sensors to Cloud Architectures Workshop (SCAW), in conjuction with HPCA-21, 2015.
[31] C. Bienia, S. Kumar, J. P. Singh, and K. Li, “The parsec benchmark suite:
characterization and architectural implications,” in PACT-17, 2008.
[32] J. Hestness, S. W. Keckler, and D. A. Wood, “A comparative analysis
of microarchitecture effects on cpu and gpu memory system behavior,”
in IISWC, 2014.
[33] J. Cong, Z. Fang, M. Gill, and G. Reinman, “Parade: A cycle-accurate
full-system simulation platform for accelerator-rich architectural design
and exploration,” in ICCAD, 2015.
[34] N. Binkert, B. Beckmann, G. Black, S. K. Reinhardt, A. Saidi, A. Basu,
J. Hestness, D. R. Hower, T. Krishna, S. Sardashti, et al., “The gem5
simulator,” ACM SIGARCH Computer Architecture News, vol. 39, no. 2,
pp. 1–7, 2011.
[35] J. Cong, B. Liu, S. Neuendorffer, J. Noguera, K. Vissers, and Z. Zhang,
“High-level synthesis for fpgas: From prototyping to deployment,”
Trans. Comp.-Aided Des. Integ. Cir. Sys., vol. 30, pp. 473–491, Apr.
2011.
[36] N. Muralimanohar, R. Balasubramonian, and N. P. Jouppi, CACTI 6.0:
A tool to model large caches. HP Laboratories, 2009.
[37] N. Amit, M. Ben-Yehuda, and B.-A. Yassour, “Iommu: Strategies for
mitigating the iotlb bottleneck,” in Workshop on Interaction between
Operating Systems and Computer Architecture (WIOSCA), 2010.
[38] V. Karakostas, J. Gandhi, A. Cristal, M. D. Hill, K. S. McKinley,
M. Nemirovsky, M. M. Swift, and O. S. Unsal, “Energy-efficient address
translation,” in HPCA-22, 2016.
[39] D. L. Black, R. F. Rashid, D. B. Golub, and C. R. Hill, “Translation
lookaside buffer consistency: A software approach,” in ASPLOS-III,
1989.
[40] A. Bhattacharjee, D. Lustig, and M. Martonosi, “Shared last-level tlbs
for chip multiprocessors,” in HPCA-17, 2011.
[41] A. Basu, J. Gandhi, J. Chang, M. D. Hill, and M. M. Swift, “Efficient
virtual memory for big memory servers,” in ISCA-40, 2013.
[42] C. McCurdy, A. L. Coxa, and J. Vetter, “Investigating the tlb behavior
of high-end scientific applications on commodity microprocessors,” in
ISPASS, 2008.
[43] M. Talluri and M. D. Hill, “Surpassing the tlb performance of superpages
with less operating system support,” in ASPLOS-VI, 1994.
[44] A. Arcangeli, “Transparent hugepage support,” in KVM Forum, 2010.
[45] P. Hammarlund, “4th generation intel core processor, codenamed
haswell,” in Hot Chips, 2013.
[46] B. L. Jacob and T. N. Mudge, “A look at several memory management
units, tlb-refill mechanisms, and page table organizations,” in ASPLOSVIII, 1998.
[47] A. Saulsbury, F. Dahlgren, and P. Stenström, “Recency-based tlb
preloading,” in ISCA-27, 2000.
[48] G. B. Kandiraju and A. Sivasubramaniam, “Going the distance for tlb
prefetching: An application-driven study,” in ISCA-29, 2002.
[49] A. Bhattacharjee, “Large-reach memory management unit caches,” in
MICRO-46, 2013.
[50] B. Jacob and T. Mudge, “Software-managed address translation,” in
HPCA-3, 1997.
[51] S. Shahar, S. Bergman, and M. Silberstein, “Activepointers: a case for
software address translation on gpus,” in ISCA-43, 2016.
[52] Intel Corporation, Accelerator abstraction layer software programmers
guide.
[53] S. Neuendorffer and F. Martinez-Vallina, “Building zynq accelerators
with vivado high level synthesis.,” in FPGA, 2013.
[54] Y. S. Shao, S. L. X. V. Srinivasan, and G.-Y. W. D. Brooks, “Codesigning accelerators and soc interfaces using gem5-aladdin,” in
MICRO-49, 2016.
[55] M. Malka, N. Amit, M. Ben-Yehuda, and D. Tsafrir, “riommu: Efficient
iommu for i/o devices that employ ring buffers,” in ASPLOS-XX, 2015.
[56] L. E. Olson, J. Power, M. D. Hill, and D. A. Wood, “Border control:
sandboxing accelerators,” in MICRO-48, 2015.