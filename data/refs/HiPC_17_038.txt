[1] R. D. Luce, “Connectivity and generalized cliques in sociometric
group structure,” Psychometrika, vol. 15, no. 2, pp. 169-190, 1950.

[2] R.J. Mokken, “Cliques, clubs and clans,” Quality & Quantity, vol. 13,
pp. 161-173, Apr. 1979.

[3] S. B. Seidman and B. L. Foster, “A graph-theoretic generalization
of the clique concept,” J. Mathematical Sociology, vol. 6, no. 1, pp.
139-154, 1978.

[4] J. Abello, M. G. C. Resende, and S. Sudarsky, “Massive quasi-clique
detection,” in Proc. Latin American Theoretical Informatics Symp.
(LATIN), 2002.

[5] J. Pei, D. Jiang, and A. Zhang, “On mining cross-graph quasicliques,” in Proc. Int’l. Conf. on Knowledge Discovery in Data Mining
(KDD), 2005.

[6] S. B. Seidman, “Network structure and minimum degree,” Social
Networks, vol. 5, no. 3, pp. 269-287, 1983.

[7] D. Matula and L. Beck, “Smallest-last ordering and clustering and
graph coloring algorithms,’ J. ACM, vol. 30, no. 3, pp. 417-427,
1983.

[8] J. Cohen, “Trusses: Cohesive subgraphs for social network analysis,”
National Security Agency, Tech. Rep., 2008.

[9] K. Saito, T. Yamada, and K. Kazama, “Extracting communities from
complex networks by the k-dense method,” in Proc. Int’l. Workshop
on Mining Complex Data (MCD), 2006.

[10] Y. Zhang and S. Parthasarathy, “Extracting analyzing and visualizing
triangle k-core motifs within networks,” in Proc. Int’l. Conf: on Data
Engineering (ICDE), 2012.

[11] A. Verma and S. Butenko, “Network clustering via clique relaxations:
A community based approach,” in Graph Partitioning and Graph
Clustering, D. Bader, H. Meyerhenke, P. Sanders, and D. Wagner,
Eds. AMS, 2013, ch. 9, pp. 129-139.

[12] A. E. Sartyiice, C. Seshadhri, A. Pinar, and Uv. Catalyiirek, “Finding
the hierarchy of dense subgraphs using nucleus decompositions,” in
Proc. Int’l. Conf. on World Wide Web (WWW), 2015.

[13] J. I. Alvarez-Hamelin, L. Dall’Asta, A. Barrat, and A. Vespignani,
“Large scale networks fingerprinting and visualization using the kcore decomposition,” in Proc. Advances in Neural Information Processing Systems (NIPS), 2005.

[14] X. Huang, L. V. S. Lakshmanan, J. X. Yu, and H. Cheng, “Approximate closest community search in networks,’ Proc. VLDB Endow.,
vol. 9, no. 4, pp. 276-287, 2015.

[15] R. A. Rossi, D. F. Gleich, and A. H. Gebremedhin, “Parallel maximum clique algorithms with applications to network analysis,” SIAM
Journal on Scientific Computing, vol. 37, no. 5, pp. C589-C616,
2015.

[16] J. Wang and J. Cheng, “Truss decomposition in massive networks,”
Proc. VLDB Endow., vol. 5, no. 9, pp. 812-823, May 2012.

[17] J. Cohen, “Graph twiddling in a MapReduce world,” Computing in
Science & Engineering, vol. 11, no. 4, pp. 29-41, 2009.

[18] P. L. Chen, C. K. Chou, and M. S. Chen, “Distributed algorithms for
k-truss decomposition,” in Proc. Int’l. Conf: on Big Data, 2014.

[19] A. E. Saryiice, C. Seshadhri, and A. Pinar, “Parallel local algorithms for core, truss, and nucleus decompositions,” arXiv.org e-Print
archive, https://arxiv.org/abs/1704.00386, 2017.

[20] V. Gadepally, J. Bolewski, D. Hook, D. Hutchison, B. Miller, and
J. Kepner, “Graphulo: Linear algebra graph kernels for NoSQL
databases,” in Proc. Workshop on Graph Algorithms Building Blocks
(GABB), 2015.

[21] S. Samsi, V. Gadepally, M. Hurley, M. Jones, E. Kao,
S. Mohindra, P. Monticciolo, A. Reuther, S. Smith, W. Song,
D. Staheli, and J. Kepner, “Static graph challenge: Subgraph
isomorphism,” MIT Lincoln Laboratory, Tech. Rep., 2017,
http://graphchallenge.mit.edu/sites/default/files/documents/
SubgraphIsomorphismChallenge-2017-06- 15.pdf.

[22] N. S. Dasari, D. Ranjan, and M. Zubair, “ParK: An efficient algorithm for k-core decomposition on multicore processors,” in Proc.
Int’l. Workshop on High Performance Big Graph Data Management,
Analysis, and Mining (BigGraphs), 2014.

[23] V. Batagelj and M. Zaversnik, “An O(m) algorithm for cores decomposition of networks,” arXiv.org e-Print archive, http://arxiv.org/abs/
cs.DS/0310049, 2003.

[24] R. A. Rossi, “Fast triangle core decomposition for mining large
graphs,” in Proc. Pacific-Asia Conf. on Advances in Knowledge
Discovery and Data Mining (PAKDD), 2014.

[25] G. Malewicz, M. H. Austern, A. J. Bik, J. C. Dehnert, I. Horn,
N. Leiser, and G. Czajkowski, “Pregel: A system for large-scale graph
processing,” in Proc. Int’l. Conf. on Management of Data (SIGMOD),
2010.

[26] N. Chiba and T. Nishizeki, “Arboricity and subgraph listing algorithms,” SIAM J. Comput., vol. 14, no. 1, pp. 210-223, 1985.

[27] M. Latapy, “Main-memory triangle computations for very large
(sparse (power-law)) graphs,” Theoretical Computer Science, vol. 407,
no. 1-3, pp. 458-473, 2008.

[28] M. Ortmann and U. Brandes, “Triangle listing algorithms: Back
from the diversion,” in Proceedings of the Meeting on Algorithm
Engineering & Expermiments. Philadelphia, PA, USA: Society
for Industrial and Applied Mathematics, 2014, pp. 1-8. [Online].
Available: http://dl.acm.org/citation.cfm?id=2790174.2790175

[29] J. Shun and K. Tangwongsan, “Multicore triangle computations without tuning,” in Proc. Int’l. Conf. on Data Engineering (ICDE), 2015,
pp. 149-160.

[30] Y. Cui, D. Xiao, and D. Loguinov, “On efficient external-memory
triangle listing,” in Proc. Int’l. Conf. on Data Mining (ICDM), 2016.

[31] D. Xiao, Y. Cui, D. B. Cline, and D. Loguinov, “On asymptotic cost
of triangle listing in random graphs,” in Proc. Symp. on Principles of
Database Systems (PODS), 2017.

[32] S. Parimalarangan, G. M. Slota, and K. Madduri, “Fast parallel graph
triad census and triangle counting on shared-memory platforms,” in
Proc. Workshop on Parallel and Distributed Processing for Computational Social Systems (ParSocial), 2017.

[33] H. Kabir and K. Madduri, “Parallel k-core decomposition on multicore platforms,” in Proc. Workshop on Parallel and Distributed
Processing for Computational Social Systems (ParSocial), 2017.

[34] A. Montresor, F. De Pellegrini, and D. Miorandi, “Distributed kcore decomposition,” in Proc. Symp. on Principles of Distributed
Computing (PODC), 2011.

[35] S. Smith, X. Liu, N. K. Ahmed, A. S. Tom, F. Petrini, and G. Karypis,
“Truss decomposition on shared-memory parallel systems,” in Proc.
IEEE High Performance Extreme Computing (HPEC) Graph Challenge, 2017.

[36] O. Green, J. Fox, E. Kim, EF Busato, N. Bombieri, K. Lakhotia,
S. Zhou, S. Singapura, H. Zeng, R. Kannan, V. Prasanna, and
D. Bader, “Quickly finding a truss in a haystack,” in Proc. IEEE High
Performance Extreme Computing (HPEC) Graph Challenge, 2017.

[37] H. Kabir and K. Madduri, “Parallel k-truss decomposition on multicore systems,” in Proc. 21st IEEE High Performance Extreme
Computing (HPEC) Conference, Sep. 2017.

[38] T. A. Davis and Y. Hu, “The University of Florida sparse matrix
collection,” ACM Transactions on Mathematical Software, vol. 38,
pp. 1:1-1:25, 2011, http:/Avww.cise.ufl.edu/research/sparse/matrices.

[39] J. Leskovec and A. Krevl, “SNAP Datasets: Stanford large network
dataset collection,” http://snap.stanford.edu/data, Jun. 2014.