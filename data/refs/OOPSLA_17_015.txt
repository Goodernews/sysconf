[1] T. F. Bissyande, F. Thung, D. Lo, L. Jiang, and L. Reveillere. 2013. Orion: A Software Project Search Engine with Integrated

Diverse Software Artifacts. In International Conference on Engineering of Complex Computer Systems. https://doi.org/10.

1109/ICECCS.2013,.42



[2] Stephen M. Blackburn, Robin Garner, Chris Hoffmann, Asjad M. Khan, Kathryn S. McKinley, Rotem Bentzur, Amer

Diwan, Daniel Feinberg, Daniel Frampton, Samuel Z. Guyer, Martin Hirzel, Antony L. Hosking, Maria Jump, Han Bok

Lee, J. Eliot B. Moss, Aashish Phansalkar, Darko Stefanovic, Thomas VanDrunen, Daniel von Dincklage, and Ben

Wiedermann. 2006. The DaCapo benchmarks: Java benchmarking development and analysis. In Conference on Object

Oriented Programming Systems Languages and Applications (OOPSLA). https://doi.org/10.1145/1167473.1167488



[3] Hudson Borges, André C. Hora, and Marco Tulio Valente. 2016. Understanding the Factors that Impact the Popularity of

GitHub Repositories. (2016). http://arxiv.org/abs/1606.04984



[4] Casey Casalnuovo, Prem Devanbu, Abilio Oliveira, Vladimir Filkov, and Baishakhi Ray. 2015. Assert Use in GitHub Projects.

In International Conference on Software Engineering (ICSE). http://dl.acm.org/citation.cfm?id=2818754.2818846



[5] James R. Cordy, Thomas R. Dean, and Nikita Synytskyy. 2004. Practical Language-independent Detection of Near-miss

Clones. In Conference of the Centre for Advanced Studies on Collaborative Research (CASCON). http://dl.acm.org/citation.

cfm?id=1034914.1034915



[6] V. Cosentino, J. L. C. Izquierdo, and J. Cabot. 2016. Findings from GitHub: Methods, Datasets and Limitations. In Working

Conference on Mining Software Repositories (MSR). https://doi.org/10.1109/MSR.2016.023



[7] John W. Creswell. 2014. Research Design: Qualitative, Quantitative, and Mixed Methods Approaches. SAGE.



[8] Robert Dyer, Hoan Anh Nguyen, Hridesh Rajan, and Tien N. Nguyen. 2013. Boa: A Language and Infrastructure for

Analyzing Ultra-large-scale Software Repositories. In International Conference on Software Engineering (ICSE). http:

//dl.acm.org/citation.cfm?id=2486788.2486844



[9] Jesus M. Gonzalez-Barahona, Gregorio Robles, and Santiago Duefias. 2010. Collecting Data About FLOSS Development:

The FLOSSMetrics Experience. In International Workshop on Emerging Trends in Free/Libre/Open Source Software Research

and Development (FLOSS). https://doi.org/10.1145/1833272.1833278



[10] Georgios Gousios. 2013. The GHTorrent dataset and tool suite. In Working Conference on Mining Software Repositories

(MSR). https://doi.org/10.1109/MSR.2013.6624034



[11] Lars Heinemann, Florian Deissenboeck, Mario Gleirscher, Benjamin Hummel, and Maximilian Irlbeck. 2011. On the Extent

and Nature of Software Reuse in Open Source Java Projects. Berlin, Heidelberg. https://doi.org/10.1007/978-3-642-21347-2_

16



[12] Felipe Hoffa. 2016. 400,000 GitHub repositories, 1 billion files, 14 terabytes of code: Spaces or Tabs? (2016). https:

//medium.com/@hoffa/400-000- github-repositories- 1- billion-files- 14-terabytes- of-code-spaces-or-tabs- 7cfe0b5dd7fd



[13] Eirini Kalliamvakou, Georgios Gousios, Kelly Blincoe, Leif Singer, Daniel M. German, and Daniela Damian. 2014. The

Promises and Perils of Mining GitHub. In Working Conference on Mining Software Repositories (MSR). https://doi.org/10.

1145/2597073.2597074



[14] Toshihiro Kamiya, Shinji Kusumoto, and Katsuro Inoue. 2002. CCFinder: A Multilinguistic Token-based Code Clone

Detection System for Large Scale Source Code. /EEE Trans. Softw. Eng. 28, 7 (2002). https://doi.org/10.1109/TSE.2002.

1019480



[15] P. S. Kochhar, T. F. BissyandAI, D. Lo, and L. Jiang. 2013. Adoption of Software Testing in Open Source Projects—A

Preliminary Study on 50,000 Projects. In European Conference on Software Maintenance and Reengineering. https:

//doi.org/10.1109/CSMR.2013.48



[16] R. Koschke. 2007. Survey of research on software clones. In Duplication, Redundancy, and Similarity in Software (Dagstuhl

Seminar Proceedings 06301).



[17] A. Mockus. 2007. Large-Scale Code Reuse in Open Source Software. In First International Workshop on Emerging Trends in

FLOSS Research and Development. hitps://doi.org/10.1109/FLOSS.2007.10



[18] A. Mockus. 2009. Amassing and Indexing a Large Sample of Version Control Systems: Towards the Census of Public Source

Code History. In Working Conference on Mining Software Repositories (MSR). https://doi.org/10.1109/MSR.2009.5069476



[19] Meiyappan Nagappan, Thomas Zimmermann, and Christian Bird. 2013. Diversity in Software Engineering Research. In

Foundations of Software Engineering (FSE). https://doi.org/10.1145/2491411.2491415



[20] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 84. Publication date: October 2017.

84:28 C. Lopes, P. Maj, P. Martins, V. Saini, D. Yang, J. Zitny, H. Sajnani, and J. Vitek



[21] J. Ossher, Sushil Bajracharya, E. Linstead, P. Baldi, and Crista Lopes. 2009. SourcererDB: An aggregated repository of

statically analyzed and cross-linked open source Java projects. In Working Conference on Mining Software Repositories

(MSR). https://doi.org/10.1109/MSR.2009,5069501



[22] Joel Ossher, Hitesh Sajnani, and Cristina Lopes. 2011. File Cloning in Open Source Java Projects: The Good, the Bad, and

the Ugly. In International Conference on Software Maintenance (ICSM). https://doi.org/10.1109/ICSM.2011.6080795



[23] Baishakhi Ray, Daryl Posnett, Vladimir Filkov, and Premkumar Devanbu. 2014. A Large Scale Study of Programming

Languages and Code Quality in Github. In International Symposium on Foundations of Software Engineering (FSE).

https://doi.org/10.1145/2635868.2635922



[24] Gregor Richards, Andreas Gal, Brendan Eich, and Jan Vitek. 2011. Automated Construction of JavaScript Benchmarks. In

Conference on Object-Oriented Programming Systems, Languages and Applications (OOPSLA). https://doi.org/10.1145/

2048066.2048119



[25] C. K. Roy and J. R. Cordy. 2007. A survey on software clone detection research. Technical Report 541. Queens University.



[26] Chanchal K. Roy and James R. Cordy. 2009. A Mutation/Injection-Based Automatic Framework for Evaluating Code Clone

Detection Tools. In International Conference on Software Testing, Verification, and Validation. https://doi.org/10.1109/

ICSTW.2009, 18



[27] C. K. Roy and J. R. Cordy. 2010. Near-miss Function Clones in Open Source Software: An Empirical Study. j. Softw. Maint.

Evol. 22, 3 (2010). https://doi.org/10.1002/smr.v22:3



[28] Hitesh Sajnani. 2016. Large-Scale Code Clone Detection. Ph.D. Dissertation. University of California, Irvine.



[29] Hitesh Sajnani, Vaibhav Saini, Jeffrey Svajlenko, Chanchal K. Roy, and Cristina V. Lopes. 2016. SourcererCC: Scaling Code

Clone Detection to Big-code. In International Conference on Software Engineering (ICSE). https://doi.org/10.1145/2884781.

2884877



[30] Johnny Saldafia. 2009. The Coding Manual for Qualitative Researchers. SAGE.



[31] SPEC. 1998. SPECjvm98 benchmarks. (1998).



[32] J. Svajlenko and C. K. Roy. 2015. Evaluating clone detection tools with BigCloneBench. In International Conference on

Software Maintenance and Evolution (ICSME). https://doi.org/10.1109/ICSM.2015.7332459



[33] Christopher Vendome, Gabriele Bavota, Massimiliano Di Penta, Mario Linares-Vasquez, Daniel German, and Denys

Poshyvanyk. 2016. License usage and changes: a large-scale study on GitHub. Empirical Software Engineering (2016).

https://doi.org/10.1007/s10664-016- 9438-4



[34] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 84. Publication date: October 2017.
