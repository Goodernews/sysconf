[1] 2014. Intel 64 and IA-32 Architectures Software Developer’s Manual, Combined Volumes:1,2A,2B,2C,3A,3B and 3C. http://www.intel.com/content/www/us/en/ processors/architectures-software-developer-manuals.html. (2014). version 052, retrieved on Dec 25, 2014.
[2] 2014. Intel Software Guard Extensions Programming Reference. https://software. intel.com/sites/default/files/managed/48/88/329298-002.pdf. (2014). October 2014.
[3] 2017. GnuTLS Release News. http://www.gnutls.org/news.html. (2017). [Online; accessed February-2017].
[4] 2017. GnuTLS Security Advisories. https://www.gnutls.org/security.html. (2017). [Online; accessed February-2017].
[5] 2017. Graphene-SGX. https://github.com/oscarlab/graphene. (2017). [Online; accessed February-2017].
[6] 2017. Intel Software Guard Extensions, Enclave Writer’s Guide, revision: 1.02. (2017). https://software.intel.com/sites/default/files/managed/ae/48/ Software-Guard-Extensions-Enclave-Writers-Guide.pdf, retrieved on May, 2017.
[7] 2017. Intel Software Guard Extensions SSL. https://github.com/01org/ intel-sgx-ssl. (2017). [Online; accessed August-2017].
[8] 2017. mbedTLS-SGX. https://github.com/bl4ck5un/mbedtls- SGX. (2017). [Online; accessed February-2017].
[9] 2017. OpenSSL 1.0.2 Changes. https://www.openssl.org/news/cl102.txt. (2017). [Online; accessed February-2017].
[10] 2017. OpenSSL Vulnerabilities. https://www.openssl.org/news/vulnerabilities. html. (2017). [Online; accessed February-2017].
[11] 2017. The Transport Layer Security (TLS) Protocol Version 1.3, draft-ietf-tls- tls13-latest. (2017). https://tlswg.github.io/tls13-spec/, retrieved on May, 2017.
[12] Nadhem Al Fardan and Kenneth Paterson. 2013. Lucky thirteen: Breaking the
TLS and DTLS record protocols. In 2013 IEEE Symposium on Security and Privacy.
IEEE.
[13] Martin Albrecht and Kenneth Paterson. 2016. Lucky microseconds: A timing
attack on Amazon’s s2n implementation of TLS. In Annual International Con- ference on the Theory and Applications of Cryptographic Techniques. Springer, 622–643.
[14] Frances Allen. 1970. Control flow analysis. In ACM Sigplan Notices, Vol. 5. ACM, 1–19.
[15] José Bacelar Almeida, Manuel Barbosa, Gilles Barthe, and François" Dupres- soir. 2016. Verifiable Side-Channel Security of Cryptographic Implementations: Constant-Time MEE-CBC. In 23rd International Conference on Fast Software En- cryption. Springer Berlin Heidelberg, 163–184.
[16] José Bacelar Almeida, Manuel Barbosa, Gilles Barthe, François Dupressoir, and Michael Emmi. 2016. Verifying Constant-Time Implementations. In USENIX Security Symposium. 53–70.
[17] Ittai Anati, Shay Gueron, Simon Johnson, and Vincent Scarlata. 2013. Innovative technology for CPU based attestation and sealing. In 2nd international workshop on hardware and architectural support for security and privacy, Vol. 13.
[18] Nimrod Aviram, Sebastian Schinzel, Juraj Somorovsky, Nadia Heninger, Maik Dankel, Jens Steube, Luke Valenta, David Adrian, J Alex Halderman, Viktor Dukhovni, et al. 2016. DROWN: breaking TLS using SSLv2. In 25th USENIX Security Symposium (USENIX Security 16).
[19] Romain Bardou, Riccardo Focardi, Yusuke Kawamoto, Lorenzo Simionato, Gra- ham Steel, and Joe-Kai Tsay. 2012. Efficient padding oracle attacks on crypto- graphic hardware. Advances in Cryptology–CRYPTO 2012 (2012), 608–625.
[20] Andrew Baumann, Marcus Peinado, and Galen Hunt. 2015. Shielding applications from an untrusted cloud with haven. ACM Transactions on Computer Systems (TOCS) 33, 3 (2015), 8.
[21] Benjamin Beurdouche, Karthikeyan Bhargavan, Antoine Delignat-Lavaud, Cédric Fournet, Markulf Kohlweiss, Alfredo Pironti, Pierre-Yves Strub, and Jean Karim Zinzindohoue. 2015. A messy state of the union: Taming the composite state machines of TLS. In 2015 IEEE Symposium on Security and Privacy. IEEE, 535–552.
[22] Daniel Bleichenbacher. 1998. Chosen ciphertext attacks against protocols based on the RSA encryption standard PKCS# 1. In Annual International Cryptology Conference. Springer.
[23] Ferdinand Brasser, Urs Müller, Alexandra Dmitrienko, Kari Kostiainen, Srdjan Capkun, and Ahmad-Reza Sadeghi. 2017. Software Grand Exposure: SGX Cache Attacks Are Practical. In 11th USENIX Workshop on Offensive Technologies (WOOT 17). USENIX Association, Vancouver, BC.
[24] Chad Brubaker, Suman Jana, Baishakhi Ray, Sarfraz Khurshid, and Vitaly Shmatikov. 2014. Using Frankencerts for Automated Adversarial Testing of Certificate Validation in SSL/TLS Implementations. In 2014 IEEE Symposium on Security and Privacy. IEEE Computer Society, 114–129.
[25] Brice Canvel, Alain Hiltgen, Serge Vaudenay, and Martin Vuagnoux. 2003. Pass- word Interception in a SSL/TLS Channel. In 23rd Annual International Cryptology Conference on Advances in Cryptology - CRYPTO. Springer Berlin Heidelberg.
[26] Haibo Chen, Fengzhe Zhang, Cheng Chen, Ziye Yang, Rong Chen, Binyu Zang, and Wenbo Mao. 2007. Tamper-resistant execution in an untrusted operating system using a virtual machine monitor. (2007).
[27] Sanchuan Chen, Xiaokuan Zhang, Michael Reiter, and Yinqian Zhang. 2017. Detecting privileged side-channel attacks in shielded execution with Déjá Vu. In 2017 ACM on Asia Conference on Computer and Communications Security. ACM, 7–18.
[28] Xiaoxin Chen, Tal Garfinkel, E Christopher Lewis, Pratap Subrahmanyam, Carl Waldspurger, Dan Boneh, Jeffrey Dwoskin, and Dan R. K. Ports. 2008. Over- shadow: a virtualization-based approach to retrofitting protection in commodity operating systems. In ACM SIGARCH Computer Architecture News, Vol. 36. ACM, 2–13.
[29] Yuting Chen and Zhendong Su. 2015. Guided Differential Testing of Certificate Validation in SSL/TLS Implementations. In 10th Joint Meeting on Foundations of Software Engineering. ACM, 793–804.
[30] Yueqiang Cheng, Xuhua Ding, and R Deng. 2013. Appshield: Protecting appli- cations against untrusted operating system. Singaport Management University Technical Report, SMU-SIS-13 101 (2013).
[31] Jeremy Clark and Paul van Oorschot. 2013. SoK: SSL and HTTPS: Revisiting Past Challenges and Evaluating Certificate Trust Model Enhancements. In 2013 IEEE Symposium on Security and Privacy. IEEE Computer Society.
[32] Victor Costan, Ilia A Lebedev, and Srinivas Devadas. 2016. Sanctum: Minimal Hardware Extensions for Strong Software Isolation. In USENIX Security Sympo- sium. 857–874.
[33] John Criswell, Nathan Dautenhahn, and Vikram Adve. 2014. Virtual Ghost: Protecting Applications from Hostile Operating Systems. In 19th International Conference on Architectural Support for Programming Languages and Operating Systems. ACM.
[34] Joeri De Ruiter and Erik Poll. 2015. Protocol State Fuzzing of TLS Implementa- tions. In USENIX Security, Vol. 15. 193–206.
[35] Tim Dierks. 2008. The transport layer security (TLS) protocol version 1.2. (2008).
[36] Matthew Hoekstra, Reshma Lal, Pradeep Pappachan, Vinay Phegade, and Juan Del Cuvillo. 2013. Using Innovative Instructions to Create Trustworthy Software Solutions. In 2nd International Workshop on Hardware and Architectural Support
for Security and Privacy. ACM.
[37] Owen Hofmann, Sangman Kim, Alan Dunn, Michael Lee, and Emmett Witchel.
2013. Inktag: Secure applications on an untrusted operating system. In ACM
SIGARCH Computer Architecture News, Vol. 41. ACM, 265–278.
[38] Gorka Irazoqui, Mehmet Sinan Inci, Thomas Eisenbarth, and Berk Sunar. 2015. Lucky 13 strikes back. In 10th ACM Symposium on Information, Computer and
Communications Security. ACM, 85–96.
[39] Tibor Jager, Sebastian Schinzel, and Juraj Somorovsky. 2012. Bleichenbacher’s
Attack Strikes again: Breaking PKCS#1 v1.5 in XML Encryption. In 17th European
Symposium on Research in Computer Security. Springer Berlin Heidelberg.
[40] Suman Jana and Vitaly Shmatikov. 2012. Memento: Learning secrets from process
footprints. In 2012 IEEE Symposium on Security and Privacy. IEEE, 143–157.
[41] Leo Kelion. 2016. ‘Thousands of popular sites’ at risk of DROWN hack attacks. http://www.bbc.com/news/technology-35706730. (2016). [Online; accessed
February-2017].
[42] Vlastimil Klima, Ondrej Pokorny`, and Tomáš Rosa. 2003. Attacking RSA-based
sessions in SSL/TLS. In International Workshop on Cryptographic Hardware and
Embedded Systems. Springer, 426–440.
[43] Sangho Lee, Ming-Wei Shih, Prasun Gera, Taesoo Kim, Hyesoon Kim, and Marcus
Peinado. 2016. Inferring fine-grained control flow inside SGX enclaves with
branch shadowing. arXiv preprint arXiv:1611.06952 (2016).
[44] Yanlin Li, Jonathan McCune, James Newsome, Adrian Perrig, Brandon Baker, and Will Drewry. 2014. MiniBox: A Two-way Sandbox for x86 Native Code. In
2014 USENIX Annual Technical Conference.
[45] David Lie, Chandramohan Thekkath, and Mark Horowitz. 2003. Implementing
an Untrusted Operating System on Trusted Hardware. In 19th ACM Symposium
on Operating Systems Principles. ACM.
[46] Chi-Keung Luk, Robert Cohn, Robert Muth, Harish Patil, Artur Klauser, Geoff
Lowney, Steven Wallace, Vijay Janapa Reddi, and Kim Hazelwood. 2005. Pin: building customized program analysis tools with dynamic instrumentation. In Acm sigplan notices, Vol. 40. ACM, 190–200.
[47] James Manger. 2001. A chosen ciphertext attack on RSA optimal asymmet- ric encryption padding (OAEP) as standardized in PKCS# 1 v2. 0. In Annual International Cryptology Conference. Springer, 230–238.
[48] Sinisa Matetic, Mansoor Ahmed, Kari Kostiainen, Aritra Dhar, David Sommer, Arthur Gervais, Ari Juels, and Srdjan Capkun. 2017. ROTE: Rollback Protection for Trusted Execution. IACR Cryptology ePrint Archive 2017 (2017), 48.
[49] Jonathan McCune, Bryan Parno, Adrian Perrig, Michael Reiter, and Hiroshi Isozaki. 2008. Flicker: An execution infrastructure for TCB minimization. In ACM SIGOPS Operating Systems Review, Vol. 42. ACM, 315–328.
[50] Frank McKeen, Ilya Alexandrovich, Alex Berenzon, Carlos Rozas, Hisham Shafi, Vedvyas Shanbhogue, and Uday Savagaonkar. 2013. Innovative instructions and software model for isolated execution. HASP@ ISCA 10 (2013).
[51] Christopher Meyer, Juraj Somorovsky, Eugen Weiss, Jörg Schwenk, Sebastian Schinzel, and Erik Tews. 2014. Revisiting SSL/TLS implementations: New Ble- ichenbacher side channels and attacks. In 23rd USENIX Security Symposium
(USENIX Security 14). 733–748.
[52] Bodo Möller, Thai Duong, and Krzysztof Kotowicz. 2014. This POODLE bites:
exploiting the SSL 3.0 fallback. (2014). https://www.openssl.org/~bodo/ssl-poodle.
pdf .
[53] Nicholas Nethercote and Julian Seward. 2007. Valgrind: a framework for heavy-
weight dynamic binary instrumentation. In ACM Sigplan notices, Vol. 42. ACM,
89–100.
[54] Olga Ohrimenko, Felix Schuster, Cédric Fournet, Aastha Mehta, Sebastian
Nowozin, Kapil Vaswani, and Manuel Costa. 2016. Oblivious Multi-Party Machine
Learning on Trusted Processors. In USENIX Security Symposium. 619–636.
[55] Harish Patil, Cristiano Pereira, Mack Stallcup, Gregory Lueck, and James Cownie. 2010. Pinplay: a framework for deterministic replay and reproducible analysis of parallel programs. In 8th annual IEEE/ACM international symposium on Code
generation and optimization. ACM, 2–11.
[56] Dan R. K. Ports and Tal Garfinkel. 2008. Towards Application Security on
Untrusted Operating Systems. In 3rd Conference on Hot Topics in Security.
[57] Ashay Rane, Calvin Lin, and Mohit Tiwari. 2015. Raccoon: Closing Digital Side-Channels through Obfuscated Execution. In USENIX Security Symposium.
431–446.
[58] Eric Rescorla. 2006. The transport layer security (TLS) protocol version 1.1.
Transport (2006).
[59] Felix Schuster, Manuel Costa, Cédric Fournet, Christos Gkantsidis, Marcus
Peinado, Gloria Mainar-Ruiz, and Mark Russinovich. 2015. VC3: Trustwor- thy data analytics in the cloud using SGX. In 2015 IEEE Symposium on Security and Privacy. IEEE, 38–54.
[60] Michael Schwarz, Samuel Weiser, Daniel Gruss, Clémentine Maurice, and Ste- fan Mangard. 2017. Malware Guard Extension: Using SGX to Conceal Cache Attacks. Springer International Publishing, Cham, 3–24. https://doi.org/10.1007/ 978- 3- 319- 60876- 1_1
[61] Jaebaek Seo, Byounyoung Lee, Seongmin Kim, Ming-Wei Shih, Insik Shin, Dongsu Han, and Taesoo Kim. 2017. SGX-Shield: Enabling address space layout ran- domization for SGX programs. In 2017 Annual Network and Distributed System Security Symposium (NDSS), San Diego, CA.
[62] Ming-Wei Shih, Sangho Lee, Taesoo Kim, and Marcus Peinado. 2017. T-SGX: Eradicating controlled-channel attacks against enclave programs. In 2017 Annual Network and Distributed System Security Symposium (NDSS), San Diego, CA.
[63] Shweta Shinde, Zheng Leong Chua, Viswesh Narayanan, and Prateek Saxena. 2016. Preventing Page Faults from Telling Your Secrets. In 11th ACM Symposium on Information, Computer and Communications Security.
[64] Shweta Shinde, Dat Le Tien, Shruti Tople, and Prateek Saxena. 2017. PANOPLY: Low-TCB Linux Applications With SGX Enclaves. In 2017 Annual Network and Distributed System Security Symposium(NDSS), San Diego, CA.
[65] Rohit Sinha, Manuel Costa, Akash Lal, Nuno Lopes, Sriram Rajamani, Sanjit Seshia, and Kapil Vaswani. 2016. A Design and Verification Methodology for Secure Isolated Regions. In 37th ACM SIGPLAN Conference on Programming Language Design and Implementation. ACM.
[66] Juraj Somorovsky. 2016. Systematic Fuzzing and Testing of TLS Libraries. In ACM SIGSAC Conference on Computer and Communications Security. ACM.
[67] Juraj Somorovsky. 2016. Systematic Fuzzing and Testing of TLS Libraries. In 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, 1492–1504.
[68] Richard Ta-Min, Lionel Litty, and David Lie. 2006. Splitting Interfaces: Making Trust Between Applications and Operating Systems Configurable. In 7th USENIX Symposium on Operating Systems Design and Implementation.
[69] Florian Tramer, Fan Zhang, Huang Lin, Jean-Pierre Hubaux, Ari Juels, and Elaine Shi. 2017. Sealed-glass proofs: Using transparent enclaves to prove and sell knowledge. In 2017 IEEE European Symposium on Security and Privacy. IEEE, 19–34.
[70] Chia-Che Tsai, Kumar Saurabh Arora, Nehal Bandi, Bhushan Jain, William Jannen, Jitin John, Harry Kalodner, Vrushali Kulkarni, Daniela Oliveira, and Donald Porter. 2014. Cooperation and security isolation of library OSes for multi-process applications. In Ninth European Conference on Computer Systems. ACM.
[71] Serge Vaudenay. 2002. Security Flaws Induced by CBC Padding-Applications to SSL, IPSEC, WTLS.... In International Conference on the Theory and Applications of Cryptographic Techniques. Springer, 534–545.
[72] Josef Weidendorfer, Markus Kowarschik, and Carsten Trinitis. 2004. A tool suite for simulation based analysis of memory access behavior. In International Conference on Computational Science. Springer, 440–447.
[73] Yuanzhong Xu, Weidong Cui, and Marcus Peinado. 2015. Controlled-channel attacks: Deterministic side channels for untrusted operating systems. In 2015 IEEE Symposium on Security and Privacy. IEEE, 640–656.
[74] Jisoo Yang and Kang Shin. 2008. Using Hypervisor to Provide Data Secrecy for User Applications on a Per-page Basis. In 4th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (VEE). ACM.
[75] Charles Yount, Harish Patil, Mohammad Islam, and Aditya Srikanth. 2015. Graph- matching-based simulation-region selection for multiple binaries. In Performance
Analysis of Systems and Software (ISPASS), 2015 IEEE International Symposium on.
IEEE, 52–61.
[76] Fan Zhang, Ethan Cecchetti, Kyle Croman, Ari Juels, and Elaine Shi. 2016. Town
crier: An authenticated data feed for smart contracts. In 2016 ACM SIGSAC
Conference on Computer and Communications Security. ACM, 270–282.
[77] Fengzhe Zhang, Jin Chen, Haibo Chen, and Binyu Zang. 2011. CloudVisor: Retrofitting Protection of Virtual Machines in Multi-tenant Cloud with Nested
873
[78] Xiaokuan Zhang, Yuan Xiao, and Yinqian Zhang. 2016. Return-Oriented Flush- Reload Side Channels on ARM and Their Implications for Android Devices. In 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, 858–870.
[79] Yinqian Zhang, Ari Juels, Michael Reiter, and Thomas Ristenpart. 2014. Cross- tenant side-channel attacks in PaaS clouds. In 2014 ACM SIGSAC Conference on Computer and Communications Security. ACM, 990–1003.
