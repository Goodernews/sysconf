[1] Mobile malware report. https://public.gdatasoftware.com/Presse/
Publikationen/Malware Reports/G DATA MobileMWR Q1
2015 US.pdf, 2015.
[2] Yu Feng, Saswat Anand, Isil Dillig, and Alex Aiken. Apposcopy: Semantics-based detection of android malware through
static analysis. In FSE, pages 576–587. ACM, 2014.
[3] Daniel Arp, Michael Spreitzenbarth, Malte Hubner, Hugo Gascon, and Konrad Rieck. DREBIN: Effective and Explainable
Detection of Android Malware in Your Pocket. In NDSS. The
Internet Society, 2014.
[4] Mu Zhang, Yue Duan, Heng Yin, and Zhiruo Zhao. Semanticsaware android malware classification using weighted contextual
API dependency graphs. In CSS, pages 1105–1116. ACM.
[5] Abhijit Bose, Xin Hu, Kang G. Shin, and Taejoon Park. Behavioral detection of malware on mobile handsets. In MobiSys,
pages 225–238. ACM, 2008.
[6] Matt Fredrikson, Somesh Jha, Mihai Christodorescu, Reiner
Sailer, and Xifeng Yan. Synthesizing Near-Optimal Malware
Specifications from Suspicious Behaviors. In Malware, pages
41–50. IEEE Computer Society, 2010.
[7] Yajin Zhou, Zhi Wang, Wu Zhou, and Xuxian Jiang. Hey, you,
get off of my market: Detecting malicious apps in official and
alternative android markets. In NDSS. The Internet Society,
2012.
[8] William Enck, Machigar Ongtang, and Patrick Drew McDaniel.
On lightweight mobile phone application certification. In CSS,
pages 235–245. ACM, 2009.
[9] Kent Griffin, Scott Schneider, Xin Hu, and Tzi-cker Chiueh.
Automatic generation of string signatures for malware detection.
In RAID, pages 101–120. Springer, 2009.
[10] Mihai Christodorescu, Somesh Jha, Sanjit A. Seshia, Dawn Xiaodong Song, and Randal E. Bryant. Semantics-aware malware
detection. In S&P, pages 32–46. IEEE Computer Society, 2005.
[11] Xin Hu, Tzi-cker Chiueh, and Kang G. Shin. Large-scale
malware indexing using function-call graphs. In CSS, pages
611–620. ACM, 2009.
[12] Hugo Gascon, Fabian Yamaguchi, Daniel Arp, and Konrad
Rieck. Structural detection of android malware using embedded
call graphs. In AISEC, pages 45–54. ACM, 2013.
[13] Hao Peng, Christopher S. Gates, Bhaskar Pratim Sarma, Ninghui
Li, Yuan Qi, Rahul Potharaju, Cristina Nita-Rotaru, and Ian
Molloy. Using probabilistic generative models for ranking risks
of android apps. In CSS, pages 241–252. ACM, 2012.
[14] Chao Yang, Zhaoyan Xu, Guofei Gu, Vinod Yegneswaran,
and Phillip A. Porras. Droidminer: Automated mining and
characterization of fine-grained malicious behaviors in android
applications. In ESORICS, pages 163–182. Springer, 2014.
[15] Kai Chen, Peng Wang, Yeonjoon Lee, XiaoFeng Wang, Nan
Zhang, Heqing Huang, Wei Zou, and Peng Liu. Finding
Unknown Malice in 10 Seconds: Mass Vetting for New Threats
at the Google-Play Scale. In USENIX Security, pages 659–674.
USENIX Association, 2015.
[16] Xuxian Jiang.
Security alert: New Android malware –
GoldDream– found in alternative app markets. http://www.csc.
ncsu.edu/faculty/jiang/GoldDream/, 2011.
[17] Chu Min Li and Felip Manyà. MaxSAT, Hard and Soft
Constraints. In Handbook of Satisfiability, volume 185, pages
613–631. IOS Press, 2009.
[18] Joao Marques-Silva, Josep Argelich, Ana Graça, and Inês Lynce.
Boolean lexicographic optimization: algorithms & applications.
Annals of Mathematics and Artificial Intelligence, 62(3-4):317–
343, 2011.
[19] Ruben Martins, Vasco Manquinho, and Inês Lynce. Open-WBO:
A Modular MaxSAT Solver. In SAT, pages 438–445. Springer,
2014.
[20] George Kastrinis and Yannis Smaragdakis. Hybrid contextsensitivity for points-to analysis. In PLDI, pages 423–434.
ACM, 2013.
[21] Yu Feng, Xinyu Wang, Isil Dillig, and Calvin Lin. EXPLORER :
query- and demand-driven exploration of interprocedural control
flow properties. In OOPSLA, pages 520–534. ACM, 2015.
[22] Michael I Gordon, Deokhwan Kim, Jeff H Perkins, Limei
Gilham, Nguyen Nguyen, and Martin C Rinard. Information
flow analysis of android applications in droidsafe. In NDSS.
The Internet Society, 2015.
[23] Android malware genome project.
http://www.
malgenomeproject.org/, 2012.
[24] VirusTotal. https://www.virustotal.com/en/, 2016.
[25] Chih-Chung Chang and Chih-Jen Lin. LIBSVM: A library
for support vector machines. ACM Transactions on Intelligent
Systems and Technology, 2, 2011.
[26] MassVet. https://bdsec.soic.indiana.edu:8080/, 2016.
[27] Proguard. https://www.guardsquare.com/en/proguard, 2016.
[28] DroidSift. https://haven.syr.edu:3000/, 2016.
[29] Young Hee Park, Douglas S. Reeves, Vikram Mulukutla, and
Balaji Sundaravel. Fast malware classification by automated
behavioral graph matching. In CSIIRW, pages 45–48. ACM,
2010.
[30] Mihai Christodorescu, Somesh Jha, and Christopher Kruegel.
Mining specifications of malicious behavior. In FSE, pages 5–
14. ACM, 2007.
[31] Brian Chin, Daniel von Dincklage, Vuk Ercegovac, Peter
Hawkins, Mark S. Miller, Franz Josef Och, Christopher Olston,
and Fernando Pereira. Yedalog: Exploring Knowledge at Scale.
In SNAPL, pages 63–78. LIPICS, 2015.
[32] Michael C. Grace, Yajin Zhou, Qiang Zhang, Shihong Zou,
and Xuxian Jiang. Riskranker: scalable and accurate zero-day
android malware detection. In MobiSys, pages 281–294. ACM,
2012.
[33] Steven Arzt, Siegfried Rasthofer, Christian Fritz, Eric Bodden, Alexandre Bartel, Jacques Klein, Yves Le Traon, Damien
Octeau, and Patrick McDaniel. Precise context, flow, field,
object-sensitive and lifecycle-aware taint analysis for android
apps. In PLDI, pages 259–269. ACM, 2014.
[34] Zhemin Yang, Min Yang, Yuan Zhang, Guofei Gu, Peng Ning,
and Xiaoyang Sean Wang. AppIntent: analyzing sensitive data
transmission in android for privacy leakage detection. In CSS,
pages 1043–1054. ACM, 2013.
[35] Mingyuan Xia, Lu Gong, Yuanhao Lyu, Zhengwei Qi, and Xue
Liu. Effective real-time android application auditing. In S&P,
pages 899–914. IEEE Computer Society, 2015.
[36] William Enck, Peter Gilbert, Byung-Gon Chun, Landon P. Cox,
Jaeyeon Jung, Patrick McDaniel, and Anmol Sheth. Taintdroid:
An information-flow tracking system for realtime privacy monitoring on smartphones. In OSDI, pages 393–407. USENIX
Association, 2010.
[37] Lok-Kwong Yan and Heng Yin. Seamlessly reconstructing the
OS and dalvik semantic views for dynamic android malware
analysis. In USENIX Security, pages 569–584. USENIX Association, 2012.
[38] Long Lu, Zhichun Li, Zhenyu Wu, Wenke Lee, and Guofei
Jiang. CHEX: statically vetting android apps for component
hijacking vulnerabilities. In CSS, pages 229–240. ACM, 2012.
[39] Damien Octeau, Patrick McDaniel, Somesh Jha, Alexandre
Bartel, Eric Bodden, Jacques Klein, and Yves Le Traon. Effective inter-component communication mapping in android: An
essential step towards holistic security analysis. In USENIX
Security, pages 543–558. USENIX Association, 2013.
[40] Dan Caselden, Alex Bazhanyuk, Mathias Payer, Stephen McCamant, and Dawn Song. HI-CFG: construction by binary analysis
and application to attack polymorphism. In ESORICS, pages
164–181. Springer, 2013.
[41] Wei Yang, Xusheng Xiao, Benjamin Andow, Sihan Li, Tao Xie,
and William Enck. AppContext: Differentiating Malicious and
Benign Mobile App Behaviors Using Context. In ICSE, pages
303–313. IEEE Computer Society, 2015.
[42] Astroid. https://utopia-group.github.io/astroid/, 2016.
Smart phone malware: The six worst offenders. http://tinyurl.
com/huaor8y, 2011.
[43] Fake android apps. http://us.norton.com/fake-android-apps/
article, 2016.
