[1] J. Ahn, N. P. Jouppi, C. Kozyrakis, J. Leverich, and R. S. Schreiber,
“Future Scaling of Processor-Memory Interfaces,” in SC’09, 2009.
[2] J. Ahn, S. Li, S. O, and N. P. Jouppi, “McSimA+: A Manycore Simulator with Application-level+ Simulation and Detailed Microarchitecture
Modeling,” in ISPASS, 2013.
[3] A. M. Amin and Z. A. Chishti, “Rank-Aware Cache Replacement and Write Buffering to Improve DRAM Energy Efﬁciency,” in
ACM/IEEE International Symposium on Low-Power Electronics and
Design (ISLPED), 2010.
[4] R. Ausavarungnirun, K. Chang, L. Subramanian, G. Loh, and O. Mutlu,
“Staged Memory Scheduling: Achieving High Performance and Scalability in Heterogeneous Systems,” in ISCA, 2012.
[5] M. Awasthi, D. Nellans, K. Sudan, R. Balasubramonian, and A. Davis,
“Handling the Problems and Opportunities Posed by Multiple On-Chip
Memory Controllers,” in PACT, 2010.
[6] C. Balkesen, J. Teubner, G. Alonso, and M. Ozsu, “Main-Memory Hash
Joins on Multi-Core CPUs: Tuning to the Underlying Hardware,” in
International Conference on Data Engineering (ICDE), 2013.
[7] A. Basu, J. Gandhi, J. Chang, M. D. Hill, and M. M. Swift, “Efﬁcient
Virtual Memory for Big Memory Servers,” in ISCA, 2013.
[8] T. J. Dell, “A White Paper on the Beneﬁts of Chipkill-Correct ECC for
PC Server Main Memory,” IBM Microelectronics Division, 1997.
[9] E. Ebrahimi, R. Miftakhutdinov, C. Fallin, C. J. Lee, J. A. Joao,
O. Mutlu, and Y. N. Patt, “Parallel Application Memory Scheduling,”
in MICRO, 2011.
[10] E. Eiman, L. C. Joo, M. Onur, and P. Y. N, “Fairness via Source
Throttling: A Conﬁgurable and High-Performance Fairness Substrate for
Multi-Core Memory Systems,” in ASPLOS, 2010.
[11] B. Fitzpatrick and A. Vorobey, Memcached: A distributed memory object
caching system, http://memcached.org/, 2011.
[12] J. M. Frailong, W. Jalby, and J. Lenfant, “XOR-Schemes: A Flexible
Data Organization in Parallel Memories,” in International Conference
on Parallel Processing (ICPP), 1985.
[13] N. D. Gulur, R. Manikantan, M. Mehendale, and R. Govindarajan,
“Multiple Sub-Row Buffers in DRAM: Unlocking Performance and
Energy Improvement Opportunities,” in ICS, 2012.
[14] J. L. Henning, “SPEC CPU2006 Memory Footprint,” Computer Architecture News, 2007.
[15] Intel, Intel Xeon Processor 7500 Series Datasheet, Mar 2010.
[16] ——, “Accelerate Big Data Insights with the Intel Xeon Processor E78800/4800 v3 Product Families,” 2013.
[17] B. Jacob, S. Ng, and D. Wang, Memory Systems: Cache, DRAM, Disk.
Morgan Kaufmann Publishers Inc., 2007.
[18] JEDEC, “Graphic Double Data Rate 5 (GDDR5) Speciﬁcation,” 2009.
[19] ——, “DDR4 SDRAM Speciﬁcation,” 2012.
[20] ——, “High Bandwidth Memory (HBM) DRAM,” 2013.
[21] ——, “DDR4 SDRAM Load Reduced DIMM (LRDIMM),” 2014.
[22] ——, “Low Power Double Data Rate 4 (LPDDR4) Speciﬁcation,” 2014.
[23] ——, “Wide I/O 2 Speciﬁcation,” 2014.
[24] S. Jeffrey, K. Dimitris, D. David, H. H. C, and J. L. K, “The Virtual
Write Queue: Coordinating DRAM and Last-Level Cache Policies,” in
ISCA, 2010.
[25] M. K. Jeong, D. H. Yoon, D. Sunwoo, M. Sullivan, I. Lee, and M. Erez,
“Balancing DRAM Locality and Parallelism in Shared Memory CMP
Systems,” in HPCA, 2012.
[26] D. Jung, S. Li, and J. Ahn, “Large Pages on Steroids: Small Ideas
to Accelerate Big Memory Applications,” IEEE Computer Architecture
Letters, vol. 15, no. 2, 2016.

[27] S. W. Keckler, “GPU Computing and the Road to Extreme-scale Parallel
Systems,” in IISWC, 2011.
[28] Y. Kim, V. Seshadri, D. Lee, J. Liu, and O. Mutlu, “A Case for
Exploiting Subarray-Level Parallelism (SALP) in DRAM,” in ISCA,
2012.
[29] A. R. Lebeck, X. Fan, H. Zeng, and C. Ellis, “Power Aware Page
Allocation,” in ASPLOS, 2000.
[30] C. J. Lee, V. Narasiman, E. Ebrahimi, O. Mutlu, and Y. N. Patt,
“DRAM-Aware Last-Level Cache Writeback: Reducing Write-Caused
Interference in Memory Systems,” TR-HPS-2010-002, 2010.
[31] H.-H. S. Lee, G. S. Tyson, and M. K. Farrens, “Eager Writeback - a
Technique for Improving Bandwidth Utilization,” in MICRO, 2000.
[32] S. Li, H. Lim, V. Lee, J. Ahn, A. Kalia, M. Kaminsky, D. Andersen,
S. O, S. Lee, and P. Dubey, “Architecting to Achieve a Billion Requests
Per Second Throughput on a Single Key-Value Store Server Platform,”
in ISCA, 2015.
[33] H. Lim, D. Han, D. G. Andersen, and M. Kaminsky, “MICA: A
Holistic Approach to Fast In-Memory Key-Value Storage,” in USENIX
Symposium on Networked Systems Design and Implementation (NSDI),
2014.
[34] L. Liu, Z. Cui, Y. Li, Y. Bao, M. Chen, and C. Wu, “BPM/BPM+:
Software-based Dynamic Memory Partitioning Mechanisms for Mitigating DRAM Bank-/Channel-Level Interferences in Multicore Systems,”
ACM Transactions on Architecture and Code Optimization (TACO),
2014.
[35] L. Liu, Z. Cui, M. Xing, Y. Bao, M. Chen, and C. Wu, “A Software
Memory Partition Approach for Eliminating Bank-level Interference in
Multicore Systems,” in PACT, 2012.
[36] L. Liu, Y. Li, Z. Cui, Y. Bao, M. Chen, and C. Wu, “Going Vertical in
Memory Management: Handling Multiplicity by Multi-policy,” in ISCA,
2014.
[37] S. P. Muralidhara, L. Subramanian, O. Mutlu, M. Kandemir, and
T. Moscibroda, “Reducing Memory Interference in Multicore Systems
via Application-Aware Memory Channel Partitioning,” in MICRO, 2011.
[38] O. Mutlu and T. Moscibroda, “Parallelism-Aware Batch Scheduling:
Enhancing Both Performance and Fairness of Shared DRAM Systems,”
in ISCA, 2008.
[39] D. Nagaraj, S. Kottapalli, and W.-E. Team, “Westmere-Ex: A 20 Thread
Server CPU,” in Hot Chips, 2010.
[40] G. Narancic, P. Judd, D. Wu, I. Atta, M. Elnacouzi, J. Zebchuk,
J. Albericio, N. E. Jerger, A. Moshovos, K. Kutulakos, and S. Gadelrabi,
“Evaluating the Memory System Behavior of Smartphone Workloads,”
in International Conference on Embedded Computer Systems: Architectures, Modeling, and Simulation (SAMOS), 2014.
[41] C. Niladrish, N. Muralimanohar, R. Balasubramonian, A. Davis, and
N. P. Jouppi, “Staged Reads: Mitigating the Impact of DRAM Writes
on DRAM Reads,” in HPCA, 2012.
[42] J. T. Pawlowski, “Hybrid Memory Cube,” in Hot Chips, Aug 2011.
[43] V. Seshadri, A. Bhowmick, O. Mutlu, P. B. Gibbons, M. A. Kozuch,
and T. C. Mowry, “The Dirty-Block Index,” in ISCA, 2014.
[44] T. Sherwood, E. Perelman, G. Hamerly, and B. Calder, “Automatically
Characterizing Large Scale Program Behavior,” in ASPLOS, Oct 2002.
[45] M. Shevgoor, R. Balasubramonian, N. Chatterjee, and J.-S. Kim, “Addressing Service Interruptions in Memory with Thread-to-Rank Assignment,” in ISPASS, 2016.
[46] A. Sodani, “Knights Landing: 2nd Generation Intel ”Xeon Phi” Prococessor,” in Hot Chips, 2015.
[47] Y. Son, S. O, H. Yang, D. Jung, J. Ahn, J. Kim, J. Kim, and J. W.
Lee, “Microbank: Architecting Through-Silicon Interposer-Based Main
Memory Systems,” in SC’14, 2014.
[48] S. C. Woo, M. Ohara, E. Torrie, J. P. Singh, and A. Gupta, “The
SPLASH-2 Programs: Characterization and Methodological Considerations,” in ISCA, 1995.
[49] D. H. Yoon, M. K. Jeong, and M. Erez, “Adaptive Granularity Memory
Systems: A Tradeoff between Storage Efﬁciency and Throughput,” in
ISCA, 2011.
[50] H. Yun, R. Mancuso, Z. P. Wu, and R. Pellizzoni, “PALLOC: DRAM
Bank-aware Memory Allocator for Performance Isolation on Multicore
Platforms,” in IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS), 2014.
[51] T. Zhang, K. Chen, C. Xu, G. Sun, T. Wang, and Y. Xie, “HalfDRAM: a High-bandwidth and Low-power DRAM Architecture from
the Rethinking of Fine-grained Activation,” in ISCA, 2014.
