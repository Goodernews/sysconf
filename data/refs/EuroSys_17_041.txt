[1] B. Atikoglu, Y. Xu, E. Frachtenberg, S. Jiang, and M. Paleczny.
Workload analysis of a large-scale key-value store. In Proc.
ACM SIGMETRICS’ 12, 2012.

[2] O. Agmon Ben-Yehuda, M. Ben-Yehuda, A. Schuster, and
D. Tsafrir. Deconstructing amazon ec2 spot instance pricing. In
Proc. CloudCom, 2011.

[3] N. Budhiraja, K. Marzullo, F. Schneider, and S. Toueg. The
prtimary-backup approach. In Distributed systems (2nd Ed.),
pages 199-216. ACM Press/Addison-Wesley Publishing Co.,
1993.

[4] M. Burrows. The chubby lock service for loosely-coupled
distributed systems. In Proc. USENIX OSDI, 2006.

[5] L. CHEN, H. TANG, X. LUO, Y. BAI, and Z. ZHANG.
Gain-aware caching scheme based on popularity monitoring
in information-centric networking. IEICE Transactions on
Communications, 2016.

[6] Y. Cheng, A. Gupta, and A. R. Butt. An in-memory object
caching framework with adaptive load balancing. In Proc.
EuroSys, 2015.

[7] G. Cormode and S. Muthukrishnan. An improved data
stream summary: The count-min sketch and its applications.
J. Algorithms, 55(1), 2005.

[8] Ec2 boot time, 2016. http://docs.aws.amazon.com/
AWSEC2/latest/UserGuide/ComponentsAMIs .html.

[9] P. Flajolet. Approximate counting: A detailed analysis. BIT,
25(1), 1985.

[10] A. Gandhi, M. Harchol-Balter, R. Raghunathan, and
M. Kozuch. Autoscale: Dynamic, robust capacity management
for multi-tier data centers. ACM Trans. Comput. Syst., 30(4):14,
2012.

[11] A. Gandhi, T. Zhu, M. Harchol-Balter, and M. A. Kozuch.
Softscale: stealing opportunistically for transient scaling. In
Proc. Middleware, 2012.

[12] R. Gandhi, A. Gupta, A. Povzner, W. Belluomini, and
T. Kaldewey. Mercury: Bringing efficiency to key-value stores.
In Proc. SYSTOR, 2013.

[13] J. He, Y. Wen, J. Huang, and D. Wu. On the cost-QoE
tradeoff for cloud-based video streaming under Amazon EC2’s
pricing models. Circuits and Systems for Video Technology,
IEEE Transactions on, 2014.

[14] Y-J. Hong and M. Thottethodi. Understanding and mitigating
the impact of load imbalance in the memory caching tier. In
Proc. ACM SOCC, 2013.

[15] P. Hunt, M. Konar, F. P. Junqueira, and B. Reed. Zookeeper:
Wait-free coordination for internet-scale systems. In Proc.
USENIX ATC, 2010.

[16] B. Javadi, R. Thulasiramy, and R. Buyya. Statistical modeling
of spot instance prices in public cloud environments. In Proc.
IEEE UCC, 2011.

[17] S. Kang, S. Lee, and Y. Ko. A recent popularity based
dynamic cache management for content centric networking.
In Proc. ICUFN’12, 2012.

[18] Patrick Kennedy. Testing new aws t2 instances with linuxbench benchmark. https://www.servethehome.con/
test ing-aws-t2-instances-1linuxbench-benchmark/,
2014.

[19] S. Khatua and N. Mukherjee. Application-Centric resource
provisioning for amazon EC2 spot instances. In Euro-Par
Parallel Processing. Springer, 2013.

[20] P. Leitner and J. Scheuner. Bursting with Possibilities—An

empirical study of credit-based bursting cloud instance types. In
Proc. IEEE/ACM UCC, 2015.

633

[21] S. Madappa. Ephemeral volatile caching in cloud. http://
techblog.netflix.com/2012/01/ephemeral-volatilecaching-in-cloud.html, 2012.

[22] M. Mao and M. Humphrey. A performance ctudy on the vm
startup time in the cloud. In Proc. IEEE CLOUD, 2012.

[23] A. Marathe, B. Harris, D. K. Lowenthal, B. R. de Supinski,
B Rountree, M. Schulz, and X. Yuan. A comparative study of
high-performance computing on the cloud. In Proc. HPDC’13,
2013.

[24] M. Mattess, C. Vecchiola, and R. Buyya. Managing peak
loads by leasing cloud infrastructure services from a spot market.
In Proc. IEEE HPCC, 2010.

[25] Facebook mcrouter. https://github.com/facebook/
mcrouter.

[26] Nimrod Megiddo and Dharmendra S. Modha. Arc: A selftuning, low overhead replacement cache. In Proc. USENIX
FAST, 2003.

[27] Memcached, 2016. https: //memcached.org/.

[28] Memcached cloud. https://redislabs.com/
memcached-cloud, 2016.

[29] Memcachier. https: //www.memcachier .com/, 2016.
[30] I. Menache, O. Shamir, and N. Jain. On-demand, spot, or

both: Dynamic resource allocation for executing batch jobs in
the cloud. In Proc. IEEE ICAC, 2014.

[31] A. Nhem. Cloudability. https: //blog.cloudability.
com/how-—cost-efficient-—is—-the-new-burstableaws-t2-large/, 2016.

[32] J. Ousterhout, P. Agrawal, D. Erickson, C. Kozyrakis,

J. Leverich, D. Maziéres, S. Mitra, A. Narayanan, G. Parulkar,
M. Rosenblum, S. Rumble, E. Stratmann, and Ryan R. Stutsman.
The case for ramclouds: Scalable high-performance storage
entirely in dram. SIGOPS Oper. Syst. Rev., 43(4), 2010.

[33] R. Raghavendra, P. Ranganathan, V. Talwar, Z. Wang, and.
X. Zhu. No power” struggles: Coordinated multi-level power
management for the data center. In Proc. ACM ASPLOS, 2008.

[34] P. N. Shankaranarayanan, A. Sivakumar, S. Rao, and
M. Tawarmalani. Performance sensitive replication in geodistributed cloud datastores. In Proc. IEEE/IFIP DSN, 2014.

[35] P. Sharma, D. Irwin, and P. Shenoy. How not to bid the cloud.
In USENIX Hotcloud, 2016.

[36] P. Sharma, S. Lee, T. Guo, D. Irwin, and P. Shenoy. Spotcheck:
Designing a derivative iaas cloud on the spot market. In Proc.
Eurosys, 2015.

[37] Z. Shen, S. Subbiah, X. X. Gu, and J. Wilkes. Cloudscale:
Elastic resource scaling for multi-tenant cloud systems. In Proc.
ACM SOCC, 2011.

[38] Y. Song, M. Zafer, and K. Lee. Optimal bidding in spot
instance market. In Proc. of IEEE INFOCOM, 2012.

[39] S. Subramanya, T. Guo, P. Sharma, D. Irwin, and P. Shenoy.
Spoton: A batch computing service for the spot market. In Proc.
ACM SOCC, 2015.

[40] S. Subramanya, A. Rizk, and D. Irwin. Cloud spot markets
are not sustainable: The case for transient guarantees. In Proc.
USENIX Hotcloud, 2016.
[41] S. Tang, J. Yuan, and X-Y. Li. Towards optimal bidding
strategy for amazon ec2 cloud spot instance. In Proc. IEEE
CLOUD, 2012.

[42] G. Urdaneta, G. Pierre, and M. Van Steen. Wikipedia
workload analysis for decentralized hosting. Elsevier Computer
Networks, 53(11):1830-1845, 2009. http://www. globule.
org/publi/WWADH_comnet 2009. html.

[43] B. Urgaonkar, G. Pacifici, P. Shenoy, M. Spreitzer, and
A. Tantawi. An analytical model for multi-tier internet services
and its applications. In Proc. ACM SIGMETRICS, 2005.

[44] B. Urgaonkar, P. Shenoy, A. Chandra, P. Goyal, and T. Wood.
Agile dynamic provisioning of multi-tier internet applications.
ACM TAAS, 3(1), 2008.

[45] R. M. Wallace, V. Turchenko, M. Sheikhalishahi,

I. Turchenko, V. Shults, J. L. Vazquez-Poletti, and L. Grandinetti.
Applications of neural-based spot market prediction for cloud
computing. In Proc. IDAACS, 2013.

[46] W. Wang, B. Li, and B. Liang. To reserve or not to reserve:
Optimal online multi-instance acquisition in iaas clouds. In
Proc. USENIX ICAC, 2013.

[47] J. Wen, L. Lu, G. Casale, and E. Smirni. Less can be more:
Micro-managing vms in amazon EC2. In Proc. IEEE CLOUD,
2015.

[48] A. Wiggins and J. Langston. Enhancing the scalability of
memcached. Intel document, unpublished, http://software. intel.
com/en-us/articles/enhancing-the-scalability-of-memcached,
2012.

[49] Z. Wu, M. Butkiewicz, D. Perkins, E. Katz-Bassett, and H. V.
Madhyastha. Spanstore: Cost-effective geo-replicated storage
spanning multiple cloud services. In Proc. ACM SOSP, 2013.

[50] Z. Xu, C. Stewart, N. Deng, and X. Wang. Blending ondemand and spot instances to lower costs for in-memory storage.
In Proc. IEEE INFOCOM, 2016.

[51] M. Zafer, Y. Song, and K. Lee. Optimal bids for spot vms in
a cloud for deadline constrained jobs. In Proc. IEEE CLOUD,
2012.

[52] W. Zhang, T. Wood, and J. Hwang. Netkv: Scalable, selfmanaging, load balancing as a network function. In Proc. IEEE
ICAC, 2016.

[53] H. Zhao, M. Pan, X. Liu, X. Li, and Y. Fang. Optimal resource
rental planning for elastic applications in cloud market. In Proc.
IEEE IPDPS, 2012.