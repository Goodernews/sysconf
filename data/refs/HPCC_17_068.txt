[1] P. Barham, B. Dragovic, K. Fraser, S. Hand, T. Harris, A. Ho, R. Neugebauer, I. Pratt, and A. Warﬁeld, “Xen and the art of virtualization,” in
ACM SIGOPS operating systems review, vol. 37, no. 5. ACM, 2003,
pp. 164–177.
[2] A. Kivity, Y. Kamay, D. Laor, U. Lublin, and A. Liguori, “kvm: the
linux virtual machine monitor,” in Proceedings of the Linux symposium,
vol. 1, 2007, pp. 225–230.
[3] D. Merkel, “Docker: lightweight linux containers for consistent development and deployment,” Linux Journal, vol. 2014, no. 239, p. 2, 2014.
[4] “Docker customers,” https://www.docker.com/customers.
[5] “Docker swarm,” https://www.docker.com/products/docker-swarm.
[6] “Kubernetes,” http://kubernetes.io/, 2017, [Online; accessed 11December-2016].
[7] V. Valancius, B. Ravi, N. Feamster, and A. C. Snoeren, “Quantifying the
beneﬁts of joint content and network routing,” in ACM SIGMETRICS
Performance Evaluation Review, vol. 41, no. 1. ACM, 2013, pp. 243–
254.
[8] “Netﬂix stealtime solution,” https://www.sciencelogic.com/blog/netﬂixsteals-time-in-the-cloud-and-from-users, 2017.
[9] Y. Koh, R. Knauerhase, P. Brett, M. Bowman, Z. Wen, and C. Pu, “An
analysis of performance interference effects in virtual environments,”
in 2007 IEEE International Symposium on Performance Analysis of
Systems & Software. IEEE, 2007, pp. 200–209.
[10] R. C. Chiang and H. H. Huang, “Tracon: interference-aware scheduling
for data-intensive applications in virtualized environments,” in Proceedings of 2011 International Conference for High Performance Computing,
Networking, Storage and Analysis. ACM, 2011, p. 47.
[11] V. Varadarajan, T. Kooburat, B. Farley, T. Ristenpart, and M. M. Swift,
“Resource-freeing attacks: improve your cloud performance (at your
neighbor’s expense),” in Proceedings of the 2012 ACM conference on
Computer and communications security. ACM, 2012, pp. 281–292.
[12] N. Vasić, D. Novaković, S. Miučin, D. Kostić, and R. Bianchini,
“Dejavu: accelerating resource allocation in virtualized environments,”
in ACM SIGARCH computer architecture news, vol. 40, no. 1. ACM,
2012, pp. 423–436.

[13] D. M. Novakovic, N. Vasic, S. Novakovic, D. Kostic, and R. Bianchini, “Deepdive: Transparently identifying and managing performance
interference in virtualized environments.” in USENIX Annual Technical
Conference, 2013, pp. 219–230.
[14] S. Wang, W. Zhang, T. Wang, C. Ye, and T. Huang, “Vmon: Monitoring
and quantifying virtual machine interference via hardware performance
counter,” in 2015 IEEE 39th Annual Conference on Computer Software
and Applications Conference (COMPSAC), vol. 2. IEEE, 2015, pp.
399–408.
[15] R. Nathuji, A. Kansal, and A. Ghaffarkhah, “Q-clouds: managing
performance interference effects for qos-aware clouds,” in Proceedings
of the 5th European conference on Computer systems. ACM, 2010,
pp. 237–250.
[16] J. Mars, L. Tang, R. Hundt, K. Skadron, and M. L. Soffa, “Bubbleup: Increasing utilization in modern warehouse scale computers via
sensible co-locations,” in Proceedings of the 44th annual IEEE/ACM
International Symposium on Microarchitecture. ACM, 2011, pp. 248–
259.
[17] A. K. Maji, S. Mitra, B. Zhou, S. Bagchi, and A. Verma, “Mitigating interference in cloud services by middleware reconﬁguration,” in
Proceedings of the 15th International Middleware Conference. ACM,
2014, pp. 277–288.
[18] X. Zhang, E. Tune, R. Hagmann, R. Jnagal, V. Gokhale, and J. Wilkes,
“Cpi 2: Cpu performance isolation for shared compute clusters,” in Proceedings of the 8th ACM European Conference on Computer Systems.
ACM, 2013, pp. 379–391.
[19] A. Iosup, N. Yigitbasi, and D. Epema, “On the performance variability
of production cloud services,” in 2011 11th IEEE/ACM International
Symposium on Cluster, Cloud and Grid Computing (CCGrid). IEEE,
2011, pp. 104–113.
[20] T. Palit, Y. Shen, and M. Ferdman, “Demystifying cloud benchmarking,”
in 2016 IEEE International Symposium on Performance Analysis of
Systems and Software (ISPASS), April 2016, pp. 122–132.
[21] D. Gupta, L. Cherkasova, R. Gardner, and A. Vahdat, “Enforcing performance isolation across virtual machines in xen,” in ACM/IFIP/USENIX
International Conference on Distributed Systems Platforms and Open
Distributed Processing. Springer, 2006, pp. 342–362.
[22] A. Shieh, S. Kandula, A. G. Greenberg, and C. Kim, “Seawall: Performance isolation for cloud datacenter networks.” in HotCloud, 2010.
[23] T. Moscibroda and O. Mutlu, “Memory performance attacks: Denial of
memory service in multi-core systems,” in Proceedings of 16th USENIX
Security Symposium on USENIX Security Symposium. USENIX Association, 2007, p. 18.
[24] N. Suzuki, H. Kim, D. De Niz, B. Andersson, L. Wrage, M. Klein,
and R. Rajkumar, “Coordinated bank and cache coloring for temporal
protection of memory accesses,” in 2013 IEEE 16th International
Conference on Computational Science and Engineering (CSE). IEEE,
2013, pp. 685–692.
[25] H. Kim, A. Kandhalu, and R. Rajkumar, “A coordinated approach for
practical os-level cache management in multi-core real-time systems,”
in 2013 25th Euromicro Conference on Real-Time Systems (ECRTS).
IEEE, 2013, pp. 80–89.
[26] Y. Wang, A. Ferraiuolo, D. Zhang, A. C. Myers, and G. E. Suh,
“Secdcp: secure dynamic cache partitioning for efﬁcient timing channel
protection,” in 2016 53nd ACM/EDAC/IEEE Conference on Design
Automation Conference (DAC). IEEE, 2016, pp. 1–6.
[27] Y. Amannejad, D. Krishnamurthy, and B. Far, “Detecting performance
interference in cloud-based web services,” in 2015 IFIP/IEEE International Symposium on Integrated Network Management (IM). IEEE,
2015, pp. 423–431.
[28] N. Rameshan, L. Navarro, E. Monte, and V. Vlassov, “Stay-away,
protecting sensitive applications from performance interference,” in
Proceedings of the 15th International Middleware Conference. ACM,
2014, pp. 301–312.
[29] “Oproﬁle,” http://oproﬁle.sourceforge.net/about/.
[30] V. Weaver, “The unofﬁcial linux perf events web-page (2013),” URl:
http://web. eecs. utk. edu/˜ vweaver1/projects/perf-events.
[31] “Twitter load testing,” https://blog.twitter.com/engineering/en us/a/
2012/building-and-proﬁling-high-performance-systems-with-iago.html.
[32] W. Reese, “Nginx: the high-performance web server and reverse proxy,”
Linux Journal, vol. 2008, no. 173, p. 2, 2008.
[33] “Elgg,” https://elgg.org/.
[34] “Faban,” http://faban.org/.
[35] “Blas,” http://www.netlib.org/blas/.