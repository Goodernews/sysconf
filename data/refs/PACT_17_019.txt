[1] HMC Consortium, http://www.hybridmemorycube.org/technology.html. and Kunle Olukotun. Tradeoffs in transactional memory virtualization. In Proceedings of the 12th International Conference
on Architectural Support for Programming Languages and
[2] Huai, Yiming, et al. Observation of spin-transfer switching
Operating Systems, ASPLOS XII, pages 371–381, New York,
in deep submicron-sized and low-resistance magnetic tunnel
NY, USA, 2006. ACM.
junctions. Applied Physics Letters 84.16: 3118-3120, 2004.
[3] Hydrodynamics Challenge Problem, Lawrence Livermore National Laboratory. Technical Report LLNL-TR-490254.
[4] Jedec
specifications
for
hbm,
jesd235a,
http://www.jedec.org/standards-documents/docs/jesd235a.
[5] Jaume Abella, Antonio González, Xavier Vera, and
Michael FP O’Boyle. Iatac: a smart predictor to turn-off l2
cache lines. ACM Transactions on Architecture and Code
Optimization (TACO), 2(1):55–77, 2005.
[5] Jaume Abella, Antonio Gonzdélez, Xavier Vera, and
Michael FP O’Boyle. Iatac: a smart predictor to turn-off 12
cache lines. ACM Transactions on Architecture and Code
Optimization (TACO), 2(1):55-77, 2005.

[6] AMD. AMD64 Architecture Programmer’s Manual, Volume
2, Revision 3.23.

[7] Amro Awad, Sergey Blagodurov, and Yan Solihin. Writeaware management of nvm-based memory extensions. In
Proceedings of the 2016 International Conference on Supercomputing, ICS *16, pages 9:1-9:12, New York, NY, USA,
2016. ACM.

[8] Y. Bai, Y. Song, M. N. Bojnordi, A. Shapiro, E. G. Friedman,
and E. Ipek. Back to the future: Current-mode processor in
the era of deeply scaled cmos. IEEE Transactions on Very
Large Scale Integration (VLSI) Systems, 24(4):1266-1279,
April 2016.

[9] Y. Bai, Y. Song, M. N. Bojnordi, A. Shapiro, E. G. Friedman,
and E. Ipek. Back to the future: Current-mode processor in
the era of deeply scaled cmos. IEEE Transactions on Very
Large Scale Integration (VLSI) Systems, 24(4):1266-1279,
April 2016.

[10] David H Bailey, Eric Barszcz, John T Barton, David S
Browning, Robert L Carter, Leonardo Dagum, Rod A Fatoohi,
Paul O Frederickson, Thomas A Lasinski, Rob S Schreiber,
et al. The nas parallel benchmarkssummary and preliminary
results. In Proceedings of the 1991 ACM/IEEE conference on
Supercomputing, pages 158-165. ACM, 1991.

[11] Evgeny Bolotin, David Nellans, Oreste Villa, Mike O’Connor,
Alex Ramirez, and Stephen W Keckler. Designing efficient
heterogeneous memory architectures. JEEE Micro, 35(4):6068, 2015.

[12] Christopher Cantalupo, Vishwanath Venkatesan, and Jeff R
Hammond. User extensible heap manager for heterogeneous
memory platforms and mixed memory policies. 2015.

[13] Perry Cheng and Guy E. Blelloch. A parallel, real-time
garbage collector. In Proceedings of the ACM SIGPLAN
2001 Conference on Programming Language Design and
Implementation, PLDI *01, pages 125-136, New York, NY,
USA, 2001. ACM.

alization. In Proceedings of the 12th International Conference
on Architectural Support for Programming Languages and
Operating Systems, ASPLOS XII, pages 371-381, New York,
NY, USA, 2006. ACM.

[15] Rob Crooke and Al Fazio. Intel Non- Volatile Memory Inside.
The Speed of Possibility Outside. In Intel Developer Forum
(IDF), 2015.

[16] D. Dhurjati and V. Adve. Efficiently detecting all dangling
pointer uses in production servers. In International Conference on Dependable Systems and Networks (DSN’06), pages
269-280, June 2006.

[17] Krisztian Flautner, Nam Sung Kim, Steve Martin, David
Blaauw, and Trevor Mudge. Drowsy caches: simple techniques for reducing leakage power. In Proceedings of the 29th
Annual International Symposium on Computer Architecture
(ISCA), 2002, pages 148-157. TEEE, 2002.

[18] Michael Heroux, Douglas Doerfler, Paul Crozier, James Willenbring, Carter Edwards, Alan Williams, Mahesh Rajan,
Eric Keiter, Heidi K Thornquist, and Robert W Numrich.
Improving performance via mini-applications. In Sandia
Report 2009.

[19] Intel. Intel 64 and IA-32 Architectures Software Developer’s
Manual 2012.

[20] Hakbeom Jang, Yongjun Lee, Jongwon Kim, Youngsok Kim,
Jangwoo Kim, Jinkyu Jeong, and Jae W Lee. Efficient footprint caching for tagless dram caches. In Proceedings of IEEE
International Symposium on High Performance Computer
Architecture (HIPCA), 2016, pages 237-248. IEEE, 2016.

[21] Djordje Jevdjic, Gabriel H Loh, Cansu Kaynak, and Babak
Falsafi. Unison cache: A scalable and effective die-stacked
dram cache. In 2014 47th Annual IEEE/ACM International
Symposium on Microarchitecture, pages 25-37. IEEE, 2014.

[22] Stefanos Kaxiras, Zhigang Hu, and Margaret Martonosi.
Cache decay: exploiting generational behavior to reduce
cache leakage power. ACM SIGARCH Computer Architecture
News, 29(2):240-251, 2001.

[23] Mazen Kharbutli and Yan Solihin. Counter-based cache
replacement algorithms. In Proceedings of the 2005 IEEE
International Conference on Computer Design (ICCD), 2005,
pages 61-68. IEEE, 2005.

[24] Nam Sung Kim, Todd Austin, David Blaauw, Trevor Mudge,
Krisztian Flautner, Jie S. Hu, Mary Jane Irwin, Mahmut
Kandemir, and Vijaykrishnan Narayanan. Leakage current:
Moore’s law meets static power. Computer, 36(12):68-75,
December 2003.

[25] Snehasish Kumar, Arrvindh Shriraman, and Naveen Vedula.
Fusion: design tradeoffs in coherent cache hierarchies for
accelerators. In ACM SIGARCH Computer Architecture News,
volume 43, pages 733-745. ACM, 2015.
[26] An-Chow Lai and Babak Falsafi. Selective, accurate, and
timely self-invalidation using last-touch prediction. In Proceedings of the 27th International Symposium on Computer
Architecture (ISCA), 2000, pages 139–148. IEEE, 2000.
[27] Alvin R Lebeck and David A Wood. Dynamic selfinvalidation: Reducing coherence overhead in shared-memory
multiprocessors. In ACM SIGARCH Computer Architecture
News, volume 23, pages 48–59. ACM, 1995.
[28] Benjamin Lee, Engin Ipek, Onur Mutlu, and Doug Burger.
Architecting phase change memory as a scalable dram alternative. In International Symposium on Computer Architecture, 2009.
[29] Yongjun Lee, Jongwon Kim, Hakbeom Jang, Hyunggyun
Yang, Jangwoo Kim, Jinkyu Jeong, and Jae W Lee. A fully
associative, tagless dram cache. In ACM SIGARCH Computer
Architecture News, volume 43, pages 211–222. ACM, 2015.
[30] Z. Li, R. Zhou, and T. Li. Exploring high-performance
and energy proportional interface for phase change memory
systems. In IEEE 19th International Symposium on High
Performance Computer Architecture (HPCA), pages 210–221,
Feb 2013.
[31] Felix Xiaozhu Lin and Xu Liu. Memif: Towards programming
heterogeneous memory asynchronously. In Proceedings of
the Twenty-First International Conference on Architectural
Support for Programming Languages and Operating Systems,
pages 369–383. ACM, 2016.
[32] Haiming Liu, Michael Ferdman, Jaehyuk Huh, and Doug
Burger. Cache bursts: A new approach for eliminating
dead blocks and increasing cache efficiency. In Proceedings
of the 41st Annual IEEE/ACM International Symposium on
Microarchitecture, pages 222–233, 2008.
[33] Mitesh R Meswani, Sergey Blagodurov, David Roberts, John
Slice, Mike Ignatowski, and Gabriel H Loh. Heterogeneous
memory architectures: A hw/sw approach for mixing diestacked and off-package memories. In 2015 IEEE 21st
International Symposium on High Performance Computer
Architecture (HPCA), pages 126–136. IEEE, 2015.
[34] Mitesh R Meswani, Gabriel H Loh, Sergey Blagodurov,
David Roberts, John Slice, and Mike Ignatowski. Toward
efficient programmer-managed two-level memory hierarchies
in exascale computers. In Hardware-Software Co-Design for
High Performance Computing (Co-HPC), 2014, pages 9–16.
IEEE, 2014.
[35] Sang Lyul Min and J-L Baer. Design and analysis of
a scalable cache coherence scheme based on clocks and
timestamps. IEEE Transactions on Parallel and Distributed
Systems, 3(1):25–44, 1992.
[36] Prashant J. Nair, Dae-Hyun Kim, and Moinuddin K. Qureshi.
Archshield: Architectural framework for assisting dram scaling by tolerating high error rates. In Proceedings of the 40th
Annual International Symposium on Computer Architecture,
ISCA ’13, pages 72–83, New York, NY, USA, 2013. ACM.
[37] Mark Oskin and Gabriel H. Loh. A software-managed
approach to die-stacked dram. In PACT, pages 188–200.
IEEE, 2015.
[38] Luiz E Ramos, Eugene Gorbatov, and Ricardo Bianchini.
Page Placement in Hybrid Memory Systems. In Proceedings
of the International Conference on Supercomputing (ICS),
pages 85–95. ACM, 2011.
[39] Vijay Janapa Reddi, Alex Settle, Daniel A Connors, and
Robert S Cohn. Pin: a binary instrumentation tool for
computer architecture research and education. In Proceedings
of the 2004 workshop on Computer architecture education:
held in conjunction with the 31st International Symposium on
Computer Architecture, page 22. ACM, 2004.
[40] Bogdan F Romanescu, Alvin R Lebeck, Daniel J Sorin,
and Anne Bracy. Unified instruction/translation/data (unitd)
coherence: One protocol to rule them all. In Proceedings of
IEEE 16th International Symposium on High Performance
Computer Architecture (HPCA), 2010, pages 1–12. IEEE,
2010.
[41] Jee Ho Ryoo, Karthik Ganesan, Yao-Min Chen, and
Lizy Kurian John. i-mirror: A software managed die-stacked
dram-based memory subsystem. In Proceedings of the 27th
International Symposium on Computer Architecture and High
Performance Computing (SBAC-PAD), 2015, pages 82–89.
IEEE, 2015.
[42] Mohit Saxena and Michael M Swift. FlashVM: virtual
memory management on flash. In Proceedings of the 2010
USENIX conference on USENIX Annual Technical Conference, 2010, pages 14–14. USENIX Association, 2010.
[43] Keun Sup Shim, Myong Hyon Cho, Mieszko Lis, Omer Khan,
and Srinivas Devadas. Library cache coherence. 2011.
[44] Jaewoong Sim, Gabriel H Loh, Vilas Sridharan, and Mike
O’Connor. Resilient die-stacked dram caches. In ACM
SIGARCH Computer Architecture News, volume 41, pages
416–427. ACM, 2013.
[45] Inderpreet Singh, Arrvindh Shriraman, Wilson WL Fung,
Mike O’Connor, and Tor M Aamodt. Cache coherence for
gpu architectures. In Proceedings of IEEE 19th International
Symposium on High Performance Computer Architecture
(HPCA2013), 2013, pages 578–590. IEEE, 2013.
[46] Avinash Sodani. Race to exascale: Opportunities and Challenges. In Keynote at the Annual IEEE/ACM 44th Annual
International Symposium on Microarchitecture.
[47] Stephen Somogyi, Thomas F Wenisch, Nikolaos Hardavellas,
Jangwoo Kim, Anastassia Ailamaki, and Babak Falsafi. Memory coherence activity prediction in commercial workloads.
In Proceedings of the 3rd workshop on Memory performance
issues: in conjunction with the 31st international symposium
on computer architecture, pages 37–45. ACM, 2004.
[48] Andrew S Tanenbaum. Modern operating systems. 2009.
[49] John R Tramm, Andrew R Siegel, Benoit Forget, and Colin
Josey. Performance analysis of a reduced data movement
algorithm for neutron cross section data in monte carlo
simulations. In Solving Software Challenges for Exascale,
pages 39–56. Springer, 2014.
