[1] H. Abbasi, M. Wolf, G. Eisenhauer, S. Klasky, K. Schwan, and
F. Zheng. Datastager: scalable data staging services for petascale
applications. Cluster Computing, 13(3):277–290, 2010.
[2] M. F. Aktas, G. Haldeman, and M. Parashar. Scheduling and ﬂexible
control of bandwidth and in-transit services for end-to-end application workﬂows. Future Generation Computer Systems, 56:284–294,
2016.
[3] N. Ali and M. Lauria. Improving the performance of remote i/o using
asynchronous primitives. In IEEE HPDC, pages 218–228, 2006.
[4] J. Bester, I. Foster, C. Kesselman, J. Tedesco, and S. Tuecke. Gass: A
data movement and access service for wide area computing systems.
In ACM Workshop on I/O in parallel and distributed systems, pages
78–88, 1999.
[5] S. Bharathi, A. Chervenak, E. Deelman, G. Mehta, M.-H. Su, and
K. Vahi. Characterization of scientiﬁc workﬂows. In Workshop on
Workﬂows in Support of Large-Scale Science, pages 1–10, 2008.
[6] V. Bhat, M. Parashar, and S. Klasky. Experiments with in-transit
processing for data intensive grid workﬂows. In IEEE/ACM International Conference on Grid Computing, pages 193–200, 2007.
[7] K. M. Curewitz, P. Krishnan, and J. S. Vitter. Practical prefetching
via data compression. ACM SIGMOD Record, 22(2):257–266, 1993.
[8] J. Dayal, G. Lofstead, K. Schwan, and R. Oldﬁeld. Resilient data
staging through mxn distributed transactions. In Supercomputing
2011 Parallel Data Storage Workshop poster, 2011.
[9] E. Deelman and A. Chervenak. Data management challenges of dataintensive scientiﬁc workﬂows. In IEEE CCGRID, pages 687–692,
2008.
[10] C. Docan, M. Parashar, and S. Klasky. Dataspaces: an interaction
and coordination framework for coupled simulation workﬂows. Cluster Computing, 15(2):163–181, 2012.
[11] R. García, J. P. De Castro, M. J. Verdú, et al. A cache replacement
policy based on neural networks applied to web map tile caching. In
Intl. Conf. on Internet Computing, 2011.
[12] S. Hemminger et al. Network emulation with netem. In 6th Australia’s national Linux conference (LCA2005), pages 18–23, 2005.
[13] H. Khalid and M. S. Obaidat. Application of neural networks to
cache replacement. Neural computing & applications, 8(3):246–256,
1999.
[14] S. Klasky, H. Abbasi, J. Logan, M. Parashar, K. Schwan, et al. In situ
data processing for extreme-scale computing. Scientiﬁc Discovery
through Advanced Computing Program (SciDAC’11), 2011.
[15] P. Krishnan and J. S. Vitter. Optimal prediction for prefetching
in the worst case. SIAM Journal on Computing, 27(6):1617–1636,
1998.
[16] J. Lee, J. Kim, C. Kessel, and F. Poli. Simulation study of disruption
characteristics in kstar. In APS Meeting Abstracts, volume 1, page
8047P, 2012.
[17] T. M. Madhyastha, D. Reed, et al. Learning to classify parallel
input/output access patterns. IEEE Transactions on Parallel and
Distributed Systems, 13(8):802–813, 2002.
[18] R. Manikantan, R. Govindarajan, and K. Rajan. Extended histories:
improving regularity and performance in correlation prefetchers. In
ACM Intl. Conf. on High Performance and Embedded Architectures
and Compilers, pages 67–76, 2011.
[19] H. M. Monti, A. R. Butt, and S. S. Vazhkudai. Just-in-time staging of
large input data for supercomputing jobs. In Petascale Data Storage
Workshop, pages 1–5, 2008.
[20] M. Palmer and S. B. Zdonik. Fido: A cache that learns to fetch.
Brown University, Department of Computer Science, 1991.
[21] R. Prabhakar, S. S. Vazhkudai, Y. Kim, A. R. Butt, M. Li, and
M. Kandemir. Provisioning a multi-tiered data staging area for
extreme-scale machines. In IEEE ICDCS, pages 1–12, 2011.
[22] M. Sakr, S. P. Levitan, D. M. Chiarulli, B. G. Horne, and C. L.
Giles. Predicting multiprocessor memory access patterns with learning models. In ICML, pages 305–312, 1997.
[23] C. Schmidt and M. Parashar. Squid: Enabling search in dht-based
systems. Journal of Parallel and Distributed Computing, 68(7):962–
975, 2008.
[24] I. Stoica, R. Morris, D. Karger, M. F. Kaashoek, and H. Balakrishnan. Chord: A scalable peer-to-peer lookup service for internet
applications. ACM SIGCOMM Computer Communication Review,
31(4):149–160, 2001.
[25] J. S. Vitter and P. Krishnan. Optimal prefetching via data compression. Journal of the ACM (JACM), 43(5):771–793, 1996.
[26] F. Zhang, S. Lasluisa, T. Jin, I. Rodero, H. Bui, and M. Parashar.
In-situ feature-based objects tracking for large-scale scientiﬁc simulations. In SC Companion: High Performance Computing, Networking, Storage and Analysis (SCC), 2012, pages 736–740, 2012.
[27] L. Zhang, C. Docan, and M. Parashar. The seine data coupling framework for parallel scientiﬁc applications. Advanced Computational
Infrastructures for Parallel and Distributed Adaptive Applications,
page 283, 2010.
[28] F. Zheng, H. Abbasi, C. Docan, J. Lofstead, Q. Liu, S. Klasky,
M. Parashar, N. Podhorszki, K. Schwan, and M. Wolf. Predata–
preparatory data analytics on peta-scale machines. In IEEE IPDPS,
pages 1–12, 2010.
[29] J. Ziv and A. Lempel. Compression of individual sequences via
variable-rate coding. IEEE Transactions on Information Theory,
24(5):530–536, 1978.
