[1] http://rocksdb.org.

[2] http://leveldb.org.
[3] https://github.com/google/leveldb.
[4] https://github.com/facebook/rocksdb /wiki/
Features- Not-in-LevelDB.
[5] https://github.com/facebook/rocksdb.
[6] G. J. Chen, J. L. Wiener, S. Iyer, A. Jaiswal, R. Lei,
N. Simha, W. Wang, K. Wilfong, T. Williamson, and
S. Yilmaz, “Realtime data processing at Facebook,” in
Proc. Intl. Conf. on Management of Data, 2016, pp.
1087-1098.
[7| A. Sharma, “Blog post: Dragon: a distributed graph
query engine,”
https: //code.facebook.com/posts/1737605303120405 /
dragon-a-distributed-graph-query-engine/, 2016.
[8] https: //www.mongodb.com.
[9] https: //yahooeng.tumblr.com/post /120730204806/
sherpa-scales-new- heights.
[10] https://www.youtube.com/watch?v=plqVp_OnSzg.
[11] http://techblog.netflix.com/2016/05/
application-data-caching-using-ssds. html.
[12] http://opencompute.org.
[13] M. Athanassoulis, M. S. Kester, L. M. Maas,
R. Stoica, S. Idreos, A. Ailamaki, and M. Callaghan,

“Designing access methods: the RUM conjecture,” in
Proc. Intl. Conf. on Extending Database Technology
(EDBT), 2016.

[14] P. O’Neil, E. Cheng, D. Gawlick, and E. O’Neil, “The
log-structured merge-tree (LSM-tree),” Acta
Informatica, vol. 33, no. 4, pp. 351-385, 1996.

[15] F. Chang, J. Dean, S. Ghemawat, W. C. Hsieh, D. A.
Wallach, M. Burrows, T. Chandra, A. Fikes, and R. E.
Gruber, “BigTable: A distributed storage system for
structured data,” ACM Trans. on Computer Systems
(TOCS), vol. 26, no. 2, p. 4, 2008.

[16] A. Lakshman and P. Malik, “Cassandra: a
decentralized structured storage system,” ACM
SIGOPS Operating Systems Review, vol. 44, no. 2, pp.
35-40, 2010.

[17] A. S. Aiyer, M. Bautin, G. J. Chen, P. Damania,

P. Khemani, K. Muthukkaruppan, K. Ranganathan,
N. Spiegelberg, L. Tang, and M. Vaidya, “Storage
infrastructure behind Facebook messages: Using
HBase at scale.” IEEE Data Eng. Bull., vol. 35, no. 2,
pp. 4-13, 2012.

[18] P. A. Bernstein, S. Das, B. Ding, and M. Pilman,
“Optimizing optimistic concurrency control for
tree-structured, log-structured databases,” in Proc.
2015 ACM SIGMOD Inil. Conf. on Management of
Data, 2015, pp. 1295-1309.

[19] H. Lim, D. G. Andersen, and M. Kaminsky, “Towards
accurate and fast evaluation of multi-stage
log-structured designs,” in 14th USENIX Conf. on File
and Storage Technologies (FAST 16), Feb. 2016, pp.
149-166.

[20] R. Sears and R. Ramakrishnan, “bLSM: a general
purpose log structured merge tree,” in Proc. 2012
ACM SIGMOD Inil. Conf. on Management of Data,
2012, pp. 217-228.

[21] H. T. Vo, S. Wang, D. Agrawal, G. Chen, and B. C.
Ooi, “LogBase: a scalable log-structured database
system in the cloud,” Proc. of the VLDB Endowment,
vol. 5, no. 10, pp. 1004-1015, 2012.

[22] P. Wang, G. Sun, S. Jiang, J. Ouyang, 8. Lin,

C. Zhang, and J. Cong, “An efficient design and
implementation of LSM-tree based key-value store on
open-channel SSD,” in Proc. 9th European Conf. on
Computer Systems. ACM, 2014, p. 16.

[23] T. Hobbs, “Blog post: When to use leveled
compaction,” http: //www.datastax.com/dev/blog/
when-to-use-leveled-compaction, june 2012.

[24] A. C.-C. Yao, “On random 2—3 trees,” Acta Inf.,
vol. 9, no. 2, pp. 159-170, Jun. 1978.

[25] T. G. Armstrong, V. Ponnekanti, D. Borthakur, and
M. Callaghan, “LinkBench: A database benchmark
based on the Facebook Social Graph,” in Proc. 2013
ACM SIGMOD Inil. Conf. on Management of Data,
2013, pp. 1185-1196.

[26] I. Tokutek, “TokuDB: MySQL performance, MariaDB
performance,” http:

/ /www.tokutek.com/products/tokudb-for-mysq|/,
2013.
