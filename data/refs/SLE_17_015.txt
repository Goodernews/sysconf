[1] Martin Bravenboer and Yannis Smaragdakis. 2009. Strictly declarative

specification of sophisticated points-to analyses. In Proceedings of the

24th Annual ACM SIGPLAN Conference on Object-Oriented Programming,

Systems, Languages, and Applications, OOPSLA 2009, Shail Arora and

Jeff Smits and Eelco Visser



[2] Gary T. Leavens (Eds.). ACM, 243-262. DOI: http://dx.doi.org/10.1145/

1640089.1640108



[3] Martin Bravenboer, Arthur van Dam, Karina Olmos, and Eelco Visser.

2006. Program Transformation with Scoped Dynamic Rewrite

Rules. Fundamenta Informaticae 69, 1-2 (2006), 123-178. DOI:

http://dx.doi.org/openurl.asp?genre=article&amp;issn=0169-2968&

amp;volume=69&amp;issue=1&amp;spage=123



[4] Torbj6rn Ekman and Go6rel Hedin. 2007. The JastAdd system - modular

extensible compiler construction. Science of Computer Programming 69,

1-3 (2007), 14-26. DOL: http://dx.doi.org/10.1016/j.scico.2007.02.003



[5] J. Gosling, B. Joy, G. Steele, and G. Bracha. 2005. The Java Language Specification (third edition ed.). Prentice Hall PTR, Boston, Mass.



[6] Gérel Hedin. 2000. Reference Attributed Grammars. Informatica (Slovenia)

24, 3 (2000).



[7] Mark Hills. 2014. Streamlining Control Flow Graph Construction with

DCFlow. In Software Language Engineering - 7th International Conference,

SLE 2014, Visteras, Sweden, September 15-16, 2014. Proceedings (Lecture

Notes in Computer Science), Benoit Combemale, David J. Pearce, Olivier

Barais, and Jurgen J. Vinju (Eds.), Vol. 8706. Springer, 322-341. DOI:

http://dx.doi.org/10.1007/978- 3-319-11245-9_ 18



[8] Sungpack Hong, Hassan Chafi, Eric Sedlar, and Kunle Olukotun. 2012. GreenMarl: a DSL for easy and efficient graph analysis. In Proceedings of the

17th International Conference on Architectural Support for Programming

Languages and Operating Systems, ASPLOS 2012, London, UK, March 37, 2012, Tim Harris and Michael L. Scott (Eds.). ACM, 349-362. DOI:

http://dx.doi.org/10.1145/2150976.215 1013



[9] Susan Horwitz, Alan J. Demers, and Tim Teitelbaum. 1987. An Efficient

General Iterative Algorithm for Dataflow Analysis. Acta Informatica 24,

6 (1987), 679-694,



[10] Martin Jourdan and Didier Parigot. 1990. Techniques for Improving Grammar Flow Analysis. In ESOP 90, 3rd European Symposium on Programming,

Copenhagen, Denmark, May 15-18, 1990, Proceedings (Lecture Notes in

Computer Science), Neil D. Jones (Ed.), Vol. 432. Springer, 240-255.



[11] John B. Kam and Jeffrey D. Ullman. 1976. Global Data Flow Analysis and

Iterative Algorithms. 7, ACM 23, 1 (1976), 158-171. DOL: http://dx.doi.

org/10.1145/321921.321938



[12] John B. Kam and Jeffrey D. Ullman. 1977. Monotone Data Flow Analysis

Frameworks. Acta Informatica 7 (1977), 305-317.



[13] Lennart C. L. Kats, Anthony M. Sloane, and Eelco Visser. 2009. Decorated Attribute Grammars: Attribute Evaluation Meets Strategic Programming. In Compiler Construction, 18th International Conference, CC

2009, Held as Part of the Joint European Conferences on Theory and

Practice of Software, ETAPS 2009, York, UK, March 22-29, 2009. Proceedings (Lecture Notes in Computer Science), Oege de Moor and Michael I.

Schwartzbach (Eds.), Vol. 5501. Springer, 142-157. DOI: http://dx.doi.org/

10.1007/978-3-642-00722-4_11



[14] Lennart C. L. Kats and Eelco Visser. 2010. The Spoofax language workbench:

rules for declarative specification of languages and IDEs. In Proceedings

of the 25th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2010, William R.

Cook, Siobhan Clarke, and Martin C. Rinard (Eds.). ACM, Reno/Tahoe,

Nevada, 444-463, DOL: http://dx.doi.org/10.1145/1869459.1869497



[15] Gary A. Kildall. 1973. A Unified Approach to Global Program Optimization.

In POPL. 194-206.



[16] Paul Klint, Tijs van der Storm, and Jurgen J. Vinju. 2009. EASY Metaprogramming with Rascal. In Generative and Transformational Techniques

in Software Engineering II - International Summer School, GTTSE 2009,

Braga, Portugal, July 6-11, 2009. Revised Papers (Lecture Notes in Computer Science), Joao M. Fernandes, Ralf Lammel, Joost Visser, and Joao

Saraiva (Eds.), Vol. 6491. Springer, 222-289. DOL: http://dx.doi.org/10.

1007/978-3-642- 18023-1_6



[17] Donald E. Knuth. 1968. Semantics of Context-Free Languages. Theory Comput. Syst. 2, 2 (1968), 127-145. DOL: http://dx.doi.org/content/

m2501m07m4666813/

FLowSpec: Declarative Dataflow Analysis Specification



[18] Gabriél D. P. Konat, Lennart C. L. Kats, Guido Wachsmuth, and Eelco Visser.

2012, Declarative Name Binding and Scope Rules. In Software Language

Engineering, 5th International Conference, SLE 2012, Dresden, Germany,

September 26-28, 2012, Revised Selected Papers (Lecture Notes in Computer

Science), Krzysztof Czarnecki and Gérel Hedin (Eds.), Vol. 7745. Springer,

311-331. DOL: http://dx.doi.org/10.1007/978-3-642-36089-3_18



[19] Magnus Madsen, Ming-Ho Yee, and Ondrej Lhotak. 2016. From Datalog to

flix: a declarative language for fixed points on lattices. In Proceedings of

the 37th ACM SIGPLAN Conference on Programming Language Design

and Implementation, PLDI 2016, Santa Barbara, CA, USA, June 13-17,

2016, Chandra Krintz and Emery Berger (Eds.). ACM, 194-208. DOL:

http://dx.doi.org/10.1145/2908080.2908096



[20] Eva Magnusson, Torbjorn Ekman, and Gorel Hedin. 2007. Extending Attribute Grammars with Collection Attributes—Evaluation and Applications. Source Code Analysis and Manipulation, IEEE International Workshop on 0 (2007). DOI : http://dx.doi.org/10.1109/SCAM.2007.13



[21] Eva Magnusson and Gérel Hedin. 2007. Circular reference attributed grammars - their evaluation and applications. Science of Computer Programming 68, 1 (2007), 21-37. DOL: http://dx.doi.org/10.1016/j.scico.2005.06.

005



[22] Flemming Nielson, Hanne Riis Nielson, and Chris Hankin. 2005. Principles

of program analysis (2. corr. print). Springer. DOL: http://dx.doi.org/

computer/theoretical+computer+science/book/978- 3-540-65410-0



[23] Pierre Néron, Andrew P. Tolmach, Eelco Visser, and Guido Wachsmuth.

2015. A Theory of Name Resolution. In Programming Languages and

Systems - 24th European Symposium on Programming, ESOP 2015, Held as

Part of the European Joint Conferences on Theory and Practice of Software,

ETAPS 2015, London, UK, April 11-18, 2015. Proceedings (Lecture Notes in

Computer Science), Jan Vitek (Ed.), Vol. 9032. Springer, 205-231. DOL:

http://dx.doi.org/10.1007/978-3-662-46669-8 9



[24] Anthony M. Sloane, Matthew Roberts, and Leonard G. C. Hamey. 2014.

Respect Your Parents: How Attribution and Rewriting Can Get Along. In

Software Language Engineering - 7th International Conference, SLE 2014,

Vésteras, Sweden, September 15-16, 2014. Proceedings (Lecture Notes in

Computer Science), Benoit Combemale, David J. Pearce, Olivier Barais,

and Jurgen J. Vinju (Eds.), Vol. 8706. Springer, 191-210. DOL: http://dx.

doi.org/10.1007/978-3-319-11245-9_11



[25] Yannis Smaragdakis and George Balatsouras. 2015. Pointer Analysis. Foundations and Trends in Programming Languages 2, 1 (2015), 1-69. DOI:

http://dx.doi.org/10.1561/2500000014



[26] 231



[27] SLE’17, October 23-24, 2017, Vancouver, Canada



[28] Jeff Smits. 2016. The Static Semantics of the Green-Marl Graph Analysis Language. Master’s thesis. Delft University of Technology. Advisor(s) Guido Wachsmuth. Available at http://resolver.tudelft.nl/uuid:

4f07cbbb-d0 17-41e8-aba6-8ff0c19f258d.



[29] Tamas Szabd, Simon Alperovich, Markus V6lter, and Sebastian Erdweg.

2016a. An extensible framework for variable-precision data-flow analyses

in MPS. In Proceedings of the 31st IEEE/ACM International Conference

on Automated Software Engineering, ASE 2016, Singapore, September 3-7,

2016, David Lo, Sven Apel, and Sarfraz Khurshid (Eds.). ACM, 870-875.

DOI: http://dx.doi.org/10.1145/2970276.2970296



[30] Tamas Szabé, Sebastian Erdweg, and Markus Vélter. 2016b. IncA: a DSL for

the definition of incremental program analyses. In Proceedings of the 31st

IEEE/ACM International Conference on Automated Software Engineering,

ASE 2016, Singapore, September 3-7, 2016, David Lo, Sven Apel, and Sarfraz

Khurshid (Eds.). ACM, 320-331. DOL: http://dx.doi.org/10.1145/2970276.

2970298



[31] Emma Séderberg, Torbjérn Ekman, Gérel Hedin, and Eva Magnusson. 2013.

Extensible intraprocedural flow analysis at the abstract syntax tree level.

Science of Computer Programming 78, 10 (2013), 1809-1827. DOI: http:

//dx.doi.org/10.1016/j.scico.2012.02.002



[32] Hendrik van Antwerpen, Pierre Néron, Andrew P. Tolmach, Eelco Visser,

and Guido Wachsmuth. 2016. A constraint language for static semantic

analysis based on scope graphs. In Proceedings of the 2016 ACM SIGPLAN



[33] Workshop on Partial Evaluation and Program Manipulation, PEPM 2016, St.

Petersburg, FL, USA, January 20 - 22, 2016, Martin Erwig and Tiark Rompf



[34] (Eds.). ACM, 49-60. DOL : http://dx.doi.org/10.1145/2847538.2847543



[35] Eelco Visser, Guido Wachsmuth, Andrew P. Tolmach, Pierre Néron, Vlad A.

Vergu, Augusto Passalaqua, and Gabriél D. P. Konat. 2014. A Language Designer’s Workbench: A One-Stop-Shop for Implementation

and Verification of Language Designs. In Onward! 2014, Proceedings of

the 2014 ACM International Symposium on New Ideas, New Paradigms,

and Reflections on Programming & Software, part of SPLASH ’14, Portland,

OR, USA, October 20-24, 2014, Andrew P. Black, Shriram Krishnamurthi,

Bernd Bruegge, and Joseph N. Ruskiewicz (Eds.). ACM, 95-111. DOI:

http://dx.doi.org/10.1145/2661136.2661149



[36] Harald Vogt, S. Doaitse Swierstra, and Matthijs F. Kuiper. 1989. HigherOrder Attribute Grammars. In PLDI. 131-145.



[37] Eric Van Wyk, Derek Bodin, Jimin Gao, and Lijesh Krishnan. 2010. Silver: An

extensible attribute grammar system. Science of Computer Programming

75, 1-2 (2010), 39-54. DOI : http://dx.doi.org/10. 1016/j.scico.2009.07.004
