[1] Carl A Waldspurger. Memory resource management in vmware esx server. ACM SIGOPS Operating Systems Review, 36(SI):181–194, 2002.
[2] Michael R Hines and Kartik Gopalan. Post-copy
based live virtual machine migration using adaptive pre-paging and dynamic self-ballooning. In
Proceedings of the 2009 ACM SIGPLAN/SIGOPS
[3] Kai-Yuan Hou, Kang G Shin, and Jan-Lung Sung.
Application-assisted live migration of virtual ma-
chines with java applications. In Proceedings of the
Tenth European Conference on Computer Systems,
page 15. ACM, 2015.
[4] Docker. http://www.docker.com/.
[5] CoreOS. https://coreos.com/rkt/.
[6] CloudFoundry.
https://github.com/
cloudfoundry/warden.
[7] Amazon EC2 Container Service. https://aws.
amazon.com/ecs/.
[8] Container Engine.
https://cloud.google.
com/container-engine/.
[9] Yennun Huang and Chandra Kintala. Software implemented fault tolerance: Technologies and experience. In FTCS, volume 23, pages 2–9. IEEE
COMPUTER SOCIETY PRESS, 1993.
[10] Giovanni Toffetti, Sandro Brunner, Martin
Blöchlinger, Josef Spillner, and Thomas Michael
Bohnert. Self-managing cloud-native applications:
Design, implementation, and experience. Future
Generation Computer Systems, 2016.
[11] Kubernetes.
Downward api.
https:
//kubernetes.io/docs/user-guide/
downward-api/.
[12] Kubernetes.
Container lifecycle hooks.
https://kubernetes.io/docs/user-guide/
container-environment/.
[13] Michael McCandless .
Lucene and fadvise/madvise. http://blog.mikemccandless.com/
2010/06/lucene-and-fadvisemadvise.html.
[14] Greg Bowyer. Solr / Lucene madvise performance
?
http://people.apache.org/~gbowyer/
madvise-perf/.

[15] google-perftools@googlegroups.com.
Google
Performance Tools system alloc in MoongoDB.
https://github.com/mongodb/mongo/tree/
master/src/third_party/gperftools-2.5.
[16] Don Burleson. Using direct I/O with Oracle.
http://www.dba-oracle.com/art_orafaq_
oracle_direct_io.htm.

[17] MySQL.
Optimizing InnoDB Disk I/O.
https://dev.mysql.com/doc/refman/5.
5/en/optimizing-innodb-diskio.html.
[18] Tobias Oetiker. Tuning RRDtool for performance.
http://oss.oetiker.ch/rrdtool-trac/
wiki/TuningRRD.

[19] Hadoop HDFS. Add HDFS support for fadvise
readahead and drop-behind. https://issues.
apache.org/jira/browse/HDFS-2465.
[20] NFSv4 Working Group: D. Hildebrand, T. Myklebust, S. Falkner. Support for posix fadvise.
http://www.potaroo.net/ietf/idref/
draft-hildebrand-nfsv4-fadvise/.

[21] James Coomer.
Lustre File System Acceleration Using Server or Storage-Side
Caching.
http://www.opensfs.org/wpcontent/uploads/2014/04/D2 S27 LustreFileSystem
AccelerationUsingServerorStorageSideCaching.pdf.

[22] Khalid Alhamazani, Rajiv Ranjan, Fethi Rabhi,
Lizhe Wang, and Karan Mitra. Cloud monitoring
for optimizing the qos of hosted applications. In
Cloud Computing Technology and Science (CloudCom), 2012 IEEE 4th International Conference on,
pages 765–770. IEEE, 2012.

[23] Qinghua Lu, Xiwei Xu, Liming Zhu, Len Bass,
Zhanwen Li, Sherif Sakr, Paul L Bannerman,
and Anna Liu. Incorporating uncertainty into incloud application deployment decisions for availability. In Cloud Computing (CLOUD), 2013 IEEE
Sixth International Conference on, pages 454–461.
IEEE, 2013.

[24] J Yang, T Yu, LR Jian, J Qiu, and Y Li. An extreme automation framework for scaling cloud applications. IBM Journal of Research and Development, 55(6):8–1, 2011.

[25] Hanieh Alipour, Yan Liu, and Abdelwahab HamouLhadj. Analyzing auto-scaling issues in cloud environments. In Proceedings of 24th Annual International Conference on Computer Science and Software Engineering, pages 75–89. IBM Corp., 2014.

[26] Jerome H Saltzer, David P Reed, and David D
Clark. End-to-end arguments in system design.
ACM Transactions on Computer Systems (TOCS),
2(4):277–288, 1984.

[27] Sitaram Iyer, Juan Navarro, and Peter Druschel.
Application-assisted physical memory management. Technical report, Citeseer, 2004.
7

[28] Kai-Yuan Hou, Kang G Shin, and Jan-Lung Sung.
Application-assisted live migration of virtual machines with java applications. In Proceedings of the
Tenth European Conference on Computer Systems,
page 15. ACM, 2015.
[29] Ripal Nathuji, Aman Kansal, and Alireza Ghaffarkhah. Q-clouds: managing performance interference effects for qos-aware clouds. In Proceedings of the 5th European conference on Computer
systems, pages 237–250. ACM, 2010.
[30] Michael R Hines, Abel Gordon, Marcio Silva,
Dilma Da Silva, Kyung Ryu, and Muli BenYehuda. Applications know best: Performancedriven memory overcommit with ginkgo. In Cloud
Computing Technology and Science (CloudCom),
2011 IEEE Third International Conference on,
pages 130–137. IEEE, 2011.
[31] Jin Heo, Xiaoyun Zhu, Pradeep Padala, and Zhikui
Wang. Memory overbooking and dynamic control of xen virtual machines in consolidated environments. In Integrated Network Management,
2009. IM’09. IFIP/IEEE International Symposium
on, pages 630–637. IEEE, 2009.
[32] Mosharaf Chowdhury, Srikanth Kandula, and Ion
Stoica. Leveraging endpoint flexibility in dataintensive clusters. In ACM SIGCOMM Computer
Communication Review, volume 43, pages 231–
242. ACM, 2013.
[33] Ming Mao and Marty Humphrey. Auto-scaling to
minimize cost and meet application deadlines in
cloud workflows. In High Performance Computing,
Networking, Storage and Analysis (SC), 2011 International Conference for, pages 1–12. IEEE, 2011.
[34] Rui Han, Moustafa M Ghanem, Li Guo, Yike Guo,
and Michelle Osmond. Enabling cost-aware and
adaptive elasticity of multi-tier cloud applications.
Future Generation Computer Systems, 32:82–98,
2014.
[35] Zhenhuan Gong, Xiaohui Gu, and John Wilkes.
Press: Predictive elastic resource scaling for cloud
systems. In Network and Service Management
(CNSM), 2010 International Conference on, pages
9–16. Ieee, 2010.


[36] Alexandru-Florian Antonescu and Torsten Braun.
Improving management of distributed services using correlations and predictions in sla-driven cloud
computing systems. In Network Operations and
Management Symposium (NOMS), 2014 IEEE,
pages 1–8. IEEE, 2014.

[37] Sadeka Islam, Jacky Keung, Kevin Lee, and Anna
Liu. Empirical prediction models for adaptive resource provisioning in the cloud. Future Generation Computer Systems, 28(1):155–162, 2012.
[38] Zhikui Wang, Yuan Chen, Daniel Gmach, Sharad
Singhal, Brian J Watson, Wilson Rivera, Xiaoyun Zhu, and Chris D Hyser.
Appraise:
application-level performance management in virtualized server environments. IEEE Transactions
on Network and Service Management, 6(4), 2009.
[39] Gregory Katsaros, George Kousiouris, Spyridon V
Gogouvitis, Dimosthenis Kyriazis, Andreas Menychtas, and Theodora Varvarigou. A self-adaptive hierarchical monitoring mechanism for clouds. Journal of Systems and Software, 85(5):1029–1041,
2012.
[40] José E Moreira and Vijay K Naik. Dynamic resource management on distributed systems using
reconfigurable applications. IBM Journal of Research and Development, 41(3):303–330, 1997.
[41] ClusterHQ. Flocker. https://docs.clusterhq.
com/en/1.0.3/.
[42] Andrey Mirkin, Alexey Kuznetsov, and Kir
Kolyshkin. Containers checkpointing and live migration. In Proceedings of the Linux Symposium,
pages 85–92, 2008.
[43] Liang Zhang, James Litton, Frank Cangialosi,
Theophilus Benson, Dave Levin, and Alan Mislove. Picocenter: Supporting long-lived, mostlyidle applications in cloud environments. In EuroSys’16, page 37. ACM, 2016.
[44] CRIU. www.criu.org/.
[45] Shripad Nadgowda, Sahil Suneja, and Ali Kanso.
Comparing scaling methods for linux containers. In
To appear in the IEEE Third International Workshop on Container Technologies and Container
Clouds (WoC), 2017.
[46] HAProxy.
The Reliable, High Performance
TCP/HTTP Load Balancer.
http://www.
haproxy.org/.
[47] Linux Programmer’s Manual.
sched yield yield the processor. http://man7.org/linux/
man-pages/man2/sched_yield.2.html.
[48] Brian F Cooper, Adam Silberstein, Erwin Tam,
Raghu Ramakrishnan, and Russell Sears. Benchmarking cloud serving systems with ycsb. In Proceedings of the 1st ACM symposium on Cloud computing, pages 143–154. ACM, 2010.
