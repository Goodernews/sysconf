[1] Ext4 filesystem. https://www.kernel.org/doc/Documentation/filesystems/ext4.txt.
[2] Filebench. http://filebench.sourceforge.net/.
[3] SQLite. https://sqlite.org.
[4] Sysbench. https://github.com/akopytov/sysbench.
[5] tpcc-mysql. https://github.com/Percona-Lab/tpcc-mysql.
[6] J. Axboe. FIO - flexible IO tester. http://freshmeat.net
/projects/fio/.
[7] Jeff Bonwick and Bill Moore. ZFS: The last word in file
systems. http://wiki.illumos.org/download/attachments/
1146951/zfs last.pdf, 2007.
[8] Li-Pin Chang, Po-Han Sung, and Po-Hung Chen. Fast file
synching for applications in flash-based android devices.
In Proceedings of the 3rd Non-Volatile Memory Systems
and Applications Symposium, pages 1–6, 2014.
[9] Vijay Chidambaram, Thanumalayan Sankaranarayana
Pillai, Andrea C. Arpaci-Dusseau, and Remzi H. ArpaciDusseau. Optimistic crash consistency. In Proceedings of
the 24th ACM Symposium on Operating Systems Principles, SOSP’13, pages 228–243, 2013.
[10] Vijay Chidambaram, Tushar Sharma, Andrea C. ArpaciDusseau, and Remzi H. Arpaci-Dusseau. Consistency
without ordering. In Proceedings of the 10th USENIX
Conference on File and Storage Technologies, FAST’12,
pages 101–116, 2012.
[11] Brian F. Cooper, Adam Silberstein, Erwin Tam, Raghu
Ramakrishnan, and Russell Sears. Benchmarking cloud
serving systems with YCSB. In Proceedings of the 1st
ACM Symposium on Cloud Computing, SoCC’10, pages
143–154, 2010.
[12] Jonathan Corbet. Solving the ext3 latency problem.
http://lwn.net/Articles/328363/.
[13] Rasha Eqbal. ScaleFS: A multicore-scalable file system.
Master’s thesis, Massachusetts Institute of Technology,
August 2014.
[14] Jim Gray and Andreas Reuter. Transaction Processing:
Concepts and Techniques. Morgan Kaufmann Publishers,
Inc., 1993.
[15] Daeho Jeong, Youngjae Lee, and Jin-Soo Kim. Boosting
quasi-asynchronous I/O for better responsiveness in mobile devices. In Proceedings of the 13th USENIX Conference on File and Storage Technologies, FAST’15, pages
191–202, 2015.
[16] Sooman Jeong, Kisung Lee, Jungwoo Hwang, Seongjin
Lee, and Youjip Won. AndroStep: Android storage performance analysis tool. In Software Engineering Workshops, pages 327–340, 2013.
[17] Sooman Jeong, Kisung Lee, Seongjin Lee, Seoungbum
Son, and Youjip Won. I/O stack optimization for smartphones. In Proceedings of the 2013 USENIX Annual
Technical Conference, ATC’13, pages 309–320, 2013.
[18] Junbin Kang, Benlong Zhang, Tianyu Wo, Weiren Yu,
Lian Du, Shuai Ma, and Jinpeng Huai. SpanFS: A scalable file system on fast storage devices. In Proceedings
of the 2015 USENIX Conference on Usenix Annual Technical Conference, ATC’15, pages 249–261, 2015.
[19] Yunji Kang and Dongkun Shin. Per-block-group journaling for improving fsync response time. In Proceedings
of the 18th IEEE International Symposium on Consumer
Electronics, pages 22–25, 2014.
[20] Jan Kara. ext4: fix data exposure after a crash.
https://patchwork.kernel.org/patch/9156691/, 2016.
[21] Lanyue Lu, Yupu Zhang, Thanh Do, Samer Al-Kiswany,
Andrea C. Arpaci-Dusseau, and Remzi H. ArpaciDusseau. Physical disentanglement in a container-based
file system. In Proceedings of the 11th USENIX Symposium on Operating Systems Design and Implementation,
OSDI’14, pages 81–96, 2014.
[22] Ao Ma, Chris Dragga, Andrea C. Arpaci-Dusseau,
Remzi H. Arpaci-Dusseau, and Marshall Kirk Mckusick.
Ffsck: The fast file-system checker. ACM Transactions
on Storage, 10(1):2:1–2:28, 2014.
[23] A. Mathur, M. Cao, S. Bhattacharya, A. Dilger, A. Tomas,
and L. Vivier. The new ext4 filesystem: Current status and
future plans. In Proceedings of the Ottowa Linux Symposium, 2007.
[24] Changwoo Min, Sanidhya Kashyap, Steffen Maass, and
Taesoo Kim. Understanding manycore scalability of file
systems. In Proceedings of the 2016 USENIX Annual
Technical Conference, ATC’16, pages 71–85, 2016.
[25] Edmund B. Nightingale, Kaushik Veeraraghavan, Peter M. Chen, and Jason Flinn. Rethink the sync.
ACM Transactions on Computer Systems, 26(3):6:1–6:26,
2008.
[26] Vijayan Prabhakaran, Andrea C. Arpaci-Dusseau, and
Remzi H. Arpaci-Dusseau. Analysis and evolution of
journaling file systems. In Proceedings of the 2005
USENIX Annual Technical Conference, ATC’05, pages
105–120, 2005.
[27] Kai Shen, Stan Park, and Meng Zhu. Journaling of journal is (almost) free. In Proceedings of the 12th USENIX
Conference on File and Storage Technologies, FAST’14,
pages 287–293, 2014.
[28] Adam Sweeney, Doug Doucette, Wei Hu, Curtis Anderson, Mike Nishimoto, and Geoff Peck. Scalability in the
xfs file system. In Proceedings of the 1996 USENIX Annual Technical Conference, ATC’96, pages 1–14, 1996.
[29] Theodore Ts’o. ext4: remove calls to ext4 jbd2 file
inode() from delalloc write path. http://git.kernel.org/
cgit/linux/kernel/git/torvalds/linux.git/commit/?id=
f3b59291a69d0b734be1fc8be489fef2dd846d3d, 2012.
