[1] M. Bougeret, H. Casanova, M. Rabie, Y. Robert, and
F. Vivien. Checkpointing strategies for parallel jobs.
In 2011 Intl. Conf. High Performance Computing,
Networking, Storage and Analysis (SC), pages 1–11.
IEEE, 2011.
[2] K. M. Chandy, J. C. Browne, C. W. Dissly, and W. R.
Uhrig. Analytic models for rollback and recovery
strategies in data base systems. IEEE Tr. Software
Engineering, (1):100–110, 1975.
[3] N. Chen and S. Ren. Adaptive optimal checkpoint
interval and its impact on system’s overall quality in
soft real-time applications. In Proc. 2009 ACM Symp.
Applied Computing, pages 1015–1020. ACM, 2009.
[4] J. T. Daly. A higher order estimate of the optimum
checkpoint interval for restart dumps. Future
Generation Computer Systems, 22(3):303–312, 2006.
[5] S. Di, L. Bautista-Gomez, and F. Cappello.
Optimization of a multilevel checkpoint model with
uncertain execution scales. In Proc. Intl. Conf. High
Performance Computing, Networking, Storage and
Analysis, pages 907–918. IEEE Press, 2014.
[6] B. Dimitrov, Z. Khalil, N. Kolev, and P. Petrov. On
the optimal total processing time using checkpoints.
IEEE Tr. Software Engineering, 17(5):436, 1991.
[7] E. N. Elnozahy, L. Alvisi, Y.-M. Wang, and D. B.
Johnson. A survey of rollback-recovery protocols in
message-passing systems. ACM Computing Surveys
(CSUR), 34(3):375–408, 2002.
[8] E. Elsayed. Reliability Engineering. Number v. 1 in
Reliability Engineering. Addison Wesley Longman,
1996.
[9] S. Gao, B. He, and J. Xu. Real-time in-memory
checkpointing for future hybrid memory systems. In
Proc. 29th ACM on Intl. Conf. Supercomputing, pages
263–272. ACM, 2015.
[10] S. Garg, Y. Huang, C. Kintala, and K. S. Trivedi.
Minimizing completion time of a program by
checkpointing and rejuvenation. In ACM
SIGMETRICS Performance Evaluation Review,
volume 24, pages 252–261. ACM, 1996.
[11] E. Gelenbe. A model of roll-back recovery with
multiple checkpoints. In Proc. 2nd Intl. Conf. Software
Engineering, pages 251–255. IEEE Computer Society
Press, 1976.
[12] E. Gelenbe. On the optimum checkpoint interval. J.
ACM, 26(2):259–270, 1979.
[13] E. Gelenbe and D. Derochette. Performance of
rollback recovery systems under intermittent failures.
C. ACM, 21(6):493–499, 1978.
[14] W. M. Jones, J. T. Daly, and N. DeBardeleben.
Application monitoring and checkpointing in hpc:
looking towards exascale systems. In Proc. 50th
Annual Southeast Regional Conference, pages 262–267.
ACM, 2012.
[15] L. Kleinrock. Theory, Volume 1, Queueing Systems.
Wiley-Interscience, 1975.
[16] E. Lazowska, J. Zahorjan, G. Graham, and K. Sevcik.
Quantitative System Performance: Computer System
Analysis Using Queueing Network Models. Prentice
Hall, 1984.
[17] Y. Ling, J. Mi, and X. Lin. A variational calculus
approach to optimal checkpoint placement. IEEE Tr.
Computers, 50(7):699–708, 2001.
[18] J. D. Little. A proof for the queuing formula: L= λ w.
Operations Research, 9(3):383–387, 1961.
[19] G. Lu, Z. Zheng, and A. A. Chien. When is
multi-version checkpointing needed? In Proc. 3rd
Wkhp. Fault-tolerance for HPC at extreme scale, pages
49–56. ACM, 2013.
[20] D. A. Menascé, V. A. Almeida, L. W. Dowdy, and
L. Dowdy. Performance by design: computer capacity
planning by example. Prentice Hall Professional, 2004.
[21] V. F. Nicola and J. M. Van Spanje. Comparative
analysis of different models of checkpointing and
recovery. IEEE Tr. Software Engineering,
16(8):807–821, 1990.
[22] R Core Team. R: A Language and Environment for
Statistical Computing. R Foundation for Statistical
Computing, Vienna, Austria, 2016.
[23] A. N. Tantawi and M. Ruschitzka. Performance
analysis of checkpointing strategies. ACM Tr.
Computer Systems (TOCS), 2(2):123–144, 1984.
[24] S. Urbanek. Rserve: Binary R server, 2013. R package
version 1.7-3.
[25] K. Wolter. Stochastic Models for Fault Tolerance,
Restart, Rejuvenation, and Checkpointing. Springer
Verlag, 2010.
[26] J. W. Young. A first order approximation to the
optimum checkpoint interval. C. ACM, 17(9):530–531,
1974.
[27] W. Zhao. Building dependable distributed systems.
John Wiley & Sons, 2014.