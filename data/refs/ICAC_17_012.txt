[1] IBM Corporation. Streams. http://www-03.ibm.com/software/products/
en/ibm-streams.
[2] S. Agarwal, R. Garg, M. S. Gupta, and J. E. Moreira. Adaptive
incremental checkpointing for massively parallel systems. In 18th SC,
pages 277–286. ACM, 2004.
[3] J. Basilio and S. Matos. Design of pi and pid controllers with transient
performance speciﬁcation. IEEE Transactions on Education, 45(4):364–
370, 2002.
[4] S. Bennett. Development of the pid controller. IEEE Control Systems,
13(6):58–62, 1993.
[5] T. Cao, M. Vaz Salles, B. Sowell, Y. Yue, A. Demers, J. Gehrke, and
W. White. Fast checkpoint recovery algorithms for frequently consistent
applications. In 2011 SIGMOD, pages 265–276. ACM, 2011.
[6] R. L. Collins and L. P. Carloni. Flexible ﬁlters: load balancing through
backpressure for stream programs. In The seventh ACM international
conference on Embedded software, pages 205–214. ACM, 2009.
[7] T. Condie, N. Conway, P. Alvaro, J. M. Hellerstein, K. Elmeleegy, and
R. Sears. Mapreduce online. In Nsdi, volume 10, page 20, 2010.
[8] T. Das, Y. Zhong, I. Stoica, and S. Shenker. Adaptive stream processing
using dynamic batch sizing. In SOCC, pages 1–13. ACM, 2014.
[9] T. Das, Y. Zhong, I. Stoica, and S. Shenker. Adaptive stream processing
using dynamic batch sizing. In SOCC, SOCC ’14, pages 16:1–16:13.
2014.
[10] A. Dvir and A. V. Vasilakos. Backpressure-based routing protocol for
dtns. In ACM SIGCOMM Computer Communication Review, volume 40,
pages 405–406. ACM, 2010.
[11] R. C. Fernandez, M. Migliavacca, E. Kalyvianaki, and P. Pietzuch.
Making state explicit for imperative big data processing. In 2014
USENIX ATC), pages 49–60. 2014.
[12] Flink. http://ﬂink.apache.org/.
[13] B. Gedik. Discriminative ﬁne-grained mixing for adaptive compression
of data streams. IEEE Transactions on Computers, 63(9):2228–2244,
2014.
[14] B. He, M. Yang, Z. Guo, R. Chen, B. Su, W. Lin, and L. Zhou. Comet:
batched stream processing for data intensive distributed computing. In
SOCC, pages 63–74. ACM, 2010.
[15] M. Hirzel, H. Andrade, B. Gedik, G. Jacques-Silva, R. Khandekar,
V. Kumar, M. Mendell, H. Nasgaard, S. Schneider, R. Soulé, et al. Ibm
streams processing language: Analyzing big data in motion. IBM Journal
of Research and Development, 57(3/4):7–1, 2013.
[16] S. Kulkarni, N. Bhagat, M. Fu, V. Kedigehalli, C. Kellogg, S. Mittal,
J. M. Patel, K. Ramasamy, and S. Taneja. Twitter heron: Stream
processing at scale. In 2015 SIGMOD, pages 239–250. ACM, 2015.
[17] B. Li, Y. Diao, and P. Shenoy. Supporting scalable analytics with latency
constraints. Proceedings of the VLDB Endowment, 8(11):1166–1177,
2015.
[18] H. Li, L. Pang, and Z. Wang. Two-level incremental checkpoint recovery
scheme for reducing system total overheads. PloS one, 9(8):e104591,
2014.
[19] W. Lin, Z. Qian, J. Xu, S. Yang, J. Zhou, and L. Zhou. Streamscope:
continuous reliable distributed processing of big data streams. In NSDI
16, pages 439–453, 2016.
[20] D. G. Murray, F. McSherry, R. Isaacs, M. Isard, P. Barham, and
M. Abadi. Naiad: a timely dataﬂow system. In SOSP, pages 439–455.
ACM, 2013.
[21] B. Nicolae and F. Cappello. Ai-ckpt: leveraging memory access patterns
for adaptive asynchronous incremental checkpointing. In The 22nd
HPDC, pages 155–166. ACM, 2013.
[22] J. S. Plank, J. Xu, and R. H. Netzer. Compressed differences: An
algorithm for fast incremental checkpointing. Technical report, Citeseer,
1995.
[23] Z. Qian, Y. He, C. Su, Z. Wu, H. Zhu, T. Zhang, L. Zhou, Y. Yu,
and Z. Zhang. Timestream: Reliable stream computation in the cloud.
In Proceedings of the 8th ACM European Conference on Computer
Systems, pages 1–14. ACM, 2013.
[24] S4. http://incubator.apache.org/s4/.
[25] D. Sanchez, D. Lo, R. M. Yoo, J. Sugerman, and C. Kozyrakis.
Dynamic ﬁne-grain scheduling of pipeline parallelism. In PACT 2011
International Conference on, pages 22–32. IEEE, 2011.
[26] P. Selo, Y. Park, S. Parekh, C. Venkatramani, H. K. Pyla, and F. Zheng.
Adding stream processing system ﬂexibility to exploit low-overhead
communication systems. In High Performance Computational Finance
(WHPCF), 2010 IEEE Workshop on, pages 1–8. IEEE, 2010.
[27] L. Shenghui, W. Chenqing, and C. Nan. Research on media stream
transmission based on back-pressure in mobile wireless network. International Journal of Future Generation Communication and Networking,
6(5):53–64, 2013.
[28] Storm. http://storm.apache.org/.
[29] L. Tassiulas and A. Ephremides. Stability properties of constrained
queueing systems and scheduling policies for maximum throughput in
multihop radio networks. IEEE transactions on automatic control, 37
(12):1936–1948, 1992.
[30] S. Yi, J. Heo, Y. Cho, and J. Hong. Adaptive page-level incremental
checkpointing based on expected recovery time. In The 2006 ACM
symposium on Applied computing, pages 1472–1476. ACM, 2006.
[31] M. Zaharia, T. Das, H. Li, T. Hunter, S. Shenker, and I. Stoica.
Discretized streams: Fault-tolerant streaming computation at scale. In
SOSP, pages 423–438. ACM, 2013.
