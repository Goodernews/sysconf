[1] A. Sodani, “Knights landing (KNL): 2nd generation Intel Xeon Phi
processor,” in 2015 IEEE Hot Chips 27 Symposium (HCS), Aug 2015,
pp. 1–24.
[2] A. J. Peña and P. Balaji, “Toward the efficient use of multiple explicitly
managed memory subsystems,” in IEEE International Conference on
Cluster Computing (CLUSTER), 2014, pp. 123–131.
[3] P. Cicotti and L. Carrington, “ADAMANT: tools to capture, analyze, and
manage data movement,” in International Conference on Computational
Science (ICCS), 2016, pp. 450–460.
[4] A. Rane and J. C. Browne, “Enhancing performance optimization of
multicore chips and multichip nodes with data structure metrics,” in 2012
21st International Conference on Parallel Architectures and Compilation
Techniques (PACT), Sept 2012, pp. 147–156.
[5] “Intel Advisor XE,” last accessed May 2017. [Online]. Available:
https://software.intel.com/en-us/intel-advisor-xe
[6] I. Corporation, Intel 64 and IA-32 Architectures Software Developer’s
Manual, September 2016, vol. Volume 3B: System Programming Guide,
Part 2, ch. 18.4.4.
[7] X. Liu and J. M. Mellor-Crummey, “A data-centric profiler for parallel
programs,” in International Conference for High Performance Computing, Networking, Storage and Analysis, SC’13, 2013, pp. 28:1–28:12.
[8] A. Giménez, T. Gamblin, B. Rountree, A. Bhatele, I. Jusufi, P. Bremer,
and B. Hamann, “Dissecting on-node memory access performance: A
semantic approach,” in International Conference for High Performance
Computing, Networking, Storage and Analysis (SC), 2014, pp. 166–176.
[9] BSC, Extrae user guide, Barcelona Supercomputing Center, 2016,
last accessed May 2017. [Online]. Available: https://tools.bsc.es/sites/
default/files/documentation/extrae-3.2.1-user-guide.pdf
[10] “Intel VTune Amplifier,” last accessed May 2017. [Online]. Available:
https://software.intel.com/en-us/intel-vtune-amplifier-xe
[11] C. Cantalupo, V. Venkatesan, J. Hammond, K. Czurlyo, and
S. D. Hammond, memkind: An extensible heap memory manager for
heterogeneous memory platforms and mixed memory policies, Mar 2015.
[Online]. Available: http://www.osti.gov/scitech/servlets/purl/1245908
[12] M. Martonosi, A. Gupta, and T. Anderson, “MemSpy: Analyzing
Memory System Bottlenecks in Programs,” in Proceedings of the ACM
SIGMETRICS Joint International Conference on Measurement and
Modeling of Computer Systems. ACM, 1992, pp. 1–12.
[13] K. Beyls and E. D’Hollander, “Refactoring for data locality,” Computer,
vol. 42, no. 2, pp. 62–71, 2009.
[14] M. Burtscher, B.-D. Kim, J. Diamond, J. McCalpin, L. Koesterke, and
J. Browne, “PerfExpert: An easy-to-use performance diagnosis tool
for HPC applications,” in Proceedings of the ACM/IEEE International
Conference for High Performance Computing, Networking, Storage and
Analysis (SC). Washington, DC, USA: IEEE Computer Society, 2010,
pp. 1–11.
[15] C.-K. Luk, R. Cohn, R. Muth, H. Patil, A. Klauser, G. Lowney,
S. Wallace, V. J. Reddi, and K. Hazelwood, “PIN: Building customized
program analysis tools with dynamic instrumentation,” in Proceedings
of the ACM SIGPLAN Conference on Programming Language Design
and Implementation (PLDI). ACM, 2005, pp. 190–200.
[16] V. Subotic, R. Ferrer, J. Sancho, J. Labarta, and M. Valero, “Quantifying
the potential task-based dataflow parallelism in MPI applications,” EuroPar, Parallel Processing, pp. 39–51, 2011.
[17] A. J. Peña and P. Balaji, “A framework for tracking memory accesses
in scientific applications,” in 43rd International Conference on Parallel
Processing Workshops (ICCPW). IEEE, 2014, pp. 235–244.
[18] M. Laurenzano, M. M. Tikir, L. Carrington, and A. Snavely, “PEBIL:
Efficient static binary instrumentation for Linux,” in IEEE International
Symposium on Performance Analysis of Systems and Software (ISPASS),
2010, pp. 175–183.
[19] M. Itzkowitz et al., “Memory profiling using hardware counters,” in
ACM/IEEE conference on Supercomputing (SC), 2003, p. 17.
[20] H. Servat, G. Llort, J. González, J. Giménez, and J. Labarta, “Lowoverhead detection of memory access patterns and their time evolution,”
in European Conference on Parallel Processing. Springer, 2015, pp.
57–69.
[21] BSC, “Paraver web-site,” Barcelona Supercomputing Center, 2016, last
accessed May 2017. [Online]. Available: http://tools.bsc.es/paraver
[22] Free Software Foundation, “GNU Binutils,”
http://www.gnu.org/software/binutils
Last accessed May, 2017.
[23] B. Buck and J. K. Hollingsworth, “An API for runtime code patching,”
Int. J. High Perform. Comput. Appl., vol. 14, no. 4, pp. 317–329, 2000.
[24] J. Dongarra, M. A. Heroux, and P. Luszczek, “High-performance
conjugate-gradient benchmark: A new metric for ranking highperformance computing systems,” IJHPCA, vol. 30, no. 1, pp. 3–10,
2016,
URL:
http://www.hpcg-benchmark.org/downloads/hpcg-3.0.tar.gz,
SHA1/10: 39e1b7e45e, modifications cover slides 4-7 from http://www.
hpcg-benchmark.org/downloads/sc14/HPCG on the K computer.pdf.
[25] “Hydrodynamics challenge problem,” Lawerence Livermore National
Laboratory, Tech. Rep., last accessed May 2107.
URL:
https://codesign.llnl.gov/lulesh/lulesh2.0.3.tgz,
SHA1/10:
1ff51421bf.
[Online].
Available:
https://codesign.llnl.gov/pdfs/
LULESH2.0 Changes.pdf
[26] D. H. Bailey, E. Barszcz, J. T. Barton, D. S. Browning, R. L. Carter,
L. Dagum, R. A. Fatoohi, P. O. Frederickson, T. A. Lasinski, R. S.
Schreiber, H. D. Simon, V. Venkatakrishnan, and S. K. Weeratunga,
“The NAS parallel benchmarks,” in Proceedings of the ACM/IEEE
Conference on Supercomputing. ACM, 1991, pp. 158–165,
URL:
https://www.nas.nasa.gov/publications/npb.html,
SHA1/10:
70e727ff39.
[27] “Mantevo benchmark suite,” last accessed May 2017.
URL:
https://asc.llnl.gov/CORAL-benchmarks/Throughput/MiniFE
ref 2.0-rc3.tar.gz, SHA1/10: 64e79502d9. [Online]. Available:
https://mantevo.org/download
[28] A. Stone, J. Dennis, and M. M. Strout, “The CGPOP miniapp, version
1.0,” Colorado State University, Tech. Rep. Technical Report CS-11-103,
2011,
URL: https://github.com/xiehuc/cgpop, SHA1/10: 5e7deea26a.
[29] “SNAP: SN (discrete ordinates) application proxy,” last accessed May
2017.
URL: https://github.com/losalamos/SNAP.git, SHA1/10: b25fd4197c.
[Online]. Available: https://github.com/lanl/SNAP
[30] R. Léger, D. Alvarez Mallon, A. Duran, and S. Lanteri, “Adapting
a finite-element type solver for bioelectromagnetics to the DEEP-ER
platform,” vol. Parallel Computing: On the Road to Exascale, no. 27.
Edinburgh, United Kingdom: IOS Press, 2016, p. 850,
URL: N/A - provided by user directly, SHA1/10: 1ff51421bf. [Online].
Available: https://hal.inria.fr/hal-01243708
[31] “Gyrokinetic Toroidal Code - Princeton,” last accessed May 2017.
URL:
http://www.nersc.gov/research-and-development/apex/
apex-benchmarks/gtc-p, SHA1/10: 7b28264821.
[32] C. Durochat, S. Lanteri, and R. Léger, “A non-conforming multielement DGTD method for the simulation of human exposure to
electromagnetic waves,” International Journal of Numerical Modelling:
Electronic Networks, Devices and Fields, vol. 27, no. 3, pp. 614–625,
2014. [Online]. Available: http://dx.doi.org/10.1002/jnm.1943
[33] A. J. Peña and P. Balaji, “A data-oriented profiler to assist in data partitioning and distribution for heterogeneous memory in HPC,” Parallel
Computing, vol. 51, pp. 46–55, 2016.
[34] P. Roy and X. Liu, “StructSlim: a lightweight profiler to guide structure
splitting,” in Proceedings of the 2016 International Symposium on Code
Generation and Optimization, CGO, 2016, pp. 36–46.
