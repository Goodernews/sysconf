[1] Herlihy, M.: Wait-free synchronization. ACM Trans. Program. Lang. Syst. 13(1),

123–149 (1991)

[2] Gramoli, V., Kuznetsov, P., Ravi, S.: In the search for optimal concurrency. In:

Suomela, J. (ed.) SIROCCO 2016. LNCS, vol. 9988, pp. 143–158. Springer, Cham

(2016). doi:10.1007/978-3-319-48314-6 10

[3] Papadimitriou, C.H.: The serializability of concurrent database updates. J. ACM

26, 631–653 (1979)

[4] Chaudhri, V.K., Hadzilacos, V.: Safe locking policies for dynamic databases. J.

Comput. Syst. Sci. 57(3), 260–271 (1998)

[5] Sutter, H.: Choose concurrency-friendly data structures. Dr. Dobb’s J. (2008)

[6] Heller, S., Herlihy, M., Luchangco, V., Moir, M., Scherer, W.N., Shavit, N.: A lazy

concurrent list-based set algorithm. In: OPODIS, pp. 3–16 (2006)

[7] Herlihy, M., Shavit, N.: On the nature of progress. In: OPODIS, pp. 313–328 (2011)

[8] Guerraoui, R., Henzinger, T.A., Singh, V.: Permissiveness in transactional memories. In: DISC, pp. 305–319 (2008)

[9] Kuznetsov, P., Ravi, S.: On the cost of concurrency in transactional memory.

In: International Conference on Principles of Distributed Systems (OPODIS),

pp. 112–127 (2011)

[10]  Crain, T., Gramoli, V., Raynal, M.: A contention-friendly binary search tree. In:

Wolf, F., Mohr, B., Mey, D. (eds.) Euro-Par 2013. LNCS, vol. 8097, pp. 229–240.

Springer, Heidelberg (2013). doi:10.1007/978-3-642-40047-6 25

[11]  Drachsler, D., Vechev, M., Yahav, E.: Practical concurrent binary search trees via

logical ordering. In: Proceedings of 19th ACM SIGPLAN Symposium on Principles

and Practice of Parallel Programming, PPoPP 2014, pp. 343–356 (2014)

[12]  Bronson, N.G., Casper, J., Chaﬁ, H., Olukotun, K.: A practical concurrent binary

search tree. In: PPoPP (2010)

[13]  Ellen, F., Fatourou, P., Ruppert, E., van Breugel, F.: Non-blocking binary search

trees. In: PODC, pp. 131–140 (2010)

[14]  Aksenov, V., Gramoli, V., Kuznetsov, P., Malova, A., Ravi, S.: A concurrencyoptimal binary search tree. CoRR abs/1702.04441 (2017)

[15]  Natarajan, A., Mittal, N.: Fast concurrent lock-free binary search trees. In: PPoPP,

pp. 317–328 (2014)

[16]  Gramoli, V.: More than you ever wanted to know about synchronization: Synchrobench, measuring the impact of the synchronization on concurrent algorithms.

In: PPoPP, pp. 1–10 (2015)

[17]  Gramoli, V., Kuznetsov, P., Ravi, S.: From sequential to concurrent: correctness

and relative eﬃciency (brief announcement). In: Principles of Distributed Computing (PODC), pp. 241–242 (2012)

[18]  Gramoli, V., Kuznetsov, P., Ravi, S., Shang, D.: A concurrency-optimal list-based

set (brief announcement). In: Distributed Computing - 29th International Symposium, DISC 2015, Tokyo, Japan, 7–9 October 2015

[19]  Cao Minh, C., Chung, J., Kozyrakis, C., Olukotun, K.: STAMP: Stanford transactional applications for multi-processing. In: IISWC (2008)

[20]  Crain, T., Gramoli, V., Raynal, M.: A speculation-friendly binary search tree. In:

PPoPP, pp. 161–170 (2012)

[21]  Siakavaras, D., Nikas, K., Goumas, G., Koziris, N.: Performance analysis of concurrent red-black trees on HTM platforms. In: 10th ACM SIGPLAN Workshop on

Transactional Computing (Transact) (2015)

[22]  Howley, S.V., Jones, J.: A non-blocking internal binary search tree. In: SPAA, pp.

161–171 (2012)

[23]  Chatterjee, B., Nguyen, N., Tsigas, P.: Eﬃcient lock-free binary search trees. In:

PODC (2014)
