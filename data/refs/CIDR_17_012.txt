[1] Amazon EC2. https://aws.amazon.com/ec2/.
[2] Amazon Flume. https://flume.apache.org/.
[3] Amazon Redshift. https://aws.amazon.com/redshift/.
[4] Amazon 83. https://aws.amazon.com/s3/.
[5] Apache flink. http://flink.apache.org/.
[6] Azure SQL database.https://azure.microsoft.com/en- us/services/sql- database/.
[7] Greenplum.http://pivotal.io/big- data/pivotal- greenplum- database.
[8] Hadoop Distributed File System. https://hadoop.apache.org/docs/r1.2.1/hdfs design.html.
[9] Presto. https://prestodb.io/.
[10] Spark Python programming guide. http://spark.apache.org/docs/0.9.0/python-programming-guide.html.
[11] A. Abouzeid et al. HadoopDB: An architectural hybrid of MapReduce and DBMS technologies for analytical workloads. In Proc. of the VLDB Endowment, 2009.
[12] F. N. Afrati et al. Optimizing joins in a map-reduce environment. In EDBT, 2010.
[13] A. Ailamaki et al. Data page layouts for relational databases on deep memory hierarchies. The VLDB Journal, 2002.
[14] S. Alsubaiee et al. AsterixDB: A scalable, open source BDMS. In VLDB, 2014.
[15] Apache Arrow. https://arrow.apache.org/.
[16] P. Beame et al. Communication steps for parallel query processing. In PODS, 2013.
[17] G. M. Bierman et al. Lost in translation: formalizing proposed extensions to C#. In OOPSLA, 2007.
[18] V. Borkar et al. Hyracks: A flexible and extensible foundation for data-intensive computing. 2011.
[19] Y. Bu et al. The HaLoop approach to large-scale iterative data analysis. The VLDB Journal, 2012.
[20] A. Bulu ̧c et al. The combinatorial BLAS: Design, implementation, and applications. IJHPCA, 2011.
[21] U. Cetintemel et al. Query steering for interactive data exploration. In CIDR, 2013.
[22] S. Chu et al. From theory to practice: Efficient join query evaluation in a parallel database system. In SIGMOD 2015.
[23] Cloudpickle. https://github.com/cloudpipe/cloudpickle.
[24] P. J. A. Cock et al. The sanger FASTQ file format for sequences with quality scores, and the solexa/illumina FASTQ variants. Nucleic Acids Research, 2010.
[25] Python cPickle. https://docs.python.org/2/library/pickle.html#module- cPickle.
[26] B. Dageville et al. The snowflake elastic data warehouse. In SIGMOD, 2016.
[27] J. Duggan et al. The BigDAWG polystore system. SIGMOD Record, 2015.
[28] D. C. V. Essen et al. The WU-Minn human connectome project: an overview. Neuroimage, 2013.
[29] A. Floratou et al. When free is not really free: What does it cost to run a database workload in the cloud? In TPCTC, 2012.
[30] Y. Fu et al. Forward: Data-centric UIs using declarative templates that efficiently wrap third-party JavaScript components. Proc. of the VLDB Endowment, 2014.
[31] I. Gog et al. Musketeer: All for one, one for all in data processing systems. In EuroSys, 2015.
[32] Y. Goldberg et al. A dataset of syntactic-ngrams over time from a very large corpus of English books. In *SEM, 2013.
[33] G. Graefe. Volcano: An extensible and parallel query evaluation system. IEEE TKDE, 1994.
[34] Apache Hadoop streaming. https://hadoop.apache.org/docs/r1.2.1/streaming.html.
[35] D. Halperin et al. Demonstration of the Myria big data management service. In SIGMOD, 2014.
[36] B. Haynes et al. Pipegen: Data pipe generator for hybrid analytics. In SOCC, 2016.
[37] H. Herodotou et al. No one (cluster) size fits all: automatic cluster sizing for data-intensive analytics. In SOCC, 2011.
[38] A. J. G. Hey et al. The Fourth Paradigm: Data-Intensive Scientific Discovery. Microsoft Research, 2009.
[39] S. Idreos et al. MonetDB: Two decades of research in column-oriented database architectures. IEEE Data Engineering Bulletin, 2012.
[40] V. Jalaparti et al. Bridging the tenant-provider gap in cloud services. In SOCC, 2012.
[41] N. Ji et al. Technologies for imaging neural activity in large volumes. Nat. Neurosci., 2016.
[42] T. Kluyver et al. Jupyter notebooks - a publishing format for reproducible computational workflows. In ELPUB 2016. 
[43] M. Kornacker et al. Impala: A modern, open-source SQL engine for hadoop. In CIDR, 2015.
[44] H. Kwak et al. What is Twitter, a social network or a news media? In WWW, 2010.
[45] S. Loebman et al. Big-data management use-case: A cloud service for creating and analyzing galactic merger trees. In DanaC 2014 in conjunction with SIGMOD.
[46] Y. Low et al. Distributed GraphLab: a framework for machine learning and data mining in the cloud. In Proc. of the VLDB Endowment, 2012.
[47] LSST Data Management. http://dm.lsst.org/. 
[48] R. Maas et al. Gaussian mixture models use-case: In-memory analysis with Myria. In Proc. of the 3rd IMDM Workshop at VLDB, 2015.
[49] P. Mehta et al. Comparative Evaluation of Big-Data Systems on Scientific Image Analytics Workloads. ArXiv e-prints, Dec. 2016.
[50] D. Moritz et al. Perfopticon: Visual query analysis for distributed databases. Computer Graphics Forum (Proc.EuroVis), 2015.
[51] B. D. Myers. High-performance parallel systems for data-intensive computing. http://www.cs.washington.edu/tr/2016/02/UW-CSE-16-02-02.pdf.
[52] Myria: Big Data management as a Cloud service.http://myria.cs.washington.edu/.
[53] M. Navas et al. Efficient computation of PCA with SVD in SQL. In Proceedings of the 2nd Workshop on Data Mining Using Matrices and Tensors, 2009.
[54] University of Washington N-Body Shop. http://www-hpcc.astro.washington.edu/
[55] N-body software tools.http://hpcc.astro.washington.edu/tools/.
[56] K. W. Ong et al. The SQL++ query language: Configurable, unifying and semi-structured. arXiv:1405.3631, 2014.
[57] J. Ortiz et al. Changing the face of database cloud services with personalized service level agreements. In CIDR, 2015.
[58] J. Ortiz et al. PerfEnforce demonstration: Data analytics with performance guarantees. In SIGMOD, 2016.
[59] PostgreSQL: The world’s most advanced open source database. https://www.postgresql.org/.
[60] Apache REEF. http://reef.apache.org/.
[61] J. Rogers et al. Overview of SciDB: Large scale array storage, processing and analysis. In SIGMOD, 2010
[62] Stanford large network dataset collection. https://snap.stanford.edu/data/.
[63] Apache Spark. http://spark.apache.org/.
[64] V. Springel et al. Simulations of the formation, evolution and clustering of galaxies and quasars. Nature, 2005.
[65] Teradata. http://www.teradata.com/.
[66] T. L. Veldhuizen. Leapfrog triejoin: a worst-case optimal join algorithm. CoRR, 2012.
[67] J. Wang et al. Asynchronous and fault-tolerant recursive datalog evaluation in shared-nothing engines. Proc. of the VLDB Endowment, 2015.
[68] J. Wang et al. Toward elastic memory management for cloud data analytics. In BeyondMR with SIGMOD, 2016. 
[69] T. White. Hadoop: The Definitive Guide. 2009.
[70] Apache Hadoop YARN. https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/.
[71] M. Zaharia et al. Resilient distributed datasets: A fault-tolerant abstraction for in-memory cluster computing. In NSDI, 2012.
