
[1] Agarwal, N., Nellans, D., Stephenson, M.,
O’Connor, M., and Keckler, S. W. Page
Placement Strategies for GPUs Within Heterogeneous
Memory Systems. In Proceedings of the ACM
International Conference on Architectural Support for
Programming Languages and Operating Systems (Mar.
2015), ASPLOS ’15, pp. 607–618.

[2] Agrawal, S. R., Pistol, V., Pang, J., Tran,
J., Tarjan, D., and Lebeck, A. R. Rhythm:
Harnessing Data Parallel Hardware for Server
Workloads. In Proceedings of the ACM International
Conference on Architectural Support for Programming
Languages and Operating Systems (Mar. 2014),
ASPLOS ’14, pp. 19–34.
[3] Becchi, M., Sajjapongse, K., Graves, I.,
Procter, A., Ravi, V., and Chakradhar, S. A
Virtual Memory Based Runtime to Support
Multi-tenancy in Clusters with GPUs. In Proceedings
of the ACM International Symposium on
High-Performance Parallel and Distributed Computing
(June 2012), HPDC ’12, pp. 97–108.
[4] Bershad, B. N., Savage, S., Pardyak, P.,
Sirer, E. G., Fiuczynski, M. E., Becker, D.,
Chambers, C., and Eggers, S. Extensibility
safety and performance in the SPIN operating system.
In Proceedings of the ACM Symposium on Operating
Systems Principles (Dec. 1995), SOSP ’95, pp. 267–283.
[5] Che, S., Boyer, M., Meng, J., Tarjan, D.,
Sheaffer, J., Lee, S.-H., and Skadron, K.
Rodinia: A benchmark suite for heterogeneous
computing. In Proceedings of the IEEE International
Symposium on Workload Characterization (Oct. 2009),
IISWC ’09, pp. 44–54.
[6] Duato, J., Pe ña, A. J., Silla, F., Mayo, R.,
and Quintana-Ort ı́, E. S. rCUDA: Reducing the
number of GPU-based accelerators in high performance
clusters. In Proceedings of the IEEE International
Conference on High Performance Computing
Simulation (June 2010), HPCS ’10, pp. 224–231.
[7] Engler, D. R., Kaashoek, M. F., and
O’Toole, J. Exokernel: An operating system
architecture for application-level resource management.
In Proceedings of the ACM Symposium on Operating
Systems Principles (Dec. 1995), SOSP ’95, pp. 251–266.
[8] Fung, J., and Mann, S. Using graphics devices in
reverse: GPU-based Image Processing and Computer
Vision. In Proceedings of the IEEE International
Conference on Multimedia and Expo (June 2008),
ICME ’08, pp. 9–12.
[9] Giunta, G., Montella, R., Agrillo, G., and
Coviello, G. A GPGPU Transparent Virtualization
Component for High Performance Computing Clouds.
In Proceedings of the Springer European Conference on
Parallel Processing (Sept. 2010), Euro-Par ’10,
pp. 379–391.
[10] Glisse, J. Using process address space on the GPU,
Sept. 2013. https://www.x.org/wiki/Events/XDC2013/
XDC2013JeromeGlisseUsingProcessAddressSpaceGPU/
xdc2013-glisse.pdf.
[11] Glisse, J. LKML: HMM (Heterogeneous Memory
Management) v18, Mar. 2017.
https://lkml.org/lkml/2017/3/16/596.
[12] Gottschlag, M., Hillenbrand, M., Kehne, J.,
Stoess, J., and Bellosa, F. LoGV: Low-Overhead
GPGPU Virtualization. In Proceedings of the IEEE
International Workshop on Frontiers of Heterogeneous
Computing (Nov. 2013), FHC ’13, pp. 1721–1726.

[13] Gupta, V., Gavrilovska, A., Schwan, K.,
Kharche, H., Tolia, N., Talwar, V., and
Ranganathan, P. GViM: GPU-accelerated Virtual
Machines. In Proceedings of the ACM Workshop on
System-Level Virtualization for High Performance
Computing (Mar. 2009), HPCVirt ’09, pp. 17–24.
[14] Han, S., Jang, K., Park, K., and Moon, S.
PacketShader: A GPU-accelerated Software Router. In
Proceedings of the ACM SIGCOMM Conference (Aug.
2010), SIGCOMM ’10, pp. 195–206.
[15] Hand, S. Self-Paging in the Nemesis Operating
System. In Proceedings of the USENIX Symposium on
Operating Systems Design and Implementation (Feb.
1999), OSDI ’99, pp. 73–86.
[16] Jang, K., Han, S., Han, S., Moon, S. B., and
Park, K. SSLShader: Cheap SSL Acceleration with
Commodity Processors. In Proceedings of the USENIX
Symposium on Networked Systems Design and
Implementation (Mar. 2011), NSDI ’11.
[17] Ji, F., Lin, H., and Ma, X. RSVM: A
Region-based Software Virtual Memory for GPU. In
Proceedings of the IEEE International Conference on
Parallel Architectures and Compilation Techniques
(Sept. 2013), PACT ’13, pp. 269–278.
[18] Kato, S. Gdev benchmarks.
https://github.com/shinpei0208/gdev-bench.
[19] Kato, S., Lakshmanan, K., Rajkumar, R., and
Ishikawa, Y. TimeGraph: GPU scheduling for
real-time multi-tasking environments. In Proceedings of
the USENIX Annual Technical Conference (June 2011),
USENIX ATC ’11, pp. 17–30.
[20] Kato, S., McThrow, M., Maltzahn, C., and
Brandt, S. A. Gdev: First-Class GPU Resource
Management in the Operating System. In Proceedings
of the USENIX Annual Technical Conference (June
2012), USENIX ATC ’12, pp. 401–412.
[21] Kehne, J., Metter, J., and Bellosa, F.
GPUswap: Enabling Oversubscription of GPU Memory
Through Transparent Swapping. In Proceedings of the
ACM International Conference on Virtual Execution
Environments (Mar. 2015), VEE ’15, pp. 65–77.
[22] Menychtas, K., Shen, K., and Scott, M. L.
Disengaged Scheduling for Fair, Protected Access to
Fast Computational Accelerators. In Proceedings of the
ACM International Conference on Architectural
Support for Programming Languages and Operating
Systems (June 2014), ASPLOS ’14, pp. 301–316.
[23] Nvidia Corporation. CUDA Toolkit,
2013-07-02T10:16:48-07:00.
https://developer.nvidia.com/cuda-toolkit.
[24] PathScale, Inc. Pscnv.
https://github.com/pathscale/pscnv.
[25] Rauhe, H., Dees, J., Sattler, K.-U., and
Faerber, F. Multi-level Parallel Query Execution
Framework for CPU and GPU. In Proceedings of the
Springer East European Conference on Advances in
Databases and Information Systems (Sept. 2013),
ADBIS ’13, pp. 330–343.

[26] Rossbach, C. J., Currey, J., Silberstein, M.,
Ray, B., and Witchel, E. PTask: Operating
System Abstractions to Manage GPUs As Compute
Devices. In Proceedings of the ACM Symposium on
Operating Systems Principles (Sept. 2011), SOSP ’11,
pp. 233–248.
[27] Shi, L., Chen, H., Sun, J., and Li, K. vCUDA:
GPU-Accelerated High-Performance Computing in
Virtual Machines. IEEE Transactions on Computers 61,
6 (June 2012), 804–816.
[28] Suzuki, Y., Kato, S., Yamada, H., and Kono,
K. GPUvm: Why not virtualizing GPUs at the
hypervisor? In Proceedings of the USENIX Annual
Technical Conference (June 2014), USENIX ATC ’14,
pp. 109–120.
[29] Tian, K., Dong, Y., and Cowperthwaite, D. A
full GPU virtualization solution with mediated
pass-through. In Proceedings of the USENIX Annual
Technical Conference (June 2014), USENIX ATC ’14,
pp. 121–132.
[30] Vasilas, D., Gerangelos, S., and Koziris, N.
VGVM: Eﬃcient GPU capabilities in virtual machines.
In Proceedings of the IEEE International Conference
on High Performance Computing & Simulation (July
2016), HPCS ’16, pp. 637–644.
[31] Wang, K., Ding, X., Lee, R., Kato, S., and
Zhang, X. GDM: Device Memory Management for
GPGPU Computing. In Proceedings of the ACM
International Conference on Measurement and
Modeling of Computer Systems (June 2014),
SIGMETRICS ’14, pp. 533–545.
[32] Xiao, S., Balaji, P., Zhu, Q., Thakur, R.,
Coghlan, S., Lin, H., Wen, G., Hong, J., and
c Feng, W. VOCL: An optimized environment for
transparent virtualization of graphics processing units.
In Proceedings of the IEEE Conference on Innovative
Parallel Computing (May 2012), InPar ’12, pp. 1–12.
[33] Yu, M., Zhang, C., Qi, Z., Yao, J., Wang, Y.,
and Guan, H. VGRIS: Virtualized GPU Resource
Isolation and Scheduling in Cloud Gaming. In
Proceedings of the ACM International Symposium on
High-Performance Parallel and Distributed Computing
(June 2013), HPDC ’13, pp. 203–214.
[34] Zheng, T., Nellans, D., Zulfiqar, A.,
Stephenson, M., and Keckler, S. W. Towards
high performance paged memory for GPUs. In
Proceedings of the IEEE International Symposium on
High Performance Computer Architecture (Mar. 2016),
HPCA ’16, pp. 345–357.

