[1] Zhang, Y., Wu, C., Li, J. and Guo, M., 2015, June. Tip-code: A three
independent parity code to tolerate triple disk failures with optimal update
complextiy. In Dependable Systems and Networks (DSN), 2015 45th
Annual IEEE/IFIP International Conference on (pp. 136-147). IEEE.
[2] Huang, C., Simitci, H., Xu, Y., Ogus, A., Calder, B., Gopalan, P., Li, J.
and Yekhanin, S., 2012, June. Erasure Coding in Windows Azure Storage.
In Usenix annual technical conference (pp. 15-26).
[3] Huang, C., Chen, M. and Li, J., 2013. Pyramid codes: Flexible schemes
to trade space for access efﬁciency in reliable data storage systems. ACM
Transactions on Storage (TOS), 9(1), p.3.
[4] Tamo, I., Papailiopoulos, D.S. and Dimakis, A.G., 2016. Optimal locally
repairable codes and connections to matroid theory. IEEE Transactions
on Information Theory, 62(12), pp.6661-6671.
[5] Huang, C. and Xu, L., 2008. STAR: An efﬁcient coding scheme for
correcting triple storage node failures. IEEE Transactions on Computers,
57(7), pp.889-901.
[6] Wang, Y., Li, G. and Zhong, X., 2012. Triple-Star: A coding scheme with
optimal encoding complexity for tolerating triple disk failures in RAID.
International Journal of Innovative Computing, Information and Control,
8(3), pp.1731-1472.
[7] Bairavasundaram, L.N., Goodson, G.R., Pasupathy, S. and Schindler, J.,
2007, June. An analysis of latent sector errors in disk drives. In ACM
SIGMETRICS Performance Evaluation Review (Vol. 35, No. 1, pp. 289300). ACM.
[8] Schroeder, B., Damouras, S. and Gill, P., 2010. Understanding latent
sector errors and how to protect against them. ACM Transactions on
storage (TOS), 6(3), p.9.
[9] Venkatesan, V. and Iliadis, I., 2013, August. Effect of latent errors on the
reliability of data storage systems. In Modeling, Analysis & Simulation
of Computer and Telecommunication Systems (MASCOTS), 2013 IEEE
21st International Symposium on (pp. 293-297). IEEE.
[10] Bairavasundaram, L.N., Arpaci-Dusseau, A.C., Arpaci-Dusseau, R.H.,
Goodson, G.R. and Schroeder, B., 2008. An analysis of data corruption
in the storage stack. ACM Transactions on Storage (TOS), 4(3), p.8.
[11] Reed, I.S. and Solomon, G., 1960. Polynomial codes over certain ﬁnite
ﬁelds. Journal of the society for industrial and applied mathematics, 8(2),
pp.300-304.
[12] Bloemer, J., Kalfane, M., Karp, R., Karpinski, M., Luby, M. and
Zuckerman, D., 1995. An XOR-based erasure-resilient coding scheme.
[13] Zhu, Y., Lee, P.P., Hu, Y., Xiang, L. and Xu, Y., 2012, April. On the
speedup of single-disk failure recovery in xor-coded storage systems:
Theory and practice. In Mass Storage Systems and Technologies (MSST),
2012 IEEE 28th Symposium on (pp. 1-12). IEEE.
[14] Tau, C.S. and Wang, T.I., 2003, March. Efﬁcient parity placement
schemes for tolerating triple disk failures in RAID architectures. In
Advanced Information Networking and Applications, 2003. AINA 2003.
17th International Conference on (pp. 132-137). IEEE.
[15] Corbett, P.F. and Goel, A., Netapp, Inc., 2013. Triple parity technique
for enabling efﬁcient recovery from triple failures in a storage array. U.S.
Patent 8,516,342.
[16] Feng, G.L., Deng, R.H., Bao, F. and Shen, J.C., 2005. New efﬁcient
MDS array codes for RAID. Part I. Reed-Solomon-like codes for tolerating three disk failures. IEEE Transactions on Computers, 54(9), pp.10711080.
[17] Feng, G.L., Deng, R.H., Bao, F. and Shen, J.C., 2005. New efﬁcient
MDS array codes for RAID. Part II. Rabin-like codes for tolerating
multiple (/spl ges/4) disk failures. IEEE Transactions on Computers,
54(12), pp.1473-1483.
[18] Hafner, J.L., 2005, December. WEAVER Codes: Highly Fault Tolerant
Erasure Codes for Storage Systems. In FAST (Vol. 5, pp. 16-16).
[19] Hafner, J.L., 2006, June. HoVer erasure codes for disk arrays. In Dependable Systems and Networks, 2006. DSN 2006. International Conference
on (pp. 217-226). IEEE.
[20] Sathiamoorthy, M., Asteris, M., Papailiopoulos, D., Dimakis, A.G.,
Vadali, R., Chen, S. and Borthakur, D., 2013, March. Xoring elephants:
Novel erasure codes for big data. In Proceedings of the VLDB Endowment (Vol. 6, No. 5, pp. 325-336). VLDB Endowment.
[21] Tang, D., Wang, X., Cao, S. and Chen, Z., 2008, August. A new class of
highly fault tolerant erasure code for the disk array. In Power Electronics
and Intelligent Transportation System, 2008. PEITS’08. Workshop on (pp.
578-581). IEEE.
[22] Xiang, L., Xu, Y., Lui, J. and Chang, Q., 2010, June. Optimal recovery of
single disk failure in RDP code storage systems. In ACM SIGMETRICS
Performance Evaluation Review (Vol. 38, No. 1, pp. 119-130). ACM.
[23] Wan, S., Cao, Q., Huang, J., Li, S., Li, X., Zhan, S., Yu, L., Xie, C. and
He, X., 2011, June. Victim disk ﬁrst: an asymmetric cache to boost the
performance of disk arrays under faulty conditions. In Proceedings of the
2011 USENIX conference on USENIX annual technical conference (pp.
13-13). USENIX Association.
[24] Megiddo, N. and Modha, D.S., 2003, March. ARC: A Self-Tuning, Low
Overhead Replacement Cache. In FAST (Vol. 3, pp. 115-130).
[25] Mattson, R.L., Gecsei, J., Slutz, D.R. and Traiger, I.L., 1970. Evaluation
techniques for storage hierarchies. IBM Systems journal, 9(2), pp.78-117.
[26] Aho, A.V., Denning, P.J. and Ullman, J.D., 1971. Principles of optimal
page replacement. Journal of the ACM (JACM), 18(1), pp.80-93.
[27] Robinson, J.T. and Devarakonda, M.V., 1990. Data cache management
using frequency-based replacement (Vol. 18, No. 1, pp. 134-142). ACM.
[28] O’neil, E.J., O’neil, P.E. and Weikum, G., 1993. The LRU-K page replacement algorithm for database disk buffering. ACM SIGMOD Record,
22(2), pp.297-306.
[29] Johnson, T. and Shasha, D., 1994. X3: A low overhead high performance
buffer management replacement algorithm. In Proceedings of the 20th
VLDB Conference.
[30] Lee, D., Choi, J., Kim, J.H., Noh, S.H., Min, S.L., Cho, Y. and Kim,
C.S., 1996. LRFU (least recently/frequently used) replacement policy: A
spectrum of block replacement policies. IEEE Transactions on Computers,
50(12), pp.1353302-1361.
[31] Bucy, J.S., Schindler, J., Schlosser, S.W. and Ganger, G.R., 2008. The
disksim simulation environment version 4.0 reference manual (cmu-pdl08-101). Parallel Data Laboratory, p.26.
[32] Eddy, Josh, Silent data corruption in SATA arrays: A solution, NEC.
2009.
[33] Patterson, D.A., Gibson, G. and Katz, R.H., 1988. A case for redundant
arrays of inexpensive disks (RAID) (Vol. 17, No. 3, pp. 109-116). ACM.
[34] Wu, C., He, X., Wu, G., Wan, S., Liu, X., Cao, Q. and Xie, C., 2011,
June. Hdp code: A horizontal-diagonal parity code to optimize i/o load
balancing in raid-6. In Dependable Systems & Networks (DSN), 2011
IEEE/IFIP 41st International Conference on (pp. 209-220). IEEE.
[35] Kuratti, A. and Sanders, W.H., 1995, April. Performance analysis of
the RAID 5 disk array. In Computer Performance and Dependability
Symposium, 1995. Proceedings., International (pp. 236-245). IEEE.
[36] Khan, O., Burns, R.C., Plank, J.S., Pierce, W. and Huang, C., 2012,
February. Rethinking erasure codes for cloud ﬁle systems: minimizing
I/O for recovery and degraded reads. In FAST (p. 20).
[37] Jiang, Y., Wu, C., Li, J. and Guo, M., 2015, November. EH-Code:
An extended mds code to improve single write performance of disk
arrays for correcting triple disk failures. In International Conference on
Algorithms and Architectures for Parallel Processing (pp. 34-49). Springer
International Publishing.
