[1] M. Al-Otoom, E. Forbes, and E. Rotenberg, “Exact: Explicit
dynamic-branch prediction with active updates,” in Proceedings of the
7th ACM International Conference on Computing Frontiers, ser. CF
710. New York, NY, USA: ACM, 2010, pp. 165-176.

[2] T. M. Austin and G. S. Sohi, “Zero-cycle loads: microarchitecture
support for reducing load latency,” in Microarchitecture, 1995.,
Proceedings of the 28th Annual International Symposium on, Nov
1995, pp. 82-92.

[3] M. Bekerman, S. Jourdan, R. Ronen, G. Kirshenboim, L. Rappoport,
A. Yoaz, and U. Weiser, “Correlated load-address predictors,” in
Computer Architecture, 1999. Proceedings of the 26th International
Symposium on, 1999, pp. 54-63.

[4] Browser benchmark, “Browsermark,” in http://web.basemark.com.

[5] B. Calder, G. Reinman, and D. M. Tullsen, “Selective value
prediction,” in Proceedings of the 26th Annual International
Symposium on Computer Architecture, set. ISCA ’99. Washington,
DC, USA: IEEE Computer Society, 1999, pp. 64-74.

[6] N. Chong and S. Ishtiaq, “Reasoning about the arm weakly consistent
memory model,” in Proceedings of the 2008 ACM SIGPLAN
Workshop on Memory Systems Performance and Correctness: Held in
Conjunction with the Thirteenth International Conference on
Architectural Support for Programming Languages and Operating
Systems (ASPLOS ’08), ser. MSPC ’08. New York, NY, USA: ACM,
2008, pp. 16-19.

[7] G. Z. Chrysos and J. S. Emer, “Memory dependence prediction using
store sets,” in Proceedings. 25th Annual International Symposium on
Computer Architecture (Cat. No.98CB36235), Jun 1998, pp. 142-153.

[8] Dromaeo: Javascript Performance Testing, “Dromaeo,” in
hitp://dromaeo.com.

[9] R. J. Eickemeyer and S. Vassiliadis, “A load-instruction unit for
pipelined processors,” IBM Journal of Research and Development,
vol. 37, no. 4, pp. 547-564, July 1993.

[10] R. J. Eickemeyer and S. Vassiliadis, “A load-instruction unit for
pipelined processors,” IBM Journal of Research and Development,
vol. 37, no. 4, pp. 547-564, July 1993.

[11] I. Forsyth, “The arm cortex-a72 processor: Delivering high efficiency
for server, networking and hpc.” Presented at ARM TechDay,
Londom, 2015.

[12] F. Gabbay, “Speculative execution based on value prediction,” EE
Department TR 1080, Technion - Israel Institue of Technology, Tech.
Rep., 1996.

[13] J. Gonzalez and A. Gonzalez, “Speculative execution via address
prediction and data prefetching,” in Proceedings of the 11th
International Conference on Supercomputing, setr.ICS ’97. New
York, NY, USA: ACM, 1997, pp. 196-203.

[14] Google Octane Benchmark, “Octane,” in
hitps://developers.google.com/octane.

[15] Google V8 Benchmarks, “V8,” in
hitp-//code. google.com/apis/v8/benchmarks. html.

[16] M. D. Hill and M. R. Marty, “Amdahl’s law in the multicore era,”
Computer, vol. 41, no. 7, pp. 33-38, July 2008.

[17] iBench Benchmark, “iBench,” in hitp:/Abench.sourceforge.net.

[18] R.E. Kessler, “The alpha 21264 microprocessor,” IEEE Micro, vol. 19,
no. 2, pp. 24-36, Mar 1999.

[19] Linpack Benchmark, “Linpack,” in
hitp:-//www.netlib.org/benchmark/hpl.

[20] M. H. Lipasti, C. B. Wilkerson, and J. P. Shen, “Value locality and
load value prediction,” SIGPLAN Not., vol. 31, no. 9, pp. 138-147,
Sep. 1996.

[21] J. Mandelblat, “Technology insight: Intel’s next generation
microarchitecture code name skylake.” Presented at Intel Developer
Forum, San Francisco, 2015.

[22] M. M. K. Martin, D. J. Sorin, H. W. Cain, M. D. Hill, and M. H.
Lipasti, “Correctly implementing value prediction in microprocessors
that support multithreading or multiprocessing,” in Microarchitecture,
2001. MICRO-34. Proceedings. 34th ACMAEEE International
Symposium on, Dec 2001, pp. 328-337.

[23] Media Player Benchmark, “MPlayer,” in
hitp://mplayerhq. hu/design7/dload. html.

[24] A. Moshovos and G. S. Sohi, “Streamlining inter-operation memory
communication via data dependence prediction,” in Proceedings of
30th Annual International Symposium on Microarchitecture, Dec
1997, pp. 235-245.

[25] A. Moshovos, S. E. Breach, T. N. Vijaykumar, and G. S. Sohi,
“Dynamic speculation and synchronization of data dependences,” in
Proceedings of the 24th Annual International Symposium on
Computer Architecture, ser. ISCA’97. New York, NY, USA: ACM,
1997, pp. 181-193. [Online]. Available:
http://doi.acm.org/10.1145/264107.264189

[26] R. Nair, “Dynamic path-based branch correlation,” in Proceedings of
the 28th Annual International Symposium on Microarchitecture, set.
MICRO 28. Los Alamitos, CA, USA: IEEE Computer Society Press,
1995, pp. 15-23.

[27] Paul E. McKenney, “Memory Barriers: a Hardware View for Software
Hackers,” in Linux Technology Center, IBM Beaverton, 2010.

[28] A. Perais and A. Seznec, “Practical data value speculation for future
high-end processors,” in High Performance Computer Architecture
(HPCA), 2014 IEEE 20th International Symposium on, Feb 2014, pp.
428-439,

[29] A. Perais and A. Seznec, “Bebop: A cost effective predictor
infrastructure for superscalar value prediction,” in 2015 IEEE 21st
International Symposium on High Performance Computer Architecture
(HPCA), Feb 2015, pp. 13-25.

[30] J. A. Poovey, T. M. Conte, M. Levy, and S. Gal-On, “A benchmark
characterization of the eembc benchmark suite,” IEEE Micro, vol. 29,
no. 5, pp. 18-29, Sept 2009.

[31] N. Riley and C. Zilles, “Probabilistic counter updates for predictor
hysteresis and stratification,” in High-Performance Computer
Architecture, 2006. The Twelfth International Symposium on, Feb
2006, pp. 110-120.

[32] Y. Sazeides and J. E. Smith, “The predictability of data values,” in
Microarchitecture, 1997, Proceedings., Thirtieth Annual IEEE/ACM
International Symposium on, Dec 1997, pp. 248-258.

[33] Y. Sazeides and J. E. Smith, “Implementations of context-based value
predictors,” Tech. Rep., 1997.

[34] Y. Sazeides, S. Vassiliadis, and J. E. Smith, “The performance
potential of data dependence speculation & collapsing,” in
Proceedings of the 29th Annual ACM/IEEE International Symposium
on Microarchitecture, ser. MICRO 29. Washington, DC, USA: IEEE
Computer Society, 1996, pp. 238-247.

[35] SciMark: Java benchmark for scientific and numerical computing,
“SciMark,” in hitp://math.nist. gov/scimark2/.

[36] A. Seznec, “A 64-kbytes ittage indirect branch predictor,” in Third
Championship Branch Prediction, ser. SJWAC-2, 2011.

[37] A. Seznec, “A new case for the tage branch predictor,” in Proceedings
of the 44th Annual IEEE/ACM International Symposium on
Microarchitecture, set. MICRO-44, New York, NY, USA: ACM,
2011, pp. 117-127.

[38] Standard Performance Evaluation Corporation, “The SPEC CPU 2000
Benchmark Suite,” in http://Awww.spec.org.

[39] Standard Performance Evaluation Corporation, “The SPEC CPU 2006
Benchmark Suite,” in http:/Awww.spec.org.

[40] Sunspider Javascript Benchmark, “Sunspider,” in
hitp:-//www.webkit. org/perf/sunspider/sunspiderhtml.

[41] G. S. Tyson and T. M. Austin, “Memory renaming: Fast, early and

accurate processing of memory communication,” Int. J. Parallel
Program., vol. 27, no. 5, pp. 357-380, Oct. 1999. [Online]. Available:
http://dx.doi.org/10.1023/A:1018734923512

[42] V. Zyuban and P. Kogge, “The energy complexity of register files,” in
Proceedings. 1998 International Symposium on Low Power
Electronics and Design (IEEE Cat. No.98TH8379), Aug 1998, pp.
305-310.