[1] Parosh A Abdulla, Ahmed Bouajjani, LukaS Holik, Lisa Kaati, and Tomas Vojnar. 2008. Composed bisimulation for tree

automata. In International Conference on Implementation and Application of Automata. Springer, 212-222.



[2] Aws Albarghouthi, Sumit Gulwani, and Zachary Kincaid. 2013. Recursive Program Synthesis (CAV). Springer-Verlag,

934-950.



[3] Rajeev Alur, Pavol Cerny, and Arjun Radhakrishna. 2015. Synthesis through unification. In International Conference on

Computer Aided Verification. Springer, 163-179.



[4] James Bornholt, Emina Torlak, Dan Grossman, and Luis Ceze. 2016. Optimizing Synthesis with Metasketches (POPL). ACM,

775-788.



[5] Julien Cristau, Christof LÃ©ding, and Wolfgang Thomas. 2005. Deterministic Automata on Unranked Trees (FCT). SpringerVerlag, 68-79.



[6] Yu Feng, Ruben Martins, Jacob Van Geffen, Isil Dillig, and Swarat Chaudhuri. 2017. Component-based synthesis of table

consolidation and transformation tasks from examples. In PLDI. ACM, 422-436.



[7] John K. Feser, Swarat Chaudhuri, and Isil Dillig. 2015. Synthesizing Data Structure Transformations from Input-output

Examples (PLDI). ACM, 229-239.



[8] Sumit Gulwani. 2011. Automating String Processing in Spreadsheets Using Input-output Examples (POPL). ACM, 317-330.



[9] Haruo Hosoya and Benjamin C. Pierce. 2003. XDuce: A Statically Typed XML Processing Language. ACM Trans. Internet

Technol. 3, 2 (2003), 117-148.



[10] Bishoksan Kafle and John P. Gallagher. 2015. Tree Automata-Based Refinement with Application to Horn Clause Verification

(VMCAI 2015). Springer-Verlag New York, Inc., 209-226.



[11] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 62. Publication date: October 2017.

62:26 Xinyu Wang, lsil Dillig, and Rishabh Singh



[12] Kevin Knight and Jonathan May. 2009. Applications of weighted automata in natural language processing. In Handbook of

Weighted Automata. Springer, 571-596.



[13] Tessa Lau, Steven A. Wolfman, Pedro Domingos, and Daniel S. Weld. 2003. Programming by Demonstration Using Version

Space Algebra. Mach. Learn. 53, 1-2 (2003), 111-156.



[14] A Solar Lezama. 2008. Program synthesis by sketching. Ph.D. Dissertation.



[15] Parthasarathy Madhusudan. 2011. Synthesizing Reactive Programs. In Computer Science Logic. 428-442.



[16] Wim Martens and Joachim Niehren. 2005. Minimizing Tree Automata for Unranked Trees. Springer Berlin Heidelberg,

232-246.



[17] Jonathan May and Kevin Knight. 2008. A Primer on Tree Automata Software for Natural Language Processing. (2008).



[18] Tom M Mitchell. 1982. Generalization as search. Artificial intelligence 18, 2 (1982), 203-226.



[19] Peter-Michael Osera and Steve Zdancewic. 2015. Type-and-example-directed Program Synthesis (PLDI), ACM, 619-630.



[20] Michael Pardowitz, Bernhard Glaser, and Rudiger Dillmann. 2007. Learning Repetitive Robot Programs from Demonstrations

Using Version Space Algebra. In Proceedings of the 13th IASTED International Conference on Robotics and Applications

(RA). ACTA Press, 394-399,



[21] Nadia Polikarpova, Ivan Kuraj, and Armando Solar-Lezama. 2016. Program Synthesis from Polymorphic Refinement Types

(PLDI). ACM, 522-538,



[22] Oleksandr Polozov and Sumit Gulwani. 2015. FlashMeta: A Framework for Inductive Program Synthesis (OOPSLA). ACM,

107-126.



[23] Eric Schkufza, Rahul Sharma, and Alex Aiken. 2013. Stochastic Superoptimization (ASPLOS). 305-316.



[24] Rishabh Singh and Sumit Gulwani. 2012. Synthesizing number transformations from input-output examples (CAV). Springer,

634-651.



[25] Calvin Smith and Aws Albarghouthi. 2016. MapReduce Program Synthesis (PLDI). ACM, 326-340.



[26] Armando Solar-Lezama, Gilad Arnold, Liviu Tancau, Rastislav Bodik, Vijay Saraswat, and Sanjit Seshia. 2007. Sketching

Stencils (PLDI). ACM, 167-178.



[27] Armando Solar-Lezama, Rodric Rabbah, Rastislav Bodik, and Kemal Ebcioglu. 2005. Programming by Sketching for

Bit-streaming Programs (PLDI). ACM, 281-294,



[28] Armando Solar-Lezama, Liviu Tancau, Rastislav Bodik, Sanjit Seshia, and Vijay Saraswat. 2006. Combinatorial Sketching

for Finite Programs (ASPLOS). ACM, 404-415.



[29] James W Thatcher and Jesse B Wright. 1968. Generalized finite automata theory with an application to a decision problem

of second-order logic. Theory of Computing Systems 2, 1 (1968), 57-81.



[30] Abhishek Udupa, Arun Raghavan, Jyotirmoy V. Deshmukh, Sela Mador-Haim, Milo M. K. Martin, and Rajeev Alur. 2013.

TRANSIT: specifying protocols with concolic snippets (PLDI). 287-296.



[31] Xinyu Wang, Sumit Gulwani, and Rishabh Singh. 2016. FIDEX: Filtering Spreadsheet Data using Examples (OOPSLA). ACM,

195-213,



[32] Navid Yaghmazadeh, Christian Klinger, Isil Dillig, and Swarat Chaudhuri. 2016. Synthesizing Transformations on Hierarchically Structured Data (PLDI), ACM, 508-521.



[33] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 62. Publication date: October 2017.
