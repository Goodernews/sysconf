

[1] The openssd project. http://www.openssd-project.

org/wiki/The_OpenSSD_Project, 2014.

[2] Samsung v-nand technology.

http://www.samsung.com/us/business/oem-solutions/

pdfs/V-NAND_technology_WP.pdf, 2014.

[3] N. Agrawal, V. Prabhakaran, T. Wobber, J. D. Davis,

M. S. Manasse, and R. Panigrahy. Design tradeoffs for

ssd performance. In Proc. USENIX ATC’08.

[4] S. Aritome. NAND flash memory technologies. IEEE

Press series on microelectronic systems. 2016.

[5] T. G. Armstrong, V. Ponnekanti, D. Borthakur, and

M. Callaghan. Linkbench: A database benchmark

based on the facebook social graph. In Proc.

SIGMOD’18.

[6] M. Balakrishnan, D. Malkhi, V. Prabhakaran,

T. Wobber, M. Wei, and J. Davis. Corfu: A shared log

design for flash clusters. In Proc. USENIX NSDI’12.

[7] B. Bhattacharjee, M. Canim, M. Hamedani, K. Ross,

and A. Storm. Supporting transient snapshot with
coordinated /uncoordinated commit protocol. US
Patent 14/748,438, 2016.

[8] P. Bonnet and L. Bouganim. Flash device support for
database management. In Proc. CIDR’11.

[9] Y. Cai, O. Mutlu, E. F. Haratsch, and K. Mai.
Program interference in mlc nand flash memory:
Characterization, modeling, and mitigation. In Proc.
ICCD’18.

[10] F. Chen, D. A. Koufaty, and X. Zhang. Understanding
intrinsic characteristics and system implications of
flash memory based solid state drives. In Proc.
SIGMETRICS 09.

[11] T.-S. Chung, D.-J. Park, S. Park, D.-H. Lee, S.-W.
Lee, and H.-J. Song. A survey of flash translation
layer. J. Syst. Archit., 55(5-6):332-343, 2009.

[12] C. Diaconu, C. Freedman, E. Ismert, P.-A. Larson,

P. Mittal, R. Stonecipher, N. Verma, and M. Zwilling.
Hekaton: Sql server’s memory-optimized oltp engine.
In Proc. SIGMOD, 2013.

[13] R. Gottstein, I. Petrov, and A. Buchmann. Append

storage in multi-version databases on flash. In Proc.

BNCOD’13.

[14] J. Gray and P. Shenoy. Rules of thumb in data

engineering. In Proc. ICDE’00, pages 3-10, 2000.

[15] S. Hardock, I. Petrov, R. Gottstein, and

A. Buchmann. In-place appends for real: Dbms

overwrites on flash without erase. In Proc. EDBT’17.

[16] S. Hardock, I. Petrov, R. Gottstein, and

A. Buchmann. Noftl: Database systems on ftl-less

flash storage. In Proc. VEDB’13.

[17] S. Hardock, I. Petrov, R. Gottstein, and
A. Buchmann. Selective in-place appends for real:
Reducing erases on wear-prone dbms storage. In Proc.
ICDE’17.

[18] S. Hardock, I. Petrov, R. Gottstein, and
A. Buchmann. Noftl for real: Databases on real native
flash storage. In Proc. EDBT, pages 517-520, 2015.

[19] S. Hardock, I. Petrov, R. Gottstein, and

A. Buchmann. Revisiting dbms space management for

native flash. In Proc. EDBT, 2016.

 

 

[20] W.-H. Kang, S.-W. Lee, B. Moon, G.-H. Oh, and

C. Min. X-ftl: Transactional ftl for sqlite databases. In

Proc. SIGMOD’13.

[21] S.-W. Lee and B. Moon. Design of flash-based dbms:

An in-page logging approach. In Proc. SIGMOD’07.

[22] S. T. Leutenegger and D. Dias. A modeling study of

the tpe-c benchmark. In Proc. SIGMOD’93.

[23] S.-P. Lim, 8.-W. Lee, and B. Moon. Faster ftl for

enterprise-class flash memory ssds. In Proc. SNAPI’10.

[24] Y. Lu, J. Shu, and W. Zheng. Extending the lifetime

of flash-based storage through reducing write

amplification from file systems. In Proc. FAST’13.

[25] D. Ma, J. Feng, and G. Li. A survey of address

translation technologies for flash memories. ACM

Comput. Surv., 46(3):36:1-36:39, 2014.

[26] N. Malviya, A. Weisberg, S. Madden, and

M. Stonebraker. Rethinking main memory oltp

recovery. In Proc. ICDE, 2014.

[27] R. Micheloni, L. Crippa, and A. Marelli. Inside NAND

Flash Memories. Springer, 2010.

[28] R. Micheloni, A. Marelli, and K. Eshghi. Inside Solid

State Drives (SSDs). Springer, 2012.

[29] G.-J. Na, B. Moon, and S.-W. Lee. In-page logging

b-tree for flash memory. In Proc. DASFAA’09.

[30] Y. Ou, J. Xu, and T. Harder. Towards an efficient

flash-based mid-tier cache. In Proc. DEXA’12.

[31] X. Ouyang, D. W. Nellans, R. Wipfel, and D. Flynn.

Beyond block i/o: Rethinking traditional storage

primitives. In Proc. HPCA’11.

[32] M. Sadoghi, K. A. Ross, M. Canim, and
B. Bhattacharjee. Exploiting ssds in operational
multiversion databases. VLDB, 25(5):651-672, Oct.
2016.

[33] C. Sauer, G. Graefe, and T. Harder. An empirical
analysis of database recovery costs. In RDSS, 2014.

[34] K.-D. e. a. Suh. A 3.3 v 32 mb nand flash memory
with incremental step pulse programming scheme. In
Proc. ISSCC’95.

[35] C. Yu, G. Yalcin, O. Mutlu, E. F. Haratsch, A. Crista,

O. S. Unsal, and M. Ken. Error analysis and

retention-aware error management for nand flash

memory. Intel Tech. Journal, 17(1):140 — 164, 2013.

