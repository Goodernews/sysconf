[1] K. Olukotun et al., “The case for a single-chip multiprocessor,” in
ASPLOS, 1996.
[2] J. Smith and R. Nair, Virtual Machines: Versatile Platforms for Systems
and Processes. Morgan Kaufmann Publishers Inc., 2005.
[3] D. Boggs, G. Brown, N. Tuck, and K. Venkatraman, “Denver: Nvidia’s
ﬁrst 64-bit arm processor,” Micro, IEEE, vol. 35, pp. 46–55, Mar 2015.
[4] A. Klaiber, “The technology behind the crusoe processors,” in White
paper, January 2000.
[5] S. S. et al., “Boa: Targeting multi-gigahertz with binary translation,” in
In Proc. of the 1999 Workshop on Binary Translation, 1999.
[6] K. Ebcioğlu et al., “Daisy: Dynamic compilation for 100architectural
compatibility,” in ISCA, 1997.
[7] F. Bellard, “Qemu, a fast and portable dynamic translator,” in Proceedings
of the Annual Conference on USENIX Annual Technical Conference,
ATEC ’05, 2005.
[8] S. Li et al., “Mcpat: An integrated power, area, and timing modeling
framework for multicore and manycore architectures,” in MICRO, 2009.
[9] J. Dehnert et al., “The transmeta code morphing&trade; software: Using
speculation, recovery, and adaptive retranslation to address real-life
challenges,” in CGO, 2003.

[10] Intel HW/SW co-designed processor project. http://www.eetimes.com/
document.asp?doc id=1266396.
[11] M. Lupon et al., “Speculative hardware/software co-designed ﬂoatingpoint multiply-add fusion,” in ASPLOS, 2014.
[12] W. Cheng et al., “Acceldroid: Co-designed acceleration of android
bytecode,” in CGO, 2013.
[13] N. Neelakantam et al., “A real system evaluation of hardware atomicity
for software speculation,” in ASPLOS, 2010.
[14] D. McFarlin et al., “Discerning the dominant out-of-order performance
advantage: Is it speculation or dynamism?,” in ASPLOS, 2013.
[15] Linley Group Microprocessor Report. Nvidias First CPU Is a Winner.
http://www.linleygroup.com/mpr/article.php?id=11262.
[16] S. S. Muchnick, Advanced Compiler Design & Implementation. Morgan
Kaufmann, 1997.
[17] K. Scott et al., “Overhead reduction techniques for software dynamic
translation,” in Parallel and Distributed Processing Symposium, 2004.
[18] Standard Performance Evaluation Corporation. SPEC CPU2006 Benchmarks. http://www.spec.org/cpu2006/.
[19] T. Yeh et al., “Parallax: An architecture for real-time physics,” in ISCA,
2007.
[20] A. Brankovic et al., “Warm-up simulation methodology for HW/SW
co-designed processors,” in CGO, p. 284, 2014.
[21] R. Kumar et al., “Assisting static compiler vectorization with a speculative
dynamic vectorizer in an hw/sw codesigned environment,” ACM Trans.
Comput. Syst. (TOCS), vol. 33, Jan. 2016.
[22] R. Kumar et al., “Vectorizing for wider vector units in a HW/SW codesigned environment,” in HPCC, pp. 518–525, 2013.
[23] J. Cano et al., “Quantitative characterization of the software layer of a
HW/SW co-designed processor,” in IISWC, pp. 138–147, 2016.
[24] R. Kumar et al., “Efﬁcient power gating of SIMD accelerators through
dynamic selective devectorization in an hw/sw codesigned environment,”
ACM Trans. Archit. Code Optim. (TACO), vol. 11, July 2014.
[25] A. Brankovic et al., “Accurate off-line phase classiﬁcation for HW/SW
co-designed processors,” in Computing Frontiers, pp. 5:1–5:10, 2014.
[26] R. Kumar et al., “Speculative dynamic vectorization to assist static
vectorization in a HW/SW co-designed environment,” in HiPC, 2013.
[27] R. Kumar et al., “Dynamic selective devectorization for efﬁcient power
gating of SIMD units in a HW/SW co-designed environment,” in SBACPAD, pp. 81–88, 2013.
[28] R. Kumar et al., “Speculative dynamic vectorization for HW/SW codesigned processors,” in PACT, pp. 459–460, 2012.
[29] C. Luk et al., “Pin: Building customized program analysis tools with
dynamic instrumentation,” in PLDI, 2005.
[30] N. Nethercote et al., “Valgrind: A framework for heavyweight dynamic
binary instrumentation,” in PLDI, 2007.
[31] Apple Rosetta. http://apple.wikia.com/wiki/Rosetta.
[32] V. Bala et al., “Dynamo: A transparent dynamic optimization system,”
in PLDI, 2000.
[33] D. Bruening et al., “An infrastructure for adaptive dynamic optimization,”
in CGO, 2003.
[34] L. Baraz et al., “Ia-32 execution layer: A two-phase dynamic translator
designed to support ia-32 applications on itanium-based systems,” in
MICRO, 2003.
[35] K. o. Scott, “Retargetable and reconﬁgurable software dynamic translation,” in CGO, 2003.
[36] S. Patel et al., “replay: A hardware framework for dynamic optimization,”
IEEE Trans. Comput., vol. 50, June 2001.
[37] Y. Almog et al., “Specialized dynamic optimizations for high-performance
energy-efﬁcient microarchitecture,” in CGO, 2004.
[38] M. Rosenblum et al., “Complete computer system simulation: The simos
approach,” IEEE Parallel Distrib. Technol., vol. 3, Dec. 1995.
[39] C. Hughes et al., “Rsim: simulating shared-memory multiprocessors with
ilp processors,” Computer, vol. 35, pp. 40–49, Feb 2002.
[40] T. Austin et al., “Simplescalar: An infrastructure for computer system
modeling,” Computer, vol. 35, Feb. 2002.
[41] P. Magnusson et al., “Simics: A full system simulation platform,”
Computer, vol. 35, Feb. 2002.
[42] T. Wenisch et al., “Simﬂex: Statistical sampling of computer system
simulation,” IEEE Micro, vol. 26, July 2006.
[43] M. Martin et al., “Multifacet’s general execution-driven multiprocessor
simulator (gems) toolset,” SIGARCH Comput. Archit. News, Nov. 2005.
[44] J. Miller et al., “Graphite: A distributed parallel simulator for multicores,”
in HPCA, 2010.
[45] T. Carlson et al., “Sniper: Exploring the level of abstraction for scalable
and accurate parallel multi-core simulation,” in SC, 2011.
[46] D. Sanchez et al., “Zsim: Fast and accurate microarchitectural simulation
of thousand-core systems,” in ISCA, 2013.
[47] N. Binkert et al., “The gem5 simulator,” SIGARCH Comput. Archit.
News, vol. 39, Aug. 2011.
[48] E. Ardestani et al., “Esesc: A fast multicore simulator using time-based
sampling,” in HPCA, 2013.
[49] E. Argollo et al., “Cotson: Infrastructure for full system simulation,”
SIGOPS Oper. Syst. Rev., vol. 43, Jan. 2009.
[50] B. Walters, “Vmware virtual platform,” Linux J., vol. 1999, July 1999.
[51] J. Watson, “Virtualbox: Bits and bytes masquerading as machines,” Linux
J., vol. 2008, Feb. 2008.