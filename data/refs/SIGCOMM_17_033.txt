
[1] A Deeper Dive Into Barefoot Networks Technology. http://techfieldday.com/
appearance/barefoot-networks-presents-at-networking-field-day- 14.

[2] Barefoot: The World’s Fastest and Most Programmable Networks.
https://barefootnetworks.com/media/white_papers/Barefoot- Worlds-FastestMost-Programmable-Networks.pdf.

[3] Cavium Attacks Broadcom in Switches. http://www.eetimes.com/document.asp?
doc_id=1323931.

[4] Cisco QuantumFlow Processor. https://newsroom.cisco.com/feature-content?
type=webcontent&articleld=4237516.

[5] dRMT project. http://drmt.technion.ac.il.

[6] Gurobi Optimization. http://www.gurobi.com.

[7] Intel FlexPipe. http://www.intel.com/content/dam/www/public/us/en/documents/
product-briefs/ethernet-switch-fm6000-series- brief. pdf.

[8] Intel TXP2800 Network Processor. http://www.ic72.com/pdf_file/i/587106.pdf.

[9] IXP4XX Product Line of Network Processors. http://www.intel.com/content/
www/us/en/intelligent-systems/previous- generation/intel-ixp4xx-intel-networkprocessor-product-line. html.

[10] Mellanox Indigo NPS-400 400Gbps NPU. _http://www.mellanox.com/page/
products_dyn?product_family=241 &mtag=nps_400.

[11] Netronome Agilio CX SmartNICs. https://www.netronome.com/products/agiliocx.

[12] P4 Specification. https://p4lang.github.io/p4-spec.

[13] switch.p4. https://github.com/p4lang/switch/tree/master/p4src.

[14] XPliant™ Ethernet Switch Product Family. http://www.cavium.com/XPliantEthernet-Switch-Product-Family.html.

[15] P. Bosshart, D. Daly, G. Gibb, M. Izzard, N. McKeown, J. Rexford, C. Schlesinger,
D. Talayco, A. Vahdat, G. Varghese, and D. Walker. P4: Programming ProtocolIndependent Packet Processors. SIGCOMM CCR, July 2014.

[16] P. Bosshart, G. Gibb, H.-S. Kim, G. Varghese, N. McKeown, M. Izzard, F. Mujica,
and M. Horowitz. Forwarding Metamorphosis: Fast Programmable Match-Action
Processing in Hardware for SDN. In ACM SIGCOMM, 2013.

[17] M. Dobrescu, N. Egi, K. Argyraki, B.-G. Chun, K. Fall, G. Iannaccone, A. Knies,
M. Manesh, and S. Ratnasamy. RouteBricks: Exploiting Parallelism to Scale
Software Routers. ACM SOSP, 2009.

[18] D.L. Draper, A. K. Jonsson, D. P. Clements, and D. E. Joslin. Cyclic scheduling.
In UCAT, 1999.

[19] G. Gibb, G. Varghese, M. Horowitz, and N. McKeown. Design Principles for
Packet Parsers. In ANCS, 2013.

[20] C. Hanen. Study of a NP-hard cyclic scheduling problem: The recurrent job-shop.
European journal of operational research, 1994.

[21] C. Hanen and A. Munier. A study of the cyclic scheduling problem on parallel
processors. Discrete Applied Mathematics, 1995S.

[22] L. Jose, L. Yan, G. Varghese, and N. McKeown. Compiling Packet Programs to
Reconfigurable Switches. In NSDI, 2015.

[23] I. Keslassy, K. Kogan, G. Scalosub, and M. Segal. Providing performance guarantees in multipass network processors. IEEE/ACM Transactions on Networking,
20(6):1895-1909, 2012.

[24] D. A. Patterson and J. L. Hennessy. Computer Organization and Design, 4th
Edition: The Hardware/Software Interface. 2008.

[25] T. Sherwood, G. Varghese, and B. Calder. A pipelined memory architecture for
high throughput network processors. In SCA, 2003.
