[1] Martín Abadi, Paul Barham, Jianmin Chen, Zhifeng Chen,
Andy Davis, Jeffrey Dean, et al. “TensorFlow: A System for
Large-Scale Machine Learning”. In: Proc. USENIX OSDI.
Savannah, GA, USA, 2016, pp. 265–283.
[2] Ioannis Alagiannis, Renata Borovica, Miguel Branco, Stratos
Idreos, and Anastasia Ailamaki. “NoDB: efficient query execution on raw data files”. In: Proc. ACM SIGMOD. Scottsdale,
AZ, USA, 2012, pp. 241–252.
[3] Michael Armbrust, Reynold S. Xin, Cheng Lian, Yin Huai,
Davies Liu, Joseph K. Bradley, et al. “Spark SQL: Relational
Data Processing in Spark”. In: Proc. ACM SIGMOD. Melbourne, Victoria, Australia, 2015, pp. 1383–1394.
[4] Guy E. Blelloch, Jonathan C. Hardwick, Siddhartha Chatterjee, Jay Sipelstein, and Marco Zagha. “Implementation of a
Portable Nested Data-parallel Language”. In: SIGPLAN Not.
28.7 (1993), pp. 102–111.
[5] Kevin J. Brown, HyoukJoong Lee, Tiark Rompf, Arvind K.
Sujeeth, Christopher De Sa, Christopher Aberger, and Kunle
Olukotun. “Have Abstraction and Eat Performance, Too: Optimized Heterogeneous Computing with Parallel Patterns”.
In: Proc. CGO. Barcelona, Spain, 2016, pp. 194–205.
[6] Andrew Crotty, Alex Galakatos, Kayhan Dursun, Tim Kraska,
Carsten Binnig, Ugur Cetintemel, and Stan Zdonik. “An Architecture for Compiling UDF-centric Workflows”. In: Proc.
VLDB Endow. 8.12 (2015), pp. 1466–1477.
[7] Philippe Cudre-Mauroux, Hideaki Kimura, K.-T. Lim, Jennie
Rogers, R. Simakov, Emad Soroush, et al. “A Demonstration of SciDB: A Science-oriented DBMS”. In: Proc. VLDB
Endow. 2.2 (2009), pp. 1534–1537.
[8] Julia Evans. Pandas Cookbook example. URL: http://nbvi
ewer.jupyter.org/github/jvns/pandas- cookbook/blob/v0.
1/cookbook/Chapter%207%20- %20Cleaning%20up%20messy%
20data.ipynb.

[9]

Jing Fan, Adalbert Gerald Soosai Raj, and Jignesh M. Patel.
“The Case Against Specialized Graph Analytics Engines”. In:
Proc. CIDR. Asilomar, CA, USA, 2015.

[10]

Ionel Gog, Malte Schwarzkopf, Natacha Crooks, Matthew P.
Grosvenor, Allen Clement, and Steven Hand. “Musketeer:
All for One, One for All in Data Processing Systems”. In:
Proc. ACM EuroSys. Bordeaux, France, 2015, 2:1–2:16.

[11]
Torsten Grust. “Monad Comprehensions: A Versatile Representation for Queries”. In: The Functional Approach to Data
Management: Modeling, Analyzing and Integrating Heterogeneous Data. Berlin, Heidelberg: Springer Berlin Heidelberg,
2004, pp. 288–311.

[12]

Gaël Guennebaud, Benoît Jacob, et al. Eigen v3. URL: http:
//eigen.tuxfamily.org.

[13]

HaskellWiki. Data Parallel Haskell.

URL : https : / / wiki .

haskell.org/GHC/Data_Parallel_Haskell.

[14]

Joseph M. Hellerstein, Christoper Ré, Florian Schoppmann,
Daisy Zhe Wang, Eugene Fratkin, Aleksander Gorajek, et al.
“The MADlib Analytics Library: Or MAD Skills, the SQL”.
In: Proc. VLDB 5.12 (2012), pp. 1700–1711.

[15]

Alekh Jindal, Praynaa Rawlani, Eugene Wu, Samuel Madden,
Amol Deshpande, and Mike Stonebraker. “Vertexica: Your
Relational Friend for Graph Analytics!” In: Proc. VLDB 7.13
(2014), pp. 1669–1672.

[16]

John Kessenich. An Introduction to SPIR-V. 2015. URL: https
://www.khronos.org/registry/spir-v/papers/WhitePaper.
pdf.

[26] Benjamin Recht, Christopher Re, Stephen Wright, and Feng
Niu. “Hogwild: A Lock-Free Approach to Parallelizing Stochastic Gradient Descent”. In: Advances in Neural Information
Processing Systems. Ed. by J. Shawe-Taylor, R. S. Zemel,
P. L. Bartlett, F. Pereira, and K. Q. Weinberger. Curran Associates, Inc., 2011, pp. 693–701.
[27] Tiark Rompf, Arvind K. Sujeeth, Nada Amin, Kevin J. Brown,
Vojin Jovanovic, HyoukJoong Lee, et al. “Optimizing Data
Structures in High-level Programs: New Directions for Extensible Compilers Based on Staging”. In: Proc. ACM POPL.
Rome, Italy, 2013.
[28]

SciPy.org. NumPy library. URL: http://www.numpy.org/.

[29] John E. Stone, David Gohara, and Guochun Shi. “OpenCL:
A Parallel Programming Standard for Heterogeneous Computing Systems”. In: Computing in Science Engineering 12.3
(2010), pp. 66–73.
[30] Michael Stonebraker and Ugur Cetintemel. ““One Size Fits
All”: An Idea Whose Time Has Come and Gone”. In: Proc.
ICDE. Tokyo, Japan, 2005, pp. 2–11.
[31] Narayanan Sundaram, Nadathur Satish, Md Mostofa Ali Patwary, Subramanya R. Dulloor, Michael J. Anderson, Satya
Gautam Vadlamudi, et al. “GraphMat: High Performance
Graph Analytics Made Productive”. In: Proc. VLDB 8.11
(2015), pp. 1214–1225.
[32] TensorFlow documentation. Vector Representations of Words,
word2vec example. URL : https : / / www . tensorflow . org /
versions/r0.11/tutorials/word2vec/index.html.

[17]

Yannis Klonatos, Christoph Koch, Tiark Rompf, and Hassan
Chafi. “Building Efficient Query Engines in a High-level
Language”. In: Proc. VLDB 7.10 (2014), pp. 853–864.

[33] Transaction Processing Performance Council. TPC-H ad-hoc,
decision support benchmark. URL: http : / / www . tpc . org /
tpch/.

[18]

Christian Lattner and Vikram Adve. “LLVM: a compilation
framework for lifelong program analysis transformation”. In:
Proc. CGO. Palo Alto, CA, USA, 2004, pp. 75–86.

[34] David Walker. “Substructural Type Systems”. In: Advanced
Topics in Types and Programming Languages. Ed. by Benjamin C. Pierce. MIT Press, 2005. Chap. 1.

[19]

Charles L. Lawson, Richard J. Hanson, David R. Kincaid,
and Fred T. Krogh. “Basic Linear Algebra Subprograms for
Fortran Usage”. In: ACM Trans. Math. Softw. 5.3 (1979),
pp. 308–323.

[35] Michael E. Wolfe. “More Iteration Space Tiling”. In: Proc.
ACM/IEEE Supercomputing. Reno, NV, USA, 1989, pp. 655–
664.

[20]

Yann LeCun, Corinna Cortes, and Christopher J. C. Burges.
The MNIST database of handwritten digits. URL: http : / /
yann.lecun.com/exdb/mnist/.

[21]

Yucheng Low, Danny Bickson, Joseph Gonzalez, Carlos
Guestrin, Aapo Kyrola, and Joseph M. Hellerstein. “Distributed GraphLab: A Framework for Machine Learning
and Data Mining in the Cloud”. In: Proc. VLDB 5.8 (2012),
pp. 716–727.

[22]

Wes McKinney. “Data Structures for Statistical Computing in
Python”. In: Proc. SciPy. Austin, TX, USA, 2010, pp. 51–56.

[23]

Derek G. Murray, Michael Isard, and Yuan Yu. “Steno: Automatic Optimization of Declarative Queries”. In: Proc. SIGPLAN PLDI. San Jose, CA, USA, 2011, pp. 121–131.

[24]

Thomas Neumann. “Efficiently Compiling Efficient Query
Plans for Modern Hardware”. In: Proc. VLDB 4.9 (2011),
pp. 539–550.

[25]

Holger Pirk, Oscar Moll, Matei Zaharia, and Sam Madden.
“Voodoo-a vector algebra for portable database performance
on modern hardware”. In: Proc. VLDB 9.14 (2016), pp. 1707–
1718.

[36] Yuan Yu, Michael Isard, Dennis Fetterly, Mihai Budiu, Úlfar
Erlingsson, Pradeep Kumar Gunda, and Jon Currey. “DryadLINQ:
A System for General-purpose Distributed Data-parallel Computing Using a High-level Language”. In: Proc. USENIX
OSDI. San Diego, CA, USA, 2008, pp. 1–14.
[37] Matei Zaharia, Reynold S. Xin, Patrick Wendell, Tathagata
Das, Michael Armbrust, Ankur Dave, et al. “Apache Spark: A
Unified Engine for Big Data Processing”. In: Commun. ACM
59.11 (2016), pp. 56–65.
