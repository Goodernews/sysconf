[1] P. Brucker and S. Knust,
“Complexity results problems,” Web document, URL:
scheduling http://www2.informatik.uni-osnabrueck.de/knust/class/.
[2] J. K. Lenstra, D. B. Shmoys, and E. Tardos, “Approxima-
tion algorithms for scheduling unrelated parallel machines,” Mathematical programming, 1990.
[3] R. Bleuse, S. Kedad-Sidhoum, F. Monna, G. Mounie ́, and D. Trystram, “Scheduling Independent Tasks on Multi-cores with GPU Accelerators,” Concurr. Comput. : Pract. Exper., vol. 27, no. 6, pp. 1625–1638, Apr. 2015.
[4] C. Augonnet, S. Thibault, R. Namyst, and P.-A. Wacrenier, “Starpu: A unified platform for task scheduling on hetero- geneous multicore architectures,” Concurr. Comput. : Pract. Exper., vol. 23, no. 2, pp. 187–198, Feb. 2011.
[5] J. Planas, R. M. Badia, E. Ayguade ́, and J. Labarta, “Hi- erarchical task-based programming with StarSs,” Interna- tional Journal of High Performance Computing Applications, vol. 23, no. 3, pp. 284–299, 2009.
[6] E. Chan, F. G. Van Zee, P. Bientinesi, E. S. Quintana-Orti, G. Quintana-Orti, and R. Van de Geijn, “SuperMatrix: A multithreaded runtime scheduling system for algorithms-by- blocks,” in 13th ACM SIGPLAN Symposium on Principles and practice of parallel programming, 2008, p. 123–132.
[7] A. YarKhan, J. Kurzak, and J. Dongarra, QUARK Users’ Guide: QUeueing And Runtime for Kernels, UTK ICL, 2011.
[8] E. Hermann, B. Raffin, F. Faure, T. Gautier, and J. Allard, “Multi-GPU and Multi-CPU Parallelization for Interactive Physics Simulations,” in Euro-Par (2), 2010, pp. 235–246.
[9] G. Bosilca, A. Bouteiller, A. Danalis, M. Faverge, T. He ́rault, and J. Dongarra, “PaRSEC: A programming paradigm ex- ploiting heterogeneity for enhancing scalability,” Computing in Science and Engineering, 2013.
[10] V. Bonifaci and A. Wiese, “Scheduling unrelated machines of few different types,” CoRR, vol. abs/1205.0974, 2012. [Online]. Available: http://arxiv.org/abs/1205.0974
[11] H. Topcuouglu, S. Hariri, and M.-y. Wu, “Performance- Effective and Low-Complexity Task Scheduling for Hetero- geneous Computing,” IEEE Trans. Parallel Distrib. Syst., vol. 13, no. 3, pp. 260–274, Mar. 2002.
[12] E. Agullo, O. Beaumont, L. Eyraud-Dubois, and S. Kumar, “Are Static Schedules so Bad? A Case Study on Cholesky Factorization,” in 2016 IEEE International Parallel and Dis- tributed Processing Symposium, IPDPS 2016, Chicago, IL, USA, May 23-27, 2016, 2016, pp. 1021–1030.
[13] E. Agullo, B. Bramas, O. Coulaud, E. Darve, M. Messner, and T. Takahashi, “Task-based FMM for heterogeneous ar- chitectures,” Concurrency and Computation: Practice and Experience, vol. 28, no. 9, Jun. 2016.
[14] E. V. Shchepin and N. Vakhania, “An optimal rounding gives a better approximation for scheduling unrelated machines,” Operations Research Letters, 2005.
[15] C. Imreh, “Scheduling problems on two sets of identical machines,” Computing, vol. 70, no. 4, pp. 277–294, 2003.
[16] R. Bleuse, T. Gautier, J. V. F. Lima, G. Mounie ́, and D. Trys- tram, Scheduling Data Flow Program in XKaapi: A New Affinity Based Algorithm for Heterogeneous Architectures. Cham: Springer International Publishing, 2014, pp. 560–571.
[17] O. Beaumont, L. Eyraud-Dubois, and S. Kumar, “Approximation Proofs of a Fast and Efficient List Scheduling Algorithm for Task-Based Runtime Systems on Multicores and GPUs,” Oct. 2016, working paper or preprint. [Online]. Available: https://hal.inria.fr/hal-01386174
[18] “Chameleon, A dense linear algebra software for heterogeneous architectures,” 2014. [Online]. Available: https://project.inria.fr/chameleon
