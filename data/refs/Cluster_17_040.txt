[1] D. Kossmann et al., “An evaluation of alternative architectures for
transaction processing in the cloud,” in SIGMOD, 2010, pp. 579–590.
[2] B. F. Cooper et al., “Benchmarking cloud serving systems with ycsb,”
in SoCC, 2010, pp. 143–154.
[3] R. Kallman et al., “H-store: A high-performance, distributed main
memory transaction processing system,” Proc. VLDB Endow., pp. 1496–
1499, 2008.
[4] “VoltDB. [online]. available: https://voltdb.com/.”
[5] P. Agrawal et al., “Asynchronous view maintenance for vlsd databases,”
in SIGMOD, 2009, pp. 179–192.
[6] P.-A. Larson and H. Z. Yang, “Computing queries from derived relations,” in VLDB, 1985, pp. 259–269.
[7] H. Z. Yang and P.-A. Larson, “Query transformation for psj-queries,” in
VLDB, 1987, pp. 245–254.
[8] “HBase. [online]. available: http://hbase.apache.org/.”
[9] F. Chang et al., “Bigtable: A distributed storage system for structured
data,” in OSDI, 2006, pp. 15–15.
[10] “Accumulo. [online]. available: https://accumulo.apache.org/.”
[11] “Apache Phoenix. [online]. available: http://phoenix.apache.org/.”
[12] “Thepra. [online]. available: http://tephra.incubator.apache.org/.”
[13] J. Goldstein and P.-A. Larson, “Optimizing queries using materialized
views: A practical, scalable solution,” in SIGMOD, 2001, pp. 331–342.
[14] S. Agrawal et al., “Automated selection of materialized views and
indexes in sql databases,” in VLDB, 2000, pp. 496–505.
[15] J. A. Blakeley, P.-A. Larson, and F. W. Tompa, “Efﬁciently updating
materialized views,” in SIGMOD, 1986, pp. 61–71.
[16] D. Quass, A. Gupta, I. S. Mumick, and J. Widom, “Making views selfmaintainable for data warehousing,” in DIS, 1996, pp. 158–169.
[17] J. A. Blakeley, N. Coburn, and P.-V. Larson, “Updating derived relations: Detecting irrelevant and autonomously computable updates,” ACM
Trans. Database Syst., vol. 14, no. 3, Sep. 1989.
[18] S. Das et al., “G-store: A scalable data store for transactional multi key
access in the cloud,” in SoCC, 2010, pp. 163–174.
[19] J. Baker et al., “Megastore: Providing scalable, highly available storage
for interactive services,” in CIDR, 2011, pp. 223–234.
[20] J. Shute et al., “F1: A distributed sql database that scales,” Proc. VLDB
Endow., pp. 1068–1079, 2013.
[21] J. C. Corbett et al., “Spanner: Google’s globally-distributed database,”
in OSDI, 2012, pp. 251–264.