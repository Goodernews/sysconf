[1] Abduljabbar, M., Markomanolis, G.S., Ibeid, H., Yokota, R., Keyes, D.: Communication reducing algorithms for distributed hierarchical N-body problems with

boundary distributions. In: Kunkel, J.M., Yokota, R., Balaji, P., Keyes, D. (eds.)

ISC 2017. LNCS, vol. 10266, pp. 79–96. Springer, Cham (2017). doi:10.1007/

978-3-319-58667-0 5

[2] AbdulJabbar, M., Yokota, R., Keyes, D.: Asynchronous execution of the fast multipole method using CHARM++. arXiv preprint arXiv:1405.7487 (2014)

[3] Barnes, J., Hut, P.: A hierarchical o(n log n) force-calculation algorithm. Nature

324(6096), 446–449 (1986)

[4] Bédorf, J., Gaburov, E., Zwart, S.P.: A sparse octree gravitational N-body code

that runs entirely on the GPU processor. J. Comput. Phys. 231(7), 2825–2839

(2012)

[5] Farhan, M.A.A., Kaushik, D.K., Keyes, D.E.: Unstructured computational aerodynamics on many integrated core architecture. Parallel Comput. 59, 97–118 (2016).

Theory and Practice of Irregular Applications

[6] Greengard, L., Gropp, W.D.: A parallel version of the fast multipole method.

Comput. Math. Appl. 20(7), 63–71 (1990)

[7] Greengard, L., Rokhlin, V.: A fast algorithm for particle simulations. J. Comput.

Phys. 73(2), 325–348 (1987)

[8] Hoeﬂer, T., Siebert, C., Lumsdaine, A.: Scalable communication protocols for

dynamic sparse data exchange. In: Proceedings of the 15th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, PPoPP 2010, pp.

159–168. ACM, New York (2010). http://doi.acm.org/10.1145/1693453.1693476

[9] Ibeid, H., Yokota, R., Keyes, D.: A performance model for the communication in

fast multipole methods on high-performance computing platforms. Int. J. High

Perform. Comput. Appl. 30, 423–437 (2016)

[10]  Jeﬀers, J., Reinders, J., Sodani, A.: Intel Xeon Phi Processor High Performance

Programming (Knights Landing Edition), 2nd edn. Morgan Kaufmann, Boston

(2016)

[11]  Ramos, S., Hoeﬂer, T.: Capability models for manycore memory systems: a casestudy with xeon phi KNL. In: Proceedings of the 31st IEEE International Parallel

& Distributed Processing Symposium (IPDPS 2017). IEEE, May 2017

[12]  Warren, M.S., Salmon, J.K.: A fast tree code for many-body problems. Los Alamos

Sci. 22(10), 88–97 (1994)

[13]  Ying, L., Biros, G., Zorin, D., Langston, H.: A new parallel kernel-independent fast

multipole method. In: 2003 ACM/IEEE Conference Supercomputing, p. 14. IEEE

(2003)

[14]  Yokota, R.: An FMM based on dual tree traversal for many-core architectures. J.

Algorithms Comput. Technol. 7(3), 301–324 (2013)

[15]  Yokota, R., Abduljabbar, M.: N-body methods. In: Reinder, J., Jeﬀers, J. (eds.)

High Performance Parallelism Pearls - Multicore and Many-Core Programming

Approaches, Chap. 10, pp. 175–183. Elsevier, Amsterdam (2014). 1 edn

[16]  Yokota, R., et al.: ExaFMM (2016). https://github.com/exafmm/exafmm

[17]  Zandifar, M., Abdul Jabbar, M., Majidi, A., Keyes, D., Amato, N.M., Rauchwerger, L.: Composing algorithmic skeletons to express high-performance scientiﬁc

applications. In: Proceedings of the 29th ACM on International Conference on

Supercomputing, ICS 2015, pp. 415–424. ACM (2015)
