[1] Luk, C.-K., Hong, S., Kim, H.: Qilin: exploiting parallelism on heterogeneous multiprocessors with adaptive mapping. In: Proceedings of MICRO 2009. ACM (2009)

[2] Tarditi, D., Puri, S., Oglesby, J.: Accelerator: using data parallelism to program

GPUs for general-purpose uses. SIGOPS Oper. Syst. Rev. 40(5) (2006)

[3] Sengupta, D., et al.: Scheduling multi-tenant cloud workloads on accelerator-based

systems. In: Proceedings of the SC 2014. IEEE Press (2014)

[4] Sengupta, D., Belapure, R., Schwan, K.: Multi-tenancy on GPGPU-based servers.

In: Proceedings of the VTDC 2013. ACM (2013)

[5] Top 500 List. http://www.top500.org/system/177975

[6] Fu, Z., et al.: Mapgraph: a high level API for fast development of high performance

graph analytics on GPUs. In: GRADES 2014. ACM (2014)

[7] Khorasani, F., Vora, K., Gupta, R., Bhuyan, L.N.: Cusha: vertex-centric graph

processing on GPUs. In: Proceedings of HPDC 2014. ACM (2014)

[8] Sengupta, D., Song, S.L., et al.: Graphreduce: processing large-scale graphs on

accelerator-based systems. In: Proceedings of the SC 2015. ACM (2015)

[9] Sengupta, D., et al.: Graphreduce: large-scale graph analytics on accelerator-based

HPC systems. In: IEEE IPDPSW (2015)

[10]  Ching, A., Edunov, S., Kabiljo, M., et al.: One trillion edges: graph processing at

facebook-scale. Proc. VLDB Endow. 8(12), 1804–1815 (2015)

[11]  Twitter Statistics. http://tinyurl.com/kcuhdcw

[12]  Han, W., Miao, Y., Li, K., et al.: Chronos: a graph engine for temporal graph

analysis. EuroSys (2014)

[13]  Sun, J., Faloutsos, C., Papadimitriou, S., Yu, P.S.: Graphscope: parameter-free

mining of large time-evolving graphs, KDD 2007. ACM (2007)

[14]  Fard, A., Abdolrashidi, A., Ramaswamy, L., Miller, J.: Towards eﬃcient query

processing on massive time-evolving graphs. In: CollaborateCom, October 2012

[15]  Malewicz, G., Austern, M.H., Bik, A.J., et al.: Pregel: a system for large-scale

graph processing, SIGMOD 2010. ACM (2010)

[16]  Gonzalez, J.E., Low, Y., Gu, H., et al.: Powergraph: distributed graph-parallel

computation on natural graphs. In: OSDI 2012. USENIX, Hollywood (2012)

[17]  Low, Y., Bickson, D., Gonzalez, J., et al.: Distributed graphlab: a framework for

machine learning and data mining in the cloud. Proc. VLDB Endow. 5, 716–727

(2012)

[18]  Kyrola, A., Blelloch, G., Guestrin, C.: Graphchi: large-scale graph computation on

just a PC. In: OSDI 2012. USENIX Association, Berkeley (2012)

[19]  Roy, A., Mihailovic, I., Zwaenepoel, W.: X-stream: edge-centric graph processing

using streaming partitions. In: SOSP 2013. ACM (2013)

[20]  Bell, N., Garland, M.: Eﬃcient sparse matrix-vector multiplication on CUDA.

NVIDIA Corporation, NVIDIA Technical report NVR-2008-004, December 2008

[21]  Ediger, D., Jiang, K., Riedy, J., Bader, D.: Massive streaming data analytics: a

case study with clustering coeﬃcients. In: IPDPSW 2010, pp. 1–8, April 2010

[22]  McColl, R., Green, O., Bader, D.: A new parallel algorithm for connected components in dynamic graphs. In: HiPC, December 2013

[23]  Ediger, D., Riedy, J., Bader, D., Meyerhenke, H.: Tracking structure of streaming

social networks. In: IPDPSW 2011, May 2011

[24]  Sengupta, D., et al.: GraphIn: An Online High Performance Incremental Graph

Processing Framework. Springer International Publishing, Cham (2016)

[25]  System design principles for heterogeneous resource management and scheduling

in accelerator-based systems (2016). http://hdl.handle.net/1853/55607

[26]  CUDA 7.0. https://developer.nvidia.com/cuda-downloads/

[27]  Ramalingam, G., Reps, T.: An incremental algorithm for a generalization of the

shortest-path problem. J. Algorithms, 21(2) (1996)

[28]  Sundaram, N., Satish, N., Patwary, M.M.A., et al.: Graphmat: high performance

graph analytics made productive. Proc. VLDB Endow. 8(11), 1214–1225 (2015)

[29]  Ediger, D., McColl, R., Riedy, J., Bader, D.: Stinger: high performance data structure for streaming graphs. In: HPEC, September 2012

[30]  BlazeGraph. https://www.blazegraph.com/

[31]  University of Florida Sparse Matrix Collection. http://tinyurl.com/hh8g3n9

[32]  Murphy, R.C., Wheeler, K., Barrett, B., Ang, J.A.: Introducing the graph 500. In:

Cray User’s Group (CUG) (2010)

[33]  Sengupta, D., et al.: A framework for emulating non-volatile memory systems with

diﬀerent performance characteristics. In: Proceedings of the ICPE 2015. ACM

(2015)

[34]  Feng, G., Meng, X., Ammar, K.: Distinger: a distributed graph data structure for

massive dynamic graph processing. In: Big Data. IEEE (2015)
