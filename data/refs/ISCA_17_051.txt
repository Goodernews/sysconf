[1] Banit Agrawal and Timothy Sherwood. 2008. Ternary CAM Power and Delay
Model: Extensions and Uses. IEEE Trans. Very Large Scale Integr. Syst. (2008),
554–564.
[2] Omar Alejandro Aguilar and Joel Carlos Huegel. 2011. Inverse Kinematics Solution for Robotic Manipulators Using a CUDA-Based Parallel Genetic Algorithm.
In Proceedings of the 10th Mexican International Conference on Advances in
Artificial Intelligence - Volume Part I (MICAI 2011). 490–503.
[3] Junwhan Ahn, Sungpack Hong, Sungjoo Yoo, Onur Mutlu, and Kiyoung Choi.
2015. A Scalable Processing-in-memory Accelerator for Parallel Graph Processing. In Proceedings of the 42nd Annual International Symposium on Computer
Architecture (ISCA-42). 105–117.
[4] Junwhan Ahn, Sungjoo Yoo, Onur Mutlu, and Kiyoung Choi. 2015. PIM-enabled
instructions: a low-overhead, locality-aware processing-in-memory architecture..
In Proceedings of the 42th Annual International Symposium on Computer Architecture (ISCA-42). 336–348.
[5] Alaa R Alameldeen and David A Wood. 2004. Frequent Pattern Compression:
A Significance-Based Compression Scheme for L2 Caches. Dept. Comp. Scie.,
Univ. Wisconsin-Madison, Tech. Rep 1500 (2004).
[6] Carlos Alvarez, Jesus Corbal, and Mateo Valero. 2005. Fuzzy Memoization for
Floating-Point Multimedia Applications. IEEE Trans. Comput. 54, 7 (2005),
922–927.
[7] Carlos Álvarez, Jesús Corbal, and Mateo Valero. 2012. Dynamic Tolerance
Region Computing for Multimedia. IEEE Trans. Computers 61 (2012), 650–665.
[8] David A. Bader and Kamesh Madduri. 2005. Design and Implementation of the
HPCS Graph Analysis Benchmark on Symmetric Multiprocessors. In Proceedings
of the 12th International Conference on High Performance Computing (HiPC
2005). 465–476. https://doi.org/10.1007/11602569_48
[9] Christian Bienia. 2011. Benchmarking Modern Multiprocessors. Ph.D. Dissertation. Princeton University.
[10] Nathan Binkert, Bradford Beckmann, Gabriel Black, Steven K. Reinhardt, Ali
Saidi, Arkaprava Basu, Joel Hestness, Derek R. Hower, Tushar Krishna, Somayeh
Sardashti, Rathijit Sen, Korey Sewell, Muhammad Shoaib, Nilay Vaish, Mark D.
Hill, and David A. Wood. 2011. The Gem5 Simulator. SIGARCH Comput. Archit.
News 39 (2011), 1–7.
[11] M. Creel and M. Zubair. 2012. High Performance Implementation of an Econometrics and Financial Application on GPUs. In Proceedings of International
Conference on High Performance Computing, Networking, Storage and Analysis
(SCC 2012). 1147–1153. https://doi.org/10.1109/SC.Companion.2012.138
[12] Reetuparna Das, Asit K. Mishra, Chrysostomos Nicopoulos, Dongkook Park,
Vijaykrishnan Narayanan, Ravishankar R. Iyer, Mazin S. Yousif, and Chita R.
Das. 2008. Performance and Power Optimization Through Data Compression
in Network-on-Chip Architectures. In Proceedings of the 14th International
Conference on High-Performance Computer Architecture (HPCA-14). 215–225.
[13] Zidong Du, Avinash Lingamneni, Yunji Chen, Krishna V. Palem, Olivier Temam,
and Chengyong Wu. 2015. Leveraging the Error Resilience of Neural Networks
for Designing Highly Energy Efficient Accelerators. IEEE Trans. on CAD of
Integrated Circuits and Systems 34 (2015), 1223–1235.
[14] Hadi Esmaeilzadeh, Adrian Sampson, Luis Ceze, and Doug Burger. 2012. Architecture Support for Disciplined Approximate Programming. SIGPLAN Not. 47, 4
(2012), 301–312.
[15] Hadi Esmaeilzadeh, Adrian Sampson, Luis Ceze, and Doug Burger. 2012. Neural
Acceleration for General-Purpose Approximate Programs. In Proceedings of the
45th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO45). 449–460.
[16] Alexander Guzhva, Sergey Dolenko, and Igor Persiantsev. 2009. Multifold Acceleration of Neural Network Computations Using GPU. In Proceedings of the 19th
International Conference on Artificial Neural Networks: Part I (ICANN 2009).
373–380.
[17] Yuho Jin, Ki Hwan Yum, and Eun Jung Kim. 2008. Adaptive Data Compression
for High-performance Low-power On-chip Networks. In Proceedings of the 41st
Annual IEEE/ACM International Symposium on Microarchitecture (MICRO-41).
354–363.
[18] Daya S. Khudia, Babak Zamirai, Mehrzad Samadi, and Scott Mahlke. 2015.
Rumba: An Online Quality Management System for Approximate Computing. In
Proceedings of the 42nd Annual International Symposium on Computer Architecture (ISCA-42). 554–566.
[19] Snehasish Kumar, Naveen Vedula, Arrvindh Shriraman, and Vijayalakshmi Srinivasan. 2015. DASX: Hardware Accelerator for Software Data Structures. In
Proceedings of the 29th ACM on International Conference on Supercomputing
(ICS 2015). 361–372.
[20] Jure Leskovec and Andrej Krevl. 2014. SNAP Datasets: Stanford Large Network
Dataset Collection. http://snap.stanford.edu/data. (June 2014).
[21] Song Liu, Karthik Pattabiraman, Thomas Moscibroda, and Benjamin G. Zorn.
2011. Flikker: Saving DRAM Refresh-power Through Critical Data Partitioning.
In Proceedings of the 16th International Conference on Architectural Support for
Programming Languages and Operating Systems (ASPLOS-XVI). 213–224.

[22] Chi-Keung Luk, Robert Cohn, Robert Muth, Harish Patil, Artur Klauser, Geoff
Lowney, Steven Wallace, Vijay Janapa Reddi, and Kim Hazelwood. 2005. Pin:
Building Customized Program Analysis Tools with Dynamic Instrumentation. In
Proceedings of the 26th ACM SIGPLAN Conference on Programming Language
Design and Implementation (PLDI 2005) (PLDI ’05). 190–200.
[23] Joshua San Miguel, Jorge Albericio, Andreas Moshovos, and Natalie Enright
Jerger. 2015. Doppelganger: A Cache for Approximate Computing. In Proceedings of the 48th International Symposium on Microarchitecture (MICRO-48).
50–61.
[24] Joshua San Miguel, Mario Badr, and Natalie Enright Jerger. 2014. Load Value
Approximation. In Proceedings of the 47th Annual IEEE/ACM International
Symposium on Microarchitecture (MICRO-47). 127–139.
[25] Thierry Moreau, Mark Wyse, Jacob Nelson, Adrian Sampson, Hadi Esmaeilzadeh,
Luis Ceze, and Mark Oskin. 2015. SNNAP: Approximate Computing on Programmable SoCs via Neural Acceleration. In Proceeedings of the 21st IEEE
International Symposium on High Performance Computer Architecture (HPCA21). 603–614.
[26] Naveen Muralimanohar, Rajeev Balasubramonian, and Norm Jouppi. 2007. Optimizing NUCA Organizations and Wiring Alternatives for Large Caches with
CACTI 6.0. In Proceedings of the 40th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO-40). 3–14.
[27] Mehrzad Samadi, Davoud Anoushe Jamshidi, Janghaeng Lee, and Scott A.
Mahlke. 2014. Paraprox: Pattern-Based Approximation for Data Parallel Applications. In Proceedings of the 19th International Conference on Architectural
Support for Programming Languages and Operating Systems (ASPLOS-XIX).
35–50.
[28] Mehrzad Samadi, Janghaeng Lee, D. Anoushe Jamshidi, Amir Hormati, and
Scott Mahlke. 2013. SAGE: Self-tuning Approximation for Graphics Engines. In
Proceedings of the 46th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO-46). 13–24.
[29] Adrian Sampson, André Baixo, Benjamin Ransford, Thierry Moreau, Joshua Yip,
Luis Ceze, and Mark Oskin. 2015. Accept: A Programmer-Guided Compiler
Framework for Practical Approximate Computing. University of Washington
Technical Report UW-CSE-15-01 1 (2015).
[30] Adrian Sampson, Werner Dietl, Emily Fortuna, Danushen Gnanapragasam, Luis
Ceze, and Dan Grossman. 2011. EnerJ: Approximate Data Types for Safe and
General Low-Power Computation. In Proceedings of the 32nd ACM SIGPLAN
Conference on Programming Language Design and Implementation (PLDI 2011).
IEEE, 164–174.
[31] Adrian Sampson, Jacob Nelson, Karin Strauss, and Luis Ceze. 2013. Approximate
Storage in Solid-State Memories. In Proceedings of the 46th Annual IEEE/ACM
International Symposium on Microarchitecture (MICRO-46). 25–36.
[32] Stelios Sidiroglou-Douskos, Sasa Misailovic, Henry Hoffmann, and Martin Rinard.
2011. Managing Performance vs. Accuracy Trade-offs with Loop Perforation.
In Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European
Conference on Foundations of Software Engineering (ESEC/FSE 2011). 124–134.
[33] Renée St. Amant, Amir Yazdanbakhsh, Jongse Park, Bradley Thwaites, Hadi Esmaeilzadeh, Arjang Hassibi, Luis Ceze, and Doug Burger. 2014. General-purpose
Code Acceleration with Limited-precision Analog Computation. In Proceeding of
the 41st Annual International Symposium on Computer Architecuture (ISCA-41).
505–516.
[34] Swagath Venkataramani, Vinay K. Chippa, Srimat T. Chakradhar, Kaushik Roy,
and Anand Raghunathan. 2013. Quality Programmable Vector Processors for
Approximate Computing. In Proceedings of the 46th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO-46). 1–12.
[35] Amir Yazdanbakhsh, Jongse Park, Hardik Sharma, Pejman Lotfi-Kamran, and
Hadi Esmaeilzadeh. 2015. Neural Acceleration for GPU Throughput Processors. In Proceedings of the 48th International Symposium on Microarchitecture
(MICRO-48). 482–493.
[36] J. Zhan, M. Poremba, Y. Xu, and Y. Xie. 2014. Leveraging Delta Compression
for End-to-End Memory Access in NoC Based Multicores. In 2014 19th Asia
and South Pacific Design Automation Conference (ASP-DAC). 586–591. https:
//doi.org/10.1109/ASPDAC.2014.6742954
[37] Ping Zhou, Bo Zhao, Yu Du, Yi Xu, Youtao Zhang, Jun Yang, and Li Zhao. 2009.
Frequent Value Compression in Packet-based NoC Architectures. In Proceedings
of the 2009 Asia and South Pacific Design Automation Conference (ASP-DAC
2009). 13–18.