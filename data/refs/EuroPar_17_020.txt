[1] Bellman, R.: On a routing problem. Technical report, DTIC Document (1956)

[2] Chakrabarti, D., Zhan, Y., Faloutsos, C.: R-MAT: a recursive model for graph

mining. In: SDM, vol. 4, pp. 442–446. SIAM (2004)

[3] Dijkstra, E.W.: A note on two problems in connexion with graphs. Numer. Math.

1(1), 269–271 (1959)

[4] Edmonds, N., Breuer, A., Gregor, D., Lumsdaine, A.: Single-source shortest paths

with the parallel boost graph library. In: The Ninth DIMACS Implementation

Challenge: The Shortest Path Problem, Piscataway, NJ, pp. 219–248 (2006)

[5] Gonzalez, J.E., Low, Y., Gu, H., Bickson, D., Guestrin, C.: PowerGraph: distributed graph-parallel computation on natural graphs. In: OSDI, vol. 12, p. 2 (2012)

[6] Harshvardhan, Fidel, A., Amato, N.M., Rauchwerger, L.: KLA: a new algorithmic

paradigm for parallel graph computations. In: Proceedings of 23rd International

Conference on Parallel Architectures and Compilation, pp. 27–38. ACM (2014)

[7] Kanewala, T.A., Zalewski, M., Lumsdaine, A.: Abstract graph machine. arXiv

preprint arXiv:1604.04772 (2016)

[8] Lenharth, A., Nguyen, D., Pingali, K.: Priority queues are not good concurrent

priority schedulers. The University of Texas at Austin, Department of Computer

Sciences. Technical report TR-11-39 (2011)

[9] Meyer, U., Sanders, P.: δ-stepping: a parallelizable shortest path algorithm. J.

Algorithms 49(1), 114–152 (2003)

[10]  Nguyen, D., Lenharth, A., Pingali, K.: A lightweight infrastructure for graph analytics. In: Proceedings of 24th ACM Symposium on Operating Systems Principles,

pp. 456–471. ACM (2013)

[11]  Nguyen, D., Pingali, K.: Synthesizing concurrent schedulers for irregular algorithms. In: ACM SIGPLAN Notices, vol. 46, pp. 333–344. ACM (2011)

[12]  Pingali, K., Nguyen, D., Kulkarni, M., Burtscher, M., Hassaan, M.A., Kaleem,

R., Lee, T.H., Lenharth, A., Manevich, R., Méndez-Lojo, M., et al.: The tao of

parallelism in algorithms. ACM SIGPLAN Not. 46(6), 12–25 (2011)

[13]  Prountzos, D., Manevich, R., Pingali, K.: Elixir: a system for synthesizing concurrent graph programs. ACM SIGPLAN Not. 47(10), 375–394 (2012)

[14]  Willcock, J.J., Hoeﬂer, T., Edmonds, N.G., Lumsdaine, A.: AM++: a generalized

active message framework. In: Proceedings of 19th Internatational Conference on

Parallel Architectures and Compilation Techniques, pp. 401–410. ACM (2010)
