[1] N. Agarwal, D. Nellans, M. Stephenson, M. O’Connor, and S. W. Keckler. Page
Placement Strategies for GPUs within Heterogeneous Memory Systems. In
International Conference on Architectural Support for Programming Languages
and Operating Systems (ASPLOS), 2015.
[2] D. H. Bailey, L. Dagum, E. Barszcz, and H. D. Simon. Nas parallel benchmark
results. In Supercomputing ’92: Proceedings of the 1992 ACM/IEEE conference on
Supercomputing, pages 386–393, Los Alamitos, CA, USA, 1992. IEEE Computer
Society Press. ISBN 0-8186-2630-5.
[3] E. D. Berger, K. S. McKinley, R. D. Blumofe, and P. R. Wilson. Hoard: A Scalable
Memory Allocator for Multithreaded Applications. In International Conference
on Architectural Support for Programming Languages and Operating Systems
(ASPLOS), 2000.
Besard.
Pointer-chasing
memory
benchmark.
[4] T.
https://github.com/maleadt/pChase.
[5] A. Bivens, P. Dube, M. Franceschini, J. Karidis, L. Lastras, and M. Tsao. Architectural Design for Next Generation Heterogeneous Memory Systems. In
International Memory Workshop, 2010.
[6] V. T. Chakaravarthy. New results on the computability and complexity of points–
to analysis. In ACM SIGPLAN-SIGACT Symposium on Principles of Programming
Languages (POPL), 2003.
[7] C. Ding and K. Kennedy. Bandwidth-based performance tuning and prediction.
In International Conference on Parallel Computing and Distributed Systems, 1999.
[8] S. R. Dulloor, A. Roy, Z. Zhao, N. Sundaram, N. Satish, R. Sankaran, J. Jackson,
and K. Schwan. Data Tiering in Heterogeneous Memory Systems. In Proceedings
of the Eleventh European Conference on Computer Systems (EuroSys), 2016.
[9] P. Fischer and J. Lottes. nek5000 Web page. http://nek5000.mcs.anl.gov, Web page,
2008.
[10] M. Giardino, K. Doshi, and B. Ferri. Soft2LM: Application Guided Heterogeneous
Memory Management. In International Conference on Networking, Architecture,
and Storage (NAS), 2016.
[11] C. Lattner. LLVM: An Infrastructure for Multi-Stage Optimization. PhD thesis,
Computer Science Dept., Univ. of Illinois at Urbana-Champaign, 2002.
[12] D. Li, J. Vetter, G. Marin, C. McCurdy, C. Cira, Z. Liu, and W. Yu. Identifying Opportunities for Byte-Addressable Non-Volatile Memory in Extreme-Scale
Scientific Applications. In International Parallel and Distributed Processing Symposium, 2012.
[13] F. X. Lin and X. Liu. memif: Towards Programming Heterogeneous Memory
Asynchronously. In International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), 2016.
[14] P. Macko. PCMSIM: A Simple PCM Block Device Simulator for Linux.
https://code.google.com/p/pcmsim.
[15] J. D. McCalpin. STREAM: Sustainable Memory Bandwidth in High Performance
Computers. https://www.cs.virginia.edu/stream.
[16] M. M. Michael. Scalable Lock-free Dynamic Memory Allocation. In ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI),
2004.
[17] M. K. Qureshi, M. Franchescini, V. Srinivasan, L. Lastras, B. Abali, and J. Karidis.
Enhancing Lifetime and Security of PCM-Based Main Memory with Start-Gap
Wear Leveling. In MICRO, 2009.
[18] M. K. Qureshi, V. Srinivasan, and J. A. Rivers. Scalable High-Performance Main
Memory System Using Phase-Change Memory Technology. In ISCA, 2009.
[19] D. Shen, X. Liu, and F. X. Lin. Characterizing Emerging Heterogeneous Memory.
In ACM SIGPLAN International Symposium on Memory Management (ISMM),
2016.
[20] M. Silvano and P. Toth. Knapsack Problems: Algorithms and Computer Implementations. John Wiley & Sons, 1990.
[21] K. Suzuki and S. Swanson. The Non-Volatile Memory Technology Database
(NVMDB). Technical Report CS2015-1011, Department of Computer Science &
Engineering, University of California, San Diego, 2015. http://nvmdb.ucsd.edu.
[22] H. Volos, A. J. Tack, and M. M. Swift. Mnemosyne: Lightweight Persistent
Memory. In Architectural Support for Programming Languages and Operating
[23] H. Volos, G. Magalhaes, L. Cherkasova, and J. Li. Quartz: A Lightweight Performance Emulator for Persistent Memory Software. In Annual Middleware
Conference (Middleware), 2015.
[24] B. Wang, B. Wu, D. Li, X. Shen, W. Yu, Y. Jiao, and J. S. Vetter. Exploring Hybrid
Memory for GPU Energy Efficiency through Software-Hardware Co-Design. In
International Conference on Parallel Architectures and Compilation Techniques
(PACT), 2013.
[25] P. Wu, D. Li, Z. Chen, J. Vetter, and S. Mittal. Algorithm-Directed Data Placement in Explicitly Managed No-Volatile Memory. In ACM Symposium on HighPerformance Parallel and Distributed Computing (HPDC), 2016.
[26] H. Yoon, J. Meza, R. Ausavarungnirun, R. Harding, and O. Mutlu. Row Buffer
Locality Aware Caching Policies for Hybrid Memories. In International Conference
on Computer Design (ICCD), 2012.
