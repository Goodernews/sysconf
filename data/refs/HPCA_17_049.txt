[1] “Direct3d,”
https://msdn.microsoft.com/en-us/library/
windows/desktop/bb219837(v=vs.85).aspx, accessed: 20166-14.
[2] “Nvdia geforce: Antialiasing and anisotropic ﬁltering,”
http://www.geforce.com/whats-new/guides/aa-af-guide#1,
accessed: 2016-6-18.
[3] “Opengl,” https://www.opengl.org/about/, accessed: 2016-613.
[4] “Tn-41-01:
Calculating
memory
system
power
for
ddr3,”
https://www.micron.com/resource-details/
3465e69a-3616-4a69-b24d-ae459b295aae, accessed: 20166-24.
[5] “Video quality characterization techniques,” http://hirntier.
blogspot.com/2010/01/video-quality-characterization.html.
[6] “Initial hybrid memory cube short-reach interconnect speciﬁcation issued to consortium adopters,” 2012, denali Memory
Report.
[7] “Hybrid memory cube speciﬁcation 2.0,” in Techo. Rep., Nov.
2014.
[8] J. Ahn, S. Hong, S. Yoo, O. Mutlu, and K. Choi, “A
scalable processing-in-memory accelerator for parallel graph
processing,” in ISCA, June 2015.
[9] J. M. Arnau, J. M. Parcerisa, and P. Xekalakis, “Eliminating
redundant fragment shader executions on a mobile gpu via
hardware memoization,” in ISCA, June 2014.
[10] J.-M. Arnau, J.-M. Parcerisa, and P. Xekalakis, “Parallel
frame rendering: Trading responsiveness for energy on a
mobile gpu,” in PACT, 2013.
[11] A. C. Barkans, “High quality rendering using the talisman
architecture,” in HWWS, 1997.
[12] A. R. Brodtkorb, T. R. Hagen, and M. L. SæTra, “Graphics
processing unit (gpu) programming strategies and trends in
gpu computing,” in J. Parallel Distrib. Comput., Jan. 2013.
[13] K. Chen, S. Li, N. Muralimanohar, J. H. Ahn, J. B. Brockman,
and N. P. Jouppi, “Cacti-3dd: Architecture-level modeling for
3d die-stacked dram main memory,” in DATE, 2012.
[14] Y.-J. Chen, C.-H. Hsu, C.-Y. Hung, C.-M. Chang, S.-Y.
Chuang, L.-G. Chen, and S.-Y. Chien, “A 130.3 mw 16core mobile gpu with power-aware pixel approximation techniques,” in JSSC, 2015.
[15] V. M. del Barrio, C. Gonzalez, J. Roca, A. Fernandez, and
E. E, “Attila: a cycle-level execution-driven simulator for
modern gpu architectures,” in ISPASS, March 2006.
[16] R. Dosselmann and X. D. Yang, “A comprehensive assessment of the structural similarity index,” in SIVP, 2011.
[17] A. Farmahini-Farahani, J. H. Ahn, K. Morrow, and N. S.
Kim, “Nda: Near-dram acceleration architecture leveraging
commodity dram devices and standard memory modules,” in
HPCA, Feb 2015.
[18] S. Fenney, “Texture compression using low-frequency signal
modulation,” in HWWS, 2003.
[19] J. Gaur, R. Srinivasan, S. Subramoney, and M. Chaudhuri,
“Efﬁcient management of last-level caches in graphics processors for 3d scene rendering workloads,” in MICRO, 2013.
[20] Z. S. Hakura and A. Gupta, “The design and analysis of a
cache architecture for texture mapping,” in ISCA, 1997.
[21] E. Hart, “3d textures and pixel shaders,” in Direct3D ShaderX,
2002, p. 428.
[22] J. Hasselgren and T. Akenine-Möller, “An efﬁcient multi-view
rasterization architecture,” in EGSR, 2006.
[23] M. Houston, “Anatomy of amd terascale graphics engine,” in
SIGGRAPH, 2008.
[24] K. Hsieh, E. Ebrahimi, G. Kim, N. Chatterjee, M. OConnor,
N. Vijaykumar, O. Mutlu, and S. W. Keckler, “Transparent ofﬂoading and mapping (tom): Enabling programmertransparent near-data processing in gpu systems,” in ISCA,
2016.
[25] G. Knittel, A. Schilling, A. Kugler, and W. Straer, “Hardware
for Superior Texture Performance,” in EGGH, 1995.
[26] J. D. Leidel and Y. Chen, “Hmc-sim: A simulation framework
for hybrid memory cube devices,” in IPDPSW, May 2014.
[27] S. Li, J. H. Ahn, R. D. Strong, J. B. Brockman, D. M.
Tullsen, and N. P. Jouppi, “Mcpat: An integrated power, area,
and timing modeling framework for multicore and manycore
architectures,” in MICRO, 2009.
[28] J. Lim, N. B. Lakshminarayana, H. Kim, W. Song, S. Yalamanchili, and W. Sung, “Power modeling for gpu architectures using mcpat,” in TODAES, Jun 2014.
[29] E. Lindholm, J. Nickolls, S. Oberman, and J. Montrym,
“Nvidia tesla: A uniﬁed graphics and computing architecture,”
in MICRO, March 2008.
[30] G. H. Loh, N. Jayasena, M. Oskin, M. Nutter, D. Roberts,
M. Meswani, D. P. Zhang, and M. Ignatowski, “A processingin-memory taxonomy and a case for studying ﬁxed-function
pim,” in WoNDP, 2013.
[31] P. Mavridis and G. Papaioannou, “High quality elliptical
texture ﬁltering on gpu,” in SIGGRAPH, 2011.
[32] J. Nystad, A. Lassen, A. Pomianowski, S. Ellis, and
T. Olson, “Adaptive scalable texture compression,” in
SIGGRAPH/EGGH-HPG, 2012.
[33] A. Rege, “An introduction to modern gpu architecture,” in En
ligne], 2008.
[34] A. R. Reibman and D. Poole, “Characterizing packet-loss
impairments in compressed video.” in ICIP.
[35] P. Rogers and C. FELLOW, “Amd heterogeneous uniform
memory access,” in AMD Whitepaper, 2013.
[36] P. Rosenfeld and et al., “Peering over the memory wall:
Design space and performance analysis of the hybrid memory
cube,” Technical Report UMD-SCA, 2012.
[37] A. N. S, “Program for image / picture quality measures
calculation,”
https://www.mathworks.com/matlabcentral/
ﬁleexchange/25005-image-quality-measures, 2012.
[38] A. Schilling, G. Knittel, and W. Strasser, “Texram: a smart
memory for texturing,” in IEEE Computer Graphics and
Applications, May 1996.
[39] M. Shevgoor, J.-S. Kim, N. Chatterjee, R. Balasubramonian,
A. Davis, and A. N. Udipi, “Quantifying the relationship
between the power delivery network and architectural policies
in a 3d-stacked memory device,” in MICRO, 2013.
[40] J. Ström and T. Akenine-Möller, “ipackman: High-quality,
low-complexity texture compression for mobile phones,” in
HWWS, 2005.
[41] Z. Wang, A. C. Bovik, H. R. Sheikh, and E. P. Simoncelli,
“Image quality assessment: from error visibility to structural
similarity,” in IEEE transactions on image processing, 2004.
[42] L.-Y. Wei, “Tile-based texture mapping on graphics hardware,” in SIGGRAPH, 2004.
[43] S. J. E. Wilton and N. P. Jouppi, “Cacti: an enhanced cache
access and cycle time model,” in JSSC, May 1996.
[44] Y. Xiao, C.-S. Leung, P.-M. Lam, and T.-Y. Ho, “Selforganizing map-based color palette for high-dynamic range
texture compression,” in Neural Computing and Applications,
2012.
[45] H. Yun, G. Yao, R. Pellizzoni, M. Caccamo, and L. Sha,
“Memguard: Memory bandwidth reservation system for efﬁcient performance isolation in multi-core platforms,” in RTAS,
April 2013.
[46] D. Zhang, N. Jayasena, A. Lyashevsky, J. L. Greathouse,
L. Xu, and M. Ignatowski, “Top-pim: Throughput-oriented
programmable processing in memory,” in HPDC, 2014.