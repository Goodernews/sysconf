[1] A. Ailamaki, D. J. DeWitt, M. D. Hill, and D. A. Wood, “DBMSs on a
modern processor: Where does time go?,” in International Conference
on Very Large Data Bases, pp. 266–277, 1999.
[2] M. Ferdman, A. Adileh, Y. O. Koçberber, S. Volos, M. Alisafaee,
D. Jevdjic, C. Kaynak, A. D. Popescu, A. Ailamaki, and B. Falsafi,
“Clearing the clouds: a study of emerging scale-out workloads on modern
hardware,” in ASPLOS, pp. 37–48, 2012.
[3] N. Hardavellas, M. Ferdman, B. Falsafi, and A. Ailamaki, “Reactive
NUCA: near-optimal block placement and replication in distributed
caches,” in International Symposium on Computer Architecture, pp. 184–
195, 2009.
[4] S. Kanev, J. P. Darago, K. M. Hazelwood, P. Ranganathan, T. Moseley,
G. Wei, and D. M. Brooks, “Profiling a warehouse-scale computer,” in
International Symposium on Computer Architecture, pp. 158–169, 2015.
[5] K. Keeton, D. A. Patterson, Y. Q. He, R. C. Raphael, and W. E.
Baker, “Performance characterization of a quad pentium pro SMP using
OLTP workloads,” in International Symposium on Computer Architecture,
pp. 15–26, 1998.
[6] P. Ranganathan, K. Gharachorloo, S. V. Adve, and L. A. Barroso,
“Performance of database workloads on shared-memory systems with
out-of-order processors,” in International Conference on Architectural
Support for Programming Languages and Operating Systems, pp. 307–
318, 1998.
[7] A. Kolli, A. G. Saidi, and T. F. Wenisch, “RDIP: return-addressstack directed instruction prefetching,” in The 46th Annual IEEE/ACM
International Symposium on Microarchitecture, MICRO-46, Davis, CA,
USA, December 7-11, 2013, pp. 260–271, 2013.
[8] A. Ramirez, L. A. Barroso, K. Gharachorloo, R. Cohn, J. LarribaPey, P. G. Lowney, and M. Valero, “Code Layout Optimizations for
Transaction Processing Workloads,” in International Symposium on
Computer Architecture, pp. 155–164, 2001.
[9] M. Ferdman, T. F. Wenisch, A. Ailamaki, B. Falsafi, and A. Moshovos,
“Temporal Instruction Fetch Streaming,” in International Symposium on
Microarchitecture, pp. 1–10, 2008.
[10] M. Ferdman, C. Kaynak, and B. Falsafi, “Proactive Instruction Fetch,”
in International Symposium on Microarchitecture, pp. 152–162, 2011.
[11] C. Kaynak, B. Grot, and B. Falsafi, “SHIFT: Shared History Instruction
Fetch for Lean-core Server Processors,” in International Symposium on
Microarchitecture, pp. 272–283, 2013.
[12] J. Bonanno, A. Collura, D. Lipetz, U. Mayer, B. Prasky, and A. Saporito,
“Two Level Bulk Preload Branch Prediction,” in International Symposium
on High-Performance Computer Architecture, pp. 71–82, 2013.
[13] I. Burcea and A. Moshovos, “Phantom-btb: a virtualized branch target
buffer design,” in Proceedings of the 14th International Conference
on Architectural Support for Programming Languages and Operating
Systems, ASPLOS 2009, Washington, DC, USA, March 7-11, 2009,
pp. 313–324, 2009.
[14] C. Kaynak, B. Grot, and B. Falsafi, “Confluence: Unified Instruction
Supply for Scale-Out Servers,” in International Symposium on Microarchitecture, pp. 166–177, 2015.
[15] ThunderX ARM Processors: Workload Optimized Processors for Next
Generation Data Center and Cloud Applications. www.cavium.com/
ThunderX ARM Processors.html.
[16] Oracle SPARC T5-2 Server. www.oracle.com/servers/sparc/t5-2/index.
html.
[17] P. Lotfi-Kamran, B. Grot, M. Ferdman, S. Volos, O. Kocberber, J. Picorel,
A. Adileh, D. Jevdjic, S. Idgunji, E. Ozer, and B. Falsafi, “Scale-out
Processors,” in International Symposium on Computer Architecture, 2012.
[18] I.-C. K. Chen, C.-C. Lee, and T. N. Mudge, “Instruction Prefetching
Using Branch Prediction Information,” in International Conference on
Computer Design, pp. 593–601, 1997.
[19] G. Reinman, B. Calder, and T. Austin, “Fetch Directed Instruction
Prefetching,” in International Symposium on Microarchitecture, pp. 16–
27, IEEE, 1999.
[20] L. Spracklen, Y. Chou, and S. G. Abraham, “Effective Instruction
Prefetching in Chip Multiprocessors for Modern Commercial Applications,” in 11th International Symposium on High-Performance Computer
Architecture, pp. 225–236, 2005.
[21] A. Seznec and P. Michaud, “A case for (partially) tagged geometric
history length branch prediction,” J. Instruction-Level Parallelism, vol. 8,
2006.
[22] T. Yeh and Y. N. Patt, “A comprehensive instruction fetch mechanism for
a processor supporting speculative execution,” in International Symposium
on Microarchitecture, pp. 129–139, 1992.
[23] T. F. Wenisch, R. E. Wunderlich, M. Ferdman, A. Ailamaki, B. Falsafi,
and J. C. Hoe, “Simflex: Statistical sampling of computer system
simulation,” IEEE Micro, vol. 26, no. 4, pp. 18–31, 2006.
[24] R. E. Wunderlich, T. F. Wenisch, B. Falsafi, and J. C. Hoe, “SMARTS:
accelerating microarchitecture simulation via rigorous statistical sampling,” in International Symposium on Computer Architecture, pp. 84–95,
2003.
[25] J. N. Amaral and J. Torrellas, eds., International Conference on Parallel
Architectures and Compilation, ACM, 2014.
