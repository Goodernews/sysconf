[1] S. W. Keckler, W. J. Dally, B. Khailany, M. Garland, and
D. Glasco, “GPUs and the future of parallel computing,” IEEE
Micro, vol. 31, no. 5, pp. 7–17, Sep. 2011.

[2] J. Zhong and B. He, “Medusa: Simpliﬁed graph processing
on GPUs,” IEEE Transactions on Parallel and Distributed
Systems, vol. 25, no. 6, pp. 1543–1552, Jun. 2014.

[3] Z. Fu, M. Personick, and B. Thompson, “MapGraph: A
high level API for fast development of high performance
graph analytics on GPUs,” in Proceedings of the Workshop
on GRAph Data Management Experiences and Systems, ser.
GRADES ’14, Jun. 2014, pp. 2:1–2:6.

[4] F. Khorasani, K. Vora, R. Gupta, and L. N. Bhuyan, “CuSha:
Vertex-centric graph processing on GPUs,” in Proceedings
of the 23rd International Symposium on High-performance
Parallel and Distributed Computing, ser. HPDC ’14, Jun.
2014, pp. 239–252.

[5] Y. Wang, A. Davidson, Y. Pan, Y. Wu, A. Riffel, and
J. D. Owens, “Gunrock: A high-performance graph process-
ing library on the GPU,” in Proceedings of the 21st ACM
SIGPLAN Symposium on Principles and Practice of Parallel
Programming, ser. PPoPP 2016, Mar. 2016.

[6] S. Beamer, K. Asanovi´c, and D. Patterson, “Direction-
optimizing breadth-ﬁrst search,” in Proceedings of the In-
ternational Conference on High Performance Computing,
Networking, Storage and Analysis, ser. SC ’12, Nov. 2012,
pp. 12:1–12:10.

[7] D. Merrill, M. Garland, and A. Grimshaw, “Scalable GPU
graph traversal,” in Proceedings of the 17th ACM SIGPLAN
Symposium on Principles and Practice of Parallel Program-
ming, ser. PPoPP ’12, Feb. 2012, pp. 117–128.

[8] M. Bisson, M. Bernaschi, and E. Mastrostefano, “Parallel dis-
tributed breadth ﬁrst search on the Kepler architecture,” IEEE
Transactions on Parallel and Distributed Systems, vol. PP,
no. 99, Sep. 2015.

[9] H. Liu and H. H. Huang, “Enterprise: Breadth-ﬁrst graph
traversal on GPUs,” in Proceedings of
the International
Conference for High Performance Computing, Networking,
Storage and Analysis, ser. SC ’15, Nov. 2015, pp. 68:1–68:12.
[10] A. McLaughlin and D. A. Bader, “Scalable and high perfor-
mance betweenness centrality on the GPU,” in Proceedings
of the International Conference for High Performance Com-
puting, Networking, Storage and Analysis, ser. SC14, Nov.
2014, pp. 572–583.

[11] G. Karypis and V. Kumar, “A fast and high quality multi-
level scheme for partitioning irregular graphs,” SIAM J. Sci.
Comput., vol. 20, no. 1, pp. 359–392, Dec. 1998.

[12] J. Soman, K. Kishore, and P. J. Narayanan, “A fast GPU
algorithm for graph connectivity,” in 24th IEEE International
Symposium on Parallel and Distributed Processing, Work-
shops and PhD Forum, ser. IPDPSW 2010, Apr. 2010, pp.
1–8.

[13] A. Gharaibeh, T. Reza, E. Santos-Neto, L. B. Costa, S. Salli-
nen, and M. Ripeanu, “Efﬁcient
large-scale graph pro-
cessing on hybrid CPU and GPU systems,” CoRR, vol.
abs/1312.3018, no. 1312.3018v2, Dec. 2014.

[14] M. Daga, M. Nutter, and M. Meswani, “Efﬁcient breadth-ﬁrst
search on a heterogeneous processor,” in IEEE International
Conference on Big Data, Oct. 2014, pp. 373–382.

[15] D. Sengupta, S. L. Song, K. Agarwal, and K. Schwan,
“GraphReduce: Processing large-scale graphs on accelerator-
based systems,” in Proceedings of the International Confer-
ence for High Performance Computing, Networking, Storage
and Analysis, Nov. 2015, pp. 28:1–28:12.

[16] X. Shi, J. Liang, S. Di, B. He, H. Jin, L. Lu, Z. Wang,
X. Luo, and J. Zhong, “Optimization of asynchronous graph
processing on GPU with hybrid coloring model,” in Proceed-
ings of the 20th ACM SIGPLAN Symposium on Principles
and Practice of Parallel Programming, ser. PPoPP 2015, Feb.
2015, pp. 271–272.

[17] X. Shi, X. Luo, J. Liang, P. Zhao, S. Di, B. He, and
H. Jin, “Frog: Asynchronous graph processing on GPU with
hybrid coloring model,” Huazhong University of Science
and Technology, Tech. Rep. HUST-CGCL-TR-402, 2015,
http://grid.hust.edu.cn/xhshi/projects/frog.html.

[18] T. Ben-Nun, M. Sutton, S. Pai, and K. Pingali, “Groute: An
asynchronous multi-GPU programming model for irregular
computations,” in Proceedings of the 22nd ACM SIGPLAN
Symposium on Principles and Practice of Parallel Program-
ming, ser. PPoPP 2017, Feb. 2017.

[19] L. G. Valiant, “A bridging model for parallel computation,”
Communications of the ACM, vol. 33, no. 8, pp. 103–111,
1990.

[20] Y. Wu, Y. Wang, Y. Pan, C. Yang, and J. D. Owens, “Perfor-
mance characterization for high-level programming models
for GPU graph analytics,” in IEEE International Symposium
on Workload Characterization, ser. IISWC-2015, Oct. 2015,
pp. 66–75.

[21] T. A. Davis, “The University of Florida sparse matrix col-
lection,” NA Digest, vol. 92, no. 42, 16 Oct. 1994, http:
//www.cise.uﬂ.edu/research/sparse/matrices.

[22] R. A. Rossi and N. K. Ahmed, “The network data
repository with interactive graph analytics and visualization,”
in Proceedings of
the Twenty-Ninth AAAI Conference on
Artiﬁcial Intelligence, Mar. 2015, pp. 4292–4293. [Online].
Available: http://networkrepository.com/

[23] D. A. Bader and K. Madduri, “GTgraph: A suite of syn-
thetic graph generators,” 2006, https://github.com/dhruvbird/
GTgraph.

[24] M. Bernaschi, G. Carbone, E. Mastrostefano, M. Bisson,
and M. Fatica, “Enhanced GPU-based distributed breadth
ﬁrst search,” in Proceedings of the 12th ACM International
Conference on Computing Frontiers, ser. CF ’15, 2015, pp.
10:1–10:8.

[25] Z. Fu, H. K. Dasari, B. Bebee, M. Berzins, and B. Thompson,
“Parallel breadth ﬁrst search on GPU clusters,” in IEEE
International Conference on Big Data, Oct. 2014, pp. 110–
118.

[26] B. Bebee,

“What

for graph and predictive

GPUs
2016,
gpus-graph-predictive-analytics/.

to do with all

that bandwidth?
analytics,” 21 Mar.
https://devblogs.nvidia.com/parallelforall/

[27] K. Lee, L. Liu, K. Schwan, C. Pu, Q. Zhang, Y. Zhou, E. Yigi-
toglu, and P. Yuan, “Scaling iterative graph computations with
GraphMap,” in Proceedings of the International Conference
for High Performance Computing, Networking, Storage and
Analysis, ser. SC ’15, 2015, pp. 57:1–57:12.

