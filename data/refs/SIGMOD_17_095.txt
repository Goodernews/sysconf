
[1] https://github.com/attic-labs/noms.

[2] https://git-lfs.github.com/.

[3] Git  Packfiles. https://git- scm.com/book/en/v2/
Git-Internals-Packfiles. Accessed: February 15, 2017.

[4] Oracle Total Recall with Oracle Database 11g Release 2. http://www.oracle.com/technetwork/database/
focus-areas/storage/total-recall- whitepaper- 171749 pdf. Accessed: November 11, 2016.

[5] S. Agrawal, S. Chaudhuri, and V. R. Narasayya. Automated
Selection of Materialized Views and Indexes in SQL Databases.
In PVLDB, pages 496-505, 2000.

[6] I. Alagiannis, R. Borovica, M. Branco, S. Idreos, and A. Ailamaki. NoDB: Efficient query execution on raw data files. In
SIGMOD, pages 241-252, 2012.

[7] R. Baeza-Yates. A fast set intersection algorithm for sorted
sequences. In Annual Symposium on Combinatorial Pattern
Matching, pages 400-408. Springer, 2004.

[8] J. Barbay and C. Kenyon. Deterministic algorithm for the tthreshold set problem. In Algorithms and Computation, pages
575-584. Springer, 2003.

[9] J. Barbay, A. Lépez-Ortiz, T. Lu, and A. Salinger. An experimental investigation of set intersection algorithms for text
searching. ACM Journal of Experimental Algorithmics, 2010.

[10] A. P. Bhardwaj, S. Bhattacherjee, A. Chavan, A. Deshpande,
A. Elmore, S$. Madden, and A. Parameswaran. DataHub:
Collaborative Data Science & Dataset Version Management at
Scale. In CIDR, 2015.

[11] S. Bhattacherjee, A. Chavan, S. Huang, A. Deshpande, and
A. Parameswaran. Principles of Dataset Versioning: Exploring
the Recreation/Storage Tradeoff. In PVLDB, pages 1346-1357,
2015.

[12] P. Bille, A. Pagh, and R. Pagh. Fast evaluation of union intersection expressions. In ISAAC, pages 739-750, 2007.

[13] B. H. Bloom. Space/time trade-offs in hash coding with
allowable errors. Commun. ACM, 13(7):422-426, 1970.

[14] P. Buneman, S. Khanna, K. Tajima, and W. C. Tan. Archiving
scientific data. ACM Trans. Database Syst., 29:2-42, 2004.

[15] S. Chambi, D. Lemire, O. Kaser, and R. Godin. Better bitmap
performance with roaring bitmaps. Software: Practice and
Experience, 2015.

[16] A. Chavan, S. Huang, A. Deshpande, A. Elmore, S. Madden,
and A. Parameswaran. Towards a Unified Query Language for
Provenance and Versioning. TaPP, 2015.

[17] J. Cheney, S. Chong, N. Foster, M. Seltzer, andS. Vansummeren.
Provenance: A future history. In OOPSLA, pages 957-964.
ACM, 2009.

[18] E. Demaine, A. L6pez-Ortiz, and J. Munro. Adaptive Set
Intersections, Unions, and Differences. In SODA, pages 743752, 2000.

[19] E. D. Demaine, A. L6pez-Ortiz, and J. I. Munro. Experiments
on adaptive set intersections for text retrieval systems. In
ALENEX, 2001.

[20] E. D. Demaine, S$. Mozes, B. Rossman, and O. Weimann. An
optimal decomposition algorithm for tree edit distance. ACM
Trans. Algorithms, 6(1):2:1-2:19, Dec. 2009.

[21] B. Ding and A. C. K6nig. Fast set intersection in memory.
PVLDB, pages 255-266, 2011.

[22] F. Douglis and A. Iyengar. Application-specific delta-encoding
via resemblance detection. In USENIX Annual Technical
Conference, General Track, pages 113-126, 2003.

[23] Z. Galil and G. F. Italiano. Data structures and algorithms
for disjoint set union problems. ACM Comput. Surv., pages
319-344, 1991.

[24] S. Ghandeharizadeh, R. Hull, and D. Jacobs. Heraclitus: Elevating deltas to be first-class citizens in a database programming
language. ACM Trans. Database Syst., 21(3):370-426, 1996.

[25] J. Goldstein and P.-A. Larson. Optimizing queries using
materialized views: A practical, scalable solution. In SIGMOD,
pages 331-342, 2001.

[26] T. J. Green, G. Karvounarakis, Z. G. Ives, and V. Tannen.
Update exchange with mappings and provenance. In PVLDB,
pages 675-686, 2007.

[27] T. Griffin and R. Hull. A framework for implementing hypothetical queries. In SIGMOD, pages 231-242, 1997.

[28] A. Gupta and I. S. Mumick. Maintenance of materialized
views: Problems, techniques, and applications. In Materialized
Views, pages 145-157. 1999.

[29] A. Guttman. R-trees: A dynamic index structure for spatial
searching. In SIGMOD, pages 47-57, 1984.

[30] A. Y. Halevy. Answering queries using views: A survey. The
VLDB Journal, 10(4):270-294, 2001.

[31] P. Helland. Immutability changes everything. In CIDR, 2015.

[32] F. K. Hwang and S. Lin. A simple algorithm for merging two
disjoint linearly ordered sets. SIAM Journal on Computing,
1(1):31-39, 1972.

[33] R. M. Karp. Reducibility among combinatorial problems. In
Complexity of computer computations. Springer, 1972.

[34] S. Khuller, B. Raghavachari, and N. Young. Balancing minimum spanning trees and shortest-path trees. Algorithmica,
14(4):305-321, 1995.

[35] R. K. L. Ko, P. Jagadpramana, M. Mowbray, S. Pearson,
M. Kirchberg, Q. Liang, and B. S. Lee. Trustcloud: A framework for accountability and trust in cloud computing. In JEEE
World Congress on Services, July 2011.

[36] T. Lee, J. Park, S. Lee, S. Hwang, S. Elnikety, and Y. He.
Processing and optimizing main memory spatial-keyword
queries. PVLDB, 9(3):132-143, 2015.

[37] D. Lomet, R. Barga, M. F. Mokbel, G. Shegalov, R. Wang,
and Y. Zhu. Immortal DB: Transaction time support for SQL
server. In SIGMOD, pages 939-941, 2005.

[38] D. Lomet, M. Hong, R. Nehme, and R. Zhang. Transaction
time indexing with version compression. In PVLDB, pages
870-881, 2008.

[39] J. MacDonald. File system support for delta compression.
2000.

[40] M. Maddox, D. Goehring, A. J. Elmore, S. Madden, A. G.
Parameswaran, and A. Deshpande. Decibel: The relational
dataset branching system. PVLDB, 9(9):624-635, 2016.

[41] J. C. Mogul, F. Douglis, A. Feldmann, and B. Krishnamurthy.
Potential benefits of delta encoding and data compression for
http. In SIGCOMM, pages 181-194, 1997.

[42] I. S. Mumick, D. Quass, and B. S. Mumick. Maintenance of
data cubes and summary tables in a warehouse. In SIGMOD,
pages 100-111, 1997.

[43] E. W. Myers. An O(ND) difference algorithm and its variations.
Algorithmica, pages 251-266, 1986.
[44] G. Ozsoyo$lu and R. T. Snodgrass. Temporal and real-time
databases: A survey. IEEE Trans. on Knowl. and Data Eng.,
pages 513-532, 1995.

[45] J. Paulo and J. Pereira. A survey and classification of storage
deduplication systems. ACM Computing Surveys, 2014.

[46] S. R6nnau, J. Scheffczyk, and U. M. Borghoff. Towards XML
Version Control of Office Documents. In Proc. of the ACM
Symposium on Document Engineering, pages 10-19, 2005.

[47] P. Sanders and F. Transier. Intersection in integer inverted indices. In Proceedings of the Meeting on Algorithm Engineering
& Expermiments, pages 71-83, 2007.

[48] A. Seering, P. Cudré-Mauroux, S. Madden, and M. Stonebraker.
Efficient versioning for scientific array databases. In ICDE,
pages 1013-1024, 2012.

[49] E. Soroush and M. Balazinska. Time travel in a scientific array
database. In ICDE, pages 98-109, 2013.

[50] Z. A. Talebi, R. Chirkova, Y. Fathi, and M. Stallmann. Exact
and inexact methods for selecting views and indexes for OLAP
performance improvement. In EDBT, pages 311-322, 2008.

[51] N. E. Taylor and Z. G. Ives. Reconciling while tolerating
disagreement in collaborative data sharing. In SIGMOD, pages
13-24, 2006.

[52] D. J. Weitzner, H. Abelson, T. Berners-Lee, J. Feigenbaum,
J. Hendler, and G. J. Sussman. Information accountability.
Communications of the ACM, 51(6):82-87, 2008.

