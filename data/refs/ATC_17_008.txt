[1] Hadoop
MapReduce
Next
Generation
Fair
Scheduler.
http://hadoop.apache.org/docs/current/hadoopyarn/hadoop-yarn-site/FairScheduler.html.
[2] Hardware
Platform
Specifications.
http://www.nutanix.com/products/hardwareplatforms/.
[3] Improving Sort Performance in Apache Spark: It’s a Double.
http://blog.cloudera.com/blog/2015/01/improvingsort-performance-in-apache-spark-its-a-double/.
[4] The Bigdata Micro Benchmark https://github.com/intel-hadoop/HiBench.

[5] S. Agarwal, S. Kandula, N. Bruno, M.-C. Wu,
I. Stoica, and J. Zhou. Re-optimizing data-parallel
computing. In Proc. NSDI 2012.
[6] F. Ahmad, S. T. Chakradhar, A. Raghunathan, and
T. N. Vijaykumar. Shufflewatcher: Shuffle-aware
scheduling in multi-tenant mapreduce clusters. In
Proc. USENIX ATC 2014.
[7] E. Boutin, J. Ekanayake, W. Lin, B. Shi, J. Zhou,
Z. Qian, M. Wu, and L. Zhou. Apollo: Scalable and
coordinated scheduling for cloud-scale computing.
In Proc. OSDI 2014.
[8] P. Brucker, A. Drexi, R. Moerhing, K. Neumann, and E. Pesch. Resource-constrained project
scheduling: Notation, classification, models, and
methods. In European Journal of Operational Research, Volume 112, Issue 1, 1 January 1999, Pages
3–41.
[9] I. Cano, S. Aiyar, and A. Krishnamurthy. Characterizing private clouds: A large-scale empirical
analysis of enterprise clusters. In Proc. SoCC 2016.
[10] Y. Chen, S. Alspaugh, and R. Katz. Interactive analytical processing in big data systems: A crossindustry study of mapreduce workloads. In Proc.
VLDB 2012.
[11] C. Curino, D. E. Difallah, C. Douglas, S. Krishnan,
R. Ramakrishnan, and S. Rao. Reservation-based
scheduling: If you’re late don’t blame us! In Proc.
SoCC 2014.
[12] C. Delimitrou and C. Kozyrakis.
Quasar:
Resource-Efficient and QoS-Aware Cluster Management. In Proc. ASPLOS 2014.


[13] L. Fang, K. Nguyen, G. Xu, B. Demsky, and
S. Lu. Interruptible tasks: Treating memory pressure as interrupts for highly scalable data-parallel
programs. In Proc. SOSP 2015.
[14] A. D. Ferguson, P. Bodik, S. Kandula, E. Boutin,
and R. Fonseca. Jockey: Guaranteed job latency in
data parallel clusters. In Proc. EuroSys 2012.
[15] A. Ghodsi, M. Zaharia, B. Hindman, A. Konwinski, S. Shenker, and I. Stoica. Dominant resource
fairness: Fair allocation of multiple resource types.
In Proc. NSDI 2011.
[16] R. Grandl, G. Ananthanarayanan, S. Kandula,
S. Rao, and A. Akella. Multi-resource packing for
cluster schedulers. In Proc. SIGCOMM 2014.
[17] R. Grandl, M. Chowdhury, A. Akella, and G. Ananthanarayanan.
Altruistic scheduling in multiresource clusters. In Proc. OSDI 2016.
[18] R. Grandl, S. Kandula, S. Rao, A. Akella, and
J. Kulkarni. Graphene: Packing and dependencyaware scheduling for data-parallel clusters. In Proc.
OSDI 2016.
[19] B. Hindman, A. Konwinski, M. Zaharia, A. Ghodsi,
A. D. Joseph, R. Katz, S. Shenker, and I. Stoica.
Mesos: A platform for fine-grained resource sharing in the data center. In Proc. NSDI 2011.
[20] V. Jalaparti, P. Bodik, I. Menache, S. Rao,
K. Makarychev, and M. Caesar. Network-aware
scheduling for data-parallel jobs: Plan when you
can. In Proc. SIGCOMM 2015.
[21] S. A. Jyothi, C. Curino, I. Menache, S. M.
Narayanamurthy, A. Tumanov, J. Yaniv, R. Mavlyutov, I. Goiri, S. Krishnan, J. Kulkarni, and
S. Rao. Morpheus: Towards automated SLOs for
enterprise clusters. In Proc. OSDI 2016.
[22] D. Lo, L. Cheng, R. Govindaraju, P. Ranganathan,
and C. Kozyrakis. Heracles: Improving resource
efficiency at scale. In Proc. ISCA 2015.
[23] K. Ousterhout, R. Rasti, S. Ratnasamy, S. Shenker,
and B.-G. Chun. Making sense of performance in
data analytics framework. In Proc. NSDI 2015.
[24] C. Reiss, A. Tumanov, G. R. Ganger, R. H. Katz,
and M. A. Kozuch. Heterogeneity and dynamicity
of clouds at scale: Google trace analysis. In Proc.
SoCC 2012.
[25] V. K. Vavilapalli, A. C. Murthy, C. Douglas,
S. Agarwal, M. Konar, R. Evans, T. Graves,
J. Lowe, H. Shah, S. Seth, B. Saha, C. Curino,
O. O’Malley, S. Radia, B. Reed, and E. Baldeschwieler. Apache Hadoop YARN: Yet Another
Resource Negotiator. In Proc. SOCC 2013.

[26] A. Verma, L. Pedrosa, M. R. Korupolu, D. Oppenheimer, E. Tune, and J. Wilkes. Large-scale cluster
management at Google with Borg. In Proc. EuroSys 2015.
[27] M. Zaharia, M. Chowdhury, T. Das, A. Dave, J. Ma,
M. McCauley, M. J. Franklin, S. Shenker, and
I. Stoica. Resilient distributed datasets: A faulttolerant abstraction for in-memory cluster computing. In Proc. NSDI 2012.

[28] J. Zhang, H. Zhou, R. Chen, X. Fan, Z. Guo, H. Lin,
J. Y. Li, W. Lin, J. Zhou, and L. Zhou. Optimizing
data shuffling in data-parallel computation by understanding user-defined functions. In Proc. NSDI
2012.
