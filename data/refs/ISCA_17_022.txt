[1] Hal Berenson, Phil Bernstein, Jim Gray, Jim Melton, Elizabeth O’Neil, and Patrick
O’Neil. 1995. A Critique of ANSI SQL Isolation Levels. In Proceedings of the
1995 ACM International Conference on Management of Data (SIGMOD).
[2] Michael J. Cahill, Uwe Röhm, and Alan D. Fekete. 2009. Serializable Isolation
for Snapshot Databases. In ACM Transactions on Database Systems (TODS),
Vol. 34. 1–42. https://doi.org/10.1145/1620585.1620587
[3] George. C. Caragea, Fuat Keceli, Alexadros Tzannes, and Uzi Vishkin. 2010.
General-Purpose vs. GPU: Comparison of Many-Cores on Irregular Workloads.
In Proceedings of the Second Usenix Workshop on Hot Topics in Parallelism.
http://www.usenix.org/event/hotpar10/final
[4] Sui Chen and Lu Peng. 2016. Efficient GPU Hardware Transactional Memory
through Early Conflict Resolution. In Proceedings of the 2016 IEEE International
Symposium on High Performance Computer Architecture (HPCA). 274–284. https:
//doi.org/10.1109/HPCA.2016.7446071
[5] Alan Fekete, Dimitrios Liarokapis, Elizabeth O’Neil, Patrick O’Neil, and Dennis
Shasha. 2005. Making Snapshot Isolation Serializable. In ACM Transactions on
Database Systems (TODS), Vol. 30. 492–528. https://doi.org/10.1145/1071610.
1071615
[6] Wilson W. L. Feng. 2013. GPGPU-Sim 3.2.1. http://www.ece.ubc.ca/~wwlfung/
code/kilotm-gpgpu_sim.tgz. (2013). Retrieved on 2015-05-30.
[7] Michael Ferdman, Pejman Lotfi-Kamran, Ken Balet, and Babak Falsafi. 2011.
Cuckoo Directory: A Scalable Directory for Many-Core Systems. In Proceedings
of the 17th International Symposium on High Performance Computer Architecture
(HPCA). https://doi.org/10.1109/HPCA.2011.5749726
[8] Wilson W. L.. Fung and Tor M. Aamodt. 2013. Energy efficient GPU transactional
memory via space-time optimizations. In Proceedings of the 46th International
Symposium on Microarchitecture (MICRO). https://doi.org/10.1145/2540708.
[9] Wilson W. L. Fung, Inderpreet Singh, Andrew Brownsword, and Tor M. Aamodt.
2011. Hardware transactional memory for GPU architectures. In Proceedings of
the 44th International Symposium on Microarchitecture(MICRO). https://doi.org/
10.1145/2155620.2155655
[10] Maurice Herlihy and J. Eliot B. Moss. 1993. Transactional Memory: Architectural
Support For Lock-free Data Structures. IEEE Computers Society Press. 289–300
pages. https://doi.org/10.1109/ISCA.1993.698569
[11] Maurice Herlihy, Victor Luchangco, and Mark Moir. 2006. A Flexible Framework
for Implementing Software Transactional Memory. In Proceedings of the 21th
ACM SIGPLAN Conference on Object-Oriented Programing, Systems, Languages,
and Applications (OOPSLA).
[12] Anup Holey and Antonia Zhai. 2014. Lightweight Software Transactions on
GPUs. Proceedings of the 43rd International Conference on Parallel Processing
(ICPP) (Sep 2014). https://doi.org/10.1109/ICPP.2014.55
[13] Kevin Hsieh, Eiman Ebrahim, Gwangsun Kim, Niladrish Chatterjee, Mike
O’Connor, Nandita Vijaykumar, Onur Mutlu, and Stephen W. Keckler. 2016.
Transparent Offloading and Mapping (TOM): Enabling Programmer-Transparent
Near-Data Processing in GPU Systems. In Proceedings of the 2016 ACM/IEEE
43rd Annual International Symposium on Computer Architecture (ISCA). 204–216.
https://doi.org/10.1109/ISCA.2016.27
[14] Intel Corporation. 2016. Chapter 8, Intel Transactional Synchronization Extensions. (2016).
[15] Syed Ali Raza Jafri, Gwendolyn Voskuilen, and T. N. Vijaykumar. 2013. Waitn-GoTM: Improving HTM Performance by Serializing Cyclic Dependencies. In
Proceedings of the 18th International Conference on Architectural Support for
Programming Languages and Operating Systems (ASPLOS).
[16] David R. Karger. 1993. Global Min-cuts in RNC, and Other Ramifications of
a Simple Min-out Algorithm. In Proceedings of the Fourth Annual ACM-SIAM
Symposium on Discrete Algorithms (SODA ’93). Society for Industrial and Applied
Mathematics, Philadelphia, PA, USA, 21–30. http://dl.acm.org/citation.cfm?id=
313559.313605
[17] HP Labs. 2009. CACTI 5.3. http://quid.hpl.hp.com:9081/cacti/. (2009). Retrieved
on 2016-07-01.
[18] Heiner Litz, David Cheriton, Amin Firoozshahian, Omid Azizi, and John P. Stevenson. 2014. SI-TM: Reducing Transactional Memory Abort Rates Through Snapshot Isolation. In Proceedings of the 19th international conference on Architectural Support for programming Languages and Operating Systems (ASPLOS).
https://doi.org/10.1145/2541940.2541952
[19] Heiner Litz, Richardo J. Dias, and David R. Cheriton. 2014. Efficient Correction of
Anomalies in Snapshot Isolation Transactions. ACM Transactions on Architecture
and Code Optimization (TACO) 11, 4 (2014), 1–24. https://doi.org/10.1145/
2693260
[20] Virendra J. Marathe, Michael F. Spear, Christopher Heriot, Athul Acharya, David
Eisenstat, William N. Scherer III, and Michael L. Scott. 2006. Lowering the
Overhead of Nonblocking Software Transactional Memory. In Tech Report, Dept.
of Computer Science, Univ. of Rochester.
[21] Chí Cao. Minh, JaeWoong. Chung, Christos Kozyrakis, and Kunle Olukotun.
2008. STAMP: Stanford Transactional Applications for Multi-Processing. In
Proceedings of the IEEE International Symposium on Workload Characterization
(IISWC). https://doi.org/10.1109/IISWC.2008.4636089
[22] Prabhakar Misra and Mainak Chaudhuri. 2012. Performance Evaluation of Concurrent Lock-free Data Structures on GPUs. 18th International Conference on
Parallel and Distributed Systems (ICPADS) (Dec 2012). https://doi.org/10.1109/
ICPADS.2012.18
[23] Anurag Negi, Per Stenstrom, Manuel E. Acacio, Rubén Titos-Gil, and José M. Garcia. 2011. π-TM: Pessimistic invalidation for scalable lazy hardware transactional
memory. In Proceedings of the 20th International Conference on Parallel Architectures and Compilation Techniques (PACT). https://doi.org/10.1109/PACT.2011.41
[24] Daniel Sanchez and Christos Kozyrakis. 2010. The ZCache: Decoupling Ways
and Associativity. In Proceedings of the 43rd Annual IEEE/ACM International
Symposium on Microarchitecture (MICRO). https://doi.org/10.1109/MICRO.
2010.20
[25] Daniel Sanchez and Christos Kozyrakis. 2012. SCD: A scalable coherence
directory with flexible sharer set encoding. In Proceedings of the 18th IEEE
International Symposium on High-Performance Computer Architecture (HPCA).
https://doi.org/10.1109/HPCA.2012.6168950
[26] Vivek Seshadri, Yoongu Kim, Chris Fallin, Donghyuk Lee, Rachata Ausavarungnirun, Gennady Pekhimenko, Yixin Luo, Onur Mutlu, Phillip B Gibbons,
Michael A. Kozuch, and Todd C. Mowry. 2013. RowClone: Fast and EnergyEfficient in-DRAM Bulk Data Copy and Initialization. In Proceedings of the
46th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO).
186–197. https://doi.org/10.1145/2540708.2540725
[27] Michael F. Spear, Maged M. Michael, and Christoph von Praun. 2008. RingSTM:
Scalable Transactions with a Single Atomic Instruction. In Proceedings of the
Twentieth Annual Symposium on Parallelism in Algorithms and Architectures
(SPAA). ACM, New York, NY, USA, 275–284. https://doi.org/10.1145/1378533.
[28] Saša Tomić, Cristian Perfumo, Chinmay Kulkarni, Adrià Armejach, Adrián Cristal,
Osman Unsal, Tim Harris, and Mateo Valero. 2009. EazyHTM: EAger-LaZY
hardware Transactional Memory. In Proceedings of the 42nd Annual IEEE/ACM
International Symposium on Microarchitecture (MICRO). 145–155. https://doi.
org/10.1145/1669112.1669132
[29] Gwendolyn Voskuilen, Faraz Ahmad, and T. N. Vijaykumar. 2010. Timetraveler:
Exploiting Acyclic Races for Optimizing Memory Race Recording. In Proceedings of the 37th Annual International Symposium on Computer Architecture
(ISCA). https://doi.org/10.1145/1815961.1815986
[30] Yunlong Xu, Rui Wang, Nilanjan Goswami, Tao Li, Lan Gao, and Depei Qian.
2014. Software Transactional Memory for GPU Architectures. In Proceedings of
the International Symposium on Code Generation and Optimization (CGO). 49 –
52. https://doi.org/10.1145/2544137.2544139
[31] Lihang Zhao and Jeffrey Draper. 2014. Consolidated Conflict Detection for
Hardware Transactional Memory. In Proceedings of the 23rd International Conference on Parallel Architectures and Compilation (PACT). 201–212. https:
//doi.org/10.1145/2628071.2628076