[1] Cords Tool and Results. http://research.cs.
wisc.edu/adsl/Software/cords/.
[2] Ramnatthan Alagappan, Vijay Chidambaram,
Thanumalayan Sankaranarayana Pillai, Aws Albarghouthi, Andrea C. Arpaci-Dusseau, and
Remzi H. Arpaci-Dusseau. Beyond Storage APIs:
Provable Semantics for Storage Stacks. In Proceedings of the 15th USENIX Conference on Hot
Topics in Operating Systems (HOTOS’15), Kartause Ittingen, Switzerland, May 2015.
[3] Ramnatthan Alagappan, Aishwarya Ganesan, Yuvraj Patel, Thanumalayan Sankaranarayana Pillai,
Andrea C. Arpaci-Dusseau, and Remzi H. ArpaciDusseau. Correlated Crash Vulnerabilities. In
Proceedings of the 12th USENIX Conference on
Operating Systems Design and Implementation
(OSDI ’16), Savannah, GA, November 2016.
[4] Apache. Cassandra. http://cassandra.
apache.org/.
[5] Apache. Kakfa. http://kafka.apache.org/.
[6] Apache. ZooKeeper. https://zookeeper.
apache.org/.
[7] Remzi H. Arpaci-Dusseau and Andrea C. ArpaciDusseau. Operating Systems: Three Easy Pieces.
Arpaci-Dusseau Books, 0.91 edition, May 2015.
[8] Lakshmi N. Bairavasundaram, Andrea C. ArpaciDusseau, Remzi H. Arpaci-Dusseau, Garth R.
Goodson, and Bianca Schroeder. An Analysis of
Data Corruption in the Storage Stack. In Proceedings of the 6th USENIX Symposium on File and
Storage Technologies (FAST ’08), San Jose, CA,
February 2008.
[9] Lakshmi N. Bairavasundaram, Garth R. Goodson,
Shankar Pasupathy, and Jiri Schindler. An Analysis of Latent Sector Errors in Disk Drives. In Proceedings of the 2007 ACM SIGMETRICS Conference on Measurement and Modeling of Computer
Systems (SIGMETRICS ’07), San Diego, CA, June
2007.
[10] Lakshmi N. Bairavasundaram, Meenali Rungta,
Nitin Agrawal, Andrea C. Arpaci-Dusseau,
Remzi H. Arpaci-Dusseau, and Michael M. Swift.
Analyzing the Effects of Disk-Pointer Corruption.
In Proceedings of the International Conference
on Dependable Systems and Networks (DSN ’08),
Anchorage, Alaska, June 2008.
[11] J.H. Barton, E.W. Czeck, Z.Z. Segall, and D.P.
Siewiorek. Fault Injection Experiments Using
FIAT. IEEE Transactions on Computers, 39(4),
April 1990.
[12] Eric Brewer, Lawrence Ying, Lawrence Greenfield, Robert Cypher, and Theodore T’so. Disks
for Data Centers. Technical report, Google, 2016.
[13] Andy Chou, Junfeng Yang, Benjamin Chelf, Seth
Hallem, and Dawson Engler. An Empirical Study
of Operating System Errors. In Proceedings of
the 18th ACM Symposium on Operating Systems
Principles (SOSP ’01), Banff, Canada, October
2001.
[14] CockroachDB. CockroachDB. https://www.
cockroachlabs.com/.
[15] CockroachDB. Disk corruptions and read-
/write error handling in CockroachDB. https:
//forum.cockroachlabs.com/t/diskcorruptions-and-read-write-errorhandling-in-cockroachdb/258.
[16] CockroachDB. Resiliency to disk corruption
and storage errors. https://github.com/
cockroachdb/cockroach/issues/7882.
[17] Miguel Correia, Daniel Gomez Ferro, Flavio P. ´
Junqueira, and Marco Serafini. Practical Hardening of Crash-Tolerant Systems. In 2012 USENIX
Annual Technical Conference (USENIX ATC 12),
Boston, MA, June 2012.
[18] Data Center Knowledge. Ma.gnolia
data is gone for good. http://www.
datacenterknowledge.com/archives/
2009/02/19/magnolia-data-is-gonefor-good/.
[19] Datastax. Netflix Cassandra Use Case.
http://www.datastax.com/resources/
casestudies/netflix.
[20] DataStax. Read Repair: Repair during Read
Path. http://docs.datastax.com/en/
cassandra/3.0/cassandra/operations/
opsRepairNodesReadRepair.html.
[21] S. Dawson, F. Jahanian, and T. Mitton. ORCHESTRA: A Probing and Fault Injection Environment
for Testing Protocol Implementations. In Proceedings of the 2nd International Computer Performance and Dependability Symposium (IPDS ’96),
1996.
[22] Jeff Dean. Building Large-Scale Internet Services. http://static.googleusercontent.
com/media/research.google.com/en/
/people/jeff/SOCC2010-keynoteslides.pdf.
[23] Giuseppe DeCandia, Deniz Hastorun, Madan
Jampani, Gunavardhan Kakulapati, Avinash Lakshman, Alex Pilchin, Swaminathan Sivasubramanian, Peter Vosshall, and Werner Vogels. Dynamo:
Amazon’s Highly Available Key-value Store. In
Proceedings of the 21st ACM Symposium on Operating Systems Principles (SOSP ’07), Stevenson, WA, October 2007.
[24] Jon Elerath. Hard-disk Drives: The Good, the
Bad, and the Ugly. Commun. ACM, 52(6), June
2009.
[25] David Fiala, Frank Mueller, Christian Engelmann,
Rolf Riesen, Kurt Ferreira, and Ron Brightwell.
Detection and Correction of Silent Data Corruption for Large-scale High-performance Computing. In Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis (SC ’12), Salt Lake City,
Utah, 2012.
[26] Daniel Fryer, Dai Qin, Jack Sun, Kah Wai Lee,
Angela Demke Brown, and Ashvin Goel. Checking the Integrity of Transactional Mechanisms. In
Proceedings of the 12th USENIX Symposium on
File and Storage Technologies (FAST ’14), Santa
Clara, CA, February 2014.
[27] Daniel Fryer, Kuei Sun, Rahat Mahmood, TingHao Cheng, Shaun Benjamin, Ashvin Goel, and
Angela Demke Brown. Recon: Verifying File
System Consistency at Runtime. In Proceedings of the 10th USENIX Symposium on File and
Storage Technologies (FAST ’12), San Jose, CA,
February 2012.
[28] FUSE. Linux FUSE (Filesystem in Userspace)
interface. https://github.com/libfuse/
libfuse.
[29] Sanjay Ghemawat, Howard Gobioff, and ShunTak Leung. The Google File System. In Proceedings of the 19th ACM Symposium on Operating
Systems Principles (SOSP ’03), Bolton Landing,
New York, October 2003.
[30] Phillipa Gill, Navendu Jain, and Nachiappan Nagappan. Understanding Network Failures in Data
Centers: Measurement, Analysis, and Implications. In Proceedings of the ACM SIGCOMM
2011 Conference, Toronto, Ontario, Canada, August 2011.
[31] Jim Gray. Why Do Computers Stop and What Can
Be Done About It? Technical Report PN87614,
Tandem, June 1985.
[32] Weining Gu, Z. Kalbarczyk, Ravishankar K. Iyer,
and Zhenyu Yang. Characterization of Linux Kernel Behavior Under Errors. In Proceedings of the
International Conference on Dependable Systems
and Networks (DSN ’03), San Francisco, CA, June
2003.
[33] Haryadi S. Gunawi, Mingzhe Hao, Tanakorn
Leesatapornwongsa, Tiratat Patana-anake, Thanh
Do, Jeffry Adityatama, Kurnia J. Eliazar, Agung
Laksono, Jeffrey F. Lukman, Vincentius Martin,
and Anang D. Satria. What Bugs Live in the
Cloud? A Study of 3000+ Issues in Cloud Systems. In Proceedings of the ACM Symposium
on Cloud Computing (SOCC ’14), Seattle, WA,
November 2014.
[34] Huayang Guo, Ming Wu, Lidong Zhou, Gang Hu,
Junfeng Yang, and Lintao Zhang. Practical Software Model Checking via Dynamic Interface Reduction. In Proceedings of the 23rd ACM Symposium on Operating Systems Principles (SOSP
’11), Cascais, Portugal, October 2011.
[35] James R Hamilton et al. On Designing and Deploying Internet-Scale Services. In Proceedings of
the 21st Annual Large Installation System Administration Conference (LISA ’07), Dallas, Texas,
November 2007.
[36] Seungjae Han, Kang G Shin, and Harold A Rosenberg. DOCTOR: An Integrated Software Fault
Injection Environment for Distributed Real-time
Systems. In Proceedings of the International
Computer Performance and Dependability Symposium (IPDS ’95), 1995.
[37] James Myers. Data Integrity in Solid State Drives.
http://intel.ly/2cF0dTT.
[38] Jerome Verstrynge. Timestamps in Cassandra. http://docs.oracle.com/cd/B12037_
01/server.101/b10726/apphard.htm.
[39] Kafka. Data corruption or EIO leads to data
loss. https://issues.apache.org/jira/
browse/KAFKA-4009.
[40] Kimberley Keeton, Cipriano Santos, Dirk Beyer,
Jeffrey Chase, and John Wilkes. Designing for Disasters. In Proceedings of the 3rd USENIX Symposium on File and Storage Technologies (FAST
’04), San Francisco, CA, April 2004.
[41] John Kubiatowicz, David Bindel, Yan Chen,
Steven Czerwinski, Patrick Eaton, Dennis Geels,
Ramakrisha Gummadi, Sean Rhea, Hakim Weatherspoon, Westley Weimer, Chris Wells, and Ben
Zhao. OceanStore: An Architecture for Globalscale Persistent Storage. In Proceedings of the 9th
International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS 2000), Cambridge, MA,
November 2000.
[42] Kyle Kingsbury. Jepsen. http://jepsen.io/.
[43] Tanakorn Leesatapornwongsa, Mingzhe Hao,
Pallavi Joshi, Jeffrey F. Lukman, and Haryadi S.
Gunawi. SAMC: Semantic-aware Model Checking for Fast Discovery of Deep Bugs in Cloud
Systems. In Proceedings of the 11th Symposium
on Operating Systems Design and Implementation
(OSDI ’14), Broomfield, CO, October 2014.
[44] Shengyun Liu, Paolo Viotti, Christian Cachin,
Vivien Quema, and Marko Vukolic. XFT: Practi- ´
cal Fault Tolerance Beyond Crashes. In Proceedings of the 12th USENIX Conference on Operating
Systems Design and Implementation (OSDI ’16),
Savannah, GA, November 2016.
[45] LogCabin. LogCabin. https://github.com/
logcabin/logcabin.
[46] LogCabin. Reaction to disk errors and corruptions. https://groups.google.com/forum/
#!topic/logcabin-dev/wqNcdj0IHe4.
[47] Mark Adler. Adler32 Collisions. http:
//stackoverflow.com/questions/
13455067/horrific-collisions-ofadler32-hash.
[48] Justin Meza, Qiang Wu, Sanjev Kumar, and Onur
Mutlu. A Large-Scale Study of Flash Memory
Failures in the Field. In Proceedings of the 2015
ACM SIGMETRICS International Conference on
Measurement and Modeling of Computer Systems
(SIGMETRICS ’15), Portland, Oregon, June 2015.
[49] Ningfang Mi, A. Riska, E. Smirni, and E. Riedel.
Enhancing Data Availability in Disk Drives
through Background Activities. In Proceedings
of the International Conference on Dependable
Systems and Networks (DSN ’08), Anchorage,
Alaska, June 2008.
[50] Michael Rubin. Google moves from ext2 to
ext4. http://lists.openwall.net/linuxext4/2010/01/04/8.
[51] MongoDB. MongoDB. https://www.
mongodb.org/.
[52] MongoDB. MongoDB at eBay. https://www.
mongodb.com/presentations/mongodbebay.
[53] MongoDB. MongoDB WiredTiger.
https://docs.mongodb.org/manual/
core/wiredtiger/.
[54] Iyswarya Narayanan, Di Wang, Myeongjae Jeon,
Bikash Sharma, Laura Caulfield, Anand Sivasubramaniam, Ben Cutler, Jie Liu, Badriddine
Khessib, and Kushagra Vaid. SSD Failures in Datacenters: What? When? And Why? In Proceedings of the 9th ACM International on Systems and
Storage Conference (SYSTOR ’16), Haifa, Israel,
June 2016.
[55] Netflix. Cassandra at Netflix. http:
//techblog.netflix.com/2011/11/
benchmarking-cassandra-scalabilityon.html.
[56] Diego Ongaro and John Ousterhout. In Search of
an Understandable Consensus Algorithm. In 2014
USENIX Annual Technical Conference (USENIX
ATC 14), Philadelphia, PA, June 2014.
[57] Oracle. Fusion-IO Data Integrity. https:
//blogs.oracle.com/linux/entry/
fusion_io_showcases_data_integrity.
[58] Oracle. Preventing Data Corruptions with HARD.
http://docs.oracle.com/cd/B12037_01/
server.101/b10726/apphard.htm.
[59] Patrick ONeil, Edward Cheng, Dieter Gawlick,
and Elizabeth ONeil. The Log-Structured MergeTree (LSM-Tree). Acta Informatica, 33(4), 1996.
[60] Bernd Panzer-Steindel. Data integrity. CERN/IT,
2007.
[61] Thanumalayan Sankaranarayana Pillai, Vijay
Chidambaram, Ramnatthan Alagappan, Samer
Al-Kiswany, Andrea C. Arpaci-Dusseau, and
Remzi H. Arpaci-Dusseau. All File Systems Are
Not Created Equal: On the Complexity of Crafting Crash-consistent Applications. In Proceedings
of the 11th Symposium on Operating Systems Design and Implementation (OSDI ’14), Broomfield,
CO, October 2014.
[62] Vijayan Prabhakaran, Andrea C. Arpaci-Dusseau,
and Remzi H. Arpaci-Dusseau. Model-Based
Failure Analysis of Journaling File Systems. In
The Proceedings of the International Conference
on Dependable Systems and Networks (DSN2005), Yokohama, Japan, June 2005.
[63] Vijayan Prabhakaran, Lakshmi N. Bairavasundaram, Nitin Agrawal, Haryadi S. Gunawi, Andrea C. Arpaci-Dusseau, and Remzi H. ArpaciDusseau. IRON File Systems. In Proceedings
of the 20th ACM Symposium on Operating Systems Principles (SOSP ’05), Brighton, UK, October 2005.
[64] Rahul Bhartia. MongoDB on AWS
Guidelines and Best Practices. http:
//media.amazonwebservices.com/AWS_
NoSQL_MongoDB.pdf.
[65] Redis. Instagram Architecture. http:
//highscalability.com/blog/2012/4/9/
the-instagram-architecture-facebookbought-for-a-cool-billio.html.
[66] Redis. Redis. http://redis.io/.
[67] Redis. Redis at Flickr. http://code.flickr.
net/2014/07/31/redis-sentinel-atflickr/.
[68] Redis. Silent data corruption in Redis. https://
github.com/antirez/redis/issues/3730.
[69] RethinkDB. Integrity of read results.
https://github.com/rethinkdb/
rethinkdb/issues/5925.
[70] RethinkDB. RethinkDB. https://www.
rethinkdb.com/.
[71] RethinkDB. RethinkDB Data Storage.
https://www.rethinkdb.com/docs/
architecture/#data-storage.
[72] RethinkDB. RethinkDB Doc Issues.
https://github.com/rethinkdb/docs/
issues/1167.
[73] RethinkDB. Silent data loss on metablock corruptions. https://github.com/rethinkdb/
rethinkdb/issues/6034.
[74] Robert Ricci, Eric Eide, and CloudLab Team. Introducing CloudLab: Scientific infrastructure for
advancing cloud architectures and applications.
USENIX ;login:, 39(6), 2014.
[75] Robert Harris. Data corruption is worse than you
know. http://www.zdnet.com/article/
data-corruption-is-worse-than-youknow/.
[76] Ron Kuris. Cassandra From tarball to production. http://www.slideshare.net/
planetcassandra/cassandra-fromtarball-to-production-2.
[77] Mendel Rosenblum and John Ousterhout. The Design and Implementation of a Log-Structured File
System. ACM Transactions on Computer Systems,
10(1), February 1992.
[78] J. H. Saltzer, D. P. Reed, and D. D. Clark. Endto-end Arguments in System Design. ACM Trans.
Comput. Syst., 2(4), 1984.
[79] Bianca Schroeder, Sotirios Damouras, and
Phillipa Gill. Understanding Latent Sector Errors
and How to Protect Against Them. In Proceedings of the 8th USENIX Symposium on File and
Storage Technologies (FAST ’10), San Jose, CA,
February 2010.
[80] Bianca Schroeder and Garth A. Gibson. Disk Failures in the Real World: What Does an MTTF of
1,000,000 Hours Mean to You? In Proceedings of
the 5th USENIX Symposium on File and Storage
Technologies (FAST ’07), San Jose, CA, February
2007.
[81] Bianca Schroeder, Raghav Lagisetty, and Arif
Merchant. Flash Reliability in Production: The
Expected and the Unexpected. In Proceedings of
the 14th USENIX Conference on File and Storage
Technologies (FAST 16), Santa Clara, CA, February 2016.
[82] D.P. Siewiorek, J.J. Hudak, B.H. Suh, and Z.Z.
Segal. Development of a Benchmark to Measure
System Robustness. In Proceedings of the 23rd
International Symposium on Fault-Tolerant Computing (FTCS-23), Toulouse, France, June 1993.
[83] Gopalan Sivathanu, Charles P. Wright, and Erez
Zadok. Ensuring Data Integrity in Storage: Techniques and Applications. In The 1st International Workshop on Storage Security and Survivability (StorageSS ’05), FairFax County, Virginia,
November 2005.
[84] Mike J. Spreitzer, Marvin M. Theimer, Karin Petersen, Alan J. Demers, and Douglas B. Terry.
Dealing with Server Corruption in Weakly Consistent Replicated Data Systems. Wirel. Netw.,
5(5), October 1999.
[85] Vilas Sridharan, Nathan DeBardeleben, Sean
Blanchard, Kurt B. Ferreira, Jon Stearley, John
Shalf, and Sudhanva Gurumurthi. Memory Errors in Modern Systems: The Good, The Bad,
and The Ugly. In Proceedings of the 20th International Conference on Architectural Support for
Programming Languages and Operating Systems
(ASPLOS ’15), Istanbul, Turkey, March 2015.
[86] David T. Stott, Benjamin Floering, Zbigniew
Kalbarczyk, and Ravishankar K. Iyer. A Framework for Assessing Dependability in Distributed
Systems with Lightweight Fault Injectors. In Proceedings of the 4th International Computer Performance and Dependability Symposium (IPDS
’00), Chicago, IL, 2000.
[87] Sriram Subramanian, Yupu Zhang, Rajiv
Vaidyanathan, Haryadi S Gunawi, Andrea C
Arpaci-Dusseau, Remzi H Arpaci-Dusseau, and
Jeffrey F Naughton. Impact of Disk Corruption on
Open-Source DBMS. In Proceedings of the 26th
International Conference on Data Engineering
(ICDE ’10), Long Beach, CA, March 2010.
[88] Michael M. Swift, Brian N. Bershad, and
Henry M. Levy. Improving the Reliability of
Commodity Operating Systems. In Proceedings
of the 19th ACM Symposium on Operating Systems Principles (SOSP ’03), Bolton Landing, New
York, October 2003.
[89] T. K. Tsai and R. K. Iyer. Measuring Fault Tolerance with the FTAPE Fault Injection Tool. In
Proceedings of the 8th International Conference
on Modelling Techniques and Tools for Computer
Performance Evaluation: Quantitative Evaluation
of Computing and Communication Systems (MMB
’95), London, UK, September 1995.
[90] Twitter. Kafka at Twitter. https://blog.
twitter.com/2015/handling-fivebillion-sessions-a-day-in-real-time.
[91] Uber. The Uber Engineering Tech Stack, Part
I: The Foundation. https://eng.uber.com/
tech-stack-part-one/.
[92] Uber. The Uber Engineering Tech Stack, Part II:
The Edge And Beyond. https://eng.uber.
com/tech-stack-part-two/.
[93] Voldemort. Project Voldemort. http://www.
project-voldemort.com/voldemort/.
[94] Yang Wang, Manos Kapritsos, Zuocheng Ren,
Prince Mahajan, Jeevitha Kirubanandam, Lorenzo
Alvisi, and Mike Dahlin. Robustness in the Salus
Scalable Block Store. In Proceedings of the 10th
Symposium on Networked Systems Design and
Implementation (NSDI ’13), Lombard, IL, April
2013.
[95] Junfeng Yang, Tisheng Chen, Ming Wu, Zhilei
Xu, Xuezheng Liu, Haoxiang Lin, Mao Yang, Fan
Long, Lintao Zhang, and Lidong Zhou. MODIST:
Transparent Model Checking of Unmodified Distributed Systems. In Proceedings of the 6th Symposium on Networked Systems Design and Implementation (NSDI ’09), Boston, MA, April 2009.
[96] Ding Yuan, Yu Luo, Xin Zhuang, Guilherme Renna Rodrigues, Xu Zhao, Yongle Zhang,
Pranay U. Jain, and Michael Stumm. Simple Testing Can Prevent Most Critical Failures: An Analysis of Production Failures in Distributed DataIntensive Systems. In Proceedings of the 11th
Symposium on Operating Systems Design and Implementation (OSDI ’14), Broomfield, CO, October 2014.
[97] Yupu Zhang, Chris Dragga, Andrea C. ArpaciDusseau, Remzi H. Arpaci-Dusseau. ViewBox:
Integrating Local File Systems with Cloud Storage Services. In Proceedings of the 12th USENIX
Symposium on File and Storage Technologies
(FAST ’14), Santa Clara, CA, February 2014.
[98] Yupu Zhang, Abhishek Rajimwale, Andrea C.
Arpaci-Dusseau, and Remzi H. Arpaci-Dusseau.
End-to-end Data Integrity for File Systems: A
ZFS Case Study. In Proceedings of the 8th
USENIX Symposium on File and Storage Technologies (FAST ’10), San Jose, CA, February
2010.
[99] ZooKeeper. Cluster unavailable on space and
write errors. https://issues.apache.org/
jira/browse/ZOOKEEPER-2495.
[100] ZooKeeper. Crash on detecting a corruption. http://mail-archives.
apache.org/mod_mbox/zookeeperdev/201701.mbox/browser.
[101] ZooKeeper. Zookeeper service becomes unavailable when leader fails to write transaction
log. https://issues.apache.org/jira/
browse/ZOOKEEPER-2247.
