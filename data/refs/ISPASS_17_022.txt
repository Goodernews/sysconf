[1] M. Ferdman, A. Adileh, O. Kocberber, S. Volos, M. Alisafaee, D. Jevdijic,
C. Kaynak, A. D. Popescu, A. Ailamaki, and B. Falsafi, “Clearing the clouds:
A study of emerging scale-out workloads on modern hardware,” SIGPLAN Not.,
vol. 47, no. 4, pp. 37-48, Mar. 2012.
[2] W. Gao, Y. Zhu, Z. Jia, C. Luo, L. Wang, Z. Li, J. Zhan, Y. Qi, Y. He, S. Gong,
X. Li, S. Zhang, and B. Qiu, “Bigdatabench: a big data benchmark suite from web
search engines,” CoRR, vol. abs/1307.0320, 2013.
[3] R. Panda, C. Erb, M. Lebeane, J. Ryoo, and L. K. John, “Performance characterization of modern databases on out-of-order cpus,” in JEEE SBAC-PAD, 2015.
[4] “Jedec standard jesd235,” High Bandwidth Memory (HBM) DRAM, 2013.
[5] “Jedec standard jesd235a,’ High Bandwidth Memory (HBM) 2 DRAM, 2016.
[6] C. Chou, A. Jaleel, and M. K. Qureshi, “Bear: Techniques for mitigating bandwidth
bloat in gigascale dram caches,” in ISCA, 2015, pp. 198-210.
[7] A. Joshi, L. Eeckhout, R. H. Bell, and L. John, “Performance cloning: A technique
for disseminating proprietary applications as benchmarks,” in 2006 IEEE International Symposium on Workload Characterization, Oct 2006, pp. 105-115.
[8] R. A. Uhlig and T. N. Mudge, “Trace-driven memory simulation: A survey,” ACM
Comput. Surv., vol. 29, no. 2, pp. 128-170, Jun. 1997.
[9] Y. Kim, W. Yang, and O. Mutlu, “Ramulator: A fast and extensible dram simulator,”
in IEEE Computer architecture letters, 2016.
[10] G. Balakrishnan and Y. Solihin, “West: Cloning data cache behavior using stochastic
traces.” HPCA, pp. 387-398, 2012.
[11] A. Awad and Y. Solihin, “Stm: Cloning the spatial and temporal memory access
behavior.’ HPCA, pp. 237-247, 2014.
[12] Y. Wang, G. Balakrishnan, and Y. Solihin, “Metoo: Stochastic modeling of memory
traffic timing behavior,’ PACT, pp. 457-467, 2015.
[13] K. Ganesan, J. Jo, and L. John, “Synthesizing memory-level parallelism aware
miniature clones for spec cpu2006 and implantbench workloads,” JSPASS, 2010.
[14] A. Awad, G. Balakrishnan, Y. Wang, and Y. Solihin, “Accurate cloning of the
memory access behavior,” IPSJ Trans. System LSI Design Methodology, vol. 9, pp.
49-60, 2016.
[15] R. Panda, X. Zheng, S. Song, J. H. Ryoo, M. LeBeane, A. Gerstlauer, and L. K.
John, “Genesys: Automatically generating representative training sets for predictive
benchmarking,” in SAMOS, 2016, pp. 116-123.
[16] R. H. Bell, Jr. and L. K. John, “Improved automatic testcase synthesis for
performance model validation,’ in Proceedings of the 19th Annual International
Conference on Supercomputing, ser. ICS ’05, 2005, pp. 111-120.
[17] A. Joshi, A. Phansalkar, L. Eeckhout, and L. K. John, “Measuring benchmark similarity using inherent program characteristics,’ IEEE Transactions on Computers,
vol. 55, no. 6, pp. 769-782, 2006.
[18] G. Balakrishnan and Y. Solihin, “Memst: Cloning memory behavior using stochastic
traces,” in MEMSYS, ser. MEMSYS 715, 2015, pp. 146-157.
[19] M. Badr and N. E. Jerger, “Synfull: Synthetic traffic models capturing a full range
of cache coherence behaviour,” in in Intl. Symp. on Computer Architecture, 2014.
[20] J. Larus, “Efficient program tracing,’ Computer, vol. 26, no. 5, pp. 52-61, May
1993.
[21] “SPEC CPU 2006 Benchmarks,” www.spec.org/cpu2006.
[22] J. Ziv and A. Lempel, “Compression of individual sequences via variable-rate
coding,” IEEE Trans. Inf. Theor., vol. 24, no. 5, pp. 530-536, Sep. 2006.
[23] T.-F. Chen and J.-L. Baer, “Effective Hardware-based Data Prefetching for Highperformance Processors,” JEEE Transactions on Computers, 1995.
[24] S. Somogyi, T. F. Wenisch, A. Ailamaki, B. Falsafi, and A. Moshovos, “Spatial
memory streaming,” in Proceedings of the 33rd Annual International Symposium
on Computer Architecture, ser. ISCA ’06, Washington, DC, USA, 2006.
[25] R. Panda, D. A. Jimenez, and P. V. Gratz, “B-fetch: Branch prediction directed
prefetching for in-order processors,” IEEE Computer Architecture Letters, vol. 11,
pp. 41-44, 2012.
[26] S. Somogyi, T. F. Wenisch, A. Ailamaki, and B. Falsafi, “Spatio-temporal memory streaming,” in Proceedings of the 36th Annual International Symposium on
Computer Architecture, ser. ISCA ’09, 2009.
[27] R.L. Mattson, J. Gecsei, D. R. Slutz, and I. L. Traiger, “Evaluation techniques for
storage hierarchies,” IBM Syst. J., vol. 9, no. 2, pp. 78-117, Jun. 1970.
[28] F. Olken, “Efficient methods for calculating the success function of fixed space
replacement policies,” vol. 3, pp. 153-154, 1981.
[29] C. Ding and Y. Zhong, “Predicting whole-program locality through reuse distance
analysis,” SIGPLAN Not., vol. 38, no. 5, pp. 245-257, May 2003.
[30] B. T. Bennett and V. J. Kruskal, “Lru stack processing,” JBM Journal of Research
and Development, vol. 19, no. 4, pp. 353-357, July 1975.
[31] C.-K. Luk, R. Cohn, R. Muth, H. Patil, A. Klauser, G. Lowney, S. Wallace, V. J.
Reddi, and K. Hazelwood, “Pin: Building customized program analysis tools with
dynamic instrumentation,” in PLDI, 2005, pp. 190-200.
[32] P. S. Magnusson, M. Christensson, J. Eskilson, D. Forsgren, G. Hallberg,
J. Hégberg, F. Larsson, A. Moestedt, and B. Werner, “Simics: A full system
simulation platform,” Computer, vol. 35, no. 2, pp. 50-58, Feb. 2002.
[33] N. Binkert, B. Beckmann, G. Black, S. K. Reinhardt, A. Saidi, A. Basu, J. Hestness,
D. R. Hower, T. Krishna, S. Sardashti, R. Sen, K. Sewell, M. Shoaib, N. Vaish,
M. D. Hill, and D. A. Wood, “The gem5 simulator,” SIGARCH Comput. Archit.
News, vol. 39, no. 2, pp. 1-7, Aug. 2011.
