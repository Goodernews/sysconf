[1] Btrfs File System. https://btrfs.wiki.kernel.org/
index.php/Main Page.
[2] Ceph File System.
master/.

http://docs.ceph.com/docs/

[3] Discussion with Theodore Ts’o at Linux FAST
Summit’17. https://www.usenix.org/conference/
linuxfastsummit17.
[4] E2fsprogs: Ext2/3/4 Filesystem Utilities.
//e2fsprogs.sourceforge.net/.

http:

[5] Ext4 File System. https://ext4.wiki.kernel.org/
index.php/Main Page.
[6] Lustre File System. http://opensfs.org/lustre/.
[7] Samba TDB (Trivial DataBase). https://tdb.samba.
org/.
[8] XFS File System. http://xfs.org/index.php/Main
Page.
[9] XFS File System Utilities.
https:
//access.redhat.com/documentation/enUS/Red Hat Enterprise Linux/6/html/
Storage Administration Guide/xfsothers.html.
[10] High Performance Computing Center (HPCC)
Power Outage Event. Email Annoucement by
HPCC, Monday, January 11, 2016 at 8:50:17
AM CST.
https://www.cs.nmsu.edu/∼mzheng/
docs/failures/2016-hpcc-outage.pdf, 2016.
[11] Nitin Agrawal, Vijayan Prabhakaran, Ted Wobber,
John D. Davis, Mark Manasse, and Rina Panigrahy.
Design Tradeoffs for SSD Performance, 2008.
[12] Lakshmi N. Bairavasundaram, Andrea C. ArpaciDusseau, Remzi H. Arpaci-Dusseau, Garth R.
Goodson, and Bianca Schroeder. An analysis of
data corruption in the storage stack. Trans. Storage, 4(3):8:1–8:28, November 2008.
[13] Lakshmi N. Bairavasundaram, Garth R. Goodson,
Shankar Pasupathy, and Jiri Schindler. An analysis
of latent sector errors in disk drives. In Proceedings
of the 2007 ACM SIGMETRICS International Conference on Measurement and Modeling of Computer Systems, SIGMETRICS ’07, pages 289–300,
New York, NY, USA, 2007. ACM.
[14] Luiz Andre Barroso and Urs Hoelzle. The Datacenter As a Computer: An Introduction to the Design
of Warehouse-Scale Machines. Morgan and Claypool Publishers, 1st edition, 2009.

[15] Hanmant P Belgal, Nick Righos, Ivan Kalastirsky,
Jeff J Peterson, Robert Shiner, and Neal Mielke. A
new reliability model for post-cycling charge retention of flash memories. In Reliability Physics Symposium Proceedings, 2002. 40th Annual, pages 7–
20. IEEE, 2002.
[16] James Bornholt, Antoine Kaufmann, Jialin
Li, Arvind Krishnamurthy, Emina Torlak, and
Xi Wang. Specifying and checking file system
crash-consistency models. ACM SIGPLAN Notices,
51(4):83–98, 2016.
[17] Adam Brand, Ken Wu, Sam Pan, and David Chin.
Novel read disturb failure mechanism induced by
FLASH cycling. In Reliability Physics Symposium, 1993. 31st Annual Proceedings., International, pages 127–132. IEEE, 1993.
[18] Yu Cai, Erich F. Haratsch, Onur Mutlu, and Ken
Mai. Error Patterns in MLC NAND Flash Memory:
Measurement, Characterization, and Analysis. In
Proceedings of the Conference on Design, Automation and Test in Europe, DATE ’12, pages 521–526,
San Jose, CA, USA, 2012. EDA Consortium.
[19] Yu Cai, Gulay Yalcin, Onur Mutlu, Erich F
Haratsch, Osman Unsal, Adrian Cristal, and Ken
Mai. Neighbor-cell assisted error correction for
MLC NAND flash memories. In ACM SIGMETRICS Performance Evaluation Review, volume 42,
pages 491–504. ACM, 2014.
[20] Jinrui Cao, Simeng Wang, Dong Dai, Mai Zheng,
and Yong Chen. A generic framework for testing parallel file systems. In Proceedings of the
1st Joint International Workshop on Parallel Data
Storage & Data Intensive Scalable Computing Systems, PDSW-DISCS ’16, pages 49–54, Piscataway,
NJ, USA, 2016. IEEE Press.
[21] João Carlos Menezes Carreira, Rodrigo Rodrigues,
George Candea, and Rupak Majumdar. Scalable
testing of file system checkers. In Proceedings of
the 7th ACM European Conference on Computer
Systems, EuroSys ’12, pages 239–252, New York,
NY, USA, 2012. ACM.
[22] Feng Chen, David A. Koufaty, and Xiaodong
Zhang. Understanding intrinsic characteristics and
system implications of flash memory based solid
state drives. In ACM SIGMETRICS, 2009.
[23] Haogang Chen, Daniel Ziegler, Tej Chajed, Adam
Chlipala, M Frans Kaashoek, and Nickolai Zeldovich. Using crash hoare logic for certifying the

fscq file system. In Proceedings of the 25th Symposium on Operating Systems Principles, pages 18–
37. ACM, 2015.
[24] Peter M. Chen, Edward K. Lee, Garth A. Gibson, Randy H. Katz, and David A. Patterson.
RAID: high-performance, reliable secondary storage. ACM Comput. Surv., 26(2):145–185, June
1994.
[25] Vijay Chidambaram, Thanumalayan Sankaranarayana Pillai, Andrea C. Arpaci-Dusseau, and
Remzi H. Arpaci-Dusseau. Optimistic Crash Consistency. In Proceedings of the 24th ACM Symposium on Operating Systems Principles (SOSP ’13),
Farmington, PA, November 2013.
[26] Vijay Chidambaram, Tushar Sharma, Andrea C.
Arpaci-Dusseau, and Remzi H. Arpaci-Dusseau.
Consistency Without Ordering. In Proceedings
of the 10th Conference on File and Storage Technologies (FAST’12), San Jose, California, February
2012.
[27] Daniel Fryer, Kuei Sun, Rahat Mahmood, TingHao
Cheng, Shaun Benjamin, Ashvin Goel, and Angela Demke Brown. Recon: Verifying File System Consistency at Runtime. In Proceedings of the
10th Conference on File and Storage Technologies
(FAST’12), San Jose, California, February 2012.
[28] Ryan Gabrys, Eitan Yaakobi, Laura M. Grupp,
Steven Swanson, and Lara Dolecek. Tackling intracell variability in TLC flash through tensor product
codes. In ISIT’12, pages 1000–1004, 2012.
[29] Sanjay Ghemawat, Howard Gobioff, and Shun-Tak
Leung. The Google File System. In Proceedings
of the Nineteenth ACM Symposium on Operating
Systems Principles, SOSP ’03, pages 29–43, New
York, NY, USA, 2003. ACM.
[30] Laura M. Grupp, Adrian M. Caulfield, Joel Coburn,
Steven Swanson, Eitan Yaakobi, Paul H. Siegel,
and Jack K. Wolf. Characterizing flash memory: anomalies, observations, and applications. In
Proceedings of the 42nd Annual IEEE/ACM International Symposium on Microarchitecture, MICRO 42, pages 24–33, New York, NY, USA, 2009.
ACM.
[31] Haryadi S. Gunawi, Abhishek Rajimwale, Andrea C. Arpaci-Dusseau, and Remzi H. ArpaciDusseau. Sqck: A declarative file system checker.
In Proceedings of the 8th USENIX Conference
on Operating Systems Design and Implementation,
OSDI’08, pages 131–146, Berkeley, CA, USA,
2008. USENIX Association.

[32] Haryadi S Gunawi, Cindy Rubio-González, Andrea C Arpaci-Dusseau, Remzi H Arpaci-Dusseau,
and Ben Liblit. Eio: Error handling is occasionally
correct. In FAST, volume 8, pages 1–16, 2008.
[33] Xavier Jimenez, David Novo, and Paolo Ienne.
Wear unleveling: improving nand flash lifetime by
balancing page endurance. In FAST, pages 47–59,
2014.
[34] Andrew Krioukov, Lakshmi N Bairavasundaram,
Garth R Goodson, Kiran Srinivasan, Randy Thelen,
Andrea C Arpaci-Dusseau, and Remzi H ArpaciDusseau. Parity lost and parity regained. In FAST,
volume 8, pages 1–15, 2008.
[35] H Kurata, K Otsuga, A Kotabe, S Kajiyama, T Osabe, Y Sasago, S Narumi, K Tokami, S Kamohara,
and O Tsuchiya. The impact of random telegraph
signals on the scaling of multilevel flash memories.
In VLSI Circuits, 2006. Digest of Technical Papers.
2006 Symposium on, pages 112–113. IEEE, 2006.
[36] Jiangpeng Li, Kai Zhao, Xuebin Zhang, Jun Ma,
Ming Zhao, and Tong Zhang. How much can data
compressibility help to improve nand flash memory
lifetime? In FAST, pages 227–240, 2015.
[37] Lanyue Lu, Andrea C. Arpaci-Dusseau, Remzi H.
Arpaci-Dusseau, and Shan Lu. A study of linux
file system evolution. In Proceedings of the 11th
USENIX Conference on File and Storage Technologies, FAST’13, pages 31–44, 2013.
[38] Youyou Lu, Jiwu Shu, Weimin Zheng, et al. Extending the lifetime of flash-based storage through
reducing write amplification from file systems. In
FAST, volume 13, 2013.
[39] Ao Ma, Chris Dragga, Andrea C. Arpaci-Dusseau,
and Remzi H. Arpaci-Dusseau. ffsck: The fast file
system checker. In Presented as part of the 11th
USENIX Conference on File and Storage Technologies (FAST 13), pages 1–15, San Jose, CA, 2013.
USENIX.
[40] Marshall K. McKusick, William N. Joy, Samuel J.
Leffler, and Robert S. Fabry. A fast file system for
unix. ACM Trans. Comput. Syst., 2(3):181–197,
August 1984.
[41] Changwoo Min, Sanidhya Kashyap, Byoungyoung
Lee, Chengyu Song, and Taesoo Kim. Crosschecking semantic correctness: The case of finding
file system bugs. In Proceedings of the 25th Symposium on Operating Systems Principles, pages 361–
377. ACM, 2015.

[42] C. Mohan, Don Haderle, Bruce Lindsay, Hamid Pirahesh, and Peter Schwarz. Aries: A transaction
recovery method supporting fine-granularity locking and partial rollbacks using write-ahead logging.
ACM Trans. Database Syst., 17(1):94–162, March
1992.
[43] T. Ong, A. Frazio, N. Mielke, S. Pan, N. Righos,
G. Atwood, and S. Lai. Erratic Erase In ETOX/sup
TM/ Flash Memory Array. In Symposium on VLSI
Technology, VLSI’93, 1993.
[44] Vijayan Prabhakaran, Lakshmi N. Bairavasundaram, Nitin Agrawal, Haryadi S. Gunawi, Andrea C. Arpaci-Dusseau, and Remzi H. ArpaciDusseau. IRON File Systems. In Proceedings of
the 20th ACM Symposium on Operating Systems
Principles (SOSP’05), pages 206–220, Brighton,
United Kingdom, October 2005.
[45] Abhishek Rajimwale, Vijay Chidambaram, Deepak
Ramamurthi, Andrea C Arpaci-Dusseau, and
Remzi H Arpaci-Dusseau. Coerced cache eviction
and discreet mode journaling: Dealing with misbehaving disks. In Dependable Systems & Networks
(DSN), 2011 IEEE/IFIP 41st International Conference on, pages 518–529. IEEE, 2011.
[46] Bianca Schroeder and Garth A. Gibson. Disk failures in the real world: What does an MTTF of
1,000,000 hours mean to you? In Proceedings of
the 5th USENIX Conference on File and Storage
Technologies (FAST’07), 2007.
[47] Bianca Schroeder, Raghav Lagisetty, and Arif Merchant. Flash reliability in production: The expected
and the unexpected. In 14th USENIX Conference
on File and Storage Technologies (FAST 16), pages
67–80, Santa Clara, CA, February 2016. USENIX
Association.
[48] Helgi Sigurbjarnarson, James Bornholt, Emina Torlak, and Xi Wang. Push-button verification of file
systems via crash refinement. In Proceedings of
12th USENIX Symposium on Operating Systems
Design and Implementation (OSDI’16), 2016.
[49] Huang-Wei Tseng, Laura M. Grupp, and Steven
Swanson. Understanding the impact of power loss
on flash memory. In Proceedings of the 48th Design
Automation Conference (DAC’11), 2011.
[50] Simeng Wang, Jinrui Cao, Danny V Murillo, Yiliang Shi, and Mai Zheng. Emulating Realistic Flash
Device Errors with High Fidelity. In IEEE International Conference on Networking, Architecture and
Storage (NAS’16). IEEE, 2016.

[51] Gala Yadgar, Eitan Yaakobi, and Assaf Schuster.
Write once, get 50% free: Saving ssd erase costs
using wom codes. In FAST, pages 257–271, 2015.
[52] Junfeng Yang, Can Sar, and Dawson Engler. EXPLODE: a lightweight, general system for finding
serious storage system errors. In Proceedings of
the Seventh Symposium on Operating Systems Design and Implementation (OSDI ’06), pages 131–
146, November 2006.
[53] Yiying Zhang, Leo Prasath Arulraj, Andrea C
Arpaci-Dusseau, and Remzi H Arpaci-Dusseau.
De-indirection for flash-based ssds with nameless
writes. In USENIX Conference on File and Storage
Technologies (FAST’12), 2012.
[54] Yupu Zhang, Abhishek Rajimwale, Andrea C.
Arpaci-Dusseau, and Remzi H. Arpaci-Dusseau.
End-to-end Data Integrity for File Systems: A
ZFS Case Study. In Proceedings of the 8th
USENIX Conference on File and Storage Technologies, FAST’10, pages 3–3, Berkeley, CA, USA,
2010.
[55] Mai Zheng, Joseph Tucek, Dachuan Huang, Feng
Qin, Mark Lillibridge, Elizabeth S. Yang, Bill W
Zhao, and Shashank Singh. Torturing Databases
for Fun and Profit. In 11th USENIX Symposium
on Operating Systems Design and Implementation
(OSDI 14), pages 449–464, Broomfield, CO, 2014.
[56] Mai Zheng, Joseph Tucek, Feng Qin, and Mark Lillibridge. Understanding the robustness of SSDs
under power fault. In Proceedings of the 11th
USENIX Conference on File and Storage Technologies (FAST’13), 2013.
[57] Mai Zheng, Joseph Tucek, Feng Qin, Mark Lillibridge, Bill W Zhao, and Elizabeth S. Yang. Reliability Analysis of SSDs under Power Fault. In ACM
Transactions on Computer Systems (TOCS), 2016.
