[1] I Androutsopoulos, G Ritchie, and P Thanisch. 1993. Masque/sql: An Efficient and Portable Natural Language Query Interface for Relational Databases. Tech report, University of Edinburgh (1993).



[2] Ion Androutsopoulos, Graeme D. Ritchie, and Peter Thanisch. 1995. Natural language interfaces to databases - An Introduction. Natural Language Engineering (1995).



[3] Thomas Ball, Mayur Naik, and Sriram K. Rajamani. 2003. From symptom to cause: localizing errors in counterexample traces. In POPL. 97–105.



[4] Daniel W. Barowy, Sumit Gulwani, Ted Hart, and Benjamin G. Zorn. 2015. FlashRelate: extracting relational data from semi-structured spreadsheets using examples. ACM, 218–228.



[5] Jonathan Berant, Andrew Chou, Roy Frostig, and Percy Liang. 2013. Semantic Parsing on Freebase from Question-Answer Pairs. In EMNLP. 1533–1544.

Bob Carpenter. 1997. Type-logical semantics. MIT press.



[6] Alvin Cheung, Armando Solar-Lezama, and Samuel Madden. 2013. Optimizing database-backed applications with query

synthesis. In PLDI. 3–14.



[7] E. F. Codd. 1974. Seven Steps to Rendezvous with the Casual User. In IFIP Working Conference Data Base Management.

179–200.



[8] Aditya Desai, Sumit Gulwani, Vineet Hingorani, Nidhi Jain, Amey Karkare, Mark Marron, Sailesh R, and Subhajit Roy. 2016.

Program synthesis using natural language. In ICSE.

Ramez Elmasri and Shamkant B. Navathe. 2011. Fundamentals of Database Systems. Addison-Wesley.



[9] Yu Feng, Ruben Martins, Jacob Van Geffen, Isil Dillig, and Swarat Chaudhuri. 2017a. Component-based Synthesis of Table

Consolidation and Transformation Tasks from Examples. In Programming Language Design and Implementation.



[10] Yu Feng, Ruben Martins, Yuepeng Wang, Isil Dillig, and Thomas W. Reps. 2017b. Component-based synthesis for complex

APIs. In POPL. 599–612.



[11] John K Feser, Swarat Chaudhuri, and Isil Dillig. 2015. Synthesizing data structure transformations from input-output

examples. In PLDI. 229–239.



[12] Claire Le Goues, Michael Dewey-Vogt, Stephanie Forrest, and Westley Weimer. 2012. A systematic study of automated

program repair. In ICSE. 3–13.



[13] Alex Groce and Willem Visser. 2003. What Went Wrong: Explaining Counterexamples. In SPIN.

Barbara J. Grosz, Douglas E. Appelt, Paul A. Martin, and Fernando C. N. Pereira. 1987. TEAM: An Experiment in the Design

of Transportable Natural-Language Interfaces. Artificial Intelligence 32, 2 (1987), 173–243.



[14] Sumit Gulwani. 2011. Automating string processing in spreadsheets using input-output examples. In ACM SIGPLAN Notices,

Vol. 46. ACM, 317–330.



[15] Sumit Gulwani and Mark Marron. 2014. NLyze: interactive programming by natural language for spreadsheet data analysis

and manipulation. In SIGMOD.



[16] Tihomir Gvero, Viktor Kuncak, Ivan Kuraj, and Ruzica Piskac. 2013. Complete completion using types and weights. In ACM

SIGPLAN Notices, Vol. 48. ACM, 27–38.



[17] Gary G. Hendrix, Earl D. Sacerdoti, Daniel Sagalowicz, and Jonathan Slocum. 1978. Developing a Natural Language Interface

to Complex Data. TODS 3, 2 (1978), 105–147.



[18] James A. Jones and Mary Jean Harrold. 2005. Empirical evaluation of the tarantula automatic fault-localization technique.

In ASE. 273–282.



[19] James A. Jones, Mary Jean Harrold, and John T. Stasko. 2002. Visualization of test information to assist fault localization. In

ICSE. 467–477.



[20] Manu Jose and Rupak Majumdar. 2011a. Bug-Assist: assisting fault localization in ANSI-C programs. In CAV.

Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 63. Publication date: October 2017.

SQLizer: Query Synthesis from Natural Language 63:25



[21] Manu Jose and Rupak Majumdar. 2011b. Cause clue clauses: error localization using maximum satisfiability. PLDI (2011). Rohit J. Kate and Raymond J. Mooney. 2006. Using String-Kernels for Learning Semantic Parsers. In ACL.



[22] Rohit J. Kate, Yuk Wah Wong, and Raymond J. Mooney. 2005. Learning to Transform Natural to Formal Languages. In AAAI.

1062–1068.



[23] Vu Le and Sumit Gulwani. 2014. FlashExtract: a framework for data extraction by examples. ACM, 542–553.



[24] Vu Le, Sumit Gulwani, and Zhendong Su. 2013. Smartsynth: Synthesizing smartphone automation scripts from natural

language. In MobiSys. 193–206.



[25] Fei Li and H. V. Jagadish. 2014. Constructing an Interactive Natural Language Interface for Relational Databases. PVLDB 8,

1 (2014), 73–84.



[26] Yunyao Li, Huahai Yang, and H. V. Jagadish. 2006. Constructing a Generic Natural Language Interface for an XML Database.

In EDBT. 737–754.



[27] Percy Liang and Christopher Potts. 2015. Bringing machine learning and compositional semantics together. Annual Review

of Linguistics 1, 1 (2015), 355–376.



[28] Fan Long and Martin Rinard. 2015. Staged program repair with condition synthesis. In ESEC/FSE.



[29] Fan Long and Martin Rinard. 2016. Automatic patch generation by learning correct code. In POPL.



[30] Bill MacCartney and Christopher D Manning. 2009. An extended model of natural logic. In IWCS. 140–156.



[31] Christopher D. Manning, Mihai Surdeanu, John Bauer, Jenny Finkel, Steven J. Bethard, and David McClosky. 2014. The

Stanford CoreNLP Natural Language Processing Toolkit. In ACL System Demonstrations. 55–60.



[32] Tomas Mikolov, Ilya Sutskever, Kai Chen, Gregory S. Corrado, and Jeffrey Dean. 2013. Distributed Representations of Words

and Phrases and their Compositionality. In NIPS.



[33] Scott Miller, David Stallard, Robert J. Bobrow, and Richard M. Schwartz. 1996. A Fully Statistical Approach to Natural

Language Interfaces. In ACL. 55–61.



[34] Hoang Duong Thien Nguyen, Dawei Qi, Abhik Roychoudhury, and Satish Chandra. 2013. SemFix: program repair via

semantic analysis. In ICSE. 772–781.



[35] Peter-Michael Osera and Steve Zdancewic. 2015. Type- and example-directed program synthesis. In PLDI.



[36] Nadia Polikarpova, Ivan Kuraj, and Armando Solar-Lezama. 2016. Program synthesis from polymorphic refinement types.

In PLDI. 522–538.

Oleksandr Polozov and Sumit Gulwani. 2015. FlashMeta: A framework for inductive program synthesis. ACM, 107–126. Ana-Maria Popescu, Alex Armanasu, Oren Etzioni, David Ko, and

Alexander Yates. 2004. Modern Natural Language

Interfaces to Databases: Composing Statistical Parsing with Semantic Tractability. In COLING.



[37] Ana-Maria Popescu, Oren Etzioni, and Henry A. Kautz. 2003. Towards a theory of natural language interfaces to databases.

In IUI. 149–157.



[38] Chris Quirk, Raymond Mooney, and Michel Galley. 2015. Language to code: Learning semantic parsers for if-this-then-that

recipes. In ACL. 878–888.



[39] Mohammad Raza, Sumit Gulwani, and Natasa Milic-Frayling. 2015. Compositional Program Synthesis from Natural Language

and Examples. In IJCAI.



[40] Armando Solar Lezama. 2008. Program Synthesis By Sketching. Ph.D. Dissertation. EECS Department, University of California,

Berkeley.



[41] Armando Solar-Lezama, Rodric M. Rabbah, Rastislav Bodík, and Kemal Ebcioglu. 2005. Programming by sketching for

bit-streaming programs. In PLDI.



[42] Armando Solar-Lezama, Liviu Tancau, Rastislav Bodík, Sanjit A. Seshia, and Vijay A. Saraswat. 2006. Combinatorial

sketching for finite programs. In ASPLOS. 404–415.



[43] Lappoon R Tang and Raymond J Mooney. 2000. Automated construction of database interfaces: Integrating statistical and

relational learning for semantic parsing. In EMNLP. 133–141.



[44] Quoc Trung Tran, Chee-Yong Chan, and Srinivasan Parthasarathy. 2009. Query by output. In SIGMOD. 535–548. Chenglong Wang, Alvin Cheung, and Ras Bodik. 2017. Synthesizing Highly Expressive SQL Queries from Input-Output

Examples. In Programming Language Design and Implementation.



[45] David H. D. Warren and Fernando C. N. Pereira. 1982. An Efficient Easily Adaptable System for Interpreting Natural Language Queries. American Journal of Computational Linguistics 8, 3-4 (1982), 110–122.



[46] Westley Weimer, ThanhVu Nguyen, Claire Le Goues, and Stephanie Forrest. 2009. Automatically finding patches using

genetic programming. In ICSE. 364–374.



[47] Ben Wiedermann, Ali Ibrahim, and William R. Cook. 2008. Interprocedural query extraction for transparent persistence. In

OOPSLA. 19–36.



[48] William A Woods, Ronald M Kaplan, and Bonnie Nash-Webber. 1972. The lunar sciences natural language information system.

Bolt, Beranek and Newman.



[49] Navid Yaghmazadeh, Christian Klinger, Isil Dillig, and Swarat Chaudhuri. 2016. Synthesizing transformations on hierar-

chically structured data. In Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design and Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 63. Publication date: October 2017.



[50] Navid Yaghmazadeh, Yuepeng Wang, Isil Dillig, and Thomas Dillig

Implementation. ACM, 508–521.



[51] John M. Zelle and Raymond J. Mooney. 1993. Learning Semantic Grammars with Constructive Inductive Logic Programming.

In AAAI. 817–822.



[52] John M. Zelle and Raymond J. Mooney. 1996. Learning to Parse Database Queries Using Inductive Logic Programming. In

AAAI. 1050–1055.



[53] Sai Zhang and Yuyin Sun. 2013. Automatically synthesizing SQL queries from input-output examples. In ASE. Moshé M. Zloof. 1975. Query-by-Example: the Invocation and Definition of Tables and Forms. In VLDB.
