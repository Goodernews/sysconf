[1] Intel DPDK, http://dpdk.org/.
[2] Mohammad Alizadeh, Tom Edsall, Sarang Dharmapurikar, Ramanan Vaidyanathan, Kevin Chu, Andy Fingerhut, Vinh The Lam, Francis Matus, Rong Pan,
Navindra Yadav, and George Varghese. 2014. CONGA: Distributed Congestionaware Load Balancing for Datacenters. In ACM SIGCOMM. 503–514.
[3] Mohammad Alizadeh, Shuang Yang, Milad Sharif, Sachin Katti, Nick McKeown,
Balaji Prabhakar, and Scott Shenker. 2013. pFabric: Minimal Near-optimal Datacenter Transport. ACM SIGCOMM (2013), 435–446.
[4] Ran Ben Basat. RHHH code. Available: https://github.com/ranbenbasat/RHHH.
[5] Ran Ben-Basat, Gil Einziger, Roy Friedman, and Yaron Kassner. 2016. Heavy
Hitters in Streams and Sliding Windows. In IEEE INFOCOM.
[6] Ran Ben-Basat, Gil Einziger, Roy Friedman, and Yaron Kassner. 2017. Optimal
elephant flow detection. In IEEE INFOCOM.
[7] Ran Ben-Basat, Gil Einziger, Roy Friedman, and Yaron Kassner. 2017. Randomized Admission Policy for Efficient Top-k and Frequency Estimation. In IEEE
INFOCOM.
[8] Theophilus Benson, Ashok Anand, Aditya Akella, and Ming Zhang. 2011. MicroTE: Fine Grained Traffic Engineering for Data Centers. In ACM CoNEXT.
[9] Moses Charikar, Kevin Chen, and Martin Farach-Colton. 2002. Finding Frequent
Items in Data Streams. In EATCS ICALP. 693–703.
[10] Graham Cormode and Marios Hadjieleftheriou. 2008. Finding Frequent Items in
Data Streams. VLDB 1, 2 (Aug. 2008), 1530–1541.
[11] Graham Cormode and Marios Hadjieleftheriou. 2010. Methods for Finding
Frequent Items in Data Streams. J. VLDB 19, 1 (2010), 3–20.
[12] Graham Cormode, Flip Korn, S. Muthukrishnan, and Divesh Srivastava. 2003.
Finding Hierarchical Heavy Hitters in Data Streams. In VLDB. 464–475.
[13] Graham Cormode, Flip Korn, S. Muthukrishnan, and Divesh Srivastava. 2004.
Diamond in the Rough: Finding Hierarchical Heavy Hitters in Multi-dimensional
Data. In SIGMOD. 155–166.
[14] Graham Cormode, Flip Korn, S. Muthukrishnan, and Divesh Srivastava. 2008.
Finding Hierarchical Heavy Hitters in Streaming Data. ACM Trans. Knowl. Discov.
Data 1, 4 (Feb. 2008), 2:1–2:48.
[15] Graham Cormode and S. Muthukrishnan. 2005. An Improved Data Stream
Summary: The Count-min Sketch and Its Applications. J. Algorithms (2005), 18.
[16] Andrew R. Curtis, Jeffrey C. Mogul, Jean Tourrilhes, Praveen Yalagandula, Puneet
Sharma, and Sujata Banerjee. 2011. DevoFlow: Scaling Flow Management for
High-performance Networks. In ACM SIGCOMM. 254–265.
[17] Erik D. Demaine, Alejandro López-Ortiz, and J. Ian Munro. 2002. Frequency
Estimation of Internet Packet Streams with Limited Space. In EATCS ESA.
[18] Gil Einziger and Roy Friedman. 2014. TinyLFU: A Highly Efficient Cache Admission Policy. In Euromicro PDP. 146–153.
[19] Gil Einziger and Roy Friedman. 2016. Counting with TinyTable: Every Bit Counts!.
In ACM ICDCN.
[20] Gil Einziger, Marcelo Caggiani Luizelli, and Erez Waisbard. 2017. Constant Time
Weighted Frequency Estimation for Virtual Network Functionalities. In IEEE
ICCCN.
[21] Paul Emmerich, Sebastian Gallenmüller, Daniel Raumer, Florian Wohlfart, and
Georg Carle. 2015. MoonGen: A Scriptable High-Speed Packet Generator. In
ACM IMC. 275–287.
[22] Pedro Garcia-Teodoro, Jesus E. Diaz-Verdejo, Gabriel Macia-Fernandez, and E. Vazquez. 2009. Anomaly-Based Network Intrusion Detection: Techniques, Systems
and Challenges. Computers and Security (2009), 18–28.
[23] John Hershberger, Nisheeth Shrivastava, Subhash Suri, and Csaba D. Tóth. 2005.
Space Complexity of Hierarchical Heavy Hitters in Multi-dimensional Data
Streams. In ACM PODS. 338–347.
[24] Paul Hick. CAIDA Anonymized 2013 Internet Trace, equinix-sanjose 2013-12-19
13:00-13:05 UTC, Direction B.
[25] Paul Hick. CAIDA Anonymized 2014 Internet Trace, equinix-sanjose 2013-06-19
13:00-13:05 UTC, Direction B.
[26] Paul Hick. CAIDA Anonymized 2015 Internet Trace, equinix-chicago 2015-12-17
13:00-13:05 UTC, Direction A.
[27] Paul Hick. CAIDA Anonymized 2016 Internet Trace, equinix-chicago 2016-02-18
13:00-13:05 UTC, Direction A.
[28] Lavanya Jose and Minlan Yu. 2011. Online Measurement of Large Traffic Aggregates on Commodity Switches. In USENIX Hot-ICE.
[29] Abdul Kabbani, Mohammad Alizadeh, Masato Yasuda, Rong Pan, and Balaji
Prabhakar. 2010. AF-QCN: Approximate Fairness with Quantized Congestion
Notification for Multi-tenanted Data Centers. In IEEE HOTI. 58–65.
[30] Richard M. Karp, Scott Shenker, and Christos H. Papadimitriou. 2003. A Simple
Algorithm for Finding Frequent Elements in Streams and Bags. ACM Transactions
Database Systems 28, 1 (March 2003).
[31] Yuan Lin and Hongyan Liu. 2007. Separator: Sifting Hierarchical Heavy Hitters
Accurately from Data Streams. In ADMA (ADMA). 170–182.
[32] Nishad Manerikar and Themis Palpanas. 2009. Frequent Items in Streaming Data:
An Experimental Evaluation of the State-of-the-art. Data Knowl. Eng. (2009),
415–430.
[33] Gurmeet Singh Manku and Rajeev Motwani. 2002. Approximate Frequency
Counts over Data Streams. In VLDB.
[34] Ahmed Metwally, Divyakant Agrawal, and Amr El Abbadi. 2005. Efficient Computation of Frequent and Top-k Elements in Data Streams. In ICDT.
[35] M. Mitzenmacher, T. Steinke, and J. Thaler. 2012. Hierarchical Heavy Hitters
with the Space Saving Algorithm. In Proceedings of the Meeting on Algorithm
Engineering & Expermiments (ALENEX). 160–174.
[36] Michael Mitzenmacher and Eli Upfal. 2005. Probability and Computing: Randomized Algorithms and Probabilistic Analysis. Cambridge University Press, New
York, NY, USA.
[37] S. Muthukrishnan. 2005. Data Streams: Algorithms and Applications. Foundations
and Trends in Theoretical Computer Science 1, 2 (2005), 117–236.
[38] V.V. Patil and H.V. Kulkarni. 2012. Comparison of confidence intervals for the
Poisson mean: Some new aspects. REVSTAT Statistical Journal 10, 2 (June 2012),
211–227.
[39] Ben Pfaff, Justin Pettit, Teemu Koponen, Ethan Jackson, Andy Zhou, Jarno Rajahalme, Jesse Gross, Alex Wang, Joe Stringer, Pravin Shelar, Keith Amidon,
and Martin Casado. 2015. The Design and Implementation of Open vSwitch. In
USENIX NSDI. 117–130.
[40] Neil C. Schwertman and Ricardo A. Martinez. 1994. Approximate poisson confidence limits. Communications in Statistics - Theory and Methods 23, 5 (1994),
1507–1529.
[41] Vyas Sekar, Nick Duffield, Oliver Spatscheck, Jacobus van der Merwe, and Hui
Zhang. 2006. LADS: Large-scale Automated DDOS Detection System. In USENIX
ATEC. 16–16.
[42] Vibhaalakshmi Sivaraman, Srinivas Narayana, Ori Rottenstreich, S. Muthukrishnan, and Jennifer Rexford. 2017. Heavy-Hitter Detection Entirely in the Data
Plane. In Proceedings of the Symposium on SDN Research (ACM SOSR). 164–176.
[43] P. Truong and F. Guillemin. 2009. Identification of heavyweight address prefix
pairs in IP traffic. In ITC. 1–8.
[44] David P. Woodruff. 2016. New Algorithms for Heavy Hitters in Data Streams
(Invited Talk). In ICDT.
[45] L. Ying, R. Srikant, and X. Kang. 2015. The Power of Slightly More than One
Sample in Randomized Load Balancing. In IEEE INFOCOM. 1131–1139.
[46] Yin Zhang, Sumeet Singh, Subhabrata Sen, Nick Duffield, and Carsten Lund. 2004.
Online Identification of Hierarchical Heavy Hitters: Algorithms, Evaluation, and
Applications. In ACM IMC. 101–114.
