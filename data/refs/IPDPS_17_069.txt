[1] T. G. Rogers, M. O’Connor, and T. M. Aamodt, “Cache-conscious wavefront scheduling,” in Proceedings of the 2012 45th Annual IEEE/ACM
International Symposium on Microarchitecture. IEEE Computer Society, 2012, pp. 72–83.
[2] M. Rhu, M. Sullivan, J. Leng, and M. Erez, “A locality-aware memory
hierarchy for energy-efficient gpu architectures,” in Proceedings of the
46th Annual IEEE/ACM International Symposium on Microarchitecture.
ACM, 2013, pp. 86–98.
[3] F. NVIDIA, “Nvidia’s next generation cuda compute architecture,”
NVIDIA, Santa Clara, Calif, USA, 2009.
[4] M. Lee, S. Song, J. Moon, J.-H. Kim, W. Seo, Y. Cho, and S. Ryu,
“Improving gpgpu resource utilization through alternative thread block
scheduling,” in High Performance Computer Architecture (HPCA), 2014
IEEE 20th International Symposium on. IEEE, 2014, pp. 260–271.
[5] K. Abdalla, L. Shah, J. Duluk, T. Purcell, T. Mandal,
and G. Hirota, “Scheduling and execution of compute tasks,”
Jul. 18 2013, uS Patent App. 13/353,155. [Online]. Available:
http://www.google.tl/patents/US20130185725
[6] A. Corporation, “Amd graphics cores next (gcn) architecture white
paper,” AMD Corporation, Tech. Rep., 2012.
[7] A. Bakhoda, G. L. Yuan, W. W. Fung, H. Wong, and T. M. Aamodt,
“Analyzing cuda workloads using a detailed gpu simulator,” in Performance Analysis of Systems and Software, 2009. ISPASS 2009. IEEE
International Symposium on. IEEE, 2009, pp. 163–174.
[8] X. Chen, L.-W. Chang, C. I. Rodrigues, J. Lv, Z. Wang, and W.-M.
Hwu, “Adaptive cache management for energy-efficient gpu computing,”
in Proceedings of the 47th Annual IEEE/ACM International Symposium
on Microarchitecture. IEEE Computer Society, 2014, pp. 343–355.
[9] J. Leng, T. Hetherington, A. ElTantawy, S. Gilani, N. S. Kim, T. M.
Aamodt, and V. J. Reddi, “Gpuwattch: enabling energy optimizations in
gpgpus,” ACM SIGARCH Computer Architecture News, vol. 41, no. 3,
pp. 487–498, 2013.
[10] J. A. Stratton, C. Rodrigues, I.-J. Sung, N. Obeid, L.-W. Chang,
N. Anssari, G. D. Liu, and W.-M. W. Hwu, “Parboil: A revised
benchmark suite for scientific and commercial throughput computing,”
Center for Reliable and High-Performance Computing, 2012.
[11] S. Che, M. Boyer, J. Meng, D. Tarjan, J. W. Sheaffer, S.-H. Lee, and
K. Skadron, “Rodinia: A benchmark suite for heterogeneous computing,”
in Workload Characterization, 2009. IISWC 2009. IEEE International
Symposium on. IEEE, 2009, pp. 44–54.
[12] A. Jog, O. Kayiran, N. Chidambaram Nachiappan, A. K. Mishra, M. T.
Kandemir, O. Mutlu, R. Iyer, and C. R. Das, “Owl: cooperative thread
array aware scheduling techniques for improving gpgpu performance,”
ACM SIGARCH Computer Architecture News, vol. 41, no. 1, pp. 395–
406, 2013.
[13] T. G. Rogers, M. O’Connor, and T. M. Aamodt, “Divergence-aware warp
scheduling,” in Proceedings of the 46th Annual IEEE/ACM International
Symposium on Microarchitecture. ACM, 2013, pp. 99–110.
[14] O. Kayıran, A. Jog, M. T. Kandemir, and C. R. Das, “Neither more nor
less: optimizing thread-level parallelism for gpgpus,” in Proceedings
of the 22nd international conference on Parallel architectures and
compilation techniques. IEEE Press, 2013, pp. 157–166.
[15] X. Chen, S. Wu, L.-W. Chang, W.-S. Huang, C. Pearson, Z. Wang, and
W.-M. W. Hwu, “Adaptive cache bypass and insertion for many-core
accelerators,” in Proceedings of International Workshop on Manycore
Embedded Systems. ACM, 2014, p. 1.
[16] W. Jia, K. Shaw, M. Martonosi et al., “Mrpb: Memory request prioritization for massively parallel processors,” in High Performance Computer
Architecture (HPCA), 2014 IEEE 20th International Symposium on.
IEEE, 2014, pp. 272–283.
[17] D. Li et al., “Orchestrating thread scheduling and cache management
to improve memory system throughput in throughput processors,” Ph.D.
dissertation, University of Texas at Austin, 2014.
[18] M. M. Keshtegar, H. Falahati, and S. Hessabi, “Cluster-based approach
for improving graphics processing unit performance by inter streaming
multiprocessors locality,” IET Computers & Digital Techniques, vol. 9,
no. 5, pp. 275–282, 2015.
[19] D. Tarjan and K. Skadron, “The sharing tracker: Using ideas from
cache coherence hardware to reduce off-chip memory traffic with noncoherent caches,” in Proceedings of the 2010 ACM/IEEE International
Conference for High Performance Computing, Networking, Storage and
Analysis. IEEE Computer Society, 2010, pp. 1–10.

