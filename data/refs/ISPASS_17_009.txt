[1] J. Barnes and P. Hut, “A hierarchical o(n log n) force-calculation
algorithm,” nature, vol. 324, p. 4, 1986.
[2] V. Rokhlin, “Rapid solution of integral equations of classical potential
theory,” Journal of Computational Physics, vol. 60, no. 2, pp. 187–207,
1985.
[3] T. Foley and J. Sugerman, “Kd-tree acceleration structures for a gpu
raytracer,” in Proceedings of the ACM SIGGRAPH/EUROGRAPHICS
conference on Graphics hardware, ser. HWWS ’05, 2005, pp. 15–22.
[4] A. G. Gray and A. Moore, “N-body problems in statistical learning,” in
Advances in Neural Information Processing Systems (NIPS) 13, December
2001, pp. 521–527.
[5] P. N. Yianilos, “Data structures and algorithms for nearest neighbor
search in general metric spaces,” in SODA, vol. 93, no. 194, 1993, pp.
311–321.
[6] J. Han, J. Pei, and Y. Yin, “Mining frequent patterns without candidate
generation,” in ACM Sigmod Record, vol. 29, no. 2. ACM, 2000, pp.
1–12.
[7] K. Alsabti, S. Ranka, and V. Singh, “An efficient k-means clustering
algorithm,” 1997.
[8] K. Toru, L. Gunho, A. Hiroki, A. Setsuo, and P. Kunsoo, “Linear-time
longest-common-prefix computation in suffix arrays and its applications,”
in Proceedings of the 12th Annual Symposium on Combinatorial Pattern
Matching, A. Amir, Ed. Springer-Verlag London, UK, 07 2001, pp.
181–192.
[9] X. Zhang and A. A. Chien, “Dynamic pointer alignment: Tiling and
communication optimizations for parallel pointer-based computations,”
in ACM SIGPLAN Notices, vol. 32, no. 7. ACM, 1997, pp. 37–47.
[10] M. S. Warren and J. K. Salmon, “Astrophysical n-body simulations using
hierarchical tree data structures,” in Proceedings of the 1992 ACM/IEEE
Conference on Supercomputing. IEEE Computer Society Press, 1992,
pp. 570–576.
[11] N. Kumar, L. Zhang, and S. Nayar, “What is a good nearest neighbors
algorithm for finding similar patches in images?” in Computer Vision–
ECCV 2008. Springer, 2008, pp. 364–378.
[12] T. Hamada, K. Nitadori, K. Benkrid, Y. Ohno, G. Morimoto, T. Masada,
Y. Shibata, K. Oguri, and M. Taiji, “A novel multiple-walk parallel
algorithm for the barnes–hut treecode on gpus – towards cost effective,
high performance n-body simulation,” Computer Science - Research and
Development, vol. 24, no. 1, pp. 21–31, 2009.
[13] P. Jetley, F. Gioachin, C. Mendes, L. V. Kale, and T. Quinn, “Massively
parallel cosmological simulations with changa,” in Parallel and Distributed Processing, 2008. IPDPS 2008. IEEE International Symposium
on. IEEE, 2008, pp. 1–12.
[14] Y. Jo and M. Kulkarni, “Automatically enhancing locality for tree
traversals with traversal splicing,” in Proceedings of the ACM
international conference on Object oriented programming systems
languages and applications, ser. OOPSLA ’12. New York, NY, USA:
ACM, 2012, pp. 355–374.
[15] M. Goldfarb, Y. Jo, and M. Kulkarni, “General transformations for gpu
execution of tree traversals,” in Proceedings of SC13: International
Conference for High Performance Computing, Networking, Storage
and Analysis, ser. SC ’13. New York, NY, USA: ACM, 2013, pp.
10:1–10:12.
[16] S. C. Woo, M. Ohara, E. Torrie, J. P. Singh, and A. Gupta, “The splash-2
programs: Characterization and methodological considerations,” in ACM
SIGARCH computer architecture news, vol. 23, no. 2. ACM, 1995, pp.
24–36.
[17] S. Che, M. Boyer, J. Meng, D. Tarjan, J. W. Sheaffer, S.-H. Lee, and
K. Skadron, “Rodinia: A benchmark suite for heterogeneous computing,”
in Workload Characterization, 2009. IISWC 2009. IEEE International
Symposium on. IEEE, 2009, pp. 44–54.
[18] M. Kulkarni, M. Burtscher, C. Casçaval, and K. Pingali, “Lonestar: A
suite of parallel irregular programs,” in Performance Analysis of Systems
and Software, 2009. ISPASS 2009. IEEE International Symposium on.
IEEE, 2009, pp. 65–76.
[19] R. C. Murphy, K. B. Wheeler, B. W. Barrett, and J. A. Ang, “Introducing
the graph 500,” Cray User?s Group (CUG), 2010.
[20] M. Burtscher, R. Nasre, and K. Pingali, “A quantitative study of irregular
programs on gpus,” in Workload Characterization (IISWC), 2012 IEEE
International Symposium on. IEEE, 2012, pp. 141–151.
[21] M. Ahmad, F. Hijaz, Q. Shi, and O. Khan, “Crono: A benchmark suite
for multithreaded graph algorithms executing on futuristic multicores,” in
Workload Characterization (IISWC), 2015 IEEE International Symposium
on. IEEE, 2015, pp. 44–55.
[22] K. Pingali, D. Nguyen, M. Kulkarni, M. Burtscher, M. A. Hassaan,
R. Kaleem, T.-H. Lee, A. Lenharth, R. Manevich, M. Méndez-Lojo et al.,
“The tao of parallelism in algorithms,” in ACM Sigplan Notices, vol. 46,
no. 6. ACM, 2011, pp. 12–25.
[23] A. Ghoting, G. Buehrer, S. Parthasarathy, D. Kim, A. Nguyen, Y.-K.
Chen, and P. Dubey, “Cache-conscious frequent pattern mining on modern
and emerging processors,” The VLDB Journal, vol. 16, no. 1, pp. 77–96,
2007.
[24] J. L. Bentley, “Multidimensional binary search trees used for associative
searching,” Commun. ACM, vol. 18, pp. 509–517, September 1975.
[25] H. Fuchs, Z. M. Kedem, and B. F. Naylor, “On visible surface generation
by a priori tree structures,” in ACM Siggraph Computer Graphics, vol. 14,
no. 3. ACM, 1980, pp. 124–133.
[26] D. J. Meagher, Octree encoding: A new technique for the representation,
manipulation and display of arbitrary 3-d objects by computer. Electrical
and Systems Engineering Department Rensseiaer Polytechnic Institute
Image Processing Laboratory, 1980.
[27] O. STEPHEN, M., “Five balltree construction algorithms,” International
Computer Science Institute, Tech. Rep. 89-063, November 1989.
[28] P. Bieganski, J. Riedl, J. V. Cartis, and E. F. Retzel, “Generalized suffix
trees for biological sequence data: applications and implementation,”
in System Sciences, 1994. Proceedings of the Twenty-Seventh Hawaii
International Conference on, vol. 5, Jan 1994, pp. 35–44.
[29] Y. Jo and M. Kulkarni, “Enhancing locality for recursive traversals of
recursive structures,” in Proceedings of the 2011 ACM international
conference on Object oriented programming systems languages and
applications, ser. OOPSLA ’11. New York, NY, USA: ACM, 2011, pp.
463–482.
[30] N. Bhatia and Vandana, “Survey of nearest neighbor techniques,” in
International Journal of Computer Science and Information Security, ser.
IJCSIS, vol. 8, 2010, pp. 302–305.

[31] M. D. Dikaiakos and J. Stadel, “A performance study of cosmological
simulations on message-passing and shared-memory multiprocessors,”
in Proceedings of the 10th international conference on Supercomputing.
ACM, 1996, pp. 94–101.
[32] L. Ying, “A pedestrian introduction to fast multipole methods,” Science
China Mathematics, vol. 55, no. 5, pp. 1043–1051, 2012.
[33] J. Liu, N. Hegde, and M. Kulkarni, “Hybrid cpu-gpu scheduling and
execution of tree traversals,” in Proceedings of the 2016 International
Conference on Supercomputing, ser. ICS ’16. New York, NY, USA:
ACM, 2016.
[34] J. Makino, “Vectorization of a treecode,” Journal of Computational
Physics, vol. 87, no. 1, pp. 148–160, 1990.
[35] M. Höhl, S. Kurtz, and E. Ohlebusch, “Efficient multiple genome
alignment,” Bioinformatics, vol. 18, no. suppl 1, pp. S312–S320, 2002.
[36] C. Borgelt, “Frequent item set mining,” Wiley Interdisciplinary Reviews:
Data Mining and Knowledge Discovery, vol. 2, no. 6, pp. 437–456, 2012.
[37] C. Ding and Y. Zhong, “Predicting whole-program locality through reuse
distance analysis,” in Proceedings of the ACM SIGPLAN 2003 Conference
on Programming Language Design and Implementation, ser. PLDI ’03.
ACM, 2003, pp. 245–257.
[38] N. Hegde, J. Liu, and M. Kulkarni, “Spirit: A runtime system for
distributed irregular tree applications,” in Proceedings of the 21st
ACM SIGPLAN Symposium on Principles and Practice of Parallel
Programming, ser. PPoPP ’16. New York, NY, USA: ACM, 2016, pp.
51:1–51:2.
[39] K. Sundararajah, L. Sakka, and M. Kulkarni, “Locality transformations
for nested recursive iteration spaces,” in Proceedings of the
Twenty Second International Conference on Architectural Support for
Programming Languages and Operating Systems, ser. ASPLOS ’17.
New York, NY, USA: ACM, 2017.
[40] C. Bienia, S. Kumar, J. P. Singh, and K. Li, “The parsec benchmark suite:
characterization and architectural implications,” in Proceedings of the
17th international conference on Parallel architectures and compilation
techniques. ACM, 2008, pp. 72–81.
[41] S.-H. Lim, S. Lee, G. Ganesh, T. C. Brown, and S. R. Sukumar, “Graph
processing platforms at scale: Practices and experiences,” in Performance
Analysis of Systems and Software (ISPASS), 2015 IEEE International
Symposium on. IEEE, 2015, pp. 42–51.
[42] J. Gunther, S. Popov, H.-P. Seidel, and P. Slusallek, “Realtime ray
tracing on gpu with bvh-based packet traversal,” in Proceedings of the
2007 IEEE Symposium on Interactive Ray Tracing, ser. RT ’07, 2007,
pp. 113–118.
[43] M. Burtscher and K. Pingali, “An efficient CUDA implementation of
the tree-based barnes hut n-body algorithm,” in GPU Computing Gems
Emerald Edition. Elsevier Inc., 2011, pp. 75–92.