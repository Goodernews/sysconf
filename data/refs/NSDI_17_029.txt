[1] ABRAMS, M., STANDRIDGE, C. R., ABDULLA,
G., FOX, E. A., AND WILLIAMS, S. Removal
policies in network caches for World-Wide Web
documents. In ACM SIGCOMM (1996), pp. 293–
305.
[2] ABRAMS, M., STANDRIDGE, C. R., ABDULLA,
G., WILLIAMS, S., AND FOX, E. A. Caching
Proxies: Limitations and Potentials. Tech. rep.,
Virginia Polytechnic Institute & State University
Blacksburgh, VA, 1995.
[3] AGGARWAL, C., WOLF, J. L., AND YU, P. S.
Caching on the world wide web. IEEE Transactions on Knowledge and Data Engineering 11, 1
(1999), 94–107.
[4] ALMASI, G., CAS¸CAVAL, C., AND PADUA, D. A.
Calculating stack distances efficiently. In ACM SIGPLAN Notices (2002), vol. 38, pp. 37–43.
[5] ARLITT, M., CHERKASOVA, L., DILLEY, J.,
FRIEDRICH, R., AND JIN, T. Evaluating content
management techniques for web proxy caches. Performance Evaluation Review 27, 4 (2000), 3–11.
[6] BAHN, H., KOH, K., NOH, S. H., AND LYUL, S.
Efficient replacement of nonuniform objects in web
caches. IEEE Computer 35, 6 (2002), 65–73.
[7] BANSAL, S., AND MODHA, D. S. CAR: Clock
with adaptive replacement. In USENIX FAST (2004),
vol. 4, pp. 187–200.
[8] BERGER, D. S., GLAND, P., SINGLA, S., AND
CIUCU, F. Exact analysis of TTL cache networks.
Perform. Eval. 79 (2014), 2 – 23. Special Issue:
Performance 2014.
[9] BERGER, D. S., HENNINGSEN, S., CIUCU, F.,
AND SCHMITT, J. B. Maximizing cache hit ratios
by variance reduction. ACM SIGMETRICS Performance Evaluation Review 43, 2 (2015), 57–59.
[10] BURVILLE, P., AND KINGMAN, J. On a model for
storage and search. Journal of Applied Probability
(1973), 697–701.
[11] CAO, P., AND IRANI, S. Cost-aware WWW proxy
caching algorithms. In USENIX symposium on Internet technologies and systems (1997), vol. 12,
pp. 193–206.
[12] CHERKASOVA, L., AND CIARDO, G. Role of aging, frequency, and size in web cache replacement
policies. In High-Performance Computing and Networking (2001), pp. 114–123.
[13] CIDON, A., EISENMAN, A., ALIZADEH, M., AND
KATTI, S. Dynacache: dynamic cloud caching. In
USENIX HotCloud (2015).
[14] CIDON, A., EISENMAN, A., ALIZADEH, M., AND
KATTI, S. Cliffhanger: Scaling performance cliffs
in web memory caches. In USENIX NSDI (2016),
pp. 379–392.
[15] COFFMAN, E. G., AND DENNING, P. J. Operating
systems theory. Prentice-Hall, 1973.
[16] COFFMAN, E. G., AND JELENKOVIC´, P. Performance of the move-to-front algorithm with Markovmodulated request sequences. Operations Research
Letters 25 (1999), 109–118.
[17] DAN, A., AND TOWSLEY, D. An approximate
analysis of the LRU and FIFO buffer replacement
schemes. In ACM SIGMETRICS (1990), pp. 143–
152.
[18] DILLEY, J., MAGGS, B. M., PARIKH, J., PROKOP,
H., SITARAMAN, R. K., AND WEIHL, W. E. Globally distributed content delivery. IEEE Internet Computing 6, 5 (2002), 50–58.
[19] DOBROW, R. P., AND FILL, J. A. The move-tofront rule for self-organizing lists with Markov dependent requests. In Discrete Probability and Algorithms. Springer, 1995, pp. 57–80.
[20] EINZIGER, G., AND FRIEDMAN, R. Tinylfu: A
highly efficient cache admission policy. In IEE Euromicro PDP (2014), pp. 146–153.
[21] ELAARAG, H., ROMANO, S., AND COBB, J.
Web Proxy Cache Replacement Strategies: Simulation, Implementation, and Performance Evaluation. Springer Briefs in Computer Science. Springer
London, 2013.
[22] ERA—TRENDS, C. V. G. I. T. F. T. Z., AND
ANALYSIS. CISCO VNI global IP traffic forecast: The zettabyte era—trends and analysis, May
2015. Available at http://goo.gl/wxuvVk, accessed 09/12/16.
[23] FAN, B., ANDERSEN, D. G., AND KAMINSKY, M.
MemC3: Compact and concurrent memcache with
dumber caching and smarter hashing. In USENIX
NSDI (2013), pp. 371–384.
[24] FILL, J. A., AND HOLST, L. On the distribution
of search cost for the move-to-front rule. Random
Structures & Algorithms 8 (1996), 179–186.
[25] FLAJOLET, P., GARDY, D., AND THIMONIER, L.
Birthday paradox, coupon collectors, caching algorithms and self-organizing search. Discrete Applied
Mathematics 39 (1992), 207–229.
[26] FOFACK, N. C., DEHGHAN, M., TOWSLEY, D.,
BADOV, M., AND GOECKEL, D. L. On the performance of general cache networks. In VALUETOOLS
(2014), pp. 106–113.
[27] FRICKER, C., ROBERT, P., AND ROBERTS, J. A
versatile and accurate approximation for LRU cache
performance. In ITC (2012), p. 8.
[28] GALLO, M., KAUFFMANN, B., MUSCARIELLO,
L., SIMONIAN, A., AND TANGUY, C. Performance
evaluation of the random replacement policy for
networks of caches. In ACM SIGMETRICS/ PERFORMANCE (2012), pp. 395–396.
[29] GAST, N., AND VAN HOUDT, B. Transient and
steady-state regime of a family of list-based cache
replacement algorithms. In ACM SIGMETRICS
(2015), pp. 123–136.
[30] GELENBE, E. A unified approach to the evaluation of a class of replacement algorithms. IEEE
Transactions on Computers 100 (1973), 611–618.
[31] GODARD, S. Iostat, 2015. Available at http://
goo.gl/JZmbUp, accessed 09/12/16.
[32] GRAZIANO, P. Speed up your web site with Varnish.
Linux Journal 2013, 227 (2013), 4.
[33] HENDRICKS, W. The stationary distribution of
an interesting Markov chain. Journal of Applied
Probability (1972), 231–233.
[34] HU, X., WANG, X., LI, Y., ZHOU, L., LUO, Y.,
DING, C., JIANG, S., AND WANG, Z. LAMA: Optimized locality-aware memory allocation for keyvalue cache. In USENIX ATC (2015), pp. 57–69.
[35] HUANG, Q., BIRMAN, K., VAN RENESSE, R.,
LLOYD, W., KUMAR, S., AND LI, H. C. An analysis of Facebook photo caching. In ACM SOSP
(2013), pp. 167–181.
[36] JELENKOVIC´, P. R. Asymptotic approximation of
the move-to-front search cost distribution and leastrecently used caching fault probabilities. The Annals
of Applied Probability 9 (1999), 430–464.
[38] JIANG, S., CHEN, F., AND ZHANG, X. CLOCKPro: An effective improvement of the clock replacement. In USENIX ATC (2005), pp. 323–336.
[39] JIANG, S., AND ZHANG, X. LIRS: an efficient
low inter-reference recency set replacement policy
to improve buffer cache performance. ACM SIGMETRICS 30, 1 (2002), 31–42.
[40] JIN, S., AND BESTAVROS, A. GreedyDual* web
caching algorithm: exploiting the two sources of
temporal locality in web request streams. Computer
Communications 24 (2001), 174–183.
[41] JOHNSON, T., AND SHASHA, D. 2Q: A low overhead high performance buffer management replacement algorithm. In VLDB (1994), pp. 439–450.
[42] KAMP, P.-H. Varnish notes from the architect, 2006.
Available at https://www.varnish-cache.
org/docs/trunk/phk/notes.html, accessed
09/12/16.
[43] KAMP, P.-H. Varnish LRU architecture, June 2007.
Available at https://www.varnish-cache.
org/trac/wiki/ArchitectureLRU, accessed
09/12/16.
[44] KING, W. F. Analysis of demand paging algorithms.
In IFIP Congress (1) (1971), pp. 485–490.
[45] LE BOUDEC, J.-Y., MCDONALD, D., AND
MUNDINGER, J. A generic mean field convergence
result for systems of interacting objects. In Quantitative Evaluation of Systems (2007), IEEE, pp. 3–18.
[46] LEE, D., CHOI, J., KIM, J.-H., NOH, S. H., MIN,
S. L., CHO, Y., AND KIM, C. S. On the existence
of a spectrum of policies that subsumes the least
recently used (LRU) and least frequently used (LFU)
policies. In ACM SIGMETRICS (1999), vol. 27,
pp. 134–143.
[47] LI, S., LIM, H., LEE, V. W., AHN, J. H., KALIA,
A., KAMINSKY, M., ANDERSEN, D. G., SEONGIL,
O., LEE, S., AND DUBEY, P. Architecting to
achieve a billion requests per second throughput
on a single key-value store server platform. In ACM
ISCA (2015), pp. 476–488.
[48] LIM, H., HAN, D., ANDERSEN, D. G., AND
KAMINSKY, M. MICA: A holistic approach to
fast in-memory key-value storage. In USENIX NSDI
(2014), pp. 429–444.
[49] MAGGS, B. M., AND SITARAMAN, R. K. Algorithmic nuggets in content delivery. ACM SIGCOMM
CCR 45 (2015), 52–66.
[50] MARTINA, V., GARETTO, M., AND LEONARDI, E.
A unified approach to the performance analysis of
caching systems. In IEEE INFOCOM (2014).
[51] MATTSON, R. L., GECSEI, J., SLUTZ, D. R., AND
TRAIGER, I. L. Evaluation techniques for storage
hierarchies. IBM Systems journal 9, 2 (1970), 78–
117.
[52] MCCABE, J. On serial files with relocatable records.
Operations Research 13 (1965), 609–618.
[53] MEGIDDO, N., AND MODHA, D. S. ARC: A selftuning, low overhead replacement cache. In USENIX
FAST (2003), vol. 3, pp. 115–130.
[54] Modern network design, November 2016. Available at https://www.fastly.com/products/
modern-network-design, accessed 02/17/17.
[55] MOTWANI, R., AND RAGHAVAN, P. Randomized
algorithms. Chapman & Hall/CRC, 2010.
[56] NEGLIA, G., CARRA, D., FENG, M., JANARDHAN, V., MICHIARDI, P., AND TSIGKARI, D.
Access-time aware cache algorithms. In IEEE ITC
(2016), vol. 1, pp. 148–156.
[57] NYGREN, E., SITARAMAN, R. K., AND SUN,
J. The Akamai Network: A platform for highperformance Internet applications. ACM SIGOPS
Operating Systems Review 44, 3 (2010), 2–19.
[58] O’NEIL, E. J., O’NEIL, P. E., AND WEIKUM,
G. The LRU-K page replacement algorithm for
database disk buffering. ACM SIGMOD 22, 2
(1993), 297–306.
[59] O’NEIL, E. J., O’NEIL, P. E., AND WEIKUM, G.
An optimality proof of the LRU-K page replacement
algorithm. JACM 46 (1999), 92–112.
[60] OSOGAMI, T. A fluid limit for a cache algorithm
with general request processes. Advances in Applied
Probability 42, 3 (2010), 816–833.
[61] PANAGAKIS, A., VAIOS, A., AND STAVRAKAKIS,
I. Approximate analysis of LRU in the case of short
term correlations. Computer Networks 52 (2008),
1142–1152.
[62] PARK, S.-Y., JUNG, D., KANG, J.-U., KIM, J.-
S., AND LEE, J. CFLRU: a replacement algorithm
for flash memory. In ACM/IEEE CASES (2006),
pp. 234–241.
[63] PETRUSHEV, P. P., AND POPOV, V. A. Rational
approximation of real functions, vol. 28. Cambridge
University Press, 2011.
[64] POSˇ´IK, P., HUYER, W., AND PAL´ , L. A comparison of global search algorithms for continuous black
box optimization. Evolutionary computation 20, 4
(2012), 509–541.
[65] PSOUNIS, K., ZHU, A., PRABHAKAR, B., AND
MOTWANI, R. Modeling correlations in web traces
and implications for designing replacement policies.
Computer Networks 45 (2004), 379–398.
[66] RIZZO, L., AND VICISANO, L. Replacement policies for a proxy cache. IEEE/ACM TON 8 (2000),
158–170.
[67] ROCCA, E. Running Wikipedia.org, June 2016.
Available at https://www.mediawiki.org/
wiki/File:WMF_Traffic_Varnishcon_2016.
pdf, accessed 09/12/16.
[68] RODRIGUES, E. R. The performance of the moveto-front scheme under some particular forms of
Markov requests. Journal of applied probability
(1995), 1089–1102.
[69] SAEMUNDSSON, T., BJORNSSON, H., CHOCKLER,
G., AND VIGFUSSON, Y. Dynamic performance
profiling of cloud caches. In ACM SoCC (2014),
pp. 1–14.
[70] SHAH, K., MITRA, A., AND MATANI, D. An O(1)
algorithm for implementing the LFU cache eviction
scheme. Tech. rep., Stony Brook University, 2010.
[71] SITARAMAN, R. K., KASBEKAR, M., LICHTENSTEIN, W., AND JAIN, M. Overlay networks: An
Akamai perspective. In Advanced Content Delivery,
Streaming, and Cloud Services. John Wiley & Sons,
2014.
[72] STAROBINSKI, D., AND TSE, D. Probabilistic
methods for web caching. Perform. Eval. 46 (2001),
125–137.
[73] TANGE, O. Gnu parallel - the command-line power
tool. ;login: The USENIX Magazine 36, 1 (Feb
2011), 42–47.
[74] Alexa top sites on the web, March 2016. http://
/www.alexa.com/topsites, accessed 03/16/16.
[75] TSUKADA, N., HIRADE, R., AND MIYOSHI, N.
Fluid limit analysis of FIFO and RR caching for
independent reference model. Perform. Eval. 69
(Sept. 2012), 403–412.
[76] VELAZQUEZ ´ , F., LYNGSTØL, K., FOG HEEN, T.,
AND RENARD, J. The Varnish Book for Varnish 4.0.
Varnish Software AS, March 2016.
[77] WALDSPURGER, C. A., PARK, N., GARTHWAITE,
A., AND AHMAD, I. Efficient MRC construction
with SHARDS. In USENIX FAST (2015), pp. 95–
110.
[78] WIRES, J., INGRAM, S., DRUDI, Z., HARVEY,
N. J., AND WARFIELD, A. Characterizing storage
workloads with counter stacks. In USENIX OSDI
(2014), pp. 335–349.
[79] WOOSTER, R. P., AND ABRAMS, M. Proxy
caching that estimates page load delays. Computer
Networks and ISDN Systems 29, 8 (1997), 977–986.
[80] YOUNG, N. E. Online paging against adversarially
biased random inputs. Journal of Algorithms 37
(2000), 218–235.
[81] ZHOU, Y., PHILBIN, J., AND LI, K. The multiqueue replacement algorithm for second level buffer
caches. In USENIX ATC (2001), pp. 91–104.

