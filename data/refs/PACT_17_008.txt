[1] H. Akkary and M. A. Driscoll. A Dynamic Multithreading Processor.
In Proceedings of the International Symposium on Microarchitecture,
pages 226–236, November–December 1998.
[2] M. Annavaram, J. Patel, and E. Davidson. Data Prefetching by Dependence Graph Precomputation. In Proceedings of the International
Symposium on Computer Architecture, pages 52–61, June 2001.
[3] R. Barnes, E. Nystrom, J. Sias, S. Patel, N. Navarro, and W. Hwu.
Beating In-Order Stalls with “Flea-Flicker” Two-Pass Pipelining. In
Proceedings of the International Symposium on Microarchitecture,
pages 387–399, December 2003.
[4] W. Blume, R. Doallo, R. Eigenmann, J. Grout, J. Hoeflinger,
T. Lawrence, J. Lee, D. Padua, Y. Paek, W. Pottenger, L. Rauchwerger, and P. Tu. Parallel Programming with Polaris. IEEE Computer,
29(12):78–82, December 1996.
[5] D. Boggs, A. Baktha, J. Hawkins, D. Marr, J. Miller, P. Roussel,
R. Singhal, B. Toll, and K. Venkatraman. The Microarchitecture of
the Intel Pentium 4 Processor on 90nm Technology. Intel Technology
Journal, 8(1):1–17, February 2004.
[6] D. Brooks, V. Tiwari, and M. Martonosi. Wattch: A Framework for
Architectural-Level Power Analysis and Optimizations. In Proceedings of the International Symposium on Computer Architecture, pages
83–94, June 2000.
[7] D. Burger and T. Austin. The SimpleScalar Tool Set, Version 2.0.
Technical report 1342, Computer Sciences Department, University of
Wisconsin-Madison, June 1997.
[8] R. Chappell, J. Stark, S. Kim, S. Reinhardt, and Y. Patt. Simultaneous Subordinate Microthreading (SSMT). In Proceedings of the International Symposium on Computer Architecture, pages 186–195, May
1999.
[9] S. Chaudhry, P. Caprioli, S. Yip, and M. Tremblay. High-Performance
Throughput Computing. IEEE Micro, 25(3):32–45, May/June 2005.
[10] S. Chaudhry, R. Cypher, M. Ekman, M. Karlsson, A. Landin, S. Yip,
H. Zeffer, and M. Tremblay. Simultaneous Speculative Threading: A
Novel Pipeline Architecture Implemented in Sun’s Rock Processor. In
Proceedings of the International Symposium on Computer Architecture, pages 484–295, June 2009.
[11] J. Collins, H. Wang, D. Tullsen, C. Hughes, Y. Lee, D. Lavery, and
J. Shen. Speculative Precomputation: Long-range Prefetching of
Delinquent Loads. In Proceedings of the International Symposium on
Computer Architecture, pages 14–25, June 2001.
[12] Compaq Computer Corporation. Alpha 21264/EV6 Microprocessor
Hardware Reference Manual, September 2000.
[13] D. Culler, A. Dusseau, S. Goldstein, A. Krishnamurthy, S. Lumetta,
T. Eicken, and K. Yelick. Parallel Programming in Split-C. In Proceedings of the Supercomputing, November 1993.
[14] M. Dorojevets and V. Oklobdzija. Multithreaded Decoupled Architecture. Intl. Journals of High Speed Computing, 7(3):465–480, 1995.
[15] J. Dundas and T. Mudge. Improving Data Cache Performance by PreExecuting Instructions Under a Cache Miss. In Proceedings of the
International Conference on Supercomputing, pages 68–75, July 1997.
[16] H. Esmaeilzadeh, T. Cao, Y. Xi, S. M. Blackburn, and K. S. McKinley. king Back on the Language and Hardware Revolutions: Measured
Power, Performance, and Scaling. In Proceedings of the International
Conference on Arch. Support for Prog. Lang. and Operating Systems,
pages 319–332, 2004.
[17] H. Esmaeilzadeh, A. Sampson, L. Ceze, and D. Burger. Neural Acceleration for General-Purpose Approximate Programs. In Proceedings
of the International Symposium on Microarchitecture, pages 100–110,
December 2012.
[18] A. Farcy, O. Temam, R. Espasa, and T. Juan. Dataflow Analysis
of Branch Mispredictions and Its Application to Early Resolution of
Branch Outcomes. In Proceedings of the International Symposium on
Microarchitecture, pages 59–68, November–December 1998.
[19] M. U. Farooq, Khubaib, and L. K. John. Store-Load-Branch (SLB)
predictor: A compiler assisted branch prediction for data dependent
branches. In Proceedings of the International Symposium on HighPerformance Computer Architecture, pages 59–70, 2010.
[20] I. Ganusov and M. Burtscher. On the Importance of Optimizing the
Configuration of Stream Prefetchers. In Proceedings of the 2005 Workshop on Memory System Performance, pages 54–61, June 2005.
[21] A. Garg and M. Huang. A Performance-Correctness Explicitly Decoupled Architecture. In Proceedings of the International Symposium on
Microarchitecture, pages 306–317, November 2008.
[22] A. Garg, R. Parihar, and M. Huang. Speculative Parallelization in Decoupled Look-ahead. In Proceedings of the International Conference
on Parallel Architecture and Compilation Techniques, pages 412–422,
October 2011.
[23] V. George, S. Jahagirdar, C. Tong, K. Smits, S. Damaraju, S. Siers,
V. Naydenov, T. Khondker, S. Sarkar, and P. Singh. Penryn: 45-nm
Next Generation Intel Core 2 Processor. In Proceedings of the IEEE
Asian Solid-State Circuits Conference, pages 14–17, November 2007.
[24] S. Gochman, R. Ronen, I. Anati, A. Berkovits, T. Kurts, Al, Naveh,
A. Saeed, Z. Sperber, and R. Valentine. The Intel Pentium M Processor: Microarchitecture and Performance. Intel Technology Journal,
7(2):20–37, May 2003.
[25] M. Goshima, K. Nishino, T. Kitamura, Y. Nakashima, S. Tomita, and
S. Mori. A High-Speed Dynamic Instruction Scheduling Scheme for
Superscalar Processors. In Proceedings of the International Symposium on Microarchitecture, pages 225–236, December 2001.
[26] B. Greskamp and J. Torrellas. Paceline: Improving Single-Thread Performance in Nanoscale CMPs through Core Overclocking. In Proceedings of the International Conference on Parallel Architecture and
Compilation Techniques, pages 213–224, September 2007.
[27] M. Gupta and R. Nim. Techniques for Run-Time Parallelization of
Loops. In Proceedings of the Supercomputing, November 1998.
[28] N. Hajdarbegovic. ARM 10nm and 16nm FinFET Cortex Designs
Leaked. 2015. http://www.fudzilla.com/news/processors/37583-arm10nm-and-16nm-finfet-cortex-designs-leaked.
[29] J. Ho and R. Smith. The Apple iPhone 6S and iPhone 6s Plus Review:
A9’s CPU - Twister. 2015. http://www.anandtech.com/show/9686/theapple-iphone-6s-and-iphone-6s-plus-review/4.
[30] R. Hou, L. Zhang, M. Huang, K. Wang, H. Franke, Y. Ge, and
X. Chang. Efficient Data Streaming with On-chip Accelerators: Opportunities and Challenges. In Proceedings of the International Symposium on High-Performance Computer Architecture, February 2011.
[31] R. Iannucci, G. Gao, R. Halstead Jr., and B. Smith, editors. Multithreaded Computer Architecture A Summary of the State of the Art.
Kluwer Academic Publishers, 1994.
[32] Intel Corporation. Pentium III Processor Mobile Module: Mobile
Module Connector 2 (MMC-2) Featuring Intel SpeedStep Technology,
2000. http://www.intel.com/design/mobile/datashts/.
[33] Intel Corporation. Intel Pentium 4 and Intel Xeon Processor Optimization, 2002.
[34] R. Kalla, B. Sinharoy, W. Starke, and M. Floyd. Power7: IBM’s NextGeneration Server Processor. IEEE Micro, 30(2):7–15, 2010.
[35] D. Kim, S. Liao, P. Wang, J. del Cuvillo, X. Tian, X. Zou, H. Wang,
M. Gikar, J. Shen, and D. Yeung. Physical Experimentation with
Prefetching Helper Threads on Intel’s Hyper-Threaded Processors. In
Proceedings of the International Symposium on Code Generation and
Optimization, pages 27–38, March 2004.
[36] V. Krishnan and J. Torrellas. A Chip-Multiprocessor Architecture
with Speculative Multithreading. IEEE Transactions on Computers,
48(9):866–880, September 1999.
[37] J. Lu, A. Das, W. Hsu, K. Nguyen, and S. Abraham. Dynamic Helper
Threaded Prefetching on the Sun UltraSPARC CMP Processor. In Proceedings of the International Symposium on Microarchitecture, pages
93–104, December 2005.
[38] C. Luk. Tolerating Memory Latency Through Software-Controlled
Pre-execution in Simultaneous Multithreading Processors. In Proceedings of the International Symposium on Computer Architecture, pages
40–51, June 2001.
[39] P. Marcuello and A. González. Clustered Speculative Multithreaded
Processors. In Proceedings of the International Conference on Supercomputing, pages 365–372, June 1999.
[40] M. Mattwandel, T. Baird, J. Garcia, S. Kim, and H. Mayer. Architecture and Early Performance Results of Turbo Boost Technology on Intel CoreTM i7 Processor and Intel Xeon Processor 5500 Series. 2009.
[41] F. Mesa-Martinez and J. Renau. Effective Optimistic-Checker Tandem
Core Design Through Architectural Pruning. In Proceedings of the International Symposium on Microarchitecture, pages 236–248, December 2007.
[42] A. Moshovos, D. Pnevmatikatos, and A. Baniasadi. Slice-processors:
an Implementation of Operation-Based Prediction. In Proceedings
of the International Conference on Supercomputing, pages 321–334,
June 2001.
[43] S. Mukherjee, M. Kontz, and S. Reinhardt. Detailed Design and Evaluation of Redundant Multithreading Alternatives. In Proceedings of the
International Symposium on Computer Architecture, pages 99–110,
May 2002.
[44] O. Mutlu, J. Stark, C. Wilkerson, and Y. Patt. Runahead Execution:
An Alternative to Very Large Instruction Windows for Out-of-order
Processors. In Proceedings of the International Symposium on HighPerformance Computer Architecture, pages 129–140, February 2003.
[45] S. Palacharla. Complexity-Effective Superscalar Processors. PhD thesis, Dept. of Computer Sciences, University of Wisconsin-Madison,
February 1998.
[46] S. Palacharla and R. Kessler. Evaluating Stream Buffers as a Secondary Cache Replacement. In Proceedings of the International Symposium on Computer Architecture, pages 24–33, April 1994.
[47] R. Parihar and M. Huang. Accelerating Decoupled Look-ahead via
Weak Dependence Removal: A Metaheuristic Approach. In Proceedings of the International Symposium on High-Performance Computer
Architecture, February 2014.
[48] Z. Purser, K. Sundaramoorthy, and E. Rotenberg. A Study of Slipstream Processors. In Proceedings of the International Symposium on
Microarchitecture, pages 269–280, December 2000.
[49] R. Rajwar and J. R. Goodman. Speculative Lock Elision: Enabling
Highly Concurrent Multithreaded Execution. In Proceedings of the
International Symposium on Microarchitecture, pages 294–305, December 2001.
[50] L. Rauchwerger and D. Padua. The LRPD Test: Speculative RunTime Parallelization of Loops with Privatization and Reduction Parallelization. In Proceedings of the ACM SIGPLAN Conference on
Programming Language Design and Implementation, pages 218–232,
June 1995.
[51] E. Rotenberg. AR-SMT: A Microarchitectural Approach to Fault Tolerance in Microprocessors. In Proceedings of the International Symposium on Fault-Tolerant Computing, pages 84–91, June 1999.
[52] A. Roth. A High-Bandwidth Load-Store Unit for Single- and MultiThreaded Processors. Technical Report (CIS), Development of Computer and Information Science, University of Pennsylvania, September
2004.
[53] A. Roth and G. Sohi. Speculative Data-Driven Multithreading. In Proceedings of the International Symposium on High-Performance Computer Architecture, pages 37–48, January 2001.
[54] J. Saltz, R. Mirchandaney, and K. Crowley. Run-Time Parallelization and Scheduling of Loops. IEEE Transactions on Computers,
40(5):603–611, May 1991.

[55] R. Singhal. Inside Intel Next Generation Nehalem Microarchitecture.
In Hot Chips, August 2008.
[56] B. Sinharoy, R. Kalla, J. Tendler, R. Eickemeyer, and J. Joyner.
POWER5 System Microarchitecture. IBM Journal of Research and
Development, 49(4/5):505–521, September 2005.
[57] B. Sinharoy, R. Kalla, J. Tendler, R. Eickemeyer, and J. Joyner. IBM
POWER7 multicore server processor. IBM Journal of Research and
Development, 55(3):1–29, May 2011.
[58] K. Skadron, M. Stan, M. Barcella, A. Dwarka, W. Huang, Y. Li, Y. Ma,
A. Naidu, D. Parikh, P. Re, G. Rose, K. Sankaranarayanan, R. Suryanarayan, S. Velusamy, H. Zhang, and Y. Zhang. HotSpot: Techniques
for Modeling Thermal Effects at the Processor-Architecture Level. In
International Workshop on THERMal Investigations of ICs and Systems, October 2002.
[59] Y. Solihin, L. Jaejin, and J. Torrellas. Using a User-Level Memory
Thread for Correlation Prefetching. In Proceedings of the International Symposium on Computer Architecture, pages 171–182, May
2002.
[60] K. Sundaramoorthy, Z. Purser, and E. Rotenberg. Slipstream Processors: Improving both Performance and Fault Tolerance. In Proceedings of the International Conference on Arch. Support for Prog. Lang.
and Operating Systems, pages 257–268, November 2000.
[61] M. Sung, R. Krashinsky, and K. Asanović. Multithreading Decoupled
Architectures for Complexity-effective General Purpose Computing.
SIGARCH Computer Architecture News, 29(5):56–61, 2001.
[62] H. Tseng and D. Tullsen. Eliminating Redundant Computation and
Exposing Parallelism through Data-Triggered Threads. IEEE Micro,
32(3):38–47, 2012.
[63] D. Tullsen, S. Eggers, and H. Levy. Simultaneous Multithreading:
Maximizing On-Chip Parallelism. In Proceedings of the International
Symposium on Computer Architecture, pages 392–403, June 1995.
[64] P. Wang, J. Collins, H. Wang, D. Kim, B. Greene, K. Chan, A. Yunus,
T. Sych, S. Moore, and J. Shen. Helper Threads via Virtual Multithreading. IEEE Micro, 24(6):74–82, November 2004.
[65] P. Xekalakis, N. Ioannou, and M. Cintra. Combining Thread Level
Speculation, Helper Threads, and Runahead Execution. In Proceedings of the International Conference on Supercomputing, pages 410–
420, June 2009.
[66] H. Zhou. Dual-Core Execution: Building a Highly Scalable SingleThread Instruction Window. In Proceedings of the International Conference on Parallel Architecture and Compilation Techniques, pages
231–242, September 2005.
[67] C. Zilles and G. Sohi. Understanding the Backward Slices of Performance Degrading Instructions. In Proceedings of the International
Symposium on Computer Architecture, pages 172–181, June 2000.
[68] C. Zilles and G. Sohi. Execution-Based Prediction Using Speculative
Slices. In Proceedings of the International Symposium on Computer
Architecture, pages 2–13, June 2001.
[69] C. Zilles and G. Sohi. Master/Slave Speculative Parallelization. In
Proceedings of the International Symposium on Microarchitecture,
pages 85–96, November 2002.
