[1] W. Bethel, M. Greenwald, K. van Dam, M. Parashar, S. Wild, and H.
Wiley, “Management, Analysis, and Visualization of Experimental and
Observational Data - The Convergence of Data and Computing,” U.S.
Department of Energy, ANL/MCS-P6017-0616, 2016.
[2] M. Zaharia et al., “Resilient distributed datasets: A fault-tolerant
abstraction for in-memory cluster computing,” in Proceedings of the 9th
USENIX conference on Networked Systems Design and
Implementation, 2012, pp. 2–2.
[3] T. Jin et al., “Exploring Data Staging Across Deep Memory Hierarchies
for Coupled Data Intensive Simulation Workflows,” in Parallel and
Distributed Processing Symposium (IPDPS), 2015 IEEE International,
2015, pp. 1033–1042.
[4] P. Xuan, Y. Zheng, S. Sarupria, and A. Apon, “SciFlow: A dataflowdriven model architecture for scientific computing using Hadoop,” in
2013 IEEE International Conference on Big Data, 2013, pp. 36–44.
[5] L. Xu, M. Li, L. Zhang, A. R. Butt, Y. Wang, and Z. Z. Hu,
“MEMTUNE: Dynamic Memory Management for In-Memory Data
Analytic Platforms,” in 2016 IEEE International Parallel and
Distributed Processing Symposium (IPDPS), 2016, pp. 383–392.
[6] P. Xuan, J. Denton, F. Luo, P. K. Srimani, and R. Ge, “Big Data
Analytics on Traditional HPC Infrastructure Using Two-Level
Storage,” in The 2015 International Workshop on Data-Intensive
Scalable Computing Systems, Austin, TX, USA, 2015.
[7] P. Xuan, W. B. Ligon, P. K. Srimani, R. Ge, and F. Luo, “Accelerating
big data analytics on HPC clusters using two-level storage,” Parallel
Comput., vol. 61, pp. 18–34, Jan. 2017.
[8] H. Li, A. Ghodsi, M. Zaharia, S. Shenker, and I. Stoica, “Reliable,
memory speed storage for cluster computing frameworks,” Proc SoCC,
2014.
[9] H. Li, A. Ghodsi, M. Zaharia, S. Shenker, and I. Stoica, “Tachyon:
Reliable, Memory Speed Storage for Cluster Computing Frameworks,”
in Proceedings of the ACM Symposium on Cloud Computing, New
York, NY, USA, 2014, p. 6:1–6:15.
[10] M. Moore et al., “OrangeFS: Advancing PVFS,” FAST Poster Sess.,
2011.
[11] “Collectd – The system statistics collection daemon.” [Online].
Available: https://collectd.org
[12] “Apache Flink: Scalable Batch and Stream Data Processing.” [Online].
Available: http://flink.apache.org
[13] “Vert.x.” [Online]. Available: http://vertx.io
[14] J. Kreps, N. Narkhede, J. Rao, and others, “Kafka: A distributed
messaging system for log processing,” in Proceedings of the NetDB,
2011, pp. 1–7.
[15] RajivKurian, “How We Monitor and Run Kafka At Scale,” Confluent,
14-Apr-2016.
[16] K. Tzoumas, S. Ewen, and R. Metzger, “High-throughput, low-latency,
and exactly-once stream processing with Apache FlinkTM – data
Artisans,” 05-Aug-2015.
[17] Z. Chen, Y. Zhou, and K. Li, “Eviction-based Cache Placement for
Storage Caches.,” in USENIX Annual Technical Conference, General
Track, 2003, pp. 269–281.
[18] S. Jiang and X. Zhang, “LIRS: An Efficient Low Inter-reference
Recency Set Replacement Policy to Improve Buffer Cache
Performance,” in Proceedings of the 2002 ACM SIGMETRICS
International Conference on Measurement and Modeling of Computer
Systems, New York, NY, USA, 2002, pp. 31–42.
[19] N. Liu et al., “On the role of burst buffers in leadership-class storage
systems,” in 2012 IEEE 28th Symposium on Mass Storage Systems and
Technologies (MSST), 2012, pp. 1–11.
[20] M. Zaharia, M. Chowdhury, M. J. Franklin, S. Shenker, and I. Stoica,
“Spark: cluster computing with working sets,” in Proceedings of the
2nd USENIX conference on Hot topics in cloud computing, 2010, pp.
10–10.
[21] J. Liu, E. Racah, Q. Koziol, and R. S. Canon, “H5Spark: Bridging the
I/O Gap between Spark and Scientific Data Formats on HPC Systems,”
presented at the Cray User Group, 2016.

[22] S. Canon and D. Jacobsen, “Shifter: Containers for HPC,” presented at
the Proceedings of the Cray User Group, 2016.
[23] A. Gittens et al., “Matrix Factorization at Scale: a Comparison of
Scientific Data Analytics in Spark and C+MPI Using Three Case
Studies,” ArXiv160701335 Cs, Jul. 2016.
[24] N. Chaimov, A. Malony, S. Canon, C. Iancu, K. Z. Ibrahim, and J.
Srinivasan, “Performance Evaluation of Apache Spark on Cray XC
Systems.”
[25] N. Chaimov, A. Malony, S. Canon, C. Iancu, K. Z. Ibrahim, and J.
Srinivasan, “Scaling Spark on HPC Systems,” in Proceedings of the
25th ACM International Symposium on High-Performance Parallel and
Distributed Computing, New York, NY, USA, 2016, pp. 97–110.
[26] Q. Pu and A. Khandelwal, “Fair Allocation for In-Memory File
Systems,” 2014.
[27] A. Uta, A. Sandu, S. Costache, and T. Kielmann, “Scalable In-Memory
Computing,” in 2015 15th IEEE/ACM International Symposium on
Cluster, Cloud and Grid Computing (CCGrid), 2015, pp. 805–810.
[28] J. S. Jeong, W.-Y. Lee, Y. Lee, Y. Yang, B. Cho, and B.-G. Chun,
“Elastic Memory: Bring Elasticity Back to In-Memory Big Data
Analytics,” presented at the 15th Workshop on Hot Topics in Operating
Systems (HotOS XV), 2015.
[29] M. Eshel, R. L. Haskin, D. Hildebrand, M. Naik, F. B. Schmuck, and
R. Tewari, “Panache: A Parallel File System Cache for Global File
Access.,” in FAST, 2010, pp. 155–168.

[30] Y. Chen, H. Zhu, H. Jin, and X.-H. Sun, “Algorithm-level Feedbackcontrolled Adaptive data prefetcher: Accelerating data access for highperformance processors,” Parallel Comput., vol. 38, no. 10–11, pp.
533–551, Oct. 2012.
[31] Y. Chen, S. Byna, and X. H. Sun, “Data access history cache and
associated data prefetching mechanisms,” in Proceedings of the 2007
ACM/IEEE Conference on Supercomputing, 2007. SC ’07, 2007, pp. 1–
12.
[32] J. R. Lange and P. Dinda, “SymCall: Symbiotic Virtualization Through
VMM-to-guest Upcalls,” in Proceedings of the 7th ACM
SIGPLAN/SIGOPS International Conference on Virtual Execution
Environments, New York, NY, USA, 2011, pp. 193–204.
[33] P. Barham et al., “Xen and the Art of Virtualization,” in Proceedings of
the Nineteenth ACM Symposium on Operating Systems Principles, New
York, NY, USA, 2003, pp. 164–177.
[34] C. A. Waldspurger, “Memory Resource Management in VMware ESX
Server,” SIGOPS Oper Syst Rev, vol. 36, no. SI, pp. 181–194, Dec.
2002.
[35] S. S. Pinter, Y. Aridor, S. S. Shultz, and S. Guenender, “Improving
machine virtualisation with ‘hotplug memory,’” Int. J. High Perform.
Comput. Netw., vol. 5, no. 4, pp. 241–250, Jan. 2008.
[36]“[SPARK-10000] Consolidate storage and execution memory
management
ASF
JIRA.”
[Online].
Available:
https://issues.apache.org/jira/browse/SPARK-10000