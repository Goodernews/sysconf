[1] “Standard performance evaluation corporation (spec).” http://www.spec. org/.
[2] C. Bienia, Benchmarking Modern Multiprocessors. PhD thesis, Prince- ton University, January 2011.
[3] T. Sherwood, E. Perelman, G. Hamerly, and B. Calder, “Automatically characterizing large scale program behavior,” in Proceedings of the 10th International Conference on Architectural Support for Programming Languages and Operating Systems, ASPLOS X, (New York, NY, USA), pp. 45–57, ACM, 2002.
[4] R. E. Wunderlich, T. F. Wenisch, B. Falsafi, and J. C. Hoe, “Smarts: Accelerating microarchitecture simulation via rigorous statistical sam- pling,” in Proceedings of the 30th Annual International Symposium on Computer Architecture, ISCA ’03, (New York, NY, USA), pp. 84–97, ACM, 2003.
[5] T. E. Carlson, W. Heirman, and L. Eeckhout, “Sampled simulation of multi-threaded applications,” in Performance Analysis of Systems and Software (ISPASS), 2013 IEEE International Symposium on, pp. 2–12, April 2013.
[6] T. E. Carlson, W. Heirman, K. Van Craeynest, and L. Eeckhout, “Barrierpoint: Sampled simulation of multi-threaded applications,” in Performance Analysis of Systems and Software (ISPASS), 2014 IEEE International Symposium on, pp. 2–12, IEEE, 2014.
[7] E. K. Ardestani and J. Renau, “Esesc: A fast multicore simulator using time-based sampling,” in High Performance Computer Architecture (HPCA2013), 2013 IEEE 19th International Symposium on, pp. 448– 459, IEEE, 2013.
[8] E. Argollo, A. Falco ́n, P. Faraboschi, M. Monchiero, and D. Ortega, “Cotson: infrastructure for full system simulation,” SIGOPS Oper. Syst. Rev., vol. 43, no. 1, pp. 52–61, 2009.
[9] T. Grass, A. Rico, M. Casas, M. Moreto, and E. Ayguad, “Taskpoint: Sampled simulation of task-based programs,” in 2016 IEEE Interna- tional Symposium on Performance Analysis of Systems and Software (ISPASS), pp. 296–306, April 2016.
[10] J. E. Miller, H. Kasture, G. Kurian, C. G. III, N. Beckmann, C. Celio, J. Eastep, and A. Agarwal, “Graphite: A distributed parallel simulator for multicores,” in International Symposium on High Performance Computer Architecture (HPCA), pp. 1–12, IEEE Computer Society, 2010.
[11] T.E.Carlson,W.Heirman,andL.Eeckhout,“Sniper:exploringthelevel of abstraction for scalable and accurate parallel multi-core simulation,” in Proceedings of 2011 International Conference for High Performance Computing, Networking, Storage and Analysis, p. 52, ACM, 2011.
[12] D. Sanchez and C. Kozyrakis, “Zsim: Fast and accurate microarchitec- tural simulation of thousand-core systems,” in Proceedings of the 40th Annual International Symposium on Computer Architecture, ISCA ’13, pp. 475–486, ACM, 2013.
[13] A. Patel, F. Afram, S. Chen, and K. Ghose, “Marss: a full system simulator for multicore x86 cpus,” in Proceedings of the 48th Design Automation Conference, pp. 1050–1055, ACM, 2011.
[14] S. Hart, E. Frachtenberg, and M. Berezecki, “Predicting memcached throughput using simulation and modeling,” in Proceedings of the 2012 Symposium on Theory of Modeling and Simulation-DEVS Integrative M&S Symposium, p. 40, Society for Computer Simulation International, 2012.
[15] G. Southern and J. Renau, “Deconstructing parsec scalability,” 11th Annual Workshop on Duplicating, Deconstructing and Debunking (WDDD), 2015.
[16] K. K. Pusukuri, R. Gupta, and L. N. Bhuyan, “Thread reinforcer: Dynamically determining number of threads via os level monitoring,” in Proceedings of the 2011 IEEE International Symposium on Workload Characterization, IISWC ’11, (Washington, DC, USA), pp. 116–125, IEEE Computer Society, 2011.
[17] “memaslap - benchmark suite for memcached.” http://docs. libmemcached.org/memaslap.html. Accessed: 2016-04-11.
[18] C.-K. Luk, R. Cohn, R. Muth, H. Patil, A. Klauser, G. Lowney, S. Wallace, V. J. Reddi, and K. Hazelwood, “Pin: Building customized program analysis tools with dynamic instrumentation,” in Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI ’05, (New York, NY, USA), pp. 190–200, ACM, 2005.
[19] T.-Y.YehandY.N.Patt,“Alternativeimplementationsoftwo-leveladap- tive branch prediction,” in Proceedings of the 19th Annual International Symposium on Computer Architecture, ISCA ’92, (New York, NY, USA), pp. 124–134, ACM, 1992.
[20] S.Eyerman,L.Eeckhout,T.Karkhanis,andJ.E.Smith,“Amechanistic performance model for superscalar out-of-order processors,” ACM Trans. Comput. Syst., vol. 27, pp. 3:1–3:37, May 2009.
[21] F. Bellard, “Qemu, a fast and portable dynamic translator,” in Proceed- ings of the Annual Conference on USENIX Annual Technical Conference,
ATEC ’05, (Berkeley, CA, USA), pp. 41–41, USENIX Association,
2005.
[22] A. Phansalkar, A. Joshi, and L. K. John, “Analysis of redundancy
and application balance in the spec cpu2006 benchmark suite,” in
Proceedings of the 34th Annual International Symposium on Computer Architecture, ISCA ’07, (New York, NY, USA), pp. 412–423, ACM, 2007.
[23] A. Alameldeen, M. Martin, C. Mauer, K. Moore, M. Xu, M. Hill, D. Wood, and D. Sorin, “Simulating a $2m commercial server on a $2k pc,” Computer, vol. 36, pp. 50–57, Feb 2003.
[24] R. Hankins, T. Diep, M. Annavaram, B. Hirano, H. Eri, H. Nueckel, and J. Shen, “Scaling and characterizing database workloads: bridging the gap between research and practice,” in Microarchitecture, 2003. MICRO- 36. Proceedings. 36th Annual IEEE/ACM International Symposium on, pp. 151–162, Dec 2003.
[25] G. Wang, A. R. Butt, P. Pandey, and K. Gupta, “Using realistic simu- lation for performance analysis of mapreduce setups,” in Proceedings of the 1st ACM Workshop on Large-Scale System and Application Performance, LSAP ’09, (New York, NY, USA), pp. 19–26, ACM, 2009.
[26] G. Wang, A. Butt, P. Pandey, and K. Gupta, “A simulation approach to evaluating design decisions in mapreduce setups,” in Modeling, Analysis Simulation of Computer and Telecommunication Systems, 2009. MASCOTS ’09. IEEE International Symposium on, pp. 1–11, Sept 2009.
[27] N. Binkert, B. Beckmann, G. Black, S. K. Reinhardt, A. Saidi, A. Basu, J. Hestness, D. R. Hower, T. Krishna, S. Sardashti, et al., “The gem5 simulator,” ACM SIGARCH Computer Architecture News, vol. 39, no. 2, pp. 1–7, 2011.
[28] T. F. Wenisch, R. E. Wunderlich, M. Ferdman, A. Ailamaki, B. Falsafi, and J. C. Hoe, “Simflex: statistical sampling of computer system simula- tion,” IEEE MICRO Special Issue on Computer Architecture Simulation and Modeling, vol. 26, no. PARSA-ARTICLE-2007-001, pp. 19–31, 2006.
[29] A. Rico, A. Duran, F. Cabarcas, Y. Etsion, A. Ramirez, and M. Valero, “Trace-driven simulation of multithreaded applications,” in Performance Analysis of Systems and Software (ISPASS), 2011 IEEE International Symposium on, pp. 87–96, April 2011.
[30] N. Chachmon, D. Richins, R. Cohn, M. Christensson, W. Cui, and V. J. Reddi, “Simulation and analysis engine for scale-out workloads,” in Proceedings of the 2016 International Conference on Supercomputing, ICS ’16, (New York, NY, USA), pp. 22:1–22:13, ACM, 2016.
[31] M. Pellauer, M. Adler, M. Kinsy, A. Parashar, and J. Emer, “Hasim: Fpga-based high-detail multicore simulation using time-division multi- plexing,” in 2011 IEEE 17th International Symposium on High Perfor- mance Computer Architecture, pp. 406–417, IEEE, 2011.
[32] D. Chiou, D. Sunwoo, J. Kim, N. A. Patil, W. Reinhart, D. E. Johnson, J. Keefe, and H. Angepat, “Fpga-accelerated simulation technologies (fast): Fast, full-system, cycle-accurate simulators,” in Proceedings of the 40th Annual IEEE/ACM international Symposium on Microarchitecture, pp. 249–261, IEEE Computer Society, 2007.
[33] E. S. Chung, M. K. Papamichael, E. Nurvitadhi, J. C. Hoe, K. Mai, and B. Falsafi, “Protoflex: Towards scalable, full-system multiprocessor sim- ulations using fpgas,” ACM Transactions on Reconfigurable Technology and Systems (TRETS), vol. 2, no. 2, p. 15, 2009.
[34] K. Ganesan and L. K. John, “Maximum multicore power (mampo): an automatic multithreaded synthetic power virus generation framework for multicore systems,” in 2011 International Conference for High Performance Computing, Networking, Storage and Analysis (SC), pp. 1– 12, Nov 2011.
[35] A. M. Joshi, L. Eeckhout, L. K. John, and C. Isen, “Automated microprocessor stressmark generation,” in 2008 IEEE 14th International Symposium on High Performance Computer Architecture, pp. 229–239, Feb 2008.
[36] K. Ganesan, J. Jo, and L. K. John, “Synthesizing memory-level par- allelism aware miniature clones for spec cpu2006 and implantbench workloads,” in 2010 IEEE International Symposium on Performance Analysis of Systems Software (ISPASS), pp. 33–44, March 2010.
[37] Y. Kim, L. K. John, S. Pant, S. Manne, M. Schulte, W. L. Bircher, and M. S. S. Govindan, “Audit: Stress testing the automatic way,” in Proceedings of the 2012 45th Annual IEEE/ACM International Symposium on Microarchitecture, MICRO-45, (Washington, DC, USA), pp. 212–223, IEEE Computer Society, 2012.
