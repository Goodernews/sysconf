[1] Onur Aciigmez, Cetin K. Kog, and Jean P. Seifert. 2006. Predicting secret keys
via branch prediction. In Proceedings of the 7th Cryptographers’ Track at the
RSA Conference on Topics in Cryptology. Springer-Verlag, Berlin, Heidelberg,
225-242. https://doi.org/10.1007/11967668_15

[2] Jean-Loup Baer and Wen-Hann Wang. 1988. On the inclusion properties for multilevel cache hierarchies. In The Conference Proceedings 15th Annual International
Symposium on Computer Architecture. TEEE, 73-80. https://doi.org/10.1109/isca.
1988.5212

[3] Christian Bienia, Sanjeev Kumar, Jaswinder P. Singh, and Kai Li. 2008. The
PARSEC benchmark suite: characterization and architectural implications. In
Proceedings of the 17th International Conference on Parallel Architectures and
Compilation Techniques. ACM, New York, NY, USA, 72-81. https://doi.org/10.
1145/1454115.1454128

[4] Joseph Bonneau and Ilya Mironov. 2006. Cache-collision timing attacks against
AES, In Proceedings of the 8th International Conference on Cryptographic Hardware and Embedded Systems. Cryptographic Hardware and Embedded Systems,
201-215. https://doi.org/10.1007/11894063_16

[5] Jie Chen and Guru Venkataramani. 2014. CC-Hunter: uncovering covert timing channels on shared processor hardware. In Proceedings of the 47th Annual
IEEE/ACM International Symposium on Microarchitecture. TEEE Computer Society, Washington, DC, USA, 216-228. https://doi.org/10.1109/micro.2014.42
[6] Marco Chiappetta, Erkay Savas, and Cemal Yilmaz. 2016. Real time detection
of cache-based side-channel attacks using hardware performance counters. Appl.
Soft Comput. 49, C (Dec. 2016), 1162-1174. https://doi.org/10.1016/j.asoc.2016.

[7] Katherine E. Fletcher, W. Evan Speight, and John K. Bennett. 1995. Techniques
for reducing the impact of inclusion in shared network cache multiprocessors.
Rice ELEC TR (1995). https://doi.org/10.1.1.54.6340

[8] Michael M. Godfrey. 2013. On the prevention of cache-based side-channel attacks
in a cloud environment. Master’s thesis. Queen’s University.

[9] Daniel M. Gordon. 1998. A survey of fast exponentiation methods. Journal of
Algorithms 27, 1 (April 1998), 129-146. https://doi.org/10.1006/jagm. 1997.0913
[10] Daniel Gruss, Clémentine Maurice, Anders Fogh, Moritz Lipp, and Stefan
Mangard. 2016. Prefetch side-chamnel attacks: bypassing SMAP and kernel ASLR. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, New York, NY, USA, 368-379.
https://doi.org/10.1145/2976749.2978356

[11] Daniel Gruss, Clémentine Maurice, Klaus Wagner, and Stefan Mangard. 2016.
Flush+Flush: a fast and stealthy cache attack. In Proceedings of the 13th International Conference on Detection of Intrusions and Malware, and Vulnerability
Assessment. Springer-Verlag New York, Inc., New York, NY, USA, 279-299,
https://doi.org/10.1007/978-3-319-40667-1_14

[12] Daniel Gruss, Raphael Spreitzer, and Stefan Mangard. 2015. Cache template
attacks: automating attacks on inclusive last-level caches. In Proceedings of the
24th USENIX Conference on Security Symposium. USENIX Association, Berkeley,
CA, USA, 897-912. http://portal.acm.org/citation.cfm?id=283 1200

[13] Roberto Guanciale, Hamed Nemati, Christoph Baumann, and Mads Dam. 2016.
Cache storage channels: alias-driven attacks and verified countermeasures. In
IEEE Symposium on Security and Privacy. TEEE, 38-55. https://doi.org/10.1109/
sp.2016.11

[14] John L. Henning. 2006. SPEC CPU2006 benchmark descriptions. SIGARCH
Comput. Archit. News 34, 4 (Sept. 2006), 1-17. https://doi.org/10.1145/1186736.
1186737

[15] Taylor Hornby. 2016. Side-channel attacks on everyday applications: distinguishing inputs with FLUSH+RELOAD. https://www.blackhat.com/docs/us16/materials/us-16-Hornby-Side-Channel-A ttacks-On-Everyday-Applicationswp.pdf. (2016). Accessed on 22 April 2017.

[16] Wei-Ming Hu. 1992. Reducing Timing Channels with Fuzzy Time. Journal
of Computer Security 1, 3-4 (May 1992), 233-254. https://doi.org/10.3233/
JCS-1992- 13-404

[17] Ralf Hund, Carsten Willems, and Thorsten Holz. 2013. Practical timing side
channel attacks against kernel Space ASLR. In IEEE Symposium on Security and
Privacy. IEEE, 191-205. https://doi.org/10.1109/sp.2013.23

[18] Intel. 2017. Intel 64 and IA-32 Architectures Software Developer’s Manual. https://software.intel.com/sites/default/files/managed/39/c5/325462-sdm-vol1-2abed-3abed.pdf. (2017). Accessed on 22 April 2017.

[19] Gorka Irazoqui, Thomas Eisenbarth, and Berk Sunar. 2015. S$A: a shared cache
attack that works across cores and defies VM sandboxing — and its application
to AES. In IEEE Symposium on Security and Privacy. TEEE, 591-604. https:
/doi.org/10.1109/sp.2015.42

[20] Gorka Irazoqui, Thomas Eisenbarth, and Berk Sunar. 2016. Cross processor
cache attacks. In Proceedings of the 11th ACM on Asia Conference on Computer
and Communications Security. ACM, New York, NY, USA, 353-364. https:
/doi.org/10.1145/2897845.2897867

[21] Ameer Jaleel. 2010. Memory characterization of workloads using instrumentationdriven simulation. http://www.jaleels.org/ajaleel/workload/SPECanalysis.pdf.
(2010). Accessed on 22 April 2017.

[22] Aamer Jaleel, Eric Borch, Malini Bhandaru, Simon C. Steely, and Joel Emer.
2010. Achieving non-inclusive cache performance with inclusive caches: temporal
locality aware (TLA) cache management policies. In 43rd Annual IEEE/ACM
International Symposium on Microarchitecture. TEEE, 151-162. https://doi.org/
10.1109/micro.2010.52

[23] Aamer Jaleel, William Hasenplaugh, Moinuddin Qureshi, Julien Sebot, Simon
Steely, and Joel Emer. 2008. Adaptive insertion policies for managing shared
caches. In Proceedings of the 17th International Conference on Parallel Architectures and Compilation Techniques. ACM, New York, NY, USA, 208-219.
https://doi.org/10.1145/1454115.1454145

[24] Taesoo Kim, Marcus Peinado, and Gloria M. Ruiz. 2012. STEALTHMEM:
system-level protection against cache-based side channel attacks in the cloud. In
Proceedings of the 21st USENIX Conference on Security Symposium. USENIX Association, Berkeley, CA, USA, 11. http://portal.acm.org/citation.cfm?id=2362804
[25] Jingfei Kong, Onur Aciigmez, Jean-Pierre Seifert, and Huiyang Zhou. 2009.
Hardware-software integrated approaches to defend against software cache-based
side channel attacks. In JEEE 15th International Symposium on High Performance Computer Architecture. TEEE, 393-404. https://doi.org/10.1109/hpca.
2009.4798277

[26] Daniel Lenoski, James Laudon, Kourosh Gharachorloo, Anoop Gupta, and John
Hennessy. 1990. The Directory-based Cache Coherence Protocol for the DASH
Multiprocessor. In Proceedings of the 17th Annual International Symposium on
Computer Architecture. ACM, New York, NY, USA, 148-159. https://doi.org/10.
1145/325 164.325 132

[27] Vladimir I Levenshtein. 1966. Binary Codes Capable of Correcting Deletions,
Insertions and Reversals. Soviet Physics Doklady 10 (Feb. 1966), 707.

[28] Moritz Lipp, Daniel Gruss, Raphael Spreitzer, and Stefan Mangard. 2015. ARMageddon: last-level cache attacks on mobile devices. In 25h USENIX Security
Symposium, Vol. abs/1511.04897. USENIX Association.

[29] Fangfei Liu, Qian Ge, Yuval Yarom, Frank Mckeen, Carlos Rozas, Gernot Heiser,
and Ruby B. Lee. 2016. CATalyst: defeating last-level cache side channel attacks
in cloud computing. In IEEE International Symposium on High Performance Computer Architecture. IEEE, 406-418. https://doi.org/10.1109/hpca.2016.7446082
[30] Fangfei Liu and Ruby B. Lee. 2014. Random fill cache architecture. In Proceedings of the 47th Annual IEEE/ACM International Symposium on Microarchitecture. TEEE Computer Society, Washington, DC, USA, 203-215. https:
/doi.org/10.1109/micro.2014.28

[31] Fangfei Liu, Yuval Yarom, Qian Ge, Gernot Heiser, and Ruby B. Lee. 2015.
Last-level cache side-channel attacks are practical. In Proceedings of the 2015
IEEE Symposium on Security and Privacy. TEEE Computer Society, Washington,
DC, USA, 605-622. https://doi.org/10.1109/sp.2015.43

[32] Wanli Liu and D. Yeung. 2009. Using aggressor thread information to improve
shared cache management for CMPs. In 18th International Conference on Parallel
Architectures and Compilation Techniques. IEEE, 372-383. https://doi.org/10.
1109/pact.2009.13

[33] Stefan Mangard, Elisabeth Oswald, and Thomas Popp. 2007. Power analysis
attacks: revealing the secrets of smart cards . Springer-Verlag New York, Inc.,
Secaucus, NJ, USA. https://doi.org/10.1007/978-0-387-38162-6

[34] Robert Martin, John Demme, and Simha Sethumadhavan. 2012. TimeWarp:
rethinking timekeeping and performance monitoring mechanisms to mitigate sidechannel attacks. In Proceedings of the 39th Annual International Symposium on
Computer Architecture. IEEE Computer Society, Washington, DC, USA, 118-129.
https://doi.org/10.1145/2366231.2337173

[35] Michael Neve and Jean P. Seifert. 2007. Advances on access-driven cache attacks
on AES. In Proceedings of the 13th International Conference on Selected Areas
in Cryptography. Springer-Verlag, Berlin, Heidelberg, 147-162. https://doi.org/
10.1007/978-3-540-74462-7_11

[36] Yossef Oren, Vasileios P. Kemerlis, Simha Sethumadhavan, and Angelos D.
Keromytis. 2015. The spy in the sandbox: practical cache attacks in JavaScript
and their implications. In Proceedings of the 22Nd ACM SIGSAC Conference on
Computer and Communications Security. ACM, New York, NY, USA, 1406-1418.
https://doi.org/10.1145/28 10103.2813708

[37] DagArne Osvik, Adi Shamir, and Eran Tromer. 2006. Cache attacks and countermeasures: the case of AES. In Topics in Cryptology, David Pointcheval (Ed.).
Lecture Notes in Computer Science, Vol. 3860. Springer Berlin Heidelberg, Berlin,
Heidelberg, Chapter 1, 1-20. https://doi.org/10.1007/11605805_1

[38] Avadh Patel, Furat Afram, Shunfei Chen, and Kanad Ghose. 2011. MARSS:
a full system simulator for multicore x86 CPUs. In Proceedings of the 48th
Design Automation Conference. ACM, New York, NY, USA, 1050-1055. https:
/doi.org/10.1145/2024724.2024954

[39] Mathias Payer. 2016. HexPADS: a platform to detect "stealth" attacks. In Proceedings of the 8th International Symposium on Engineering Secure Software
and Systems. Springer-Verlag New York, Inc., New York, NY, USA, 138-154.
https://doi.org/10.1007/978- 3-3 19-30806-7_9

[40] Colin Percival. 2005. Cache missing for fun and profit.
http://www.daemonology.net/papers/cachemissing.pdf. (Oct. 2005). Accessed on 22-April-2017.

[41] Moinuddin K. Qureshi and Yale N. Patt. 2006. Utility-based cache partitioning: a low-overhead, high-performance, runtime mechanism to partition shared
caches. In Proceedings of the 39th Annual IEEE/ACM International Symposium
on Microarchitecture. TEEE Computer Society, Washington, DC, USA, 423-432.
https://doi.org/10.1109/micro.2006.49

[42] Thomas Ristenpart, Eran Tromer, Hovav Shacham, and Stefan Savage. 2009.
Hey, you, get off of my cloud: exploring information leakage in third-party
compute clouds. In Proceedings of the 16th ACM Conference on Computer
and Communications Security. ACM, New York, NY, USA, 199-212. https:
/Aoi.org/10.1145/1653662.1653687

[43] Daniel Sanchez and Christos Kozyrakis. 2011. Vantage: scalable and efficient
fine-grain cache partitioning. In Proceedings of the 38th annual international
symposium on Computer architecture, Vol. 39. ACM, New York, NY, USA, 57-68.

https://doi.org/10.1145/2024723.2000073

[44] Jicheng Shi, Xiang Song, Haibo Chen, and Binyu Zang. 2011. Limiting cache
based side-channel in multi-tenant cloud using dynamic page coloring. In Pro
ceedings of the 2011 IEEE/IFIP 41st International Conference on Dependable

Systems and Networks Workshops. IEEE Computer Society, Washington, DC,

USA, 194-199. https://doi.org/10.1109/dsnw.2011.5958812

[45] Ronak Singhal. 2008. Inside Intel core microarchitecture (Nehalem). In 2008
IEEE Hot Chips Symposium (HCS). TEEE, 1-25. https://doi.org/10.1109/hotchips.
2008.7476555

[46] Yao Wang, Andrew Ferraiuolo, Danfeng Zhang, Andrew C. Myers, and G, Edward
Suh. 2016. SecDCP: secure dynamic cache partitioning for efficient timing channel protection. In Proceedings of the 53rd Annual Design Automation Conference.
ACM, New York, NY, USA. https://doi.org/10.1145/2897937.2898086

[47] Zhenghong Wang and Ruby B. Lee. 2007. New cache designs for thwarting
software cache-based side channel attacks. In Proceedings of the 34th Annual
International Symposium on Computer Architecture. ACM, New York, NY, USA,
494-505. https://doi.org/10.1145/1250662. 1250723

[48] Yuejian Xie and Gabriel H. Loh. 2009. PIPP: promotion/insertion pseudopartitioning of multi-core shared caches. In Proceedings of the 36th Annual
International Symposium on Computer Architecture, Vol. 37. ACM, New York,
NY, USA, 174-183. https://doi.org/10.1145/1555815.1555778

[49] Mengjia Yan, Yasser Shalabi, and Josep Torrellas. 2016. ReplayConfusion: detecting cache-based covert channel attacks using record and replay. In 49th Annual IEEE/ACM International Symposium on Microarchitecture. IEEE, 1-14.
https://doi.org/10.1109/micro.2016.7783742

[50] Yuval Yarom and Katrina Falkner. 2014. FLUSH+RELOAD: a high resolution,
low noise, L3 cache side-channel attack. In Proceedings of the 23rd USENIX
Conference on Security Symposium. USENIX Association, Berkeley, CA, USA,
719-732. http://portal.acm.org/citation.cfm?id=2671271

[51] Yingian Zhang, Ari Juels, Michael K. Reiter, and Thomas Ristenpart. 2014. Crosstenant side-channel attacks in PaaS clouds. In Proceedings of the 2014 ACM
SIGSAC Conference on Computer and Communications Security. ACM, New
York, NY, USA, 990-1003. https://doi.org/10.1145/2660267.2660356

[52] Ziqiao Zhou, Michael K. Reiter, and Yingian Zhang. 2016. A software approach
to defeating side channels in last-Level caches. In Proceedings of the 2016 ACM
SIGSAC Conference on Computer and Communications Security. ACM, New
York, NY, USA, 871-882. https://doi.org/10.1145/2976749.2978324
