[1] Cloud Security Alliance. Security guidance for critical areas of focus

in cloud computing v 3.0, 2011.

2016.

[3] V. Del Piccolo, A. Amamou, K. Haddadou, and G. Pujolle. A survey
IEEE

of network isolation solutions for multi-tenant data centers.
Communications Surveys Tutorials, PP(99):1–1, 2016.

[4] SANS Institute, InfoSec Reading Room. An introduction to securing a

cloud environment, 2012.

[5] Amazon Web Services. Overview of security processes, June 2016.


[6] ISO Std IEC.
Techniques, 2005.
[7] ISO Std IEC. ISO 27017. Information technology- Security techniques
(DRAFT), 2012.

Information Technology-Security

ISO 27002:2005.

[8] Cloud Security Alliance. Cloud control matrix CCM v3.0.1, 2014.

Available at: https://cloudsecurityalliance.org/research/ccm/.

[9] OpenStack.

OpenStack user

survey, 2016.

Available

at:

https://www.openstack.org.

[10] RightScale. RightScale 2016 state of the cloud report, 2016. Available

at: http://www.rightscale.com.

[11] G. D. Plotkin, N. Bjørner, N. P. Lopes, A. Rybalchenko, and G. Vargh-
ese. Scaling network veriﬁcation using symmetry and surgery. In POPL,
2016.

[12] OpenStack. OpenStack open source cloud computing software. Avail-

able at: http://www.openstack.org.
network

Nova

[13] OpenStack.

security

group

to

applied

not
https://security.openstack.org/ossa/OSSA-2015-021.html,
on: May, 2016.

instances,

running

2015.

changes
Available

are
at:
last visited

[14] OpenStack. Routers can be cross plugged by other tenants, 2014.
Available at: https://security.openstack.org/ossa/OSSA-2014-008.html,
last visited on: May, 2016.
J. Corbet.
Trees
http://lwn.net/Articles/175432/.

I: Radix

Available

tree.

[15]

at:

[16] D. E. Willard. Log-logarithmic worst-case range queries are possible

in space o(n), 1983. Information Processing Letters.
Policy as a Service (Congress).

[17] OpenStack.

http://wiki.openstack.org/wiki/Congress.

Available at:

[18] P. Kazemian, G. Varghese, and N. McKeown. Header space analysis:

Static checking for networks. In NSDI, 2012.

[19] P. Kazemian, M. Chan, H. Zeng, G. Varghese, N. McKeown, and
S. Whyte. Real time network policy checking using header space
analysis. In NSDI, 2013.

[20] H. Mai, Ahmed Khurshid, R. Agarwal, M. Caesar, P. Godfrey, and S. T.

King. Debugging the data plane with anteater. In SIGCOMM, 2011.

[21] A. Khurshid, X. Zou, W. Zhou, M. Caesar, and P. B. Godfrey. VeriFlow:

verifying network-wide invariants in real time. In NSDI, 2013.

[22] H. Yang and S. S. Lam. Real-time veriﬁcation of network properties

using atomic predicates. In ICNP, Oct 2013.

[23] H. Zeng, S. Zhang, F. Ye, V. Jeyakumar, M. Ju, J. Liu, N. McKeown,
and A. Vahdat. Libra: Divide and conquer to verify forwarding tables
in huge networks. In NSDI, 2014.

[24] Aaron Gember-Jacobson, Raajay Viswanathan, Aditya Akella, and
Ratul Mahajan. Fast control plane analysis using an abstract repre-
sentation. In SIGCOMM, 2016.

[25] Ari Fogel, Stanley Fung, Luis Pedrosa, Meg Walraed-Sullivan, Ramesh
Govindan, Ratul Mahajan, and Todd Millstein. A general approach to
network conﬁguration analysis. In NSDI, 2015.

[26] Seyed K. Fayaz, Tushar Sharma, Ari Fogel, Ratul Mahajan, Todd Mill-
stein, Vyas Sekar, and George Varghese. Efﬁcient network reachability
analysis using a succinct control plane representation. In OSDI, 2016.
[27] N. P. Lopes, N. Bjørner, P. Godefroid, K. Jayaraman, and G. Varghese.

Checking beliefs in dynamic networks. In NSDI’15, 2015.

[28] S¨oren Bleikertz, Carsten Vogel, and Thomas Groß. Cloud Radar:
Near real-time detection of security failures in dynamic virtualized
infrastructures. In ACSAC, 2014.
[29] T. Probst, E. Alata, M. Kaˆaniche, and V. Nicomette. An approach for
the automated analysis of network access controls in cloud computing
infrastructures. In Network and System Security. 2014.

[30] G. G. Xie, J. Zhan, D. A. Maltz, H. Zhang, A. Greenberg, G. Hjalm-
tysson, and J. Rexford. On static reachability analysis of IP networks.
In INFOCOM, 2005.

[31] Taous Madi, Suryadipta Majumdar, Yushun Wang, Yosr Jarraya, Makan
Pourzandi, and Lingyu Wang. Auditing security compliance of the
virtualized infrastructure in the cloud: Application to OpenStack.
In
CODASPY, 2016.

[32] Suryadipta Majumdar, Yosr Jarraya, Taous Madi, Amir Alimohammad-
ifar, Makan Pourzandi, Lingyu Wang, and Mourad Debbabi. Proactive
veriﬁcation of security compliance for clouds through pre-computation:
Application to OpenStack. In ESORICS, 2016.

[33] S. Bleikertz, T. Groß, M. Schunter, and K. Eriksson. Automated
In ESORICS,

information ﬂow analysis of virtualized infrastructures.
2011.

[34] Karthick Jayaraman, Nikolaj Bjørner, Geoff Outhred, and Charlie
Kaufman. Automated analysis and debugging of network connectiv-
ity policies. Technical report, Technical Report MSR-TR-2014-102,
Microsoft Research, 2014.

[35] OpenStack.

Congress documentation release.

Available

at:

https://congress.readthedocs.io/en/latest/.

[36] Robin J. W. Deﬁnitions and examples. In Introduction to Graph Theory,

Second Edition, 1979.

[37] P. Kazemian, G. Varghese, and N. McKeown. Header space analysis:

Static checking for networks. In NSDI, pages 113–126, 2012.

[38] Fred Halsall. Computer Networking and the Internet (5th Edition).

Addison-Wesley Longman Publishing Co., Inc., 2005.

[39] W. R. Cheswick, S. M. Bellovin, and A. Rubin. Firewalls and Internet

Security: Repelling the Wily Hacker.

[40] Grzegorz Malewicz, Matthew H Austern, Aart JC Bik, James C Dehnert,
Ilan Horn, Naty Leiser, and Grzegorz Czajkowski. Pregel: a system for
large-scale graph processing. In SIGMOD, 2010.

[41] Douglas Gregor and Andrew Lumsdaine. The parallel BGL: A generic

library for distributed graph computations. POOSC, 2, 2005.

[42] Albert Chan and Frank Dehne. CGMgraph/CGMlib: Implementing and
testing CGM graph algorithms on PC clusters.
In European Parallel
Virtual Machine/Message Passing Interface Users’ Group Meeting.
Springer, 2003.

[43] H. Ballani, K. Jang, T. Karagiannis, C. Kim, D. Gunawardena, and
G. O’Shea. Chatty tenants and the cloud network sharing problem. In
NSDI, 2013.

[44] Cloud auditing data federation (CADF). PyCADF: A Python-based
CADF library, 2015. Available at: https://pypi.python.org/pypi/pycadf.
Available at:

Amazon EC2- Virtual Server Hosting.

[45] Amazon.

https://aws.amazon.com/ec2.
[46]Ignite. Available at: https://ignite.apache.org.

[47] A. Fei, G. Pei, R. Liu, and L. Zhang. Measurements on delay and

hop-count of the internet. In GLOBECOM, 1998.

[48] F. Begtasevic and P. V. Mieghem. Measurements of the hopcount in

internet. In PAM, 2001.
Amazon

[49] Amazon.

virtual

private

cloud.

Available

at:

https://aws.amazon.com/vpc.

[50] Google. Google compute engine subnetworks beta. Available at:

https://cloud.google.com.

[51] Microsoft.

Microsoft Azure virtual network.

Available

at:

https://azure.microsoft.com.

[52] VMware.

VMware
https://www.vmware.com.
[53] M. Bellare and B. Yee.

vCloud Director.

Available

at:

Forward integrity for secure audit

logs.

Technical report, Citeseer, 1997.

[54] Scott A Crosby and Dan S Wallach. Efﬁcient data structures for tamper-

evident logging. In USENIX Security Symposium, 2009.

[55] Di Ma and Gene Tsudik. A new approach to secure logging. ACM

Transactions on Storage (TOS), 5(1):2, 2009.

[56] OpenStack.

Security

hardening,

2016.

Available

at:

http://docs.openstack.org/admin-guide/compute-security.html.


[57] Cheun Ngen Chong, Zhonghong Peng, and Pieter H Hartel. Secure
audit logging with tamper-resistant hardware. In Security and Privacy
in the Age of Uncertainty. Springer, 2003.
