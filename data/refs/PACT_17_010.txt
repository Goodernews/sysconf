[1] Cobalt web page. http://trac.mcs.anl.gov/projects/cobalt.
[2] Data-driven documents. https://d3js.org/.
[3] Rocksdb. http://rocksdb.org/.
[4] Torque resource manager. http://www.
adaptivecomputing.com.
[5] FTP Site: Darshan Data. ftp://ftp.mcs.anl.gov/pub/
darshan/data/, 2013.
[6] Conditional probes. https://www.sourceware.org/
systemtap/, 2016.
[7] A. Agelastos, B. Allan, J. Brandt, P. Cassella, J. Enos,
J. Fullop, A. Gentile, S. Monk, N. Naksinehaboon, J. Ogden, et al. The Lightweight Distributed Metric Service:
A Scalable Infrastructure for Continuous Monitoring of
Large Scale Computing Systems and Applications. In
Proceedings of the International Conference for High
Performance Computing, Networking, Storage and Analysis, pages 154–165. IEEE Press, 2014.
[8] A. M. Bates, D. Tian, K. R. Butler, and T. Moyer.
Trustworthy Whole-System Provenance for the Linux
Kernel. In USENIX Security Symposium, pages 319–334,
2015.
[9] O. Biton, S. Cohen-Boulakia, and S. B. Davidson.
Zoom* Userviews: Querying Relevant Provenance in
Workflow Systems. In Proceedings of the 33rd international conference on Very large data bases, pages 1366–
1369. VLDB Endowment, 2007.
[10] B. Bode, D. M. Halstead, R. Kendall, Z. Lei, and
D. Jackson. The Portable Batch Scheduler and the Maui
Scheduler on Linux Clusters. In Usenix, 4th Annual
Linux Showcase & Conference, 2000.
[11] P. Buneman, S. Khanna, and T. Wang-Chiew. Why
and Where: A Characterization of Data Provenance. In
Database Theory ICDT 2001, pages 316–330. Springer,
2001.
[12] L. Carata, S. Akoush, N. Balakrishnan, T. Bytheway,
R. Sohan, M. Selter, and A. Hopper. A Primer on
Provenance. Communications of the ACM, 57(5):52–60,
2014.
[13] P. Carns, K. Harms, W. Allcock, C. Bacon, S. Lang,
R. Latham, and R. Ross. Understanding and Improving
Computational Science Storage Access through Continuous Characterization. ACM Transactions on Storage
(TOS), 7(3):8, 2011.
[14] K. Correll, N. Barendt, and M. Branicky. Design Considerations for Software Only Implementations of the IEEE
1588 Precision Time Protocol. In Conference on IEEE,
volume 1588, pages 11–15, 2005.
[15] Y. Cui, J. Widom, and J. L. Wiener. Tracing the Lineage
of View Data in a Warehousing Environment. ACM
Transactions on Database Systems (TODS), 25(2):179–
227, 2000.
[16] D. Dai. GraphMeta Prototype. http://discl.cs.ttu.edu/
gitlab/dongdai/graphfs, 2015.
[17] D. Dai, Y. Chen, P. Carns, J. Jenkins, W. Zhang, and
R. Ross. GraphMeta: A Graph-Based Engine for Managing Large-Scale HPC Rich Metadata. In Proceedings
of the IEEE Cluster 2016, 2016.
[18] D. Dai, Y. Chen, D. Kimpe, and R. Ross. ProvenanceBased Object Storage Prediction Scheme for Scientific
Big Data Applications. In 2014 IEEE International
Conference on Big Data, pages 271–280. IEEE, 2014.
[19] J. Dongarra, M. A. Heroux, and P. Luszczek. HPCG
Benchmark: A New Metric for Ranking High Performance Computing Systems.
[20] J. Freire, D. Koop, E. Santos, and C. T. Silva. Provenance
for Computational Tasks: A Survey. Computing in
Science & Engineering, 10(3):11–21, 2008.
[21] J. Frew and P. Slaughter. ES3: A Demonstration of
Transparent Provenance for Scientific Computation. In
Provenance and Annotation of Data and Processes,
pages 200–207. Springer, 2008.
[22] A. Gehani and D. Tariq. SPADE: Support for Provenance
Auditing in Distributed Environments. In Proceedings
of the 13th International Middleware Conference, pages
101–120. Springer-Verlag New York, Inc., 2012.
[23] B. Gregg and J. Mauro. DTrace: Dynamic Tracing in
Oracle Solaris, Mac OS X, and FreeBSD. Prentice Hall
Professional, 2011.
[24] W. Gropp, E. Lusk, and R. Thakur. Using MPI-2:
Advanced Features of the Message-Passing Interface.
MIT Press, 1999.
[25] P. J. Guo and M. Seltzer. BURRITO: Wrapping Your
Lab Notebook in Computational Infrastructure. In TaPP,
2012.
[26] L. Lamport. Time, Clocks, and the Ordering of Events
in a Distributed System. Communications of the ACM,
21(7):558–565, 1978.
[27] S. Ma, X. Zhang, and D. Xu. ProTracer: Towards
Practical Provenance Tracing by Alternating Between
Logging and Tainting. In NDSS, 2016.
[28] P. Macko and M. Seltzer. A General-Purpose Provenance
Library. In TaPP, 2012.
[29] D. L. Mills. Internet Time Synchronization: The Network
Time Protocol. IEEE Transactions on Communications,
39(10):1482–1493, 1991.
[30] L. Moreau, B. Clifford, J. Freire, J. Futrelle, Y. Gil,
P. Groth, N. Kwasnikowska, S. Miles, P. Missier, and
J. Myers. The Open Provenance Model Core specification (v1. 1). Future Generation Computer Systems,
27(6):743–756, 2011.
[31] C. Morrone, B. Loewe, and T. McLarty. mdtest HPC
Benchmark. 2010.
[32] K.-K. Muniswamy-Reddy, U. Braun, D. A. Holland,
P. Macko, D. L. MacLean, D. W. Margo, M. I. Seltzer,
and R. Smogor. Layering in Provenance Systems. In
USENIX Annual Technical Conference, 2009.
[33] K.-K. Muniswamy-Reddy, D. A. Holland, U. Braun, and
M. I. Seltzer. Provenance-Aware Storage Systems. In
USENIX Annual Technical Conference, General Track,
pages 43–56, 2006.
[34] R. Ricci and E. Eide. Introducing CloudLab: Scientific
Infrastructure for Advancing Cloud Architectures and
Applications. ; login:, 39(6):36–38, 2014.
[35] C. Scheidegger, D. Koop, E. Santos, H. Vo, S. Callahan, J. Freire, and C. Silva. Tackling the Provenance
Challenge One Layer at a Time. Concurrency and
Computation: Practice and Experience, 20(5):473–483,
2008.
[36] H. Shan and J. Shalf. Using IOR to Analyze the I/O
Performance for HPC Platforms. In CUG’07, 2007.
[37] C. T. Silva, J. Freire, and S. P. Callahan. Provenance for
Visualizations: Reproducibility and Beyond. Computing
in Science & Engineering, 9(5):82–89, 2007.
[38] Y. L. Simmhan, B. Plale, and D. Gannon. A Survey
of Data Provenance in e-Science. ACM Sigmod Record,
34(3):31–36, 2005.
[39] A. Vahdat and T. E. Anderson. Transparent Result
Caching. In USENIX Annual Technical Conference,
1998.
