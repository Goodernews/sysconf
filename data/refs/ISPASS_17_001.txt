[1] C. Wimmer, M. Haupt, M. L. Van De Vanter, M. Jordan, L. Daynès,
and D. Simon, “Maxine: An approachable virtual machine for, and
in, Java,” ACM Transactions on Architecture and Code Optimization
(TACO), vol. 9, no. 4, pp. 30:1–20:24, Jan. 2013.
[2] B. Alpern, C. R. Attanasio, A. Cocchi, D. Lieber, S. Smith, T. Ngo, J. J.
Barton, S. F. Hummel, J. C. Sheperd, and M. Mergen, “Implementing
Jalapeño in Java,” in Proceedings of the 14th ACM SIGPLAN Conference
on Object-oriented Programming, Systems, Languages, and Applications
(OOPSLA), 1999, pp. 314–324.
[3] J. Larus and G. Hunt, “The Singularity system,” Communications of the
ACM, vol. 53, no. 8, pp. 72–79, Aug. 2010.
[4] “OpenJDK: Graal project,” http://openjdk.java.net/projects/graal/, 2016,
[Online; last accessed 10-Mar-2017].
[5] C. Wimmer and T. Würthinger, “Truffle: A self-optimizing runtime
system,” in Proceedings of the 3rd Annual Conference on Systems,
Programming, and Applications: Software for Humanity (SPLASH),
2012, pp. 13–14.
[6] G. E. Moore, “Cramming more components onto integrated circuits,”
Electronics, vol. 38, no. 8, pp. 114–117, April 1965.
[7] R. Dennard, F. Gaensslen, V. Rideout, E. Bassous, and A. LeBlanc, “Design of ion-implanted MOSFET’s with very small physical dimensions,”
IEEE Journal of Solid-State Circuits, vol. 9, no. 5, pp. 256–268, Oct
1974.
[8] P. F. Sweeney, M. Hauswirth, B. Cahoon, P. Cheng, A. Diwan, D. Grove,
and M. Hind, “Using hardware performance monitors to understand the
behavior of Java applications,” in Proceedings of the 3rd Conference on
Virtual Machine Research And Technology Symposium, 2004, p. 5.
[9] M. Hauswirth, P. F. Sweeney, A. Diwan, and M. Hind, “Vertical
profiling: Understanding the behavior of object-oriented applications,”
in Proceedings of the 19th Annual ACM SIGPLAN Conference on
Object-oriented Programming, Systems, Languages, and Applications
(OOPSLA), 2004, pp. 251–269.
[10] A. Georges, D. Buytaert, L. Eeckhout, and K. De Bosschere, “Methodlevel phase behavior in Java workloads,” in Proceedings of the 19th
Annual ACM SIGPLAN Conference on Object-oriented Programming,
Systems, Languages, and Applications (OOPSLA), 2004, pp. 270–287.
[11] D. Sanchez and C. Kozyrakis, “ZSim: Fast and accurate microarchitectural simulation of thousand-core systems,” in Proceedings of the
40th Annual International Symposium on Computer Architecture (ISCA),
2013, pp. 475–486.
[12] S. Li, J. H. Ahn, R. D. Strong, J. B. Brockman, D. M. Tullsen, and
N. P. Jouppi, “The McPAT framework for multicore and manycore
architectures: Simultaneously modeling power, area, and timing,” ACM
Transactions on Architecture and Code Optimization (TACO), vol. 10,
no. 1, pp. 5:1–5:29, Apr. 2013.
[13] S. M. Blackburn, R. Garner, C. Hoffmann, A. M. Khang, K. S.
McKinley, R. Bentzur, A. Diwan, D. Feinberg, D. Frampton, S. Z. Guyer,
M. Hirzel, A. Hosking, M. Jump, H. Lee, J. E. B. Moss, A. Phansalkar,
D. Stefanović, T. VanDrunen, D. von Dincklage, and B. Wiedermann,
“The DaCapo benchmarks: Java benchmarking development and analysis,” in Proceedings of the 21st Annual ACM SIGPLAN Conference
on Object-oriented Programming Systems, Languages, and Applications
(OOPSLA), 2006, pp. 169–190.
[14] M. Paleczny, C. Vick, and C. Click, “The Java HotspotTM server compiler,” in Proceedings of the 1st Java Virtual Machine Research and
Technology Symposium, 2001, pp. 1–12.
[15] “SPECjvm2008 benchmarks,” http://www.spec.org/jvm2008, 2008, [Online; last accessed 10-Mar-2017].
[16] “pjbb2005,”
http://users.cecs.anu.edu.au/∼steveb/research/
research-infrastructure/pjbb2005, 2005, [Online; last accessed 10Mar-2017].
[17] M. Pellauer, M. Adler, M. A. Kinsy, A. Parashar, and J. S. Emer,
“HAsim: FPGA-based high-detail multicore simulation using timedivision multiplexing.” in Proceedings of the 17th IEEE International
Symposium on High Performance Computer Architecture (HPCA), 2011,
pp. 406–417.
[18] A. Khan, M. Vijayaraghavan, S. Boyd-Wickizer, and Arvind, “Fast and
cycle-accurate modeling of a multicore processor,” in Proceedings of
the 2012 IEEE International Symposium on Performance Analysis of
Systems and Software (ISPASS), 2012, pp. 178–187.
[19] D. Chiou, D. Sunwoo, J. Kim, N. A. Patil, W. Reinhart, D. E. Johnson,
J. Keefe, and H. Angepat, “FPGA-accelerated simulation technologies
(FAST): Fast, full-system, cycle-accurate simulators,” in Proceedings of
the 40th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO), 2007, pp. 249–261.
[20] E. S. Chung, M. K. Papamichael, E. Nurvitadhi, J. C. Hoe, K. Mai,
and B. Falsafi, “ProtoFlex: Towards scalable, full-system multiprocessor simulations using FPGAs,” ACM Transactions on Reconfigurable
Technology and Systems (TRETS), vol. 2, no. 2, pp. 15:1–15:32, Jun.
2009.
[21] N. Binkert, B. Beckmann, G. Black, S. K. Reinhardt, A. Saidi, A. Basu,
J. Hestness, D. R. Hower, T. Krishna, S. Sardashti, R. Sen, K. Sewell,
M. Shoaib, N. Vaish, M. D. Hill, and D. A. Wood, “The gem5 simulator,”
ACM SIGARCH Computer Architecture News, vol. 39, no. 2, pp. 1–7,
Aug. 2011.

[22] A. Patel, F. Afram, S. Chen, and K. Ghose, “MARSS: A full system
simulator for multicore x86 CPUs,” in Proceedings of the 48th Design
Automation Conference (DAC), 2011, pp. 1050–1055.
[23] T. E. Carlson, W. Heirman, and L. Eeckhout, “Sniper: Exploring the level
of abstraction for scalable and accurate parallel multi-core simulation,”
in Proceedings of 2011 International Conference for High Performance
Computing, Networking, Storage and Analysis (SC), 2011, pp. 52:1–
52:12.
[24] J. E. Miller, H. Kasture, G. Kurian, C. Gruenwald, N. Beckmann,
C. Celio, J. Eastep, and A. Agarwal, “Graphite: A distributed parallel
simulator for multicores,” in Proceedings of the 16th IEEE International
Symposium on High Performance Computer Architecture (HPCA), 2010,
pp. 1–12.
[25] C.-K. Luk, R. Cohn, R. Muth, H. Patil, A. Klauser, G. Lowney,
S. Wallace, V. J. Reddi, and K. Hazelwood, “Pin: Building customized
program analysis tools with dynamic instrumentation,” in Proceedings of
the 2005 ACM SIGPLAN Conference on Programming Language Design
and Implementation (PLDI), 2005, pp. 190–200.
[26] “CFS scheduler,” https://www.kernel.org/doc/Documentation/scheduler/
sched-design-CFS.txt, 2014, [Online; last accessed 10-Mar-2017].
[27] R. S. Fabry, “Capability-based addressing,” Communications of the
ACM, vol. 17, no. 7, pp. 403–412, Jul. 1974.
[28] H. M. Levy, Capability-Based Computer Systems, 1984. [Online].
Available: http://homes.cs.washington.edu/∼levy/capabook/
[29] M. Dalton, H. Kannan, and C. Kozyrakis, “Raksha: A flexible information flow architecture for software security,” in Proceedings of the
34th Annual International Symposium on Computer Architecture (ISCA),
2007, pp. 482–493.
[30] J. R. Crandall and F. T. Chong, “Minos: Control data attack prevention
orthogonal to memory model,” in Proceedings of the 37th Annual
IEEE/ACM International Symposium on Microarchitecture (MICRO),
2004, pp. 221–232.
[31] E. I. Organick, Computer System Organization: The B5700/B6700 Series
(ACM Monograph Series). Academic Press, Inc., 1973.
[32] B. Babayan, “E2K technology and implementation,” in Proceedings from
the 6th International Euro-Par Conference on Parallel Processing (EuroPar), 2000, pp. 18–21.
[33] M. E. Houdek, F. G. Soltis, and R. L. Hoffman, “IBM System/38 support
for capability-based addressing,” in Proceedings of the 8th Annual
Symposium on Computer Architecture (ISCA), 1981, pp. 341–348.
[34] “ARM Cortex-A series programmer’s guide for ARMv8A,”
http://infocenter.arm.com/help/topic/com.arm.doc.den0024a/
DEN0024A v8 architecture PG.pdf, 2015, [Online; last accessed
10-Mar-2017].
[35] K. Aingaran, S. Jairath, G. Konstadinidis, S. Leung, P. Loewenstein,
C. McAllister, S. Phillips, Z. Radovic, R. Sivaramakrishnan, D. Smentek,
and T. Wicki, “M7: Oracle’s next-generation Sparc processor,” IEEE
Micro, vol. 35, no. 2, pp. 36–45, Mar 2015.
[36] “Intel 64 and IA-32 architectures software developers manual. volume 1: Basic architecture,” http://download.intel.com/design/processor/
manuals/253665.pdf, 2011, [Online; last accessed 10-Mar-2017].
[37] “5-level paging and 5-level EPT white paper,” https://software.intel.
com/sites/default/files/managed/2b/80/5-level paging white paper.pdf,
2016, [Online; last accessed 10-Mar-2017].
[38] M. M. K. Martin, D. J. Sorin, B. M. Beckmann, M. R. Marty,
M. Xu, A. R. Alameldeen, K. E. Moore, M. D. Hill, and D. A.
Wood, “Multifacet’s general execution-driven multiprocessor simulator
(GEMS) toolset,” ACM SIGARCH Computer Architecture News, vol. 33,
no. 4, pp. 92–99, Nov. 2005.
[39] R. Odaira, K. Ogata, K. Kawachiya, T. Onodera, and T. Nakatani,
“Efficient runtime tracking of allocation sites in Java,” in Proceedings
of the 6th ACM SIGPLAN/SIGOPS International Conference on Virtual
Execution Environments (VEE), 2010, pp. 109–120.
[40] D. Clifford, H. Payer, M. Stanton, and B. L. Titzer, “Memento mori:
Dynamic allocation-site-based optimizations,” in Proceedings of the
2015 International Symposium on Memory Management (ISMM), 2015,
pp. 105–117.
[41] “Protocol Buffers - Google’s data interchange format (ver. 2.6.1),” https:
//developers.google.com/protocol-buffers/, 2014, [Online; last accessed
10-Mar-2017].
[42] W. Heirman, S. Sarkar, T. E. Carlson, I. Hur, and L. Eeckhout, “Poweraware multi-core simulation for early design stage hardware/software
co-optimization,” in Proceedings of the 21st International Conference
on Parallel Architectures and Compilation Techniques (PACT), 2012,
pp. 3–12.
[43] A. Armejach, A. Cristal, and O. S. Unsal, “Tidy cache: Improving
data placement in die-stacked DRAM caches,” in Proceedings of the
2015 27th International Symposium on Computer Architecture and High
Performance Computing (SBAC-PAD), 2015, pp. 65–73.
[44] A. R. Adl-Tabatabai, J. Bharadwaj, M. Cierniak, M. Eng, J. Fang, B. T.
Lewis, B. R. Murphy, and J. M. Stichnoth, “Improving 64-bit Java IPF
performance by compressing heap references,” in Proceedings of the
International Symposium on Code Generation and Optimization (CGO),
2004, pp. 100–110.
[45] H. Inoue and T. Nakatani, “Identifying the sources of cache misses in
Java programs without relying on hardware counters,” in Proceedings
of the 2012 International Symposium on Memory Management (ISMM),
2012, pp. 133–142.
[46] “Jikes–Sniper page in Sniper online documentation,” http://snipersim.
org/w/Jikes, 2014, [Online; last accessed 10-Mar-2017].
[47] T. E. Carlson, W. Heirman, S. Eyerman, I. Hur, and L. Eeckhout, “An
evaluation of high-level mechanistic core models,” ACM Transactions on
Architecture and Code Optimization (TACO), vol. 11, no. 3, pp. 28:1–
28:25, Aug. 2014.
[48] S. C. Woo, M. Ohara, E. Torrie, J. P. Singh, and A. Gupta, “The
SPLASH-2 programs: Characterization and methodological considerations,” in Proceedings of the 22nd Annual International Symposium on
Computer Architecture (ISCA), 1995, pp. 24–36.
[49] C. Bienia, S. Kumar, J. P. Singh, and K. Li, “The PARSEC benchmark
suite: Characterization and architectural implications,” in Proceedings
of the 17th International Conference on Parallel Architectures and
Compilation Techniques (PACT), 2008, pp. 72–81.
[50] V. Aslot, M. J. Domeika, R. Eigenmann, G. Gaertner, W. B. Jones, and
B. Parady, “SPEComp: A new benchmark suite for measuring parallel
computer performance,” in Proceedings of the International Workshop
on OpenMP Applications and Tools: OpenMP Shared Memory Parallel
Programming (WOMPAT), 2001, pp. 1–10.
[51] J. B. Sartor, W. Heirman, S. M. Blackburn, L. Eeckhout, and K. S.
McKinley, “Cooperative cache scrubbing,” in Proceedings of the 23rd
International Conference on Parallel Architectures and Compilation
(PACT), 2014, pp. 15–26.
[52] G. Wright, P. McGachey, E. Gunadi, and M. Wolczko, “Introspection of
a JavaTM virtual machine under simulation,” Tech. Rep., 2006.
[53] P. S. Magnusson, M. Christensson, J. Eskilson, D. Forsgren, G. Hållberg,
J. Högberg, F. Larsson, A. Moestedt, and B. Werner, “Simics: A full
system simulation platform,” Computer, vol. 35, no. 2, pp. 50–58, Feb.
2002.
[54] S. R. Sarangi, R. Kalayappan, P. Kallurkar, S. Goel, and E. Peter,
“Tejas: A java based versatile micro-architectural simulator,” in 25th
International Workshop on Power and Timing Modeling, Optimization
and Simulation (PATMOS), Sept 2015, pp. 47–54.
[55] C.-H. Tu, H.-H. Hsu, J.-H. Chen, C.-H. Chen, and S.-H. Hung, “Performance and power profiling for emulated Android systems,” ACM
Transactions on Design Automation of Electronic Systems, vol. 19, no. 2,
pp. 10:1–10:25, Mar. 2014.
[56] B. Shingarov, “Live introspection of target-agnostic JIT in simulation,”
in Proceedings of the International Workshop on Smalltalk Technologies
(IWST), 2015, pp. 5:1–5:9.
