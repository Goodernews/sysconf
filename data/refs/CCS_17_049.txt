[1] “Facebook app-speciic ids,” https://developers.facebook.com/docs/graph-api/ reference/user/.
[2] Hypertext transfer protocol. https://www.w3.org/Protocols/rfc2616/rfc2616. html. Last accessed in May 2017.
[3] “Plain text ofenders,” last accessed in May 2017.
[4] “Robotium,” https://code.google.com/p/robotium/, last accessed in May 2017.
[5] “Using burp proxy,” https://portswigger.net/burp/help/proxy_using.html, last
accessed in May 2017.
[6] “Xposed module repository,” http://repo.xposed.info/.
[7] “Ui/application exerciser monkey,” https://developer.android.com/tools/help/
monkey.html, 2017.
[8] S. Anand, M. Naik, M. J. Harrold, and H. Yang, “Automated concolic testing
of smartphone apps,” in Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Sotware Engineering, ser. FSE ’12. New York, NY, USA: ACM, 2012, pp. 59:1–59:11.
[9] S. Arzt, S. Rasthofer, C. Fritz, E. Bodden, A. Bartel, J. Klein, Y. Le Traon, D. Octeau, and P. McDaniel, “Flowdroid: Precise context, low, ield, object- sensitive and lifecycle-aware taint analysis for android apps,” in Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation, ser. PLDI ’14. New York, NY, USA: ACM, 2014, pp. 259–269.
[10] G. Bai, J. Lei, G. Meng, S. S. Venkatraman, P. Saxena, J. Sun, Y. Liu, and J. S. Dong, “Authscan: Automatic extraction of web authentication protocols from implementations.” in NDSS, 2013.
[11] A. Barth, C. Jackson, and J. C. Mitchell, “Robust defenses for cross-site request forgery,” in Proceedings of the 15th ACM conference on Computer and communi- cations security. ACM, 2008, pp. 75–88.
[12] E. Bauman, Y. Lu, and Z. Lin, “Half a century of practice: Who is still storing plaintext passwords?” in Proceedings of the 11th International Conference on Information Security Practice and Experience, Beijing, China, May 2015.
[13] M. Beddoe, “he protocol informatics project,” 2017, https://github.com/ wolever/Protocol- Informatics.
[14] J. Caballero and D. Song, “Polyglot: Automatic extraction of protocol format using dynamic binary analysis,” in Proceedings of the 14th ACM Conference on Computer and and Communications Security (CCS’07), Alexandria, Virginia, USA, 2007, pp. 317–329.
[15] E. Y. Chen, Y. Pei, S. Chen, Y. Tian, R. Kotcher, and P. Tague, “Oauth demystiied for mobile application developers,” in Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2014, pp. 892– 903.
[16] A. Continella, Y. Fratantonio, M. Lindorfer, A. Pucceti, A. Zand, C. Kruegel, and G. Vigna, “Obfuscation-resilient privacy leak detection for mobile apps through
diferential analysis,” in Proceedings of the ISOC Network and Distributed System
Security Symposium (NDSS), 2017, pp. 1–16.
[17] W. Cui, J. Kannan, and H. J. Wang, “Discoverer: Automatic protocol reverse
engineering from network traces,” in Proceedings of the 16th USENIX Security
Symposium (Security’07), Boston, MA, August 2007.
[18] W. Cui, M. Peinado, K. Chen, H. J. Wang, and L. Irun-Briz, “Tupni: Automatic
reverse engineering of input formats,” in Proceedings of the 15th ACM Conference on Computer and Communications Security (CCS’08), Alexandria, Virginia, USA, October 2008, pp. 391–402.
[19] M. Dalton, C. Kozyrakis, and N. Zeldovich, “Nemesis: Preventing authentica- tion & access control vulnerabilities in web applications.” in USENIX Security Symposium, 2009, pp. 267–282.
[20] J. Franks, P. Hallam-Baker, J. Hostetler, S. Lawrence, P. Leach, A. Luotonen, and L. Stewart, “Htp authentication: Basic and digest access authentication,” Tech. Rep., 1999.
[21] W. G. Halfond, J. Viegas, and A. Orso, “A classiication of sql-injection atacks and countermeasures,” in Proceedings of the IEEE International Symposium on Secure Sotware Engineering, vol. 1. IEEE, 2006, pp. 13–15.
[22] Z. Lin, X. Jiang, D. Xu, and X. Zhang, “Automatic protocol format reverse engineering through context-aware monitored execution,” in Proceedings of the 15th Annual Network and Distributed System Security Symposium (NDSS’08), San Diego, CA, February 2008.
[23] Z. Lin and X. Zhang, “Deriving input syntactic structure from execution,” in
Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations
of Sotware Engineering (FSE’08), Atlanta, GA, USA, November 2008.
[24] L. Lu, Z. Li, Z. Wu, W. Lee, and G. Jiang, “Chex: statically veting android apps for component hijacking vulnerabilities,” in Proceedings of the 2012 ACM conference on Computer and communications security. ACM, 2012, pp. 229–240.
[25] J. Ma, K. Levchenko, C. Kreibich, S. Savage, and G. M. Voelker, “Unexpected means of protocol inference,” in Proceedings of the 6th ACM SIGCOMM on Internet measurement (IMC’06). Rio de Janeriro, Brazil: ACM Press, 2006, pp.
313–326.
[26] A. Machiry, R. Tahiliani, and M. Naik, “Dynodroid: An input generation system
for android apps,” in Proceedings of the 2013 9th Joint Meeting on Foundations of
Sotware Engineering. ACM, 2013, pp. 224–234.
[27] A. Memon, I. Banerjee, and A. Nagarajan, “Gui ripping: Reverse engineering
of graphical user interfaces for testing,” in Proceedings of the 10th Working Conference on Reverse Engineering, ser. WCRE ’03. Washington, DC, USA: IEEE Computer Society, 2003, pp. 260–.
[28] P. Milani Compareti, G. Wondracek, C. Kruegel, and E. Kirda, “Prospex: Protocol Speciication Extraction,” in IEEE Symposium on Security & Privacy, Oakland, CA, 2009, pp. 110–125.
[29] N. Mirzaei, S. Malek, C. S. Păsăreanu, N. Esfahani, and R. Mahmood, “Testing android apps through symbolic execution,” ACM SIGSOFT Sotware Engineering Notes, vol. 37, no. 6, pp. 1–5, 2012.
[30] S. B. Needleman and C. D. Wunsch, “A general method applicable to the search for similarities in the amino acid sequence of two proteins,” Journal of molecular biology, vol. 48, no. 3, pp. 443–453, 1970.
[31] B. Nguyen, B. Robbins, I. Banerjee, and A. Memon, “Guitar: an innovative tool for automated testing of gui-driven sotware,” Automated Sotware Engineering, pp. 1–41, 2013.
[32] E. I. Organick, he multics system: an examination of its structure. MIT press,
1972.
[33] G. Pellegrino and D. Balzaroti, “Toward black-box detection of logic laws in
web applications.” in NDSS, 2014.
[34] V. Rastogi, Y. Chen, and W. Enck, “AppsPlayground: Automatic Security
Analysis of Smartphone Applications,” in hird ACM Conference on Data and
Application Security and Privacy, 2013.
[35] D. Sounthiraraj, J. Sahs, G. Greenwood, Z. Lin, and L. Khan, “Smv-hunter:
Large scale, automated detection of ssl/tls man-in-the-middle vulnerabilities in android apps,” in Proceedings of the 21st Annual Network and Distributed System Security Symposium (NDSS’14), San Diego, CA, February 2014.
[36] S.-T. Sun and K. Beznosov, “he devil is in the (implementation) details: an empirical analysis of oauth sso systems,” in Proceedings of the 2012 ACM conference on Computer and communications security. ACM, 2012, pp. 378–390.
[37] P. Vogt, F. Nentwich, N. Jovanovic, E. Kirda, C. Kruegel, and G. Vigna, “Cross site scripting prevention with dynamic data tainting and static analysis.” in NDSS, vol. 2007, 2007, p. 12.
[38] R. Wang, S. Chen, and X. Wang, “Signing me onto your accounts through facebook and google: A traic-guided security study of commercially deployed single-sign-on web services,” in Security and Privacy (SP), 2012 IEEE Symposium on. IEEE, 2012, pp. 365–379.
[39] R. Wang, S. Chen, X. Wang, and S. Qadeer, “How to shop for free online–security analysis of cashier-as-a-service based web stores,” in Security and Privacy (SP), 2011 IEEE Symposium on. IEEE, 2011, pp. 465–480.
813
[40] R. Wang, Y. Zhou, S. Chen, S. Qadeer, D. Evans, and Y. Gurevich, “Explicating sdks: Uncovering assumptions underlying secure authentication and authoriza- tion.” in USENIX Security, vol. 13, 2013.
[41] G. Wondracek, P. Milani, C. Kruegel, and E. Kirda, “Automatic network protocol analysis,” in Proceedings of the 15th Annual Network and Distributed System Security Symposium (NDSS’08), San Diego, CA, February 2008.
[42] M. Y. Wong and D. Lie, “Intellidroid: A targeted input generator for the dynamic analysis of android malware,” in Proceedings of the 21st Annual Network and Distributed System Security Symposium (NDSS’16), San Diego, CA, February 2016.
[43] L. Xing, Y. Chen, X. Wang, and S. Chen, “Integuard: Toward automatic protection of third-party web service integrations.” in NDSS, 2013.
[44] L. Xing, X. Pan, R. Wang, K. Yuan, and X. Wang, “Upgrading your android, elevating my malware: Privilege escalation through mobile os updating,” in Proceedings of the 2014 IEEE Symposium on Security and Privacy, ser. SP ’14. Washington, DC, USA: IEEE Computer Society, 2014, pp. 393–408.
[45] Y. Zhou and D. Evans, “Ssoscan: Automated testing of web applications for single sign-on vulnerabilities.” in USENIX Security, 2014, pp. 495–510.
[46] C. Zuo and Z. Lin, “Exposing server urls of mobile apps with selective symbolic execution,” in Proceedings of the 26th World Wide Web Conference, Perth, Aus- tralia, April 2017.
[47] C. Zuo, W. Wang, R. Wang, and Z. Lin, “Automatic forgery of cryptographically consistent messages to identify security vulnerabilities in mobile services,” in Proceedings of the 21st Annual Network and Distributed System Security Symposium (NDSS’16), San Diego, CA, February 2016.
