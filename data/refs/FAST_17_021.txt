[1] Antoine Potten. Ant renamer, 2016. http://www.
antp.be/ software/ renamer.
[2] Vaggelis Atlidakis, Jeremy Andrus, Roxana Geambasu, Dimitris Mitropoulos, and Jason Nieh.
POSIX abstractions in modern operating systems:
The old, the new, and the missing. In Proceedings
of the Eleventh European Conference on Computer
Systems, page 19. ACM, 2016.
[3] J. Axboe. CFQ IO scheduler, 2007.
http://mirror.linux.org.au/ pub/linux.conf.au/ 2007/
video/talks/ 123.ogg.
[4] A. Batsakis, R. Burns, A. Kanevsky, J. Lentini, and
T. Talpey. CA-NFS: A congestion-aware network
file system. ACM Transaction on Storage, 5(4),
2009.
[5] M. Belshe, R. Peon, and M. Thomson. Hypertext
Transfer Protocol Version 2 (HTTP/2). RFC 7540,
Internet Engineering Task Force, May 2015.
[6] John Bent, Douglas Thain, Andrea C. ArpaciDusseau, Remzi H. Arpaci-Dusseau, and Miron
Livny. Explicit control in the batch-aware distributed file system. In NSDI, pages 365–378,
2004.
[7] B. Callaghan, B. Pawlowski, and P. Staubach. NFS
Version 3 Protocol Specification. RFC 1813, Network Working Group, June 1995.
[8] M. Chen, D. Hildebrand, G. Kuenning,
S. Shankaranarayana, B. Singh, and E. Zadok.
Newer is sometimes better: An evaluation of
NFSv4.1. In Proceedings of the 2015 ACM
International Conference on Measurement and
Modeling of Computer Systems (SIGMETRICS
2015), Portland, OR, June 2015. ACM.
[9] M. Chen, A. Vasudevan, K. Wang, and E. Zadok.
SeMiNAS: A secure middleware for wide-area
network-attached storage. In Proceedings of the
9th ACM International Systems and Storage Conference (ACM SYSTOR ’16), Haifa, Israel, June
2016. ACM.
[10] Stuart Cheshire. TCP performance problems
caused by interaction between Nagle’s algorithm
and delayed ACK, May 2005.
[11] Philippe Deniel. GANESHA, a multi-usage with
large cache NFSv4 server. www.usenix.org/ events/
fast07/wips/ deniel.pdf, 2007.
[12] Philippe Deniel, Thomas Leibovici, and JacquesCharles Lafoucriere. GANESHA, a multi-usage `
with large cache NFSv4 server. In Linux Symposium, page 113, 2007.
[13] D. Duchamp. Optimistic lookup of whole NFS
paths in a single operation. In Proceedings of
the Summer 1994 USENIX Technical Conference,
pages 143–170, Boston, MA, June 1994.
[14] D. Ellard and M. Seltzer. NFS tricks and benchmarking traps. In Proceedings of the Annual
USENIX Technical Conference, FREENIX Track,
pages 101–114, San Antonio, TX, June 2003.
USENIX Association.
[15] Filebench, 2016. https:// github.com/filebench/
filebench/wiki.
[16] S. Han, S. Marshall, B. Chun, and S. Ratnasamy.
MegaPipe: A new programming interface for scalable network I/O. In The 10th USENIX Symposium
on Operating Systems Design and Implementation
(OSDI 12), 2012.
[17] T. Haynes. NFS version 4 minor version
2 protocol. RFC draft, Network Working
Group, September 2015. https://tools.ietf.org/ html/
draft-ietf-nfsv4-minorversion2-39.
[18] D. Hildebrand and P. Honeyman. Exporting storage systems in a scalable manner with pNFS. In
Proceedings of MSST, Monterey, CA, 2005. IEEE.
[19] D. Howells. FS-Cache: A Network Filesystem
Caching Facility. In Proceedings of the 2006 Linux
Symposium, volume 2, pages 427–440, Ottawa,
Canada, July 2006. Linux Symposium.
[20] HTTP Archive. URL statistics, September 2016.
http:// httparchive.org/trends.php.
[21] J. Nagle. Congestion control in IP/TCP internetworks. RFC 896, Network Working Group, January 1984.
[22] Jason Fitzpatrick. Bulk rename utility, 2016. http:
//www.bulkrenameutility.co.uk/Main Intro.php.
[23] Chet Juszczak. Improving the write performance
of an NFS server. In Proceedings of the USENIX
Winter 1994 Technical Conference, WTEC’94, San
Francisco, California, 1994. USENIX Association.
[24] Kim Jensen. AdvancedRenamer, 2016. https:
//www.advancedrenamer.com/.
[25] Chuck Lever. Close-to-open cache consistency in
the Linux NFS client. http:// goo.gl/ o9i0MM.
[26] Linux Programmer’s Manual. lio listio, September 2016. http://man7.org/linux/man-pages/man3/
lio listio.3.html.
[27] Linux man pages. ftw(3) - file tree walk. http://
linux.die.net/man/ 3/ ftw.
[28] Linux man pages. open(2) - open and possibly create a file or device. http://linux.die.net/man/ 2/ open.
[29] Alex McDonald. The background to NFSv4.1. ;login: The USENIX Magazine, 37(1):28–35, February 2012.
[30] NFS-Ganesha, 2016. http:// nfs-ganesha.github.io/.
[31] nghttp2. nghttp2: HTTP/2 C library, September
2016. http:// nghttp2.org.
[32] A. Purohit, C. Wright, J. Spadavecchia, and
E. Zadok. Cosy: Develop in user-land, run in kernel mode. In Proceedings of the 2003 ACM Workshop on Hot Topics in Operating Systems (HotOS
IX), pages 109–114, Lihue, Hawaii, May 2003.
USENIX Association.
[33] Stephen M. Rumble, Diego Ongaro, Ryan
Stutsman, Mendel Rosenblum, and John K.
Ousterhout. It’s time for low latency. In Proceedings of the 13th USENIX Conference on Hot Topics
in Operating Systems, 2011.
[34] S. Shepler and M. Eisler and D. Noveck. NFS Version 4 Minor Version 1 Protocol. RFC 5661, Network Working Group, January 2010.
[35] S. Shepler, B. Callaghan, D. Robinson, R. Thurlow,
C. Beame, M. Eisler, and D. Noveck. NFS version
4 protocol. RFC 3530, Network Working Group,
April 2003.
[36] SPEC. SPEC SFS97 R1 V3.0. www.spec.org/
sfs97r1, September 2001.
[37] David C. Steere. Exploiting the non-determinism
and asynchrony of set iterators to reduce aggregate file I/O latency. In Proceedings of the Ninth
ACM Symposium on Operating Systems Principles,
SOSP ’97, 1997.
[38] Sun Microsystems. NFS: Network file system protocol specification. RFC 1094, Network Working
Group, March 1989.
[39] V. Tarasov, A. Gupta, K. Sourav, S. Trehan, and
E. Zadok. Terra incognita: On the practicality of
user-space file systems. In HotStorage ’15: Proceedings of the 7th USENIX Workshop on Hot Topics in Storage, Santa Clara, CA, July 2015.
[40] V. Tarasov, E. Zadok, and S. Shepler. Filebench: A
flexible framework for file system benchmarking.
;login: The USENIX Magazine, 41(1):6–12, March
2016.
[41] Vijay Vasudevan, David G. Andersen, and Michael
Kaminsky. The case for VOS: The vector operating
system. In Proceedings of the 13th USENIX Conference on Hot Topics in Operating Systems, HotOS’13, pages 31–31, Berkeley, CA, USA, 2011.
USENIX Association.
[42] Vijay Vasudevan, Michael Kaminsky, and
David G. Andersen. Using vector interfaces
to deliver millions of IOPS from a networked
key-value storage server. In Proceedings of the 3rd
ACM Symposium on Cloud Computing, SoCC ’12,
2012.
[43] M. Vilayannur, S. Lang, R. Ross, R. Klundt, and
L. Ward. Extending the POSIX I/O interface: A
parallel file system perspective. Technical Report ANL/MCS-TM-302, Argonne National Laboratory, October 2008.
[44] M. Mitchell Waldrop. The chips are down for
Moore’s law. Nature, 530(7589):144–147, 2016.
[45] Werner Beroux. Rename-It!, 2016. https:// github.
com/wernight/ renameit.
[46] Filebench Workload Model Language (WML),
2016. https:// github.com/filebench/filebench/wiki/
Workload-Model-Language.
