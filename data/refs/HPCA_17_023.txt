1] 2012 memory scheduling championship (msc). http://www.cs.utah.edu/
∼rajeev/jwac12/. Accessed: 2016-07-01.
[2] A. Arasu and R. Kaushik, “Oblivious query processing”, In arXiv
preprint arXiv:1312.4012, 2013.
[3] N. Chatterjee, R. Balasubramonian, M. Shevgoor, S. Pugsley, A. Udipi,
A. Shaﬁee, K. Sudan, M. Awasthi, and Z. Chishti, “Usimm: the utah
simulated memory module”, In University of Utah, TR, 2012.
[4] S. Chen, R. Wang, X. Wang, and K. Zhang, “Side-channel leaks in
web applications: A reality today, a challenge tomorrow”, In IEEE
Symposium on Security and Privacy, 2010.
[5] K. V. Craeynest, S. Akram, W. Heirman, A. Jaleel, and L. Eeckhout,
“Fairness-aware scheduling on single-ISA heterogeneous multi-cores”,
In International Conference on Parallel Architectures and Compilation
Techniques (PACT), 2013.
[6] A. Ferraiuolo, Y. Wang, D. Zhang, A. C. Myers, and G. E. Suh,
“Lattice priority scheduling: Low-overhead timing-channel protection
for a shared memory controller”, In IEEE International Symposium on
High Performance Computer Architecture (HPCA), 2016.
[7] C. W. Fletcher, M. van Dijk, and S. Devadas, “A secure processor
architecture for encrypted computation on untrusted programs”, In ACM
workshop on Scalable trusted computing, 2012.
[8] C. W. Fletcher, L. Ren, A. Kwon, M. van Dijk, and S. Devadas, “Freecursive oram:[nearly] free recursion and integrity veriﬁcation for positionbased oblivious ram”, In ACM International Conference on Architectural
Support for Programming Languages and Operating Systems (ASPLOS),
2015.
[9] O. Goldreich, “Towards a theory of software protection and simulation
by oblivious rams”, In ACM Symposium on Theory of Computing
(STOC), 1987.
[10] O. Goldreich and R. Ostrovsky, “Software protection and simulation on
oblivious rams”, Journal of the ACM (JACM), 1996.
[11] ISO. Iso/iec 11889-1:2009. Technical Report, International Organization
for Standardization, 2013.

[12] D. Lie, C. Thekkath, M. Mitchell, P. Lincoln, D. Boneh, J. Mitchell,
and M. Horowitz, “Architectural support for copy and tamper resistant
software”, In ACM International Conference on Architectural Support
for Programming Languages and Operating Systems (ASPLOS), 2000.
[13] F. Liu, Q. Ge, Y. Yarom, F. Mckeen, C. Rozas, G. Heiser, and R. B
Lee, “Catalyst: Defeating last-level cache side channel attacks in cloud
computing”, In IEEE International Symposium on High Performance
Computer Architecture (HPCA), 2016.
[14] F. Liu, Y. Yarom, Q. Ge, G. Heiser, and R. B Lee, “Last-level cache
side-channel attacks are practical”, In IEEE Symposium on Security and
Privacy, 2015.
[15] M. Maas, E. Love, E. Stefanov, M. Tiwari, E. Shi, K. Asanovic, J.
Kubiatowicz, and D. Song, “Phantom: Practical oblivious computation
in a secure processor”, In ACM SIGSAC Conference on Computer &
Communications Security (CCS), 2013.
[16] F. McKeen, I. Alexandrovich, A. Berenzon, C. V. Rozas, H. Shaﬁ,
V. Shanbhogue, and U. R. Savagaonkar, “Innovative instructions and
software model for isolated execution”, In International Workshop on
Hardware and Architectural Support for Security and Privacy (HASP),
2013.
[17] O. Mutlu and T. Moscibroda, “Stall-time fair memory access scheduling
for chip multiprocessors”, In IEEE/ACM International Symposium on
Microarchitecture (MICRO), 2007.
[18] O. Mutlu and T. Moscibroda, “Parallelism-aware batch scheduling:
Enhancing both performance and fairness of shared DRAM systems”,
In International Symposium on Computer Architecture (ISCA), 2008.
[19] L. Ren, X. Yu, C. W. Fletcher, M. Van Dijk, and S. Devadas, “Design
space exploration and optimization of path oblivious ram in secure
processors”, In ACM International Symposium on Computer Architecture
(ISCA), 2013.
[20] S. Rixner, “Memory controller optimizations for web servers”, In
IEEE/ACM International Symposium on Microarchitecture (MICRO),
2004.
[21] S. Rixner, W. J Dally, U. J Kapasi, P. Mattson, and J. D Owens.
“Memory access scheduling,” In International Symposium on Computer
Architecture (ISCA), 2000.
[22] E. Stefanov and E. Shi, “Oblivistore: High performance oblivious cloud
storage”, In IEEE Symposium on Security and Privacy (S&P), 2013.
[23] E. Stefanov, M. Van Dijk, E. Shi, C. Fletcher, L. Ren, X. Yu, and S.
Devadas, “Path oram: an extremely simple oblivious ram protocol”, In
ACM SIGSAC Conference on Computer & Communications Security
(CCS), 2013.
[24] G.E. Suh, D. Clarke, B. Gassend, M. van Dijk, and S. Devadas, “Efﬁcient
Memory Integrity Veriﬁcation and Encryption for Secure Processors”, In
the 36th International Symposium on Microarchitecture (MICRO), 2003.
[25] G. E. Suh, C. W. O’Donnell, I. Sachdev, and S. Devadas, “Design
and Implementation of the AEGIS Single-Chip Secure Processor Using
Physical Random Functions”, In International Symposium on Computer
Architecture (ISCA), 2005.
[26] Nexus Technology. Ma5100/4100 series memory analyzer. http://www.
nexustechnology.com/.
[27] Y. Wang, A. Ferraiuolo, and G. E. Suh, “Timing channel protection for
a shared memory controller”, In 2014 IEEE International Symposium
on High Performance Computer Architecture (HPCA), 2014.
[28] P. Williams, R. Sion, and A. Tomescu, “Privatefs: A parallel oblivious
ﬁle system”, In ACM Conference on Computer and Communications
Security (CCS), 2012.
[29] J. Yang, Y. Zhang, and L. Gao, “Fast Secure Processor for Inhibiting
Software Piracy and Tampering”, In IEEE/ACM International Symposium on Microarchitecture (MICRO), 2003.
[30] X. Yu, S. K. Haider, L. Ren, C. Fletcher, A. Kwon, M. v. Dijk,
and S. Devadas, “Proram: dynamic prefetcher for oblivious ram”, In
International Symposium on Computer Architecture (ISCA), 2015.
[31] X. Zhang, G. Sun, C. Zhang, W. Zhang, Y. Liang, T. Wang, Y. Chen,
and J. Di, “Fork path: improving efﬁciency of oram by removing
redundant memory accesses”, In IEEE/ACM International Symposium
on Microarchitecture (MICRO), 2015.
[32] X. Zhuang, T. Zhang, and S. Pande, “Hide: an infrastructure for
efﬁciently protecting information leakage on the address bus”, In ACM
International Conference on Architectural Support for Programming
Languages and Operating Systems (ASPLOS), 2004.