[1] K. Asanovic et al. A View of the Parallel Computing
Landscape. In Communications of the ACM, 52(10): 56–67,
October 2009.
[2] R. Ausavarungnirun, S. Ghose, O. Kayiran, G. H. Loh, C. R.
Das, M. T. Kandemir, and O. Mutlu. Exploiting Inter-Warp
Heterogeneity to Improve GPGPU Performance. In Proceedings of the International Conference on Parallel Architecture
and Compilation Techniques, pages 25–38, October 2015.
[3] R. Ausavarungnirun, K. K-W. Chang, L. Subramanian, G. H.
Loh, and O. Mutlu. Staged Memory Scheduling: Achieving
High Performance and Scalability in Heterogeneous Systems.
In Proceedings of the 39th International Symposium on
Computer Architecture, pages 416–427, June 2012.
[4] D. Bouvier, B. Cohen, W. Fry, S. Godey, and M. Mantor.
Kabini: An AMD Accelerated Processing Unit System on a
Chip. In IEEE Micro, 34(2):22–33, March/April 2014.
[5] N. Chatterjee, M. O’Connor, G. H. Loh, N. Jayasena, and
R. Balasubramonian. Managing DRAM Latency Divergence
in Irregular GPGPU Applications. In Proceedings of the
International Conference for High Performance Computing,
Networking, Storage and Analysis, pages 128–139, November
2014.
[6] M. Demler. Iris Pro Takes On Discrete GPUs. In Microprocessor Report, September 9, 2013.
[7] E. Ebrahimi, C. J. Lee, O. Mutlu, and Y. N. Patt. Fairness
via Source Throttling: A Conﬁgurable and High-performance
Fairness Substrate for Multi-core Memory Systems. In Proceedings of the 15th International Conference on Architectural Support for Programming Languages and Operating
Systems, pages 335–346, March 2010.
[8] H. Esmaeilzadeh, E. R. Blem, R. S. Amant, K. Sankaralingam, and D. Burger. Dark Silicon and the End of
Multicore Scaling. In Proceedings of the 38th International
Symposium on Computer Architecture, pages 365–376, June
2011.
[9] P. Hammarlund, A. J. Martinez, A. A. Bajwa, D. L. Hill, E.
Hallnor, J. Hong, M. Dixon, M. Derr, M. Hunsaker, R. Kumar,
R. B. Osborne, R. Rajwar, R. Singhal, R. D’Sa, R. Chappell,
S. Kaushik, S. Chennupaty, S. Jourdan, S. Gunther, T. Piazza,
and T. Burton. Haswell: The Fourth Generation Intel Core
Processor. In IEEE Micro, 34(2):6–20, March/April 2014.
[10] A. Jaleel, K. B. Theobald, S. C. Steely Jr., and J. Emer. High
Performance Cache Replacement using Re-reference Interval
Prediction (RRIP). In Proceedings of the 37th International
Symposium on Computer Architecture, pages 60–71, June
2010.
[11] M. K. Jeong, M. Erez, C. Sudanthi, and N. C. Paver. A QoSaware memory controller for dynamically balancing GPU and
CPU bandwidth use in an MPSoC. In Proceedings of the 49th
Annual Design Automation Conference, pages 850–855, June
2012.
[12] A. Jog, O. Kayiran, A. K. Mishra, M. T. Kandemir, O.
Mutlu, R. Iyer, and C. R. Das. Orchestrated Scheduling
and Prefetching for GPGPUs. In Proceedings of the 40th
International Symposium on Computer Architecture, pages
332–343, June 2013.
[13] A. Jog, O. Kayiran, N. C. Nachiappan, A. K. Mishra, M.
T. Kandemir, O. Mutlu, R. Iyer, and C. R. Das. OWL:
Cooperative Thread Array Aware Scheduling Techniques for
Improving GPGPU Performance. In Proceedings of the 18th
International Conference on Architectural Support for Programming Languages and Operating Systems, pages 395–
406, March 2013.
[14] A. Jog, O. Kayiran, A. Pattnaik, M. T. Kandemir, O. Mutlu,
R. Iyer, and C. R. Das. Exploiting Core Criticality for Enhanced GPU Performance. In Proceedings of the International
Conference on Measurement and Modeling of Computer
Science (SIGMETRICS), pages 351–363, June 2016.
[15] D. Kanter. Intel’s Ivy Bridge Graphics Architecture. April
2012. Available at http://www.realworldtech.com/ivy-bridgegpu/.
[16] D. Kanter. Intel’s Sandy Bridge Graphics Architecture. August 2011. Available at http://www.realworldtech.com/sandybridge-gpu/.
[17] D. Kanter. AMD Fusion Architecture and Llano. June 2011.
Available at http://www.realworldtech.com/fusion-llano/.
[18] O. Kayiran, N. C. Nachiappan, A. Jog, R. Ausavarungnirun,
M. T. Kandemir, G. H. Loh, O. Mutlu, and C. R. Das.
Managing GPU Concurrency in Heterogeneous Architectures.
In Proceedings of the 47th International Symposium on
Microarchitecture, pages 114–126, December 2014.
[19] O. Kayiran, A. Jog, M. T. Kandemir, and C. R. Das. Neither
More nor Less: Optimizing Thread-level Parallelism for GPGPUs. In Proceedings of the 22nd International Conference
on Parallel Architectures and Compilation Techniques, pages
157–166, September 2013.
[20] N. B. Lakshminarayana, J. Lee, H. Kim, and J. Shin. DRAM
Scheduling Policy for GPGPU Architectures Based on a
Potential Function. In IEEE Computer Architecture Letters,
11(2): 33–36, July 2012.
[21] S-Y. Lee, A. Arunkumar, and C-J. Wu. CAWA: Coordinated
Warp Scheduling and Cache Prioritization for Critical Warp
Acceleration of GPGPU Workloads. In Proceedings of the
42nd International Symposium on Computer Architecture,
pages 515–527, June 2015.
[22] S-Y. Lee and C-J. Wu. CAWS: Criticality-aware Warp
Scheduling for GPGPU Workloads. In Proceedings of the
International Conference on Parallel Architectures and Compilation Techniques, pages 175–186, August 2014.
[23] J. Lee and H. Kim. TAP: A TLP-aware Cache Management Policy for a CPU-GPU Heterogeneous Architecture. In
Proceedings of the 18th International Symposium on High
Performance Computer Architecture, pages 91–102, February
2012.
[24] V. Mekkat, A. Holey, P-C. Yew, and A. Zhai. Managing
Shared Last-level Cache in a Heterogeneous Multicore Processor. In Proceedings of the 22nd International Conference
on Parallel Architectures and Compilation Techniques, pages
225–234, September 2013.
[25] P. Messmer. Interactive Supercomputing with InSitu Visualization on Tesla GPUs. Available at
https://devblogs.nvidia.com/parallelforall/interactivesupercomputing-in-situ-visualization-tesla-gpus/.
[26] V. Moya, C. Gonzalez, J. Roca, A. Fernandez,
and R. Espasa. ATTILA: A Cycle-Level ExecutionDriven Simulator for Modern GPU Architectures. In
Proceedings of the IEEE International Symposium on
Performance Analysis of Systems and Software, pages
231–241, March 2006. Source and traces available at
http://attila.ac.upc.edu/wiki/index.php/Main Page.

[27] S. P. Muralidhara, L. Subramanian, O. Mutlu, M. T. Kandemir, and T. Moscibroda. Reducing Memory Interference in
Multicore Systems via Application-aware Memory Channel
Partitioning. In Proceedings of the 44th International Symposium on Microarchitecture, pages 374–385, December 2011.
[28] N. C. Nachiappan, P. Yedlapalli, N. Soundararajan, M. T.
Kandemir, A. Sivasubramaniam, and C. R. Das. GemDroid: A
Framework to Evaluate Mobile Platforms. In Proceedings of
the International Conference on Measurement and Modeling
of Computer Systems (SIGMETRICS), pages 355–366, June
2014.
[29] T. Olson. Mali 400 MP: A Scalable GPU for Mobile and
Embedded Devices. In Symposium on High-Performance
Graphics, June 2010.
[30] T. Piazza. Intel Processor Graphics. In Symposium on HighPerformance Graphics, August 2012.
[31] S. Rai and M. Chaudhuri. Exploiting Dynamic Reuse Probability to Manage Shared Last-level Caches in CPU-GPU
Heterogeneous Processors. In Proceedings of the 30th International Conference on Supercomputing, June 2016.
[32] M. Ribble. Next-gen Tile-based GPUs. In Game Developers’
Conference, 2008.
[33] P. Rosenfeld, E. Cooper-Balis, and B. Jacob. DRAMSim2: A
Cycle Accurate Memory System Simulator. In IEEE Computer Architecture Letters, 10(1): 16–19, January-June 2011.
[34] T. Sherwood, E. Perelman, G. Hamerly, and B. Calder.
Automatically Characterizing Large Scale Program Behavior.
In Proceedings of the 10th International Conference on Architectural Support for Programming Languages and Operating
Systems, pages 45–57, October 2002.
[35] A. L. Shimpi. Intel Iris Pro 5200 Graphics Review:
Core i7-4950HQ Tested. June 2013. Available at
http://www.anandtech.com/show/6993/intel-iris-pro-5200graphics-review-core-i74950hq-tested.
[36] D. Shingari, A. Arunkumar, and C-J. Wu. Characterization
and Throttling-Based Mitigation of Memory Interference for
Heterogeneous Smartphones. In Proceedings of the International Symposium on Workload Characterization, pages 22–
33, October 2015.
[37] A. Stevens. QoS for High-performance and Power-efﬁcient
HD Multimedia. ARM White Paper, 2010.
[38] J. Stone. HPC Visualization on Nvidia Tesla GPUs.
Available at https://devblogs.nvidia.com/parallelforall/hpcvisualization-nvidia-tesla-gpus/.
[39] R. Ubal, B. Jang, P. Mistry, D. Schaa, and D. Kaeli.
Multi2Sim: A Simulation Framework for CPU-GPU Computing. In Proceedings of the 21st International Conference
on Parallel Architecture and Compilation Techniques, pages
335–344, September 2012.
[40] H. Usui, L. Subramanian, K. K-W. Chang, and O. Mutlu.
DASH: Deadline-Aware High-Performance Memory Scheduler for Heterogeneous Systems with Hardware Accelerators.
In ACM Transactions on Architecture and Code Optimization,
12(4), January 2016.
[41] J.
Walton.
The
AMD
Trinity
Review
(A104600M): A New Hope. May 2012. Available at
http://www.anandtech.com/show/5831/amd-trinity-reviewa10-4600m-a-new-hope/.
[42] M. Yuffe, E. Knoll, M. Mehalel, J. Shor, and T. Kurts. A
Fully Integrated Multi-CPU, GPU, and Memory Controller
32 nm Processor. In Proceedings of the International SolidState Circuits Conference, pages 264–266, February 2011.
[43] 2015 International Technology Roadmap for Semiconductors
(ITRS). http://www.semiconductors.org.
[44] 3D Mark Benchmark. http://www.3dmark.com/.