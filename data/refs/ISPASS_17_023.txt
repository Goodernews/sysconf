[1] P. Luszczek, J. J. Dongarra, D. Koester, R. Rabenseifner, B. Lucas,
J. Kepner, J. Mccalpin, D. Bailey, and D. Takahashi, “Introduction to
the hpc challenge benchmark suite,” tech. rep., 2005.
[2] A. M. Joshi, L. Eeckhout, L. K. John, and C. Isen, “Automated microprocessor stressmark generation,” in Proceedings of the 14th International Symposium on High Performance Computer Architecture(HPCA),
pp. 229–239, Feb 2008.
[3] G. Balakrishnan and Y. Solihin, “West: Cloning data cache behavior
using stochastic traces,” in Proceeding of the 18th International Symposium on High Performance Computer Architecture (HPCA), 2012.
[4] A. Awad and Y. Solihin, “Stm : Cloning the spatial and temporal memory
access behavior,” in Proceeding of the 20th International Symposium on
High Performance Computer Architecture(HPCA), 2014.
[5] S. Nussbaum and J. E. Smith, “Modeling superscalar processors via
statistical simulation,” in Proceedings of 2001 International Conference
on Parallel Architectures and Compilation Techniques, pp. 15–24, IEEE,
2001.
[6] L. Eeckhout, K. D. Bosschere, and H. Neefs, “Performance analysis
through synthetic trace generation,” in Proceedings of 2000 IEEE International Symposium on Performance Analysis of Systems and Software
(ISPASS), pp. 1–6, IEEE, 2000.
[7] R. H. B. Jr and L. K. John, “Improved automatic testcase synthesis
for performance model validation,” in Proceedings of the 19th annual
international conference on Supercomputing, pp. 111–120, ACM, 2005.
[8] L. Eeckhout, R. H. Bell, B. Stougie, K. D. Bosschere, and L. K.
John, “Control flow modeling in statistical simulation for accurate and
efficient processor design studies,” in Proceedings of the 31st Annual
International Symposium on Computer Architecture, pp. 350–361, 2004.
[9] A. Joshi, J. J. Yi, R. H. Bell, L. Eeckhout, L. John, and D. Lilja, “Evaluating the efficacy of statistical simulation for design space exploration,”
in Proceedings of 2006 IEEE International Symposium on Performance
Analysis of Systems and Software, pp. 70–79, March 2006.
[10] L. Eeckhout and K. D. Bosschere, “Early design phase
power/performance modeling through statistical simulation,” in
Proceedings of 2001 IEEE International Symposium on Performance
Analysis of Systems and Software (ISPASS), pp. 10–17, 2001.
[11] L. Eeckhout, S. Nussbaum, J. E. Smith, and K. D. Bosschere, “Statistical
simulation: adding efficiency to the computer designer’s toolbox,” IEEE
Micro, vol. 23, no. 5, pp. 26–38, 2003.
[12] M. Oskin, F. T. Chong, and M. Farrens, “Hls: Combining statistical and
symbolic simulation to guide microprocessor designs,” in Proceedings
of the 27th Annual International Symposium on Computer Architecture,
ISCA ’00, pp. 71–82, 2000.
[13] L. Eeckhout, Computer Architecture Performance Evaluation Methods.
Morgan and Claypool, 2010.

[14] A. Joshi, L. Eeckhout, R. H. B. Jr., and L. John, “Performance cloning:
A technique for disseminating proprietary applications as benchmarks,”
in Proceedings of 2006 IEEE International Symposium on Workload
Characterization, pp. 105–115, 2006.
[15] A. Joshi, L. Eeckhout, and L. John, “The return of synthetic benchmarks,” in Proceedings of the 2008 SPEC Benchmark Workshop, 2008.
[16] A. Joshi, L. Eeckhout, R. H. Bell, Jr., and L. K. John, “Distilling the
essence of proprietary workloads into miniature benchmarks,” ACM
Transactions on Architecture and Code Optimization (TACO), vol. 5,
pp. 10:1–10:33, Sept. 2008.
[17] R. H. B. Jr and L. K. John, “Efficient power analysis using synthetic
testcases,” in Proceedings of the International Workload Characterization Symposium (IISWC), IEEE, 2005.
[18] K. Ganesan, J. Jo, and L. K. John, “Synthesizing memory-level parallelism aware miniature clones for spec cpu2006 and implantbench workloads,” in Proceedings of the International Symposium on Performance
Analysis of Systems and Software (ISPASS), 2010.
[19] K. Ganesan and L. K. John, “Automatic generation of miniaturized
synthetic proxies for target applications to efficiently design multicore
processors,” IEEE Transactions on Computers, vol. 99, p. 1, 2013.
[20] E. Deniz, A. Sen, J. Holt, and B. Kahne, “Using software architectural
patterns for synthetic embedded multicore benchmark development,” in
Proceedings of the International Symposium on Workload Characterization (IISWC), 2012.
[21] G. Balakrishnan and Y. Solihin, “Memst: Cloning memory behavior
using stochastic traces,” in Proceedings of the 2015 International
Symposium on Memory Systems, MEMSYS ’15, pp. 146–157, 2015.
[22] M. Badr and N. Enright Jerger, “Synfull: Synthetic traffic models
capturing cache coherent behaviour,” in Proceedings of the International
Symposium on Computer Architecture (ISCA), 2014.
[23] Y. Wang, G. Balakrishnan, and Y. Solihin, “Metoo: Stochastic modeling
of memory traffic timing behavior,” in Proceedings of 2015 International
Conference on Parallel Architecture and Compilation (PACT), 2015.
[24] R. Panda, X. Zheng, and L. K. John, “Accurate address streams for
llc and beyond (slab): A methodology to enable system exploration,”
in Proceedings of 2013 IEEE International Symposium on Performance
Analysis of Systems and Software (ISPASS), 2017.
[25] A. Awad, G. Balakrishnan, Y. Wang, and Y. Solihin, “Accurate cloning of
the memory access behavior,” IPSJ Transactions on System LSI Design
Methodology, vol. 9, pp. 49–60, 2016.
[26] Y. Wang and Y. Solihin, “Emulating cache organizations on real hardware using performance cloning,” in Proceedings of 2015 IEEE International Symposium on Performance Analysis of Systems and Software
(ISPASS), 2015.
[27] L. Van Ertvelde and L. Eeckhout, “Dispersing proprietary applications
as benchmarks through code mutation,” in Proceedings of the 13th
International Conference on Architectural Support for Programming
Languages and Operating Systems, ASPLOS XIII, ACM, 2008.
[28] C. Luk, R. Cohn, R. Muth, H. Patil, A. Klauser, P. Lowney, S. Wallace, V. Reddi, and K. Hazelwood, “Pin: building customized program
analysis tools with dynamic instrumentation,” in Proceedings of the
ACM SIGPLAN 2005 Conference on Programming Language Design
and Implementation, 2005.
[29] “Memory characterization of workloads using instrumentation-driven
simulation.” http://www.jaleels.org/ajaleel/publications/SPECanalysis.
pdf. Accessed: 2017-3-6.
[30] N. P. Jouppi, “Improving direct-mapped cache performance by the
addition of a small fully-associative cache and prefetch buffers,” in
Proceedings of the 17th Annual International Symposium on Computer
Architecture, 1990.