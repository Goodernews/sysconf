[1] US Department of Energy, Office of Science,
Office of Advanced Scientific Computing Research. (2011, October) Tools for Exascale Computing: Challenges and Strategies. [Online]. Available: http://science.energy.gov/\∼/media/ascr/pdf/research/ cs/ExascaleWorkshop/Exascale\ Tools\ Workshop\ Report.pdf
[2] S. Zuckerman, J. Suetterlein, R. Knauerhase, and G. R. Gao, “Using a ”Codelet” Program Execution Model for Exascale Machines: Position Paper,” in Proceedings of the 1st International Workshop on Adaptive Self-Tuning Computing Systems for the Exaflop Era, ser. EXADAPT ’11. New York, NY, USA: ACM, 2011, pp. 64–69. [Online]. Available:http://doi.acm.org/10.1145/2000417.2000424
[3] J. Suettlerlein, S. Zuckerman, and G. R. Gao, Euro-Par 2013 Parallel Processing: 19th International Confer- ence, Aachen, Germany, August 26-30, 2013. Proceed- ings. Berlin, Heidelberg: Springer Berlin Heidelberg, 2013, ch. An Implementation of the Codelet Model,
pp. 633–644.
[4] T. G. Mattson, R. Cledat, V. Cav, V. Sarkar, Z. Budimli,
S. Chatterjee, J. Fryman, I. Ganev, R. Knauerhase, M. Lee, B. Meister, B. Nickerson, N. Pepperling, B. Seshasayee, S. Tasirlar, J. Teller, and N. Vrvilo, “The Open Community Runtime: A Runtime System for Extreme Scale Computing,” in 2016 IEEE High Performance Extreme Computing Conference (HPEC), Sept 2016, pp. 1–7.
[5] C. Lauderdale and R. Khan, “Towards a Codelet-based Runtime for Exascale Computing: Position Paper,” in Proceedings of the 2Nd International Workshop on Adaptive Self-Tuning Computing Systems for the Exaflop Era, ser. EXADAPT ’12. New York, NY, USA: ACM, 2012, pp. 21–26. [Online]. Available: http://doi.acm.org/10.1145/2185475.2185478
[6] OpenMP Architecture Review Board. (1998) OpenMP C and C++ Application Program Interface Version 1.0. [Online]. Available: http://www.openmp.org/ mp-documents/cspec10.pdf
[7] Clang Team. (2016, March) clang: a C language family Frontend for LLVM. [Online]. Available: http://www.clang.llvm.org
[8] University of Delaware - CAPSL. (2016, March) The Codelet Execution Model. [Online]. Available: http://www.capsl.udel.edu/codelets.shtml
[9] OpenMP Architecture Review Board. (2005) OpenMP Application Program Interface Version 2.5. [Online]. Available: http://www.openmp.org/mp-documents/ spec25.pdf
[10] ——. (2011) OpenMP Application Program Interface Version 3.1. [Online]. Available: http://www.openmp. org/mp-documents/OpenMP3.1.pdf
[11] L. Torczon and K. Cooper, Engineering A Compiler, 2nd ed. San Francisco, CA, USA: Morgan Kaufmann Publishers Inc., 2012.
[12] Georgia Institute of Technology. (2016, March) Graph500 Benchmark 1 (”Search”). [Online]. Available: http://www.graph500.org/sites/default/files/ files/graph500-2.1.4.tar.bz2
[13] NASA Advanced Supercomputing Division. (2016, May) NAS Parallel Benchmarks. [Online]. Available: http://www.nas.nasa.gov/publications/npb.html
[14] V. Harinarayan, A. Rajaraman, and J. D. Ullman, “Implementing Data Cubes Efficiently,” in Proceedings of the 1996 ACM SIGMOD International Conference on Management of Data, ser. SIGMOD ’96. New York, NY, USA: ACM, 1996, pp. 205–216. [Online].  Available: http://doi.acm.org/10.1145/233269.233333 
[15] Pacific Northwest National Laboratory. (2016, May) Hartree-Fock Theory for Molecules - NWCHEM. [Online]. Available: http://www.nwchem-sw.org/ index.php/Release65:Hartree-Fock\ Theory\ for\ Molecules
[16] ETI International Inc. (2016, March) NWChem SCF Module Description. [Online]. Available: https://wiki. modelado.org/images/0/08/SCF text document.docx 
[17] ——. (2016, March) DynAX - Extreme Scale Software Stack. [Online]. Available: https://wiki.modelado.org/ images/1/15/Scf.tar.gz
[18] DoE Exascale Co-Design Center for Materials in Extreme Environments. (2016, September) ExMatEx - Proxy Applications - CoMD. [Online]. Available: http://www.exmatex.org/comd.html
[19] K. Kimura, M. Mase, H. Mikami, T. Miyamoto, J. Shirako, and H. Kasahara, Languages and Compilers for Parallel Computing: 22nd International Workshop, LCPC 2009, Newark, DE, USA, October 8-10, 2009, Revised Selected Papers. Berlin, Heidelberg: Springer Berlin Heidelberg, 2010, ch. OSCAR API for Real-Time Low-Power Multicores and Its Performance on Multicores and SMP Servers, pp. 188–202. [Online]. Available: http://dx.doi.org/10.1007/978-3-642-13374-9 13
[20] T.-H. Weng, “Translation of openmp to dataflow ex- ecution model for data locality and efficient parallel execution,” Ph.D. dissertation, University of Houston, Houston, TX, USA, 2003.
[21] F. Broquedis, T. Gautier, and V. Danjean, OpenMP in a Heterogeneous World: 8th International Workshop on OpenMP, IWOMP 2012, Rome, Italy, June 11-13, 2012. Proceedings. Berlin, Heidelberg: Springer Berlin Heidelberg, 2012, ch. libKOMP, an Efficient OpenMP Runtime System for Both Fork-Join and Data Flow Paradigms, pp. 102–115.
[22] T. Gautier, J. V. F. Lima, N. Maillard, and B. Raffin, “Xkaapi: A runtime system for data-flow task programming on heterogeneous architectures,” in Proceedings of the 2013 IEEE 27th International Symposium on Parallel and Distributed Processing, ser. IPDPS ’13. Washington, DC, USA: IEEE Computer Society, 2013, pp. 1299–1308. [Online]. Available: http://dx.doi.org/10.1109/IPDPS.2013.66
[23] A. Pop and A. Cohen, “Openstream: Expressiveness and data-flow compilation of openmp streaming programs,” ACM Trans. Archit. Code Optim., vol. 9, no. 4, pp. 53:1–53:25, Jan. 2013. [Online]. Available: http://doi.acm.org/10.1145/2400682.2400712 
[24] Barcelona Supercomputing Center. (2017, January) The OmpSs Programming Model. [Online]. Available: https://pm.bsc.es/ompss
