[1] Andrew V. Adinetz and Dirk Pleiter. 2014. MHalloc: a highthroughput dynamic memory allocator for GPGPU architectures.
http://on-demand.gputechconf.com/gtc/2014/presentations/
$4271-halloc-high-throughput-dynamic-memory-allocator.pdf.
(2014).

[2] AMD. 2016. Reference Guide: Graphics Core Next Architecture,
Generation 3. (2016).

[3] DW Anderson, FJ Sparacio, and Robert M Tomasulo. 1967. The
IBM System/360 model 91: Machine philosophy and instructionhandling. IBM Journal of Research and Development 11, 1
(1967), 8-24.

[4] A. W. Appel, J. R. Ellis, and K. Li. 1988. Real-time Concurrent
Collection on Stock Multiprocessors. In Proceedings of the ACM
SIGPLAN 1988 Conference on Programming Language Design
and Implementation. ACM, 11-20.

[5] Andrew W. Appel and Kai Li. 1991. Virtual Memory Primitives for
User Programs. In Proceedings of the Fourth International Conference on Architectural Support for Programming Languages
and Operating Systems. ACM, 96-107.

[6] Sara S. Baghsorkhi, Isaac Gelado, Matthieu Delahaye, and Wenmei W. Hwu. 2012. Efficient Performance Evaluation of Memory
Hierarchy for Highly Multithreaded Graphics Processors. In Proceedings of the 17th ACM SIGPLAN Symposium on Principles
and Practice of Parallel Programming. ACM, 23-34.

[7] Daniel P Bovet and Marco Cesati. 2005. Understanding the Linux
kernel. ” O'Reilly Media, Inc.”.

[8] Roger A Bringmann, Scott A Mahlke, Richard E Hank, John C
Gyllenhaal, and Wen-mei W Hwu. 1993. Speculative execution
exception recovery using write-back suppression. In Microarchitecture, 1993., Proceedings of the 26th Annual International
Symposium on. IEEE, 214-223.

[9] Werner Buchholz. 1986. The IBM System/370 vector architecture.
IBM systems journal 25, 1 (1986), 51-62.

[10] Weihaw Chuang, Satish Narayanasamy, Ganesh Venkatesh, Jack
Sampson, Michael Van Biesbrouck, Gilles Pokam, Brad Calder,
and Osvaldo Colavin. 2006. Unbounded Page-based Transactional
Memory. In Proceedings of the 12th International Conference
on Architectural Support for Programming Languages and Operating Systems. ACM, 347-358.

[11] Mare de Kruijf and Karthikeyan Sankaralingam. 2011. Idempotent processor architecture. In Proceedings of the 44th Annual IEEE/ACM International Symposium on Microarchitecture.
ACM, 140-151.

[12] Roger Espasa, Federico Ardanaz, Joel Emer, Stephen Felix, Julio
Gago, Roger Gramunt, Isaac Hernandez, Toni Juan, Geoff Lowney,
Matthew Mattina, et al. 2002. Tarantula: a vector extension to the
alpha architecture. In Computer Architecture, 2002. Proceedings.
29th Annual International Symposium on. IEEE, 281-292.
[13] Roger Espasa, Mateo Valero, and James E Smith. 1997. Outof-order vector architectures. In Proceedings of the 30th annual ACM/IEEE international symposium on Microarchitecture.
IEEE Computer Society, 160-170.

[14] Robert Fitzgerald and Richard F Rashid. 1986. The integration
of virtual memory management and interprocess communication
in accent. ACM Transactions on Computer Systems (TOCS) 4,
2 (1986), 147-177.

[15] Mark Gebhart, Daniel R Johnson, David Tarjan, Stephen W
Keckler, William J Dally, Erik Lindholm, and Kevin Skadron.
2012. A hierarchical thread scheduler and register file for energyefficient throughput processors. ACM Transactions on Computer
Systems (TOCS) 30, 2 (2012), 8.

[16] Isaac Gelado, John H Kelm, Shane Ryoo, Steven S Lumetta, Nacho
Navarro, and Wen-mei W Hwu. 2008. CUBA: an architecture for
efficient CPU/co-processor data communication. In Proceedings
of the 22nd annual international conference on Supercomputing.
ACM, 299-308.

[17] Isaac Gelado, John E. Stone, Javier Cabezas, Sanjay Patel, Nacho
Navarro, and Wen-mei W. Hwu. 2010. An Asymmetric Distributed
Shared Memory Model for Heterogeneous Parallel Systems. In Proceedings of the Fifteenth Edition of ASPLOS on Architectural
Support for Programming Languages and Operating Systems
(ASPLOS XV). ACM, New York, NY, USA, 347-358.

[18] Wen-mei W. Hwu and Yale N Patt. 1987. Checkpoint repair for
out-of-order execution machines. In Proceedings of the 14th annual international symposium on Computer architecture. ACM,
18-26.

[19] Thomas B Jablin, James A Jablin, Prakash Prabhu, Feng Liu,
and David I August. 2012. Dynamically managed data for CPUGPU architectures. In Proceedings of the Tenth International
Symposium on Code Generation and Optimization. ACM, 165-—
174.

[20] Bruce L. Jacob and Trevor N. Mudge. 1998. A Look at Several Memory Management Units, TLB-refill Mechanisms, and
Page Table Organizations. In Proceedings of the Eighth International Conference on Architectural Support for Programming
Languages and Operating Systems. ACM, 295-306.

[21] Feng Ji, Heshan Lin, and Xiaosong Ma. 2013. RSVM: a regionbased software virtual memory for GPU. In Parallel Architectures
and Compilation Techniques (PACT), 2013 22nd International
Conference on. IEEE, 269-278.

[22] Shinpei Kato, Michael McThrow, Carlos Maltzahn, and Scott A
Brandt. 2012. Gdev: First-Class GPU Resource Management in
the Operating System.. In USENIX Annual Technical Conference.
401-412.

[23] Stephen W Keckler, Andrea Chang, WSLS Chatterjee, and
William J Dally. 1999. Concurrent event handling through multithreading. Computers, [EEE Transactions on 48, 9 (1999),
903-916.

[24] Kenji Kitagawa, Satoru Tagaya, Yasuhiko Hagihara, and Yasushi
Kanoh. 2003. A hardware overview of SX-6 and SX-7 supercomputer. NEC research & development 44, 1 (2003), 2-7.
[25] Christos Kozyrakis and David Patterson. 2003. Overcoming the
limitations of conventional vector processors. In Proceedings of
the 30th Annual International Symposium on Computer Architecture (ISCA ’03). ACM, 399-409.

[26] George Kyriazis. 2012. Heterogeneous System Architecture: A
Technical Review. http://amd-dev.wpengine.netdna-cdn.com/
wordpress/media/2012/10/hsal0.pdf. (2012).

[27] Chris Lattner and Vikram Adve. 2004. LLVM: A compilation
framework for lifelong program analysis & transformation. In Code
Generation and Optimization, 2004. CGO 2004. International
Symposium on. IEEE, 75-86.

[28] Janghaeng Lee, Mehrzad Samadi, and Scott Mahlke. 2014. VAST:
the illusion of a large memory space for GPUs. In Proceedings of
the 28rd international conference on Parallel architectures and
compilation. ACM, 443-454.

[29] Kai Li, J Naughton, and James Plank. 1990. Concurrent realtime checkpoint for parallel programs. In Proceedings of the 2nd
ACM SIGPLAN Symposium on Princiles & Practice of Parallel
Programming.

[30] Erik Lindholm, John Nickolls, Stuart Oberman, and John Montrym. 2008. NVIDIA Tesla: A unified graphics and computing
architecture. Micro, [EEE 28, 2 (2008), 39-55.

[31] Scott A. Mahlke, William Y. Chen, Wen-mei W. Hwu, B. Ramakrishna Rau, and Michael S. Schlansker. 1992. Sentinel Scheduling
for VLIW and Superscalar Processors. In Fifth International Conference on Architectural Support for Programming Languages
and Operating Systems. ACM, 238-247.

[32] Jaikrishnan Menon, Marc De Kruijf, and Karthikeyan Sankaralingam. 2012. iGPU: exception support and speculative execution on GPUs. In ACM SIGARCH Computer Architecture News,
Vol. 40. IEEE Computer Society, 72-83.

[33] Mayan Moudgill, Keshav Pingali, and Stamatis Vassiliadis. 1993.
[34] Register renaming and dynamic speculation: an alternative approach. In 26th annual international symposium on Microarchitecture. IEEE, 202-213.

[35] Naveen Muralimanohar, Rajeev Balasubramonian, and Norman P
Jouppi. 2009. CACTI 6.0: A tool to model large caches. Technical
Report. Technical Report HPL-2009-85 HP Laboratories.
NVIDIA. 2016. CUDA C programming guide. https://docs.nvidia.
com/cuda/cuda-c-programming-guide. (2016).

[36] NVIDIA. 2016. NVIDIA Tesla P100 White Paper.
https:/ /images.nvidia.com/content /pdf/tesla/whitepaper/
pascal-architecture-whitepaper.pdf. (2016).

[37] Jason Jong Kyu Park, Yongjun Park, and Scott Mahlke. 2015.
Chimera: Collaborative Preemption for Multitasking on a Shared
GPU. In Proceedings of the Twentieth International Conference on Architectural Support for Programming Languages and
Operating Systems. ACM, 593-606.

[38] Bharath Pichai, Lisa Hsu, and Abhishek Bhattacharjee. 2014. Architectural Support for Address Translation on GPUs: Designing
Memory Management Units for CPU/GPUs with Unified Address
Spaces. In Proceedings of the 19th International Conference on
MICRO-50, October 14-18, 2017, Cambridge, MA, USA
Architectural Support for Programming Languages and Operating Systems. ACM, 743-758.

[39] Jason Power, Mark D Hill, and David A Wood. 2014. Supporting
x86-64 address translation for 100s of GPU lanes. In 2014 [FEE
20th International Symposium on High Performance Computer
Architecture (HPCA). IEEE, 568-578.

[40] Timothy G. Rogers, Daniel R. Johnson, Mike O’Connor, and
Stephen W. Keckler. 2015. A Variable Warp Size Architecture.
In Proceedings of the 42Nd Annual International Symposium
on Computer Architecture. ACM, 489-501.

[41] Kevin W Rudd. 1997. Efficient exception handling techniques
for high-performance processor architectures. Technical Report.
Technical Report CSL-TR-97-732. Coordinated Science Laboratory, Stanford University.

[42] Richard M Russell. 1978. The CRAY-1 computer system. Commun. ACM 21, 1 (1978), 63-72.

[43] Bratin Saha, Xiaocheng Zhou, Hu Chen, Ying Gao, Shoumeng Yan,
Mohan Rajagopalan, Jesse Fang, Peinan Zhang, Ronny Ronen,
and Avi Mendelson. 2009. Programming model for a heterogeneous
x86 platform. In ACM Sigplan Notices, Vol. 44. ACM, 431-440.

[44] Michael Schulte. 2015. Floating-Point Arithmetic in AMD Processors. Presented at the 22nd IEEE Symposium on Computer
Arithmetic, Lyon, France. (2015).

[45] Sagi Shahar, Shai Bergman, and Mark Silberstein. 2016. ActivePointers: a case for software address translation on GPUs. In
Proceedings of the 43rd Annual International Symposium on
Computer Architecture.

[46] James E. Smith and Andrew R. Pleszkun. 1985. Implementation
of precise interrupts in pipelined processors. In Proceedings of the
12th annual International Symposium on Computer Architecture
(ISCA ’85). 36-44.

[47] Gurindar $ Sohi et al. 1990. Instruction issue logic for highperformance, interruptible, multiple functional unit, pipelined
computers. IEEE transactions on computers 39, 3 (1990), 349359.

[48] John A. Stratton, Christopher Rodrigues, I-Jui Sung, Nady Obeid,
Li-Wen Chang, Nasser Anssari, Geng D. Liu, and Wen-mei W.
Hwu. 2012. Parboil: a revised benchmark suite for scientific and
commercial throughput computing. Technical Report.

[49] Boleslaw K Szymanski. 1988. A simple solution to Lamport’s
concurrent programming problem with linear wait. In Proceedings
of the 2nd international conference on Supercomputing. ACM,
621-626.

[50] Ivan Tanasic, Isaac Gelado, Javier Cabezas, Alex Ramirez, Nacho
Navarro, and Mateo Valero. 2014. Enabling preemptive multiprogramming on GPUs. In Proceeding of the 41st annual international symposium on Computer architecuture. IEEE Press,
193-204.

[51] James E Thornton. 1970. Design of a computer: the Control Data
6600. (1970).

[52] Robert M Tomasulo. 1967. An efficient algorithm for exploiting multiple arithmetic units. IBM Journal of Research and
Development 11, 1 (1967), 25-33.

[53] Hwa C. Torng and Martin Day. 1993. Interrupt handling for
out-of-order execution processors. [EEE Trans. Comput. 42, 1
(1993), 122-127.

[54] Teruo Utsumi, Masayuki Ikeda, and Moriyuki Takamura. 1994.
Architecture of the VPP500 parallel supercomputer. In Proceedings of the 1994 ACM/IEEE conference on Supercomputing.
IEEE Computer Society Press, 478-487.

[55] J. Vesely, A. Basu, M. Oskin, G. H. Loh, and A. Bhattacharjee. 2016. Observations and opportunities in architecting shared
virtual memory for heterogeneous systems. In 2016 IEEE International Symposium on Performance Analysis of Systems and
Software (ISPASS). 161-171.

[56] Kaibo Wang, Xiaoning Ding, Rubao Lee, Shinpei Kato, and Xiaodong Zhang. 2014. GDM: Device memory management for
GPGPU computing. In The 2014 ACM international conference on Measurement and modeling of computer systems. ACM,
533-545.

[57] Zhenning Wang, Jun Yang, Rami Melhem, Bruce Childers, Youtao
Zhang, and Minyi Guo. 2016. Simultaneous Multikernel GPU:
Multi-tasking throughput processors via fine-grained sharing. In
International Symposium on High Performance Computer Architecture (HPCA). IEEE, 358-369.

[58] T. Zheng, D. Nellans, A. Zulfigar, M. Stephenson, and S. W.
Keckler. 2016. Towards high performance paged memory for GPUs.
In 2016 IEEE International Symposium on High Performance
Computer Architecture (HPCA). IEEE, 345-357.

[59] Craig B Zilles, Joel S Emer, and Gurindar S Sohi. 1999. The
use of multithreading for exception handling. In Proceedings
of the 32nd annual ACM/IEEE international symposium on
Microarchitecture. IEEE Computer Society, 219-229.