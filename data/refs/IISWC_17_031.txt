[1] A. Agresti and B. Caffo, “Simple and Effective Conﬁdence Intervals for
Proportions and Differences of Proportions Result from Adding Two
Successes and Two Failures,” The American Statistician, vol. 54, no. 4,
pp. 280–288, Nov 2000.
[2] A. Biswas, N. Soundararajan, S. S. Mukherjee, and S. Gurumurthi,
“Quantized avf: A means of capturing vulnerability variations over small
windows of time,” in SELSE’09, 2009.
[3] S. Borkar, “Designing reliable systems from unreliable components: the
challenges of transistor variability and degradation,” Micro, 2005.
[4] A. Chatzidimitriou and D. Gizopoulos, “Anatomy of microarchitecturelevel reliability assessment: Throughput and accuracy,” in 2016 IEEE
International Symposium on Performance Analysis of Systems and
Software (ISPASS), April 2016, pp. 69–78.
[5] A. Chatzidimitriou, M. Kaliorakis, D. Gizopoulos, M. Iacaruso, M. Pipponzi, R. Mariani, and S. D. Carlo, “Rt level vs. microarchitecture
level reliability assessment: Case study on arm cortex-a9 cpu,” in
47th IEEE/IFIP International Conference on Dependable Systems and
Networks (DSN 2017), June 2017.
[6] E. Cheng, S. Mirkhani, L. G. Szafaryn, C. Y. Cher, H. Cho, K. Skadron,
M. R. Stan, K. Lilja, J. A. Abraham, P. Bose, and S. Mitra, “Clear:
Cross-layer exploration for architecting resilience: Combining hardware
and software techniques to tolerate soft errors in processor cores,” in
2016 53nd ACM/EDAC/IEEE Design Automation Conference (DAC),
June 2016, pp. 1–6.

[7] N. Choudhary, S. Wadhavkar, T. Shah, H. Mayukh, J. Gandhi, B. Dwiel,
S. Navada, H. Najaf-abadi, and E. Rotenberg, “FabScalar: composing
synthesizable RTL designs of arbitrary cores within a canonical superscalar template.” ISCA, pp. 11–22, 2011.
[8] C. Constantinescu, “Intermittent faults in VLSI circuits,” in Proceedings
of the SELSE Workshop, 2007.
[9] L. Duan, B. L, and L. Peng, “Versatile prediction and fast estimation of
Architectural Vulnerability Factor from processor performance metrics,”
HPCA 2009. IEEE 15th Intl. Symp. on, pp. 129–140, 2009.
[10] B. Fang, P. Wu, Q. Guan, N. DeBardeleben, L. Monroe, S. Blanchard,
Z. Chen, K. Pattabiraman, and M. Ripeanu, “SDC is in the Eye of the
Beholder: A Survey and Preliminary Study,” jun 2016, pp. 72–76.
[11] X. Fu, J. Poe, T. Li, and J. Fortes, “Characterizing microarchitecture
soft error vulnerability phase behavior,” in 14th IEEE International
Symposium on Modeling, Analysis, and Simulation, Sept 2006, pp. 147–
155.
[12] M. Gomaa and T. Vijaykumar, “Opportunistic transient-fault detection,”
in Computer Architecture, 2005. ISCA ’05. Proceedings. 32nd International Symposium on, 2005, pp. 172–183.
[13] M. R. Guthaus, J. S. Ringenberg, D. Ernst, T. M. Austin, T. Mudge,
and R. B. Brown, “Mibench: A free, commercially representative
embedded benchmark suite,” in IEEE 4th Annual Workshop on Workload
Characterization, December 2001.
[14] S. Hari, S. Adve, H. Naeimi, and P. Ramachandran, “Relyzer: exploiting
application-level fault equivalence to analyze application resiliency to
transient faults,” in ASPLOS ’12: Proceedings of the seventeenth international conference on Architectural Support for Programming Languages
and Operating Systems. ACM Request Permissions, Mar. 2012.
[15] S. K. S. Hari, S. V. Adve, and H. Naeimi, “Low-cost Programlevel Detectors for Reducing Silent Data Corruptions,” ser. DSN ’12.
Washington, DC, USA: IEEE Computer Society, 2012, pp. 1–12.
[16] S. K. S. Hari, R. Venkatagiri, S. V. Adve, and H. Naeimi, “GangES:
Gang error simulation for hardware resiliency evaluation.” ISCA, pp.
61–72, 2014.
[17] M. Kaliorakis, S. Tselonis, A. Chatzidimitriou, N. Foutris, and D. Gizopoulos, “Differential fault injection on microarchitectural simulators,”
in 2015 IEEE International Symposium on Workload Characterization,
Oct 2015, pp. 172–182.
[18] H. Li, J. Mundy, W. Paterson, and e. al, “Thermally-induced soft errors
in nanoscale CMOS circuits,” International Symposium on Nanoscale
Architectures, 2007.
[19] J. Li and Q. Tan, “{SmartInjector}: Exploiting intelligent fault injection
for {SDC} rate analysis,” in 2013 {IEEE} International Symposium
on Defect and Fault Tolerance in {VLSI} and Nanotechnology Systems
({DFT}), oct 2013, pp. 236–242.
[20] X. Li, S. V. Adve, P. Bose, and J. A. Rivers, “Online estimation of
architectural vulnerability factor for soft errors,” ISCA-35: International
Symposium on Computer Architecture, 2008.
[21] Q. Lu, K. Pattabiraman, M. S. Gupta, and J. A. Rivers, “SDCTune:
A Model for Predicting the SDC Proneness of an Application for
Conﬁgurable Protection,” ser. CASES ’14. New York, NY, USA: ACM,
2014, pp. 23:1–23:10.
[22] M. Maniatakos, N. Karimi, C. Tirumurti, A. Jas, and Y. Makris,
“Instruction-Level Impact Analysis of Low-Level Faults in a Modern
Microprocessor Controller,” IEEE Transactions on Computers, vol. 60,
no. 9, pp. 1260–1273, sep 2011.
[23] S. Mukherjee, C. Weaver, J. Emer, S. K. Reinhardt, and T. Austin,
“A systematic methodology to compute the architectural vulnerability
factors for a high-performance microprocessor,” in Microarchitecture,
2003. MICRO-36. Proceedings. 36th Annual IEEE/ACM International
Symposium on, 2003, pp. 29–40.
[24] A. A. Nair, S. Eyerman, L. Eeckhout, and L. K. John, “A ﬁrst-order
mechanistic model for architectural vulnerability factor,” in 39th Annual
International Symposium on Computer Architecture, 2012, June 2012,
pp. 273–284.
[25] V. K. Reddy, E. Rotenberg, and S. Parthasarathy, “Understanding
prediction-based partial redundant threading for low-overhead, highcoverage fault tolerance,” ASPLOS, 2006.
[26] T. Sherwood, E. Perelman, G. Hamerly, and B. Calder, “Automatically
characterizing large scale program behavior,” SIGOPS Oper. Syst.
Rev., vol. 36, no. 5, pp. 45–57, Oct. 2002. [Online]. Available:
http://doi.acm.org/10.1145/635508.605403
[27] V. Sridharan and D. Kaeli, “Eliminating microarchitectural dependency
from Architectural Vulnerability,” IEEE 15th Intl. Symp. on High Performance Computer Architecture., pp. 117–128, 2009.
[28] V. Sridharan and D. R. Kaeli, “Using hardware vulnerability factors to
enhance AVF analysis,” in Proceedings of the 37th Annual Intl. Symp.
on Computer architecture. ACM Request Permissions, Jun. 2010.
[29] K. R. Walcott, G. Humphreys, and S. Gurumurthi, “Dynamic prediction
of architectural vulnerability from microarchitectural state,” in Proc. of
the 34th Annual ISCA, 2007. ACM Request Permissions, Jun. 2007.
[30] N. J. Wang, J. Quek, T. M. Rafacz, and S. J. Patel, “Characterizing the
Effects of Transient Faults on a High-Performance Processor Pipeline,”
in Proceedings of the 2004 International Conference on Dependable
Systems and Networks, 2004, pp. 61–70.
[31] B. Wibowo, A. Agrawal, T. Stanton, and J. Tuck, “An accurate crosslayer approach for online architectural vulnerability estimation,” ACM
Trans. Archit. Code Optim., vol. 13, no. 3, pp. 30:1–30:27, Sep. 2016.
[32] X. Xu and M. L. Li, “CriticalFault: Amplifying Soft Error Effect Using
Vulnerability-Driven Injection,” oct 2011, pp. 173–174.
