[1] Y. Luo, S. Govindan, B. Sharma, M. Santaniello, J. Meza, A. Kansal,
J. Liu, B. Khessib, K. Vaid, and O. Mutlu, “Characterizing Application Memory Error Vulnerability to Optimize Datacenter Cost via
Heterogeneous-Reliability Memory,” in 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN), 2014,
pp. 467–478.
[2] M. Li, S. S. Vazhkudai, A. R. Butt, F. Meng, X. Ma, Y. Kim,
C. Engelmann, and G. Shipman, “Functional Partitioning to Optimize
End-to-End Performance on Many-core Architectures,” in International
Conference for High Performance Computing, Networking, Storage and
Analysis, 2010, pp. 1–12.
[3] F. Zhang, C. Docan, M. Parashar, S. Klasky, N. Podhorszki, and
H. Abbasi, “Enabling In-situ Execution of Coupled Scientiﬁc Workﬂow
on Multi-core Platform,” in IEEE 26th International Parallel and
Distributed Processing Symposium, 2012, pp. 1352 – 1363.
[4] J. C. Bennett, H. Abbasi, P.-T. Bremer, R. Grout, and A. Gyulassy,
“Combining In-situ and In-transit Processing to Enable Extreme-Scale
Scientiﬁc Analysis,” in International Conference for High Performance
Computing, Networking, Storage and Analysis, 2012, pp. 49:1–49:9.
[5] G. Haldeman, I. Rodero, M. Parashar, S. Ramos, E. Z. Zhang, and
U. Kremer, “Exploring energy-performance-quality tradeoffs for scientiﬁc workﬂows with in-situ data analyses,” Computer Science - Research
and Development, vol. 30, no. 2, pp. 207–218, 2015.
[6] I. Rodero, M. Parashar, A. G. Landge, S. Kumar, V. Pascucci, and P. T.
Bremer, “Evaluation of In-Situ Analysis Strategies at Scale for Power
Efﬁciency and Scalability,” in 16th International Symposium on Cluster,
Cloud and Grid Computing, 2016, pp. 156–164.
[7] Z. Ou, B. Pang, Y. Deng, J. Nurminen, A. Ylä-Jääski, and P. Hui,
“Energy- and Cost-Efﬁciency Analysis of ARM-Based Clusters,” in
Cluster, Cloud and Grid Computing (CCGrid), 2012 12th IEEE/ACM
International Symposium on, 2012, pp. 115–123.
[8] N. Rajovic, P. M. Carpenter, I. Gelado, N. Puzovic, A. Ramirez, and
M. Valero, “Supercomputing with commodity CPUs: are mobile SoCs
ready for HPC?” in Proceedings of the International Conference on High
Performance Computing, Networking, Storage and Analysis, 2013, pp.
40:1–40:12.
[9] N. Rajovic, A. Rico, N. Puzovic, C. Adeniyi-Jones, and A. Ramirez,
“Tibidabo: Making the case for an ARM-based HPC system,” Future
Generation Computer Systems, vol. 36, pp. 322–334, 2014.
[10] E. Strohmaier, J. Dongarra, H. Simon, M. Meuer, and H. Meuer, “Top500
List,” https://www.top500.org/lists/2017/06/, 2017.
[11] S. S. Shende and A. D. Malony, “The Tau Parallel Performance System,”
International Journal of High Performance Computing Applications,
vol. 20, no. 2, pp. 287–311, 2006.
[12] P. J. Mucci, S. Browne, C. Deane, and G. Ho, “PAPI: A Portable Interface to Hardware Performance Counters,” in Proceedings of Department
of Defense HPCMP Users Group Conference, 1999.
[13] T. Patki, D. K. Lowenthal, B. Rountree, M. Schulz, and B. R. de Supinski, “Exploring Hardware Overprovisioning in Power-constrained, High
Performance Computing,” in Proceedings of the 27th International ACM
Conference on International Conference on Supercomputing, 2013, pp.
173–182.
[14] NVIDIA, NVML API REFERENCE MANUAL, NVIDIA Corporation,
2012.
[15] NVIDIA, “Whitepaper: Variable SMP (4-PLUS-1) – A Multi-Core CPU
Architecture for Low Power and High Performance,” NVIDIA, Tech.
Rep., 2011.
[16] J. Wei, A. Thomas, G. Li, and K. Pattabiraman, “Quantifying the Accuracy of High-Level Fault Injection Techniques for Hardware Faults,” in
Dependable Systems and Networks (DSN), 2014 44th Annual IEEE/IFIP
International Conference on, 2014, pp. 375–382.
[17] CORAL,
“CORAL
Benchmark
Codes,”
https://asc.llnl.gov/
CORAL-benchmarks.
[18] J. Shalf, S. Dosanjh, and J. Morrison, “Exascale Computing Technology
Challenges,” in Proceedings of the 9th International Conference on High
Performance Computing for Computational Science, 2011, pp. 1–25.
[19] R. Lucas, “Top ten exascale research challenges,” DOE ASCAC Subcommittee, Tech. Rep., 2014.
[20] A. A. Hwang, I. A. Stefanovici, and B. Schroeder, “Cosmic Rays
Don’T Strike Twice: Understanding the Nature of DRAM Errors and
the Implications for System Design,” in Proceedings of the seventeenth
international conference on Architectural Support for Programming
Languages and Operating Systems, 2012, pp. 111–122.
[21] X. Li, M. C. Huang, K. Shen, and L. Chu, “A Realistic Evaluation
of Memory Hardware Errors and Software System Susceptibility,” in
Proceedings of USENIX Annual Technical Conference, 2010.
[22] B. Fang, K. Pattabiraman, M. Ripeanu, and S. Gurumurthi, “Evaluating
the Error Resilience of Parallel Programs,” in International Conference
on Dependable Systems and Networks, 2014.
[23] B. Fang, K. Pattabiraman, M. Ripeanu, and S. Gurumurthi, “GPU-Qin: A
methodology for evaluating the error resilience of GPGPU applications,”
in International Symposium on Performance Analysis of Systems and
Software, 2014, pp. 221–230.
[24] D. Fiala, F. Mueller, C. Engelmann, R. Riesen, K. Ferreira, and
R. Brightwell, “Detection and Correction of Silent Data Corruption
for Large-scale High-performance Computing,” in Proceedings of the
International Conference on High Performance Computing, Networking,
Storage and Analysis, 2012, pp. 78:1–78:12.