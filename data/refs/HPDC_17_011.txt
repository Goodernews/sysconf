[1] E. Agullo, L. Giraud, A. Guermouche, J. Roman, and M. Zounon. Towards resilient
parallel linear krylov solvers: recover-restart strategies. Rapport de recherche
RR-8324, INRIA, July 2013.

[2] R. A. Ashraf, R. Gioiosa, G. Kestor, R. F. DeMara, C.-Y. Cher, and P. Bose. Under
standing the propagation of transient errors in HPC applications. In Proceedings

of the International Conference for High Performance Computing, Networking,

Storage and Analysis, SC °15, pages 72:1-72:12, New York, NY, USA, 2015. ACM.

[3] R. C. Baumann. Radiation-induced soft errors in advanced semiconductor tech
nologies. Device and Materials Reliability, IEEE Transactions on, 5(3):305-316,

Sept. 2005.

[4] L. Bautista-Gomez, A. Benoit, A. Cavelan, S. K. Raina, Y. Robert, and H. Sun.
Which verification for soft error detection? In HiPC, pages 2-11. IEEE Computer
Society, 2015.

[5] L. Bautista-Gomez and F. Cappello. Detecting silent data corruption for extreme
scale MPI applications. In Proceedings of the 22Nd European MPI Users’ Group

Meeting, EuroMPI ’15, pages 12:1-12:10, New York, NY, USA, 2015. ACM.

[6] L. Bautista-Gomez and F. Cappello. Exploiting spatial smoothness in HPC ap
plications to detect silent data corruption. In Proceedings of the 2015 IEEE 17th

International Conference on High Performance Computing and Communications,

2015 IEEE 7th International Symposium on Cyberspace Safety and Security, and

2015 IEEE 12th International Conf on Embedded Software and Systems, HPCC
CSS-ICESS 715, pages 128-133, Washington, DC, USA, 2015. IEEE Computer

Society.

[7] L. Bautista-Gomez, S. Tsuboi, D. Komatitsch, F. Cappello, N. Maruyama, and

S. Matsuoka. FTI: high performance fault tolerance interface for hybrid systems.

In Proceedings of 2011 International Conference for High Performance Computing,

Networking, Storage and Analysis, SC 11, pages 32:1—-32:32, New York, NY, USA,

2011. ACM.

[8] E. Berrocal, L. Bautista-Gomez, S. Di, Z. Lan, and F. Cappello. Lightweight silent

data corruption detection based on runtime data analysis for HPC applications.

In Proceedings of the 24th International Symposium on High-Performance Parallel
and Distributed Computing, HPDC °15, pages 275-278, New York, NY, USA, 2015.
ACM.

[9] S. Borkar. Designing reliable systems from unreliable components: The challenges
of transistor variability and degradation. IEEE Micro, 25(6):10—16, Nov. 2005.

[10] P. G. Bridges, K. B. Ferreira, M. A. Heroux, and M. Hoemmen. Fault-tolerant
linear solvers via selective reliability. CoRR, abs/1206.1390, 2012.

[11] J. Calhoun, L. Olson, and M. Snir. FlipIt: An LLVM based fault injector for HPC.
In Proceedings of the 20th International Euro-Par Conference on Parallel Processing
(Euro-Par ’14), 2014.

[12] J. Calhoun, L. Olson, M. Snir, and W. D. Gropp. Towards a more fault resilient
multigrid solver. In Proceedings of the Symposium on High Performance Computing,
HPC °15, pages 1-8, San Diego, CA, USA, 2015. Society for Computer Simulation
International.

[13] J. Calhoun, M. Snir, L. Olson, and M. Garzaran. Understanding the propagation of
error due to a silent data corruption in a sparse matrix vector multiply. In Proceedings of the 2015 IEEE International Conference on Cluster Computing, CLUSTER
°15, pages 541-542, Washington, DC, USA, 2015. IEEE Computer Society.

[14] J. Chung, L Lee, M. Sullivan, J. H. Ryoo, D. W. Kim, D. H. Yoon, L. Kaplan, and
M. Erez. Containment domains: A scalable, efficient, and flexible resilience
scheme for exascale systems. In Proceedings of the International Conference on
High Performance Computing, Networking, Storage and Analysis, SC °12, pages
58:1-58:11, Los Alamitos, CA, USA, 2012. IEEE Computer Society Press.

[15] T. J. Dell. A white paper on the benefits of chipkillcorrect ECC for PC server
main memory. Technical report, IBM Microelectronics Division, 1997.

[16] J. Elliott, M. Hoemmen, and F. Mueller. Evaluating the impact of SDC on the
GMRES iterative solver. In Proceedings of the 2014 IEEE 28th International Parallel
and Distributed Processing Symposium, IPDPS ’14, pages 1193-1202, Washington,
DC, USA, 2014. IEEE Computer Society.

[17] J. Elliott, F. Mueller, M. Stoyanov, and C. Webster. Quantifying the impact of
single bit flips on floating point arithmetic. Technical report, Oak Ridge National
Laboratory, August 2013.

[18] B. Fang, Q. Lu, K. Pattabiraman, M. Ripeanu, and S. Gurumurthi. ePVF: an
enhanced program vulnerability factor methodology for cross-layer resilience
analysis. 2016 46th Annual IEEE/FIP International Conference on Dependable
Systems and Networks (DSN), 00:168-179, 2016.

[19] D. Fiala, F. Mueller, C. Engelmann, R. Riesen, K. Ferreira, and R. Brightwell. Detection and correction of silent data corruption for large-scale high-performance
computing. In Proceedings of the International Conference on High Performance
Computing, Networking, Storage and Analysis, SC °12, pages 78:1—78:12, Los Alamitos, CA, USA, 2012. IEEE Computer Society Press.

[20] W. Gu, Z. Kalbarczyk, R. K. Iyer, and Z.-Y. Yang. Characterization of linux kernel
behavior under errors. In DSN, pages 459-468. IEEE Computer Society, 2003.
[21] A. Guermouche, T. Ropars, E. Brunet, M. Snir, and F. Cappello. Uncoordinated
checkpointing without domino effect for send-deterministic MPI applications.
In Parallel & Distributed Processing Symposium (IPDPS), 2011 IEEE International,
pages 989-1000. IEEE, 2011.

[22] A. Guermouche, T. Ropars, M. Snir, and F. Cappello. Hydee: Failure containment
without event logging for large scale send-deterministic MPI applications. In
Parallel & Distributed Processing Symposium (IPDPS), 2012 IEEE 26th International,
pages 1216-1227. IEEE, 2012.

[23] S.K. S. Hari, S. V. Adve, and H. Naeimi. Low-cost program-level detectors for
reducing silent data corruptions. In Proceedings of the 2012 42Nd Annual IEEE/AFIP
International Conference on Dependable Systems and Networks (DSN), DSN °12,
pages 1-12, Washington, DC, USA, 2012. IEEE Computer Society.

[24] A. Hassani, A. Skjellum, P. V. Bangalore, and R. Brightwell. Practical resilient
cases for fa-mpi, a transactional fault-tolerant mpi. In Proceedings of the 3rd
Workshop on Exascale MPI, ExaMPI ’15, pages 1:1—1:10, New York, NY, USA, 2015.
ACM.

[25] L. Jaulmes, M. Casas, M. Moreté, E. Ayguadé, J. Labarta, and M. Valero. Exploiting
asynchrony from exact forward recovery for DUE in iterative solvers. In Proceedings of the International Conference for High Performance Computing, Networking,
Storage and Analysis, SC °15, pages 53:1-53:12, New York, NY, USA, 2015. ACM.
[26] H. Kaul, M. Anders, S. Hsu, A. Agarwal, R. Krishnamurthy, and S. Borkar. Nearthreshold voltage (NTV) design: Opportunities and challenges. In Proceedings of
the 49th Annual Design Automation Conference, DAC °12, pages 1153-1158, New
York, NY, USA, 2012. ACM.

[27] D. S. Khudia, G. Wright, and S. Mahlke. Efficient soft error protection for commodity embedded microprocessors using profile information. In Proceedings of
the 13th ACM SIGPLAN/SIGBED International Conference on Languages, Compilers,
Tools and Theory for Embedded Systems, LCTES °12, pages 99-108, New York, NY,
USA, 2012. ACM.

[28] I. Laguna, M. Schulz, D. F. Richards, J. Calhoun, and L. Olson. IPAS: intelligent
protection against silent output corruption in scientific applications. In Proceedings of the 2016 International Symposium on Code Generation and Optimization,
CGO 2016, pages 227-238, New York, NY, USA, 2016. ACM.

[29] C. Lattner and V. Adve. LLVM: a compilation framework for lifelong program
analysis & transformation. In Proceedings of the 2004 International Symposium on
Code Generation and Optimization (CGO’04), Palo Alto, California, Mar 2004.

[30] G. Li, Q. Lu, and K. Pattabiraman. Fine-grained characterization of faults causing
long latency crashes in programs. In DSN, pages 450-461. IEEE Computer Society,
2015.

[31] G. Li, K. Pattabiraman, C.-Y. Cher, and P. Bose. Understanding error propagation
in GPGPU applications. In Proceedings of the International Conference for High
Performance Computing, Networking, Storage and Analysis, SC 16, pages 21:121:12, Piscataway, NJ, USA, 2016. IEEE Press.

[32] Q. Lu, K. Pattabiraman, M. S. Gupta, and J. A. Rivers. SDCTume: a model for
predicting the sde proneness of an application for configurable protection. In
Proceedings of the 2014 International Conference on Compilers, Architecture and
Synthesis for Embedded Systems, CASES 14, pages 23:1-23:10, New York, NY,
USA, 2014, ACM.

[33] R.E. Lyons and W. Vanderkulk. The use of triple-modular redundancy to improve
computer reliability. IBM 7. Res. Dev., 6(2):200-209, Apy. 1962.

[34] T. C. May and M. H. Woods. Alpha-particle-induced soft errors in dynamic
memories. Electron Devices, IEEE Transactions on, 26(1):2-9, Jan. 1979.

[35] A. Moody, G. Bronevetsky, K. Mohror, and B. R. d. Supinski. Design, modeling,
and evaluation of a scalable multi-level checkpointing system. In Proceedings
of the 2010 ACM/IEEE International Conference for High Performance Computing,
Networking, Storage and Analysis, SC °10, pages 1-11, Washington, DC, USA,
2010. IEEE Computer Society.

[36] X. Ni and L. V. Kale. FlipBack: automatic targeted protection against silent
data corruption. In Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis, SC 16, pages 29:1-29:12,
Piscataway, NJ, USA, 2016. IEEE Press.

[37] X. Ni, E. Meneses, N. Jain, and L. V. Kale. ACR: automatic checkpoint/restart
for soft and hard error protection. In ACM/IEEE International Conference for
High Performance Computing, Networking, Storage and Analysis, SC °13. IEEE
Computer Society, Nov. 2013.

[38] K. Pattabiraman, R. K. Iyer, and Z. T. Kalbarczyk. Automated derivation of
application-aware error detectors using static analysis: The trusted illiac approach.
IEEE Transactions on Dependable and Secure Computing, 8:44—57, 2009.

[39] K. Pattabiraman, N. M. Nakka, Z. T. Kalbarczyk, and R. K. Iyer. SymPLFIED:
symbolic program-level fault injection and error detection framework. IEEE
Transactions on Computers, 62(11):2292-2307, 2013.

[40] N. Sasaki, K. Sato, T. Endo, and S. Matsuoka. Exploration of lossy compression
for application-level checkpoint/restart. In Proceedings of the 2015 IEEE International Parallel and Distributed Processing Symposium, IPDPS °15, pages 914-922,
Washington, DC, USA, 2015. IEEE Computer Society.

[41] S. K. Sastry Hari, R. Venkatagiri, S. V. Adve, and H. Naeimi. GangES: gang
error simulation for hardware resiliency evaluation. In Proceeding of the 41st
Annual International Symposium on Computer Architecuture, ISCA 14, pages
61-72, Piscataway, NJ, USA, 2014, IEEE Press.

[42] M. Snir, R. W. Wisniewski, J. A. Abraham, S. V. Adve, S. Bagchi, P. Balaji, J. Belak,
P. Bose, F. Cappello, B. Carlson, A. A. Chien, P. Coteus, N. A. DeBardeleben,
P. C. Diniz, C. Engelmann, M. Erez, S. Fazzari, A. Geist, R. Gupta, F. Johnson,
S. Krishnamoorthy, S. Leyffer, D. Liberty, S. Mitra, T. Munson, R. Schreiber,
J. Stearley, and E. V. Hensbergen. Addressing failures in exascale computing.
International Journal of High Performance Computing Applications, 28(2):127 —
171, May 2014.

[43] V. Sridharan, N. DeBardeleben, S$. Blanchard, K. B. Ferreira, J. Stearley, J. Shalf,
and S. Gurumurthi. Memory errors in modern systems: The good, the bad, and
the ugly. In Proceedings of the Twentieth International Conference on Architectural
Support for Programming Languages and Operating Systems, ASPLOS °15, pages
297-310, New York, NY, USA, 2015. ACM.

[44] N. Wang, M. Fertig, and S. Patel. Y-branches: When you come to a fork in the road,
take it. In Proceedings of the 12th International Conference on Parallel Architectures
and Compilation Techniques, PACT ’03, pages 56—, Washington, DC, USA, 2003.
IEEE Computer Society.

[45] K. S. Yim, Z. T. Kalbarczyk, and R. K. Iyer. Quantitative analysis of long-latency
failures in system software. In Proceedings of the 2009 15th IEEE Pacific Rim
International Symposium on Dependable Computing, PRDC ’09, pages 23-30,
Washington, DC, USA, 2009. IEEE Computer Society.

[46] J. Yu, M. J. Garzaran, and M. Snir. ESoftCheck: removal of non-vital checks for
fault tolerance. In Proceedings of the 7th Annual IEEE/ACM International Symposium on Code Generation and Optimization, CGO 09, pages 35-46, Washington,
DC, USA, 2009. IEEE Computer Society.

[47] G. Zheng, L. Shi, and L. V. Kalé. FTC-Charm++: an in-memory checkpoint-based
fault tolerant runtime for Charm++ and MPI. In Cluster Computing, 2004 IEEE
International Conference on, pages 93-103. IEEE, 2004.