[1] Thorsten Berger, Markus Vdlter, Hans Peter Jensen, Taweesap Dangprasert, and Janet Siegmund. 2016. Efficiency of projectional editing:
A controlled experiment. In Proc. of FSE. ACM, 763-774.

[2] Leonardo Mendonca de Moura and Nikolaj Bjorner. 2008. Z3: An
Efficient SMT Solver. In Proc. of TACAS. 337-340.

[3] Rina Dechter. 1992. From Local to Global Consistency. Artif: Intell. 55,
1 (May 1992), 87-107.

[4] Alexander Egyed. 2006. Instant consistency checking for the UML. In
Proc. of ICSE. 381-390.

[5] Pascal Van Hentenryck. 1989. Constraint satisfaction in logic programming. MIT Press.

[6] Pascal Van Hentenryck, Vijay A. Saraswat, and Yves Deville. 1998.
Design, Implementation, and Evaluation of the Constraint Language
cc(FD). } Log. Program. 37, 1-3 (1998), 139-164.

[7] R. Lammel. 2017. Software languages: Syntax, semantics, and metaprogramming. Springer. To appear. http://www.softlang.org/book.

[8] Olivier Lhomme. 2003. An Efficient Filtering Algorithm for Disjunction

of Constraints. In Proc. of CP. 904-908.
[9] Alan K. Mackworth. 1977. On Reading Sketch Maps. In Proc. of IJCAI,

Vol. 2. Morgan Kaufmann Publishers Inc., 598-606.

90

Friedrich Steimann, Marcus Frenkel, and Markus Vélter

[10] Pierre Neron, Andrew P. Tolmach, Eelco Visser, and Guido Wachsmuth.
2015. A Theory of Name Resolution. In Proc. of ESOP. 205-231.

[11] Object Management Group. 2014. Object Constraint Language Version
2.4, Object Management Group.

[12] Cyrus Omar, Ian Voysey, Michael Hilton, Joshua Sunshine, Claire Le
Goues, Jonathan Aldrich, and Matthew A. Hammer. 2017. Toward
Semantic Foundations for Program Editors. In Proc. of SNAPL. 11:1-12.

[13] Jens Palsberg and Michael I. Schwartzbach. 1994. Object-oriented type
systems, Wiley.

[14] Nils Przigoda, Robert Wille, and Rolf Drechsler. 2016. Ground setting
properties for an efficient translation of OCL in SMT-based model
finding. In Proc. of MoDELS . ACM, 261-271.

[15] Veselin Raychev, Martin T. Vechev, and Eran Yahav. 2014. Code completion with statistical language models. In Proc. of PLDL 419-428.

[16] Alexander Reder and Alexander Egyed. 2012. Computing repair trees
for resolving inconsistencies in design models. In Proc. of ASE. 220-—
229,

[17] Alexander Reder and Alexander Egyed. 2012. Incremental Consistency
Checking for Complex Design Rules and Larger Model Changes. In
Proc. of MoDELS. 202-218.

[18] Friedrich Stetmann. 2015. From well-formedness to meaning preservation: model refactoring for almost free. Software & System Modeling
14, 1 (2015), 307-320.

[19] Friedrich Stetmann. 2015. None, One, Many - What’s the Difference,
Anyhow?. In Proc. of SNAPL. 294-308.

[20] Friedrich Steimann. 2017. Constraint-Based Refactoring. ACM Trans.
Program. Lang. Syst. (2017). to appear.

[21] Friedrich Steimann. 2017. Refactoring Tools and Their Kin. In Tutorial
Lectures of GITSE 2015 (Springer LNCS), Vol. 10223. 179-214.

[22] Friedrich Steimann, Jérg Hagemann, and Bastian Ulke. 2016. Computing repair alternatives for malformed programs using constraint
attribute grammars. In Proc. of OOPSLA. 711-730.

[23] Friedrich Steimann, Christian Kollee, and Jens von Pilgrim. 2011. A
Refactoring Constraint Language and Its Application to Eiffel. In Proc.
of ECOOP, 255-280.

[24] Friedrich Steimann and Bastian Ulke. 2013. Generic Model Assist. In
Proc. of MoDELS. 18-34.

[25] Friedrich Steimann and Jens von Pilgrim. 2012. Refactorings without
names. In Proc. of ASE. 290-293.

[26] Frank Tip, Robert M. Fuhrer, Adam Kiezun, Michael D. Ernst, Ittai
Balaban, and Bjorn De Sutter. 2011. Refactoring using type constraints.
ACM Trans. Program. Lang. Syst. 33, 3 (2011), 9.

[27] Edward P. K. Tsang. 1993. Foundations of Constraint Satisfaction. Academic Press.

[28] Bastian Ulke, Friedrich Steimann, and Ralf Lammel. 2017. Partial
Evaluation of OCL Expressions. In Proc. of MoDELS. To appear.

[29] Hendrik van Antwerpen, Pierre Neron, Andrew P. Tolmach, Eelco
Visser, and Guido Wachsmuth. 2016. A constraint language for static
semantic analysis based on scope graphs. In Proc. of PEPM. 49-60.

[30] Markus Vélter, Sebastian Benz, Christian Dietrich, Birgit Engelmann,
Mats Helander, Lennart CL Kats, Eelco Visser, and Guido Wachsmuth.
2013. DSL engineering: Designing, implementing and using domainspecific languages. dslbook.org

[31] Markus Vélter, Bernd Kolb, Tamas Szabé, Daniel Ratiu, and Arie van
Deursen. 2017. Lessons learned from developing mbeddr: a case study
in language engineering with MPS. SoSyM (2017), 1-46.

[32] Markus Vélter and Sascha Lisson. 2014. Supporting Diverse Notations
in MPS’ Projectional Editor. In Proc. of GEMOC@MOoDELS. 7-16.

[33] Markus Vélter, Janet Siegmund, Thorsten Berger, and Bernd Kolb. 2014.
Towards user-friendly projectional editors. In Proc. of SLE, 41-61.

[34] Markus Vélter, Jos Warmer, and Bernd Kolb. 2015. Projecting a modular
future. IEEE Software 32, 5 (2015), 46-52.
