[1] P. M. Kogge, J. B. Brockman, T. Sterling, and G. Gao, “Processing
in Memory: Chips to Petaflops,” in Workshop on Mixing Logic and
DRAM: Chips that Compute and Remember at ISCA, vol. 97, 1997.

[2] R. C. Murphy, P. M. Kogge, and A. Rodrigues, ““The Characterization
of Data Intensive Memory Workloads on Distributed PIM Systems,”
in Intelligent iueniory Systems, 2001.

[3] J. Adibi, T. Barrett, S. Bhatt, H. Chalupsky, J. Chame, and M. Hall,
“Processing-In-Memory Technology for Knowledge Discovery Algorithms,” in Proceedings of the DaMoN, 2006.

[4] J. B. Brockman, S. Thoziyoor, $. K. Kuntz, and P. M. Kogge, “A Low

Cost, Multithreaded Processing-In-Memory System,” in Proceedings

of the WMPI, 2004. .

[5] Kang, W. Huang, S.-M. Yoo, D. Keen, Z. Ge, V. Lam, P. Pattnaik,
and J. Torrellas, “FlexRAM: Toward an Advanced Intelligent Memory
System,” in Proceedings of the ICCD, 2012.

[6] J. Draper, J. Chame, M. Hall, C. Steele, T. Barrett, J. LaCoss,
J. Granacki, J. Shin, C. Chen, C. W. Kang et al., “The Architecture
of the DIVA Processing-In-Memory Chip,” in Proceedings of the SC,

[7] QPP Pugsley, J. Jestes, H. Zhang, R. Balasubramonian, V. Srinivasan,

A. Buyuktosunoglu, A. Davis, and F. Li, “NDC: analyzing the Impact

of 3D-Stacked ven Logic Devices on MapReduce Workloads,”

in Proceedings of the ISPASS, 2014.

[8] M. Scrbak, M. Islam, K. M. Kavi, M. Ignatowski, and N. Jayasena,

“Processing-in-Memory: Exploring the Design Space.
[9] D. Zhang, N. Jayasena, fee evsky, J. L. Greathouse, L. Xu,
and M. Ignatowski, “TOP-PIM: Throughput-Oriented Programmable
Processing in Memory,” in Proceedings of the HPDC, 2014.

[10] “Micron’s Automata,” https://Awww.micronautomata.com.

[11]] S. Raoux, G. W. Burr, M. J. Breitwisch, C. T. Rettner, Y.-C. Chen,
R. M. Shelby, M. Salinga, D. Krebs, S.-H. Chen, H.-L. Lung et al.,
“Phase-Change Random Access Memory: A Scalable senor
IBM Journal of Research and Development, vol. 52, no. 4.5, 2008.
[12] D. B. Strukov, G. S. Snider, D. R. Stewart, and R. S. Williams, “The

Missing Memristor Found,” nature, vol. 453, no. 7191, 2008.

[13] A. Driskill-Smith, “Latest Advances and Future Prospects of STTRAM,” in Proceedings of the NVMW, 2010.

[14] M. Islam, M. Scrbak, K. M. Kavi, M. Ignatowski, and N. Jayasena,
7 aptovills Node-Level MapReduce Performance Using Processingin-Memory Technologies,” in Proceedings of the Euro-Par, 2014.

[15] D. P. Zhang, N. jayasenia, A. Lyashevsky, J. Greathouse, M. Meswani,
M. Nutter, and M. Ignatowski, “A New Perspective on Processingne maty Architecture Design,” in Proceedings of the SIGP. 5
ser. MSPC 713, 2013, Pp. 7:17:33.

[16] J. Dongarra et al., “The International Exascale Software Project
Roadmap,” International Journal of High Performance Computing
Applications, 2011.

[17] ¥. Kwon, M. Balazinska, B. Howe, and J. Rolia, “SkewTune:
Mitigating Skew in MapReduce Applications,” in Proceedings of the
SIGMOD, 2012.

[18] R. M. Yoo, A. Romano, and C. Kozyrakis, “Phoenix Rebirth:
Scalable MapReduce on a Large-Scale Shared-Memory System,” in
Proceedings of the IISWC, 2009.

[19] “Cache Coherent Interconnect for Accelerators (CCIX),” http://www.

[20] SNOT AMISS Unified CPU & GPU Processor Concept.”
[21] G. Loh, N. Jayasena, M. Oskin et al., “A Erocessing in Memory
Taxonomy and a Case for Studying Fixed-function PIM,” in Near
Data Processing Workshop, 2!
[22] “Netezza Data Warehouse — IBM,” https://www.ndm.net/

[23] dajawargt othe open standard for parallel programming of hetero
neous systems,” https://www.khronos.org/opencl/.

[24] J. Fang, A. L. Varbanescu, and H. Sips, ““A Comprehensive Performance Comparison of CUDA and OpenCL,” in 2011 International
Conference on Parallel Frogessing, 2011. .

[25] J. Dean and S. Ghemawat, “MapReduce: Simplified Data Processin:
on Large Clusters,” Communications of the ACM, vol. 51, no. 1, 2008.

[26] G. DeCandia, D. Hastorun, M. Jampani, G. Kakulapati, A. Lakshman,
A. Pilchin, S. Sivasubramanian, P. Vosshall, and W. Vogels, “Dynamo: Amazon’s Highly Available Key-Value Store,” in Proceedings
of the ACM SIGOPS, vol. 41, no. 6, 2007.

[27] B. Debnath, S. Sengupta, and J. Li, “FlashStore: High Throughput
Fetsigent Ke ae tore,” Proceedings of the VLDB Endowment,
vol. 3, no. 1-2, F

[28] “EnWiki.NET: Encyclopaedia Britannica Ultimate,” http:/Awww.
enwiki.net/.