[1] I. S. Duff, J. K. Reid, and J. A. Scott, “The use of profile reduction algorithms with a frontal code,” International Journal for Numerical Methods in Engineering, vol. 28, no. 11, pp. 2555–2568, 1989.
[2] I. S. Duff and G. A. Meurant, “The effect of ordering on preconditioned conjugate gradients,” BIT Numerical Mathematics, vol. 29, no. 4, pp. 635–657, 1989.
[3] C.H.Papadimitriou,“TheNP-completenessofthebandwidthminimiza- tion problem,” Computing, vol. 16, no. 3, pp. 263–270, 1976.
[4] E. Cuthill and J. McKee, “Reducing the bandwidth of sparse symmetric matrices,” in Proc. of 24th national conference. ACM, 1969, pp. 157– 172.
[5] A. George and J. W.-H. Liu, Computer Solution of Large Sparse Positive Definite Systems. Englewood Cliffs, New Jersey: Prentice-Hall Inc., 1981.
[6] S. Sloan, “An algorithm for profile and wavefront reduction of sparse matrices,” International Journal for Numerical Methods in Engineering, vol. 23, no. 2, pp. 239–251, 1986.
[7] S. Balay, S. Abhyankar, M. F. Adams, J. Brown, P. Brune, K. Buschelman, L. Dalcin, V. Eijkhout, W. D. Gropp, D. Kaushik, M. G. Knepley, L. C. McInnes, K. Rupp, B. F. Smith, S. Zampini, H. Zhang, and H. Zhang, “PETSc users manual,” Argonne National Laboratory, Tech. Rep. ANL-95/11 - Revision 3.7, 2016. [Online]. Available: http://www.mcs.anl.gov/petsc
[8] K.I.Karantasis,A.Lenharth,D.Nguyen,M.J.Garzaran,andK.Pingali, “Parallelization of reordering algorithms for bandwidth and wavefront reduction,” in International Conference for High Performance Comput- ing, Networking, Storage and Analysis (SC’14). IEEE, 2014, pp. 921– 932.
[9] J. A. George, “Computer implementation of the finite element method,” Ph.D. dissertation, Stanford, CA, USA, 1971.
[10] B. Claude, The Theory of Graphs and its Applications. Sons, 1962.
John Wiley &
[11] I. Arany, L. Szoda, and W. Smyth, “An improved method for reducing the bandwidth of sparse symmetric matrices.” in IFIP Congress (2), 1971, pp. 1246–1250.
[12] A. Buluc ̧ and K. Madduri, “Parallel breadth-first search on distributed memory systems,” in International Conference for High Performance Computing, Networking, Storage and Analysis (SC’11). ACM, 2011, pp. 65:1–65:12.
[13] A. George and J. W. H. Liu, “An implementation of a pseudoperipheral node finder,” ACM Transactions on Mathematical Software (TOMS), vol. 5, no. 3, pp. 284–295, Sep. 1979.
[14] N. E. Gibbs, W. G. Poole, Jr, and P. K. Stockmeyer, “An algorithm for reducing the bandwidth and profile of a sparse matrix,” SIAM Journal on Numerical Analysis (SINUM), vol. 13, no. 2, pp. 236–250, 1976.
[15] F. Checconi, F. Petrini, J. Willcock, A. Lumsdaine, A. R. Choudhury, and Y. Sabharwal, “Breaking the speed and scalability barriers for graph exploration on distributed-memory machines,” in International Conference for High Performance Computing, Networking, Storage and Analysis (SC’12). IEEE, 2012, pp. 1–12.
[16] C. C. Ashcraft, R. G. Grimes, J. G. Lewis, B. W. Peyton, H. D. Simon, and P. E. Bjørstad, “Progress in sparse matrix methods for large linear systems on vector supercomputers,” International Journal of High- Performance Computing Applications (IJHPCA), vol. 1, no. 4, pp. 10– 30, 1987.
[17] A. Buluc ̧ and J. R. Gilbert, “The Combinatorial BLAS: Design, imple- mentation, and applications,” International Journal of High-Performance Computing Applications (IJHPCA), vol. 25, no. 4, 2011.
[18] A. Azad and A. Buluc ̧, “Distributed-memory algorithms for maximum cardinality matching in bipartite graphs,” in IEEE International Parallel & Distributed Processing Symposium (IPDPS), 2016.
[19] J. Bruck, C.-T. Ho, S. Kipnis, E. Upfal, and D. Weathersby, “Efficient algorithms for all-to-all communications in multiport message-passing systems,” IEEE Transactions on Parallel and Distributed Systems (TPDS), vol. 8, no. 11, pp. 1143–1156, 1997.
[20] H. Sundar, D. Malhotra, and G. Biros, “HykSort: a new variant of hy- percube quicksort on distributed memory architectures,” in International Conference on Supercomputing (ICS). ACM, 2013, pp. 293–302.
[21] T. A. Davis and Y. Hu, “The university of florida sparse matrix collec- tion,” ACM Transactions on Mathematical Software (TOMS), vol. 38, no. 1, p. 1, 2011.
[22] H. M. Aktulga, A. Buluc ̧, S. Williams, and C. Yang, “Optimizing sparse matrix-multiple vectors multiplication for nuclear configuration interaction calculations,” in IEEE International Parallel & Distributed Processing Symposium (IPDPS). IEEE Computer Society, 2014.
[23] A. Buluc ̧, S. Beamer, K. Madduri, K. Asanovic ́, and D. Patterson, “Distributed-memory breadth-first search on massive graphs,” in Parallel Graph Algorithms, D. Bader, Ed. CRC Press, Taylor-Francis, 2017 (in press).
[24] J. Park et al., “SpMP: Sparse Matrix Pre-processing.” [Online]. Available: https://github.com/jspark1105/SpMP
[25] J. Chhugani, N. Satish, C. Kim, J. Sewall, and P. Dubey, “Fast and efficient graph traversal algorithm for CPUs: Maximizing single-node efficiency,” in IEEE International Parallel & Distributed Processing
Symposium (IPDPS). IEEE, 2012, pp. 378–389.
