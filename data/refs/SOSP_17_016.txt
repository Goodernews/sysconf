[1] Ole Agesen, Jim Mattson, Radu Rugina, and Jeffrey Sheldon. 2012.
Software Techniques for Avoiding Hardware Virtualization Exits. In
Proceedings of the 2012 USENIX Annual Technical Conference. Boston,
MA, 373–385.

[2] Aws Albarghouthi, Yi Li, Arie Gurfinkel, and Marsha Chechik. 2012.
UFO: A Framework for Abstraction- and Interpolation-Based Software
Verification. In Proceedings of the 24th International Conference on
Computer Aided Verification (CAV). Berkeley, CA, 672–678.

[3] Sidney Amani, Alex Hixon, Zilin Chen, Christine Rizkallah, Peter
Chubb, Liam O’Connor, Joel Beeren, Yutaka Nagashima, Japheth Lim,
Thomas Sewell, Joseph Tuong, Gabriele Keller, Toby Murray, Gerwin
Klein, and Gernot Heiser. 2016. Cogent: Verifying High-Assurance
File System Implementations. In Proceedings of the 21st International
Conference on Architectural Support for Programming Languages and
Operating Systems (ASPLOS). Atlanta, GA, 175–188.

[4] AMD. 2017. AMD64 Architecture Programmer’s Manual Volume 2:

System Programming. Rev. 3.28.

[5] Andrew W. Appel and Kai Li. 1991. Virtual Memory Primitives for
User Programs. In Proceedings of the 4th International Conference on
Architectural Support for Programming Languages and Operating Sys-
tems (ASPLOS). Santa Clara, CA, 96–107.

[6] Mike Barnett and K. Rustan M. Leino. 2005. Weakest-Precondition
of Unstructured Programs. In Proceedings of the 6th ACM SIGPLAN-
SIGSOFT Workshop on Program Analysis for Software Tools and Engi-
neering (PASTE). Lisbon, Portugal, 82–87.

[7] Andrew Baumann, Paul Barham, Pierre-Evariste Dagand, Tim Harris,
Rebecca Isaacs, Simon Peter, Timothy Roscoe, Adrian Schüpbach, and
Akhilesh Singhania. 2009. The Multikernel: A new OS architecture for
scalable multicore systems. In Proceedings of the 22nd ACM Symposium
on Operating Systems Principles (SOSP). Big Sky, MT, 29–44.

[8] Adam Belay, Andrea Bittau, Ali Mashtizadeh, David Terei, David Maz-
ières, and Christos Kozyrakis. 2012. Dune: Safe User-level Access
to Privileged CPU Features. In Proceedings of the 10th Symposium on
Operating Systems Design and Implementation (OSDI). Hollywood, CA,
335–348.

[9] Adam Belay, George Prekas, Ana Klimovic, Samuel Grossman, Christos
Kozyrakis, and Edouard Bugnion. 2014. IX: A Protected Dataplane Op-
erating System for High Throughput and Low Latency. In Proceedings
of the 11th Symposium on Operating Systems Design and Implementa-
tion (OSDI). Broomfield, CO, 49–65.

[10] William R. Bevier. 1989. Kit: A Study in Operating System Verification.
IEEE Transactions on Software Engineering 15, 11 (Nov. 1989), 1382–
1396.

[11] Cristian Cadar, Daniel Dunbar, and Dawson Engler. 2008. KLEE: Unas-
sisted and Automatic Generation of High-Coverage Tests for Complex
Systems Programs. In Proceedings of the 8th Symposium on Operating
Systems Design and Implementation (OSDI). San Diego, CA, 209–224.
[12] Haogang Chen, Yandong Mao, Xi Wang, Dong Zhou, Nickolai Zel-
dovich, and M. Frans Kaashoek. 2011. Linux kernel vulnerabilities:
State-of-the-art defenses and open problems. In Proceedings of the 2nd
Asia-Pacific Workshop on Systems. Shanghai, China. 5 pages.

[13] Haogang Chen, Daniel Ziegler, Tej Chajed, Adam Chlipala, M. Frans
Kaashoek, and Nickolai Zeldovich. 2015. Using Crash Hoare Logic
for Certifying the FSCQ File System. In Proceedings of the 25th ACM
Symposium on Operating Systems Principles (SOSP). Monterey, CA,
18–37.

[14] Andy Chou, Junfeng Yang, Benjamin Chelf, Seth Hallem, and Dawson
Engler. 2001. An Empirical Study of Operating Systems Errors. In
Proceedings of the 18th ACM Symposium on Operating Systems Princi-
ples (SOSP). Chateau Lake Louise, Banff, Canada, 73–88.

Hyperkernel: Push-Button Verification of an OS Kernel

SOSP ’17, October 28, 2017, Shanghai, China

[15] Austin T. Clements, M. Frans Kaashoek, Nickolai Zeldovich, Robert T.
Morris, and Eddie Kohler. 2013. The Scalable Commutativity Rule:
Designing Scalable Software for Multicore Processors. In Proceedings
of the 24th ACM Symposium on Operating Systems Principles (SOSP).
Farmington, PA, 1–17.

[16] Coq development team. 2017. The Coq Proof Assistant Reference Manual,

Version 8.6.1. INRIA. http://coq.inria.fr/distrib/current/refman/.

[17] Russ Cox, M. Frans Kaashoek, and Robert T. Morris. 2016. Xv6, a
simple Unix-like teaching operating system. http://pdos.csail.mit.edu/
6.828/xv6.

[18] Christoffer Dall and Jason Nieh. 2014. KVM/ARM: The Design and
Implementation of the Linux ARM Hypervisor. In Proceedings of the
19th International Conference on Architectural Support for Programming
Languages and Operating Systems (ASPLOS). Salt Lake City, UT, 333–
347.

[19] Leonardo de Moura and Nikolaj Bjørner. 2008. Z3: An Efficient SMT
Solver. In Proceedings of the 14th International Conference on Tools
and Algorithms for the Construction and Analysis of Systems (TACAS).
Budapest, Hungary, 337–340.

[20] Leonardo de Moura and Nikolaj Bjørner. 2011. Z3 - a Tutorial.
[21] Adam Dunkels. 2001. Design and Implementation of the lwIP TCP/IP

Stack. Swedish Institute of Computer Science.

[22] Kevin Elphinstone and Gernot Heiser. 2013. From L3 to seL4: What
Have We Learnt in 20 Years of L4 Microkernels?. In Proceedings of the
24th ACM Symposium on Operating Systems Principles (SOSP). Farm-
ington, PA, 133–150.

[23] Dawson R. Engler, M. Frans Kaashoek, and James W. O’Toole. 1995.
Exokernel: An Operating System Architecture for Application-Level
Resource Management. In Proceedings of the 15th ACM Symposium on
Operating Systems Principles (SOSP). Copper Mountain, CO, 251–266.
[24] R. J. Feiertag, K. N. Levitt, and L. Robinson. 1977. Proving multilevel
security of a system design. In Proceedings of the 6th ACM Symposium
on Operating Systems Principles (SOSP). West Lafayette, IN, 57–65.

[25] Ronghui Gu, Zhong Shao, Hao Chen, Xiongnan (Newman) Wu, Jieung
Kim, Vilhelm Sjöberg, and David Costanzo. 2016. CertiKOS: An Ex-
tensible Architecture for Building Certified Concurrent OS Kernels. In
Proceedings of the 12th Symposium on Operating Systems Design and
Implementation (OSDI). Savannah, GA, 653–669.

[26] Chris Hathhorn, Chucky Ellison, and Grigore Roşu. 2015. Defining
the Undefinedness of C. In Proceedings of the 2015 ACM SIGPLAN Con-
ference on Programming Language Design and Implementation (PLDI).
Portland, OR, 336–345.

[27] Chris Hawblitzel, Jon Howell, Manos Kapritsos, Jacob R. Lorch, Bryan
Parno, Michael L. Roberts, Srinath Setty, and Brian Zill. 2015. Iron-
Fleet: Proving Practical Distributed Systems Correct. In Proceedings
of the 25th ACM Symposium on Operating Systems Principles (SOSP).
Monterey, CA, 1–17.

[28] Chris Hawblitzel, Jon Howell, Jacob R. Lorch, Arjun Narayan, Bryan
Parno, Danfeng Zhang, and Brian Zill. 2014. Ironclad Apps: End-to-
End Security via Automated Full-System Verification. In Proceedings
of the 11th Symposium on Operating Systems Design and Implementa-
tion (OSDI). Broomfield, CO, 165–181.

[29] Intel. 2016. Intel Virtualization Technology for Directed I/O: Architecture

Specification. Rev. 2.4.

Analysis. MIT Press.

[30] Daniel Jackson. 2012. Software Abstractions: Logic, Language, and

[31] Dylan Johnson. 2017. Porting Hyperkernel to the ARM Architecture.

Technical Report UW-CSE-17-08-02. University of Washington.

[32] Ralf Jung, Jacques-Henri Jourdan, Robbert Krebbers, and Derek Dreyer.
2017. RustBelt: Securing the Foundations of the Rust Programming
Language. In Proceedings of the 6th ACM SIGPLAN Workshop on Higher-
Order Programming. Oxford, United Kingdom.

[33] M. Frans Kaashoek, Dawson R. Engler, Gregory R. Ganger, Héctor M.
Briceño, Russell Hunt, David Mazières, Thomas Pinckney, Robert
Grimm, John Jannotti, and Kenneth Mackenzie. 1997. Application
Performance and Flexibility on Exokernel Systems. In Proceedings
of the 16th ACM Symposium on Operating Systems Principles (SOSP).
Saint-Malo, France, 52–65.

[34] Gerwin Klein, June Andronick, Kevin Elphinstone, Toby Murray,
Thomas Sewell, Rafal Kolanski, and Gernot Heiser. 2014. Compre-
hensive formal verification of an OS microkernel. ACM Transactions
on Computer Systems 32, 1 (Feb. 2014), 2:1–70.

[35] Gerwin Klein, Kevin Elphinstone, Gernot Heiser, June Andronick,
David Cock, Philip Derrin, Dhammika Elkaduwe, Kai Engelhardt,
Michael Norrish, Rafal Kolanski, Thomas Sewell, Harvey Tuch, and
Simon Winwood. 2009. seL4: Formal Verification of an OS Kernel. In
Proceedings of the 22nd ACM Symposium on Operating Systems Princi-
ples (SOSP). Big Sky, MT, 207–220.

[36] Gerwin Klein, Thomas Sewell, and Simon Winwood. 2010. Refinement
in the Formal Verification of the seL4 Microkernel.
In Design and
Verification of Microprocessor Systems for High-Assurance Applications.
Springer, 323–339.

[37] Rafal Kolanski. 2011. Verification of Programs in Virtual Memory Using
Separation Logic. Ph.D. Dissertation. University of New South Wales.
[38] Rafal Kolanski and Gerwin Klein. 2009. Types, Maps and Separation
Logic. In Proceedings of the 22nd International Conference on Theorem
Proving in Higher Order Logics (TPHOLs). Munich, Germany, 276–292.
[39] Robbert Krebbers. 2015. The C standard formalized in Coq. Ph.D.

Dissertation. Radboud University Nijmegen.

[40] Robbert Krebbers and Freek Wiedijk. 2012. Subtleties of the ANSI/ISO

C standard. Document N1639. ISO/IEC JTC1/SC22/WG14.

[41] Chris Lattner. 2011. What Every C Programmer Should Know About
http://blog.llvm.org/2011/05/what-every-c-

Undefined Behavior.
programmer-should-know.html.

[42] Chris Lattner and Vikram Adve. 2004. LLVM: A Compilation Frame-
work for Lifelong Program Analysis & Transformation. In Proceedings
of the 2004 International Symposium on Code Generation and Optimiza-
tion (CGO). Palo Alto, CA, 75–86.

[43] Juneyoung Lee, Yoonseung Kim, Youngju Song, Chung-Kil Hur, Sanjoy
Das, David Majnemer, John Regehr, and Nuno P. Lopes. 2017. Tam-
ing Undefined Behavior in LLVM. In Proceedings of the 2017 ACM
SIGPLAN Conference on Programming Language Design and Implemen-
tation (PLDI). Barcelona, Spain, 633–647.

[44] K. Rustan M. Leino. 2010. Dafny: An Automatic Program Verifier
for Functional Correctness. In Proceedings of the 16th International
Conference on Logic for Programming, Artificial Intelligence and Rea-
soning (LPAR). Dakar, Senegal, 348–370.

[45] Amit Levy, Michael P Andersen, Bradford Campbell, David Culler,
Prabal Dutta, Branden Ghena, Philip Levis, and Pat Pannuto. 2015.
Ownership is Theft: Experiences Building an Embedded OS in Rust.
In Proceedings of the 8th Workshop on Programming Languages and
Operating Systems. Monterey, CA, 21–26.

[46] Henry M. Levy and Peter H. Lipman. 1982. Virtual Memory Man-
agement in the VAX/VMS Operating System. Computer 15, 3 (March
1982), 35–41.

[47] Linux Programmer’s Manual 2016. dup, dup2, dup3 - duplicate a file

descriptor. http://man7.org/linux/man-pages/man2/dup.2.html.

[48] John Lions. 1996. Lions’ Commentary on Unix (6th ed.). Peer-to-Peer

Communications.

[49] Nuno P. Lopes, David Menendez, Santosh Nagarakatte, and John
Regehr. 2015. Provably Correct Peephole Optimizations with Alive.
In Proceedings of the 2015 ACM SIGPLAN Conference on Programming
Language Design and Implementation (PLDI). Portland, OR, 22–32.

268

SOSP ’17, October 28, 2017, Shanghai, China

L. Nelson et al.

[50] Lanyue Lu, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau,
and Shan Lu. 2014. A Study of Linux File System Evolution. ACM
Transactions on Storage 10, 1 (Jan. 2014), 31–44.

[51] Haohui Mai, Edgar Pek, Hui Xue, Samuel T. King, and P. Madhusudan.
2013. Verifying Security Invariants in ExpressOS. In Proceedings of the
18th International Conference on Architectural Support for Programming
Languages and Operating Systems (ASPLOS). Houston, TX, 293–304.
[52] Michael Matz, Jan Hubicka, Andreas Jaeger, and Mark Mitchell. 2014.
System V Application Binary Interface: AMD64 Architecture Processor
Supplement, Draft Version 0.99.7.

[53] Kayvan Memarian, Justus Matthiesen, James Lingard, Kyndylan Nien-
huis, David Chisnall, Robert N.M. Watson, and Peter Sewell. 2016. Into
the Depths of C: Elaborating the De Facto Standards. In Proceedings of
the 2016 ACM SIGPLAN Conference on Programming Language Design
and Implementation (PLDI). Santa Barbara, CA, 1–15.

[54] Tobias Nipkow, Lawrence C. Paulson, and Markus Wenzel. 2016. Is-
abelle/HOL: A Proof Assistant for Higher-Order Logic. Springer-Verlag.
[55] Nicolas Palix, Gaël Thomas, Suman Saha, Christophe Calvès, Julia L.
Lawall, and Gilles Muller. 2011. Faults in Linux: Ten Years Later. In
Proceedings of the 16th International Conference on Architectural Support
for Programming Languages and Operating Systems (ASPLOS). Newport
Beach, CA, 305–318.

[56] Simon Peter, Jialin Li, Irene Zhang, Dan R. K. Ports, Doug Woos, Arvind
Krishnamurthy, Thomas Anderson, and Timothy Roscoe. 2014. Arrakis:
The Operating System is the Control Plane. In Proceedings of the 11th
Symposium on Operating Systems Design and Implementation (OSDI).
Broomfield, CO, 1–16.

[57] Xiaokang Qiu, Pranav Garg, Andrei Ştefănescu, and P. Madhusudan.
2013. Natural Proofs for Structure, Data, and Separation. In Proceedings
of the 2013 ACM SIGPLAN Conference on Programming Language Design
and Implementation (PLDI). Seattle, WA, 16–19.

[58] Zvonimir Rakamarić and Michael Emmi. 2014. SMACK: Decoupling
Source Language Details from Verifier Implementations. In Proceed-
ings of the 26th International Conference on Computer Aided Verifica-
tion (CAV). Vienna, Austria, 106–113.

[59] Eric Reed. 2015. Patina: A Formalization of the Rust Programming Lan-
guage. Technical Report UW-CSE-15-03-02. University of Washington.
[60] Alastair Reid. 2017. Who Guards the Guards? Formal Validation of the
ARM v8-M Architecture Specification. In Proceedings of the 2017 ACM
SIGPLAN International Conference on Object-Oriented Programming,
Systems, Languages, and Applications (OOPSLA). Vancouver, Canada,
88:1–24.

[61] Daniel Ricketts, Valentin Robert, Dongseok Jang, Zachary Tatlock, and
Sorin Lerner. 2014. Automating Formal Proofs for Reactive Systems.

In Proceedings of the 2014 ACM SIGPLAN Conference on Programming
Language Design and Implementation (PLDI). Edinburgh, UK, 452–462.
[62] Gerhard Schellhorn, Gidon Ernst, Jorg Pfähler, Dominik Haneberg,
and Wolfgang Reif. 2014. Development of a Verified Flash File System.
In Proceedings of the ABZ Conference. Toulouse, France, 9–24.

[63] Helgi Sigurbjarnarson, James Bornholt, Emina Torlak, and Xi Wang.
2016. Push-Button Verification of File Systems via Crash Refinement.
In Proceedings of the 12th Symposium on Operating Systems Design and
Implementation (OSDI). Savannah, GA, 1–16.

[64] Chandramohan A. Thekkath and Henry M. Levy. 1994. Hardware and
Software Support for Efficient Exception Handling. In Proceedings of the
6th International Conference on Architectural Support for Programming
Languages and Operating Systems (ASPLOS). San Jose, CA, 110–119.
[65] Emina Torlak and Rastislav Bodik. 2014. A Lightweight Symbolic
Virtual Machine for Solver-Aided Host Languages. In Proceedings of
the 2014 ACM SIGPLAN Conference on Programming Language Design
and Implementation (PLDI). Edinburgh, UK, 530–541.
[66] Bruce J. Walker, Richard A. Kemmerer, and Gerald J. Popek. 1980. Spec-
ification and Verification of the UCLA Unix Security Kernel. Commun.
ACM 23, 2 (Feb. 1980), 118–131.

[67] Xi Wang, Nickolai Zeldovich, M. Frans Kaashoek, and Armando Solar-
Lezama. 2013. Towards Optimization-Safe Systems: Analyzing the
Impact of Undefined Behavior. In Proceedings of the 24th ACM Sympo-
sium on Operating Systems Principles (SOSP). Farmington, PA, 260–275.
[68] Fengwei Xu, Ming Fu, Xinyu Feng, Xiaoran Zhang, Hui Zhang, and
Zhaohui Li. 2016. A Practical Verification Framework for Preemp-
tive OS Kernels. In Proceedings of the 28th International Conference on
Computer Aided Verification (CAV). Toronto, Canada, 59–79.

[69] Jean Yang and Chris Hawblitzel. 2010. Safe to the Last Instruction:
Automated Verification of a Type-Safe Operating System. In Proceed-
ings of the 2010 ACM SIGPLAN Conference on Programming Language
Design and Implementation (PLDI). Toronto, Canada, 99–110.

[70] Arseniy Zaostrovnykh, Solal Pirelli, Luis Pedrosa, Katerina Argyraki,
and George Candea. 2017. A Formally Verified NAT. In Proceedings of
the 2017 ACM SIGCOMM Conference. Los Angeles, CA, 141–154.

[71] Karen Zee, Viktor Kuncak, and Martin C. Rinard. 2008. Full Func-
tional Verification of Linked Data Structures. In Proceedings of the
2008 ACM SIGPLAN Conference on Programming Language Design and
Implementation (PLDI). Tucson, AZ, 349–361.

[72] Jianzhou Zhao, Santosh Nagarakatte, Milo M. K. Martin, and Steve
Zdancewic. 2012. Formalizing the LLVM Intermediate Representation
for Verified Program Transformations. In Proceedings of the 39th ACM
Symposium on Principles of Programming Languages (POPL). Philadel-
phia, PA, 427–440.

