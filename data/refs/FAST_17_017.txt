[1] Amazon s3. https://aws.amazon.com/en/s3.
[2] Databricks. https://databricks.com.

[3] Docker. https://www.docker.com.

[4] Dropbox. https://www.dropbox.com.

[5] Ifttt. https://fttt.com.

[6] Mirantis. https://www.mirantis.com.

[7] OpenStack
https://github.com/openstack/storlets.

Storlets.

[8] Openstack swift. http://docs.openstack.org/ developer/swift.

[9] PVFS Project. http://www.pvfs.org/.
[10] Redis. https://www.redis.io.
[11] Ssbench. https://github.com/swiftstack/ssbench.

[12] Swift performance tunning.
https://swiftstack.com/docs/admin/middleware/
ratelimit.html.

[13] The Panasas activescale file system (PanFS).
http://www. panasas.com/products/panfs.

[14] A. Acharya, M. Uysal, and J. Saltz. Active disks:
Programming model, algorithms and evaluation.
ACM SIGPLAN Notices, 33(11):81-91, 1998.

[15] G. A. Agha. Actors: A model of concurrent computation in distributed systems. Technical report,
The MIT Press, 1985.

[16] A. Anwar, Y. Cheng, A. Gupta, and A. R. Butt.
Taming the cloud object storage with mos. In Proceedings of the 10th Parallel Data Storage Workshop, pages 7-12, 2015.

[17] A. Anwar, Y. Cheng, A. Gupta, and A. R. Butt.
Mos: Workload-aware elasticity for cloud object
stores. In ACM HPDC’ 16, pages 177-188, 2016.

[18] J. Armstrong. Programming Erlang: software for
a concurrent world, Pragmatic Bookshelf, 2007.

[19] D. Beaver, S. Kumar, H. C. Li, J. Sobel, and P. Vajgel. Finding a needle in haystack: Facebook’s
photo storage. In USENIX OSDI’10, pages 1-8,
2010.

[20] G. Cugola and A. Margara. Processing flows of
information: From data stream to complex event
processing. ACM Computing Surveys (CSUR),
44(3):15, 2012.

[21] P. T. Eugster, P. A. Felber, R. Guerraoui, and A.-M.
Kermarrec. The many faces of publish/subscribe.
ACM Computing Surveys (CSUR), 35(2):114-131,
2003.

[22] M. Factor, G. Vernik, and R. Xin. The
perfect match: Apache spark meets swift.
https://www.openstack.org/summit/openstackparis-summit-2014/sessionvideos/presentation/the-perfect-match-apachespark-meets-swift, November 2014.

[23] R. Gracia-Tinedo, P. Garcia-Lépez, M. SanchezArtigas, J. Sampé, Y. Moatti, E. Rom, D. Naor,
R. Nou, T. Cortes, and W. Oppermann. IOStack:
Software-defined object storage. JEEE Internet
Computing, 2016.

[24] R. Gracia-Tinedo, D. Harnik, D. Naor, D. Sotnikov, S. Toledo, and A. Zuck. SDGen: mimicking
datasets for content generation in storage benchmarks. In USENIX FAST’15, pages 317-330, 2015.

[25] R. Gracia-Tinedo, Y. Tian, J. Sampé, H. Harkous,
J. Lenton, P. Garcia-Lépez, M. Sanchez-Artigas,
and M. Vukolic. Dissecting ubuntuone: Autopsy
of a global-scale personal cloud back-end. In ACM
IMC’15, pages 155-168, 2015.

[26] A. Gulati, I. Ahmad, C. A. Waldspurger, et al.
Parda: Proportional allocation of resources for distributed storage access. In USENIX FAST’09, pages
85-98, 2009.

[27] A. Gulati, A. Merchant, and P. J. Varman. mclock:
handling throughput variability for hypervisor io
scheduling. In USENIX OSDI’ 10, pages 1-7, 2010.

[28] A. Gulati and P. Varman. Lexicographic qos
scheduling for parallel i/o. In ACM SPAA’05, pages
29–38, 2005.
[29] D. Harnik, R. Kat, D. Sotnikov, A. Traeger, and
O. Margalit. To zip or not to zip: Effective resource
usage for real-time compression. In USENIX
FAST’13, pages 229–241, 2013.
[30] S. R. Jeffery, G. Alonso, M. J. Franklin, W. Hong,
and J. Widom. A pipelined framework for online
cleaning of sensor data streams. In IEEE ICDE’06,
pages 140–140, 2006.
[31] K. Keeton, D. A. Patterson, and J. M. Hellerstein.
A case for intelligent disks (idisks). ACM SIGMOD
Record, 27(3):42–52, 1998.
[32] N. Li, H. Jiang, D. Feng, and Z. Shi. Pslo: enforcing the x th percentile latency and throughput slos
for consolidated vm storage. In ACM Eurosys’16,
page 28, 2016.
[33] J. Mace, P. Bodik, R. Fonseca, and M. Musuvathi.
Retro: Targeted resource management in multitenant distributed systems. In USENIX NSDI’15,
2015.
[34] M. Murugan, K. Kant, A. Raghavan, and D. H.
Du. Flexstore: A software defined, energy adaptive distributed storage framework. In IEEE MASCOTS’14, pages 81–90, 2014.
[35] J. Piernas, J. Nieplocha, and E. J. Felix. Evaluation of active storage strategies for the lustre parallel file system. In ACM/IEEE Supercomputing’07,
page 28, 2007.
[36] E. Riedel, G. Gibson, and C. Faloutsos. Active storage for large-scale data mining and multimedia applications. In VLDB’98, pages 62–73, 1998.
[37] D. Shue, M. J. Freedman, and A. Shaikh. Fairness
and isolation in multi-tenant storage as optimization decomposition. ACM SIGOPS Operating Systems Review, 47(1):16–21, 2013.
[38] I. Stefanovici, B. Schroeder, G. O’Shea, and
E. Thereska. sRoute: treating the storage stack like
a network. In USENIX FAST’16, pages 197–212,
2016.
[39] I. Stefanovici, E. Thereska, G. O’Shea,
B. Schroeder, H. Ballani, T. Karagiannis, A. Rowstron, and T. Talpey. Software-defined caching:
Managing caches in multi-tenant data centers. In
ACM SoCC’15, pages 174–181, 2015.
[40] R. Stutsman, C. Lee, and J. Ousterhout. Experience
with rules-based programming for distributed, concurrent, fault-tolerant code. In USENIX ATC’15,
pages 17–30, 2015.
[41] E. Thereska, H. Ballani, G. O’Shea, T. Karagiannis, A. Rowstron, T. Talpey, R. Black, and T. Zhu.
Ioflow: a software-defined storage architecture. In
ACM SOSP’13, pages 182–196, 2013.
[42] M. Uysal, A. Acharya, and J. Saltz. Evaluation of
active disks for decision support databases. In IEEE
HPCA’00, pages 337–348, 2000.
[43] A. Wang, S. Venkataraman, S. Alspaugh, R. Katz,
and I. Stoica. Cake: enabling high-level slos on
shared storage systems. In ACM SoCC’12, page 14,
2012.
[44] Y. Wang and A. Merchant. Proportional-share
scheduling for distributed storage systems. In
USENIX FAST’07, 2007.
[45] J. C. Wu and S. A. Brandt. Providing quality of
service support in object-based file system. In IEEE
MSST’07, volume 7, pages 157–170, 2007.
[46] E. Zamora-Gomez, P. Garc ´ ´ıa-Lopez, and ´
R. Mondejar. Continuation complexity: A callback ´
hell for distributed systems. In LSDVE@EuroPar’15, pages 286–298, 2015.
