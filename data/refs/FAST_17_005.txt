[1] M. Accetta, R. Baron, W. Bolosky, D. Golub,
R. Rashid, A. Tevanian, and M. Young. Mach:
A new kernel foundation for UNIX development.
In Proceedings of the Summer USENIX Technical Conference, pages 93–112, Atlanta, GA, June
1986. USENIX Association.
[2] The Apache Foundation. Hadoop, January 2010.
http:// hadoop.apache.org.
[3] J. Bent, G. Gibson, G. Grider, B. McClelland, P. Nowoczynski, J. Nunez, M. Polte, and
M. Wingate. Plfs: A checkpoint filesystem for
parallel applications. Technical Report LA-UR 09-
02117, LANL, April 2009. http://institute.lanl.gov/
plfs/.
[4] B. Callaghan, B. Pawlowski, and P. Staubach. NFS
Version 3 Protocol Specification. RFC 1813, Network Working Group, June 1995.
[5] Z. Cao, V. Tarasov, H. Raman, D. Hildebrand, and
E. Zadok. On the performance variation in modern storage stacks. In Proceedings of the 15th
USENIX Conference on File and Storage Technologies (FAST), Santa Clara, CA, February/March
2017. USENIX Association. to appear.
[6] R. Card, T. Ts’o, and S. Tweedie. Design and implementation of the second extended filesystem. In
Proceedings to the First Dutch International Symposium on Linux, Seattle, WA, December 1994.
[7] Michael Condict, Don Bolinger, Dave Mitchell,
and Eamonn McManus. Microkernel Modularity
with Integrated Kernel Performance. In Proceedings of the First Symposium on Operating Systems
Design and Implementation (OSDI 1994), Monterey, CA, November 1994.
[8] Jonathan Corbet. In defense of per-bdi writeback,
September 2009. http://lwn.net/Articles/ 354851/.
[9] B. Cornell, P. A. Dinda, and F. E. Bustamante.
Wayback: A User-level Versioning File System
for Linux. In Proceedings of the Annual USENIX
Technical Conference, FREENIX Track, pages 19–
28, Boston, MA, June 2004. USENIX Association.
[10] Mathieu Desnoyers. Using the Linux kernel tracepoints, 2016. https://www.kernel.org/ doc/
Documentation/trace/tracepoints.txt.
[11] Ext4 Documentation. https://www.kernel.org/ doc/
Documentation/filesystems/ ext4.txt.
[12] Filebench, 2016. https:// github.com/filebench/
filebench/wiki.
[13] S. Ghemawat, H. Gobioff, and S. T. Leung. The
Google file system. In Proceedings of the 19th
ACM Symposium on Operating Systems Principles
(SOSP ’03), pages 29–43, Bolton Landing, NY,
October 2003. ACM SIGOPS.
[14] Hermann Hartig, Michael Hohmuth, Jochen
Liedtke, Jean Wolter, and Sebastian Schonberg.
The performance of Microkernel-based systems.
In Proceedings of the 16th Symposium on Operating Systems Principles (SOSP ’97), Saint Malo,
France, October 1997. ACM.
[15] V. Henson, A. Ven, A. Gud, and Z. Brown.
Chunkfs: Using Divide-and-Conquer to Improve
File System Reliability and Repair. In Proceedings of the Second Workshop on Hot Topics in System Dependability (HotDep 2006), Seattle, WA,
November 2006. ACM SIGOPS.
[16] GNU Hurd. www.gnu.org/ software/ hurd/ hurd.html.
[17] Shun Ishiguro, Jun Murakami, Yoshihiro Oyama,
and Osamu Tatebe. Optimizing local file accesses
for FUSE-based distributed storage. In High Performance Computing, Networking, Storage and
Analysis (SCC), 2012 SC Companion, pages 760–
765. IEEE, 2012.
[18] N. Joukov, A. Traeger, R. Iyer, C. P. Wright, and
E. Zadok. Operating System Profiling via Latency
Analysis. In Proceedings of the 7th Symposium
on Operating Systems Design and Implementation
(OSDI 2006), pages 89–102, Seattle, WA, November 2006. ACM SIGOPS.
[19] Lessfs, January 2012. www.lessfs.com.
[20] Linus Torvalds doesn’t understand user-space filesystems. http:
// redhatstorage.redhat.com/ 2011/ 06/ 28/
linus-torvalds-doesnt-understand-user-space-storage/.
[21] David Mazieres. A toolkit for user-level file systems. In Proceedings of the 2001 USENIX Annual
Technical Conference, 2001.
[22] M. K. McKusick, W. N. Joy, S. J. Leffler, and R. S.
Fabry. A fast file system for UNIX. ACM Transactions on Computer Systems, 2(3):181–197, August
1984.
[23] Sumit Narayan, Rohit K Mehta, and John A
Chandy. User space storage system stack modules
with file level control. In Proceedings of the 12th
Annual Linux Symposium in Ottawa, pages 189–
196, 2010.
[24] Nimble’s Hybrid Storage Architecture.
http://info.nimblestorage.com/ rs/ nimblestorage/
images/ nimblestorage technology overview.pdf.
[25] NTFS-3G. www.tuxera.com.
[26] David Pease, Arnon Amir, Lucas Villa Real, Brian
Biskeborn, Michael Richmond, and Atsushi Abe.
The linear tape file system. In 2010 IEEE 26th
Symposium on Mass Storage Systems and Technologies (MSST), 2010.
[27] Aditya Rajgarhia and Ashish Gehani. Performance
and extension of user space file systems. In 25th
Symposium On Applied Computing. ACM, March
2010.
[28] Nikolaus Rath. List of fuse based file systems (git
page), 2011. https:// github.com/libfuse/libfuse/wiki/
Filesystems.
[29] Glusterfs. http://www.gluster.org/.
[30] F. Schmuck and R. Haskin. GPFS: A shared-disk
file system for large computing clusters. In Proceedings of the First USENIX Conference on File
and Storage Technologies (FAST ’02), pages 231–
244, Monterey, CA, January 2002. USENIX Association.
[31] Opendedup, January 2012. www.opendedup.org.
[32] D. Steere, J. Kistler, and M. Satyanarayanan. Efficient user-level file cache management on the
sun vnode interface. In Proceedings of the Summer USENIX Technical Conference, Anaheim, CA,
June 1990. IEEE.
[33] Swaminathan Sundararaman, Laxman Visampalli,
Andrea C Arpaci-Dusseau, and Remzi H ArpaciDusseau. Refuse to crash with Re-FUSE. In Proceedings of the sixth conference on Computer systems, pages 77–90. ACM, 2011.
[34] A. Sweeney, D. Doucette, W. Hu, C. Anderson,
M. Nishimoto, and G. Peck. Scalability in the XFS
file system. In Proceedings of the Annual USENIX
Technical Conference, pages 1–14, San Diego, CA,
January 1996.
[35] M. Szeredi. Filesystem in Userspace. http:// fuse.
sourceforge.net, February 2005.
[36] V. Tarasov, A. Gupta, K. Sourav, S. Trehan, and
E. Zadok. Terra incognita: On the practicality of
user-space file systems. In HotStorage ’15: Proceedings of the 7th USENIX Workshop on Hot Topics in Storage, Santa Clara, CA, July 2015.
[37] V. Tarasov, E. Zadok, and S. Shepler. Filebench: A
flexible framework for file system benchmarking.
;login: The USENIX Magazine, 41(1):6–12, March
2016.
[38] L. Torvalds. splice(). Kernel Trap, 2007. http:
// kerneltrap.org/ node/ 6505.
[39] Linux Torwalds. Re: [patch 0/7] overlay filesystem: request for inclusion. https://lkml.org/lkml/
2011/ 6/ 9/ 462.
[40] C. Ungureanu, B. Atkin, A. Aranya, S. Gokhale,
S. Rago, G. Calkowski, C. Dubnicki, and A. Bohra.
HydraFS: a High-Throughput File System for the
HYDRAstor Content-Addressable Storage System. In Proceedings of the FAST Conference, 2010.
[41] Sage Weil. Linus vs fuse. http:// ceph.com/ dev-notes/
linus-vs-fuse/.
[42] Assar Westerlund and Johan Danielsson. Arla-a
free AFS client. In Proceedings of the Annual
USENIX Technical Conference, FREENIX Track,
New Orleans, LA, June 1998. USENIX Association.
[43] Felix Wiemann. List of fuse based file systems
(wiki page), 2006. https:// en.wikipedia.org/wiki/
Filesystem in Userspace#Example uses.
[44] E. Zadok and J. Nieh. FiST: A language for stackable file systems. In Proceedings of the Annual
USENIX Technical Conference, pages 55–70, San
Diego, CA, June 2000. USENIX Association.
[45] ZFS for Linux, January 2016. www.zfs-fuse.net.
[46] B. Zhu, K. Li, and H. Patterson. Avoiding the disk
bottleneck in the data domain deduplication file
system. In Proceedings of the Sixth USENIX Conference on File and Storage Technologies (FAST
’08), San Jose, California, USA, 2008.
