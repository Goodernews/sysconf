[1] “9th DIMACS Implementation Challenge: Shortest Paths,” 2006.
[2] N. Agarwal, T. Krishna, L.-S. Peh, and N. K. Jha, “GARNET: A
detailed on-chip network model inside a full-system simulator,” in
ISPASS, 2009.
[3] H. Akkary and M. A. Driscoll, “A dynamic multithreading processor,” in MICRO-31, 1998.
[4] M. Ansari, M. Luján, C. Kotselidis, K. Jarvis, C. Kirkham, and
I. Watson, “Steal-on-abort: Improving transactional memory performance through dynamic transaction reordering,” in HiPEAC,
2009.
[5] U. Aydonat and T. S. Abdelrahman, “Hardware support for relaxed concurrency control in transactional memory,” in MICRO43, 2010.
[6] D. Bader, H. Meyerhenke, P. Sanders, and D. Wagner, Eds., 10th
DIMACS Implementation Challenge Workshop, 2012.
[7] G. Blake, R. G. Dreslinski, and T. Mudge, “Proactive transaction
scheduling for contention management,” in MICRO-42, 2009.
[8] G. Blake, R. G. Dreslinski, and T. Mudge, “Bloom filter guided
transaction scheduling,” in MICRO-44, 2011.
[9] G. Blelloch, J. Fineman, P. Gibbons, and J. Shun, “Internally
deterministic parallel algorithms can be fast,” in PPoPP, 2012.
[10] W. Blume, R. Doallo, R. Eigenmann, J. Grout, J. Hoeflinger,
and T. Lawrence, “Parallel programming with Polaris,” Computer,
vol. 29, no. 12, 1996.
[11] J. Bobba, K. E. Moore, H. Volos, L. Yen, M. D. Hill, M. M.
Swift, and D. A. Wood, “Performance pathologies in hardware
transactional memory,” in ISCA-34, 2007.
[12] C. Boneti, F. J. Cazorla, R. Gioiosa, A. Buyuktosunoglu, C.-Y.
Cher, and M. Valero, “Software-controlled priority characterization of POWER5 processor,” in ISCA-35, 2008.
[13] C. Boneti, R. Gioiosa, F. J. Cazorla, and M. Valero, “A dynamic
scheduler for balancing HPC applications,” in SC08, 2008.
[14] S. Boyd-Wickizer, M. F. Kaashoek, R. Morris, and N. Zeldovich,
“Non-scalable locks are dangerous,” in Linux Symposium, 2012.
[15] Q. Cai, J. González, R. Rakvic, G. Magklis, P. Chaparro, and
A. González, “Meeting points: using thread criticality to adapt
multicore hardware to parallel regions,” in PACT-17, 2008.
[16] H. W. Cain, M. M. Michael, B. Frey, C. May, D. Williams, and
H. Le, “Robust architectural support for transactional memory in
the Power architecture,” in ISCA-40, 2013.
[17] J. Carter and M. Wegman, “Universal classes of hash functions
(extended abstract),” in STOC-9, 1977.
[18] L. Ceze, J. Tuck, P. Montesinos, and J. Torrellas, “BulkSC: bulk
enforcement of sequential consistency,” in ISCA-34, 2007.
[19] L. Ceze, J. Tuck, J. Torrellas, and C. Cascaval, “Bulk disambiguation of speculative threads in multiprocessors,” in ISCA-33, 2006.
[20] J. D. Davis, J. Laudon, and K. Olukotun, “Maximizing CMP
throughput with mediocre cores,” in PACT-14, 2005.
[21] T. Davis and Y. Hu, “The University of Florida sparse matrix
collection,” ACM TOMS, vol. 38, no. 1, 2011.
[22] J. Devietti, B. Lucia, L. Ceze, and M. Oskin, “DMP: deterministic
shared memory multiprocessing,” in ASPLOS-XIV, 2009.
[23] J. Emer, “EV8: the post-ultimate alpha,” Keynote at PACT, 2001.
[24] A. Estebanez, D. R. Llanos, and A. Gonzalez-Escribano, “A survey on thread-level speculation techniques,” ACM CSUR, vol. 49,
no. 2, 2016.
[25] K. Fatahalian and M. Houston, “GPUs a closer look,” in ACM
SIGGRAPH 2008 classes, 2008.
[26] W. W. Fung and T. M. Aamodt, “Energy efficient GPU transactional memory via space-time optimizations,” in MICRO-46, 2013.
[27] W. W. Fung, I. Singh, A. Brownsword, and T. M. Aamodt, “Hardware transactional memory for GPU architectures,” in MICRO-44,
2011.
[28] M. J. Garzarán, M. Prvulovic, J. M. Llaberı́a, V. Viñals, L. Rauchwerger, and J. Torrellas, “Tradeoffs in buffering speculative memory
state for thread-level speculation in multiprocessors,” in HPCA-9,
2003.
[29] R. Golla and P. Jordan, “T4: A highly threaded server-on-a-chip
with native support for heterogeneous computing,” in HotChips23, 2011.
[30] L. Gwennap, “ThunderX rattles server market,” Microprocessor
Report, vol. 29, no. 6, 2014.
[31] L. Hammond, M. Willey, and K. Olukotun, “Data speculation
support for a chip multiprocessor,” in ASPLOS-VIII, 1998.
[32] L. Hammond, V. Wong, M. Chen, B. D. Carlstrom, J. D. Davis,
B. Hertzberg, M. K. Prabhu, H. Wijaya, C. Kozyrakis, and
K. Olukotun, “Transactional memory coherence and consistency,”
in ISCA-31, 2004.
[33] W. Hasenplaugh, T. Kaler, T. B. Schardl, and C. E. Leiserson,
“Ordering heuristics for parallel graph coloring,” in SPAA, 2014.
[34] M. A. Hassaan, M. Burtscher, and K. Pingali, “Ordered vs. unordered: a comparison of parallelism and work-efficiency in irregular algorithms,” in PPoPP, 2011.
[35] M. Herlihy and J. E. B. Moss, “Transactional memory: Architectural support for lock-free data structures,” in ISCA-20, 1993.
[36] C. Jacobi, T. Slegel, and D. Greiner, “Transactional memory
architecture and implementation for IBM System Z,” in MICRO45, 2012.
[37] S. A. R. Jafri, G. Voskuilen, and T. Vijaykumar, “Wait-n-GoTM:
improving HTM performance by serializing cyclic dependencies,”
in ASPLOS-XVIII, 2013.
[38] D. Jefferson, “Virtual time,” ACM TOPLAS, vol. 7, no. 3, 1985.
[39] M. C. Jeffrey, S. Subramanian, M. Abeydeera, J. Emer, and
D. Sanchez, “Data-centric execution of speculative parallel programs,” in MICRO-49, 2016.
[40] M. C. Jeffrey, S. Subramanian, C. Yan, J. Emer, and D. Sanchez,
“A scalable architecture for ordered parallelism,” in MICRO-48,
2015.
[41] M. C. Jeffrey, S. Subramanian, C. Yan, J. Emer, and D. Sanchez,
“Unlocking ordered parallelism with the Swarm architecture,”
IEEE Micro, vol. 36, no. 3, May 2016.
[42] J. A. Joao, M. A. Suleman, O. Mutlu, and Y. N. Patt, “Bottleneck
identification and scheduling in multithreaded applications,” in
ASPLOS-XVII, 2012.
[43] A. Jog, O. Kayiran, N. Chidambaram Nachiappan, A. K. Mishra,
M. T. Kandemir, O. Mutlu, R. Iyer, and C. R. Das, “OWL: Cooperative thread array aware scheduling techniques for improving
GPGPU performance,” in ASPLOS-XVIII, 2013.
[44] C. Kim, D. Burger, and S. Keckler, “An adaptive, non-uniform
cache structure for wire-delay dominated on-chip caches,” in
ASPLOS-X, 2002.
[45] P. Kongetira, K. Aingaran, and K. Olukotun, “Niagara: A 32way multithreaded SPARC processor,” IEEE Micro, vol. 25, no. 2,
2005.
[46] C. Leiserson and T. Schardl, “A work-efficient parallel breadthfirst search algorithm,” in SPAA, 2010.
[47] J. Leskovec and A. Krevl, “SNAP Datasets: Stanford large network
dataset collection,” http://snap.stanford.edu/data, 2014.
[48] D. Li, M. Rhu, D. R. Johnson, M. O’Connor, M. Erez, D. Burger,
D. S. Fussell, and S. W. Redder, “Priority-based cache allocation
in throughput processors,” in HPCA-21, 2015.
[49] C. Luk, R. Cohn, R. Muth, H. Patil, A. Klauser, G. Lowney, S. Wallace, V. J. Reddi, and K. Hazelwood, “Pin: Building customized
program analysis tools with dynamic instrumentation,” in PLDI,
2005.
[50] C. C. Minh, J. Chung, C. Kozyrakis, and K. Olukotun, “STAMP:
Stanford Transactional Applications for Multi-Processing,” in
IISWC, 2008.
[51] K. Moore, J. Bobba, M. Moravan, M. Hill, and D. Wood, “LogTM:
Log-based transactional memory,” in HPCA-12, 2006.
[52] T. Nakaike, R. Odaira, M. Gaudet, M. M. Michael, and H. Tomari,
“Quantitative comparison of hardware transactional memory for
Blue Gene/Q, zEnterprise EC12, Intel Core, and POWER8,” in
ISCA-42, 2015.
[53] V. Narasiman, M. Shebanow, C. J. Lee, R. Miftakhutdinov,
O. Mutlu, and Y. N. Patt, “Improving GPU performance via large
warps and two-level warp scheduling,” in MICRO-44, 2011.
[54] OpenStreetMap, “http://www.openstreetmap.org.”
[55] V. Packirisamy, Y. Luo, W.-L. Hung, A. Zhai, P.-C. Yew, and
T.-F. Ngai, “Efficiency of thread-level speculation in SMT and
CMP architectures-performance, power and thermal perspective,”
in ICCD, 2008.
[56] H. Pan, K. Asanović, R. Cohn, and C.-K. Luk, “Controlling
program execution through binary instrumentation,” SIGARCH
Comput. Archit. News, vol. 33, no. 5, Dec 2005.
[57] I. Park, B. Falsafi, and T. N. Vijaykumar, “Implicitlymultithreaded processors,” in ISCA-30, 2003.
[58] K. Pingali, D. Nguyen, M. Kulkarni, M. Burtscher, M. A. Hassaan,
R. Kaleem, T.-H. Lee, A. Lenharth, R. Manevich, M. MéndezLojo, D. Prountzos, and X. Sui, “The tao of parallelism in algorithms,” in PLDI, 2011.
[59] X. Qian, B. Sahelices, and J. Torrellas, “BulkSMT: Designing
SMT processors for atomic-block execution,” in HPCA-18, 2012.
[60] X. Qian, B. Sahelices, and J. Torrellas, “OmniOrder: Directorybased conflict serialization of transactions,” in ISCA-41, 2014.
[61] S. E. Raasch and S. K. Reinhardt, “The impact of resource partitioning on SMT processors,” in PACT-12, 2003.
[62] R. Rajwar and J. R. Goodman, “Transactional lock-free execution
of lock-based programs,” in ASPLOS-X, 2002.
[63] R. Rajwar, M. Herlihy, and K. Lai, “Virtualizing transactional
memory,” in ISCA-32, 2005.
[64] H. E. Ramadan, C. J. Rossbach, and E. Witchel, “Dependenceaware transactional memory for increased concurrency,” in
MICRO-41, 2008.
[65] L. Rauchwerger and D. A. Padua, “The LRPD test: Speculative
run-time parallelization of loops with privatization and reduction
parallelization,” IEEE Trans. Parallel Distrib. Syst., vol. 10, no. 2,
1999.
[66] J. Renau, K. Strauss, L. Ceze, W. Liu, S. Sarangi, J. Tuck, and
J. Torrellas, “Thread-level speculation on a CMP can be energy
efficient,” in ICS’05, 2005.
[67] J. Renau, J. Tuck, W. Liu, L. Ceze, K. Strauss, and J. Torrellas,
“Tasking with out-of-order spawn in TLS chip multiprocessors:
microarchitecture and compilation,” in ICS’05, 2005.
[68] T. G. Rogers, M. O’Connor, and T. M. Aamodt, “Cache-conscious
wavefront scheduling,” in MICRO-45, 2012.
[69] D. Sanchez and C. Kozyrakis, “ZSim: Fast and accurate microarchitectural simulation of thousand-core systems,” in ISCA-40,
2013.
[70] W. N. Scherer III and M. L. Scott, “Advanced contention management for dynamic software transactional memory,” in PODC,
2005.
[71] A. Sethia, D. A. Jamshidi, and S. Mahlke, “Mascar: Speeding up
GPU warps by reducing memory pitstops,” in HPCA-21, 2015.
[72] N. Shavit and D. Touitou, “Software transactional memory,” in
PODC, 1995.

[73] B. Smith, “The architecture of HEP,” in On Parallel MIMD computation: HEP supercomputer and its applications, 1985.
[74] A. Snavely and D. M. Tullsen, “Symbiotic jobscheduling for a
simultaneous multithreading processor,” in ASPLOS-IX, 2000.
[75] A. Sodani, R. Gramunt, J. Corbal, H.-S. Kim, K. Vinod,
S. Chinthamani, S. Hutsell, R. Agarwal, and Y.-C. Liu, “Knights
Landing: Second-generation Intel Xeon Phi product,” IEEE Micro,
vol. 36, no. 2, 2016.
[76] G. Sohi, S. Breach, and T. Vijaykumar, “Multiscalar processors,”
in ISCA-22, 1995.
[77] J. G. Steffan, C. Colohan, A. Zhai, and T. Mowry, “A scalable
approach to thread-level speculation,” in ISCA-27, 2000.
[78] J. G. Steffan and T. Mowry, “The potential for using thread-level
data speculation to facilitate automatic parallelization,” in HPCA4, 1998.
[79] S. Subramanian, M. C. Jeffrey, M. Abeydeera, H. R. Lee, V. A.
Ying, J. Emer, and D. Sanchez, “Fractal: An execution model for
fine-grain nested speculative parallelism,” in ISCA-44, 2017.
[80] M. A. Suleman, O. Mutlu, M. K. Qureshi, and Y. N. Patt, “Accelerating critical section execution with asymmetric multi-core
architectures,” in ASPLOS-XIV, 2009.
[81] S. Tu, W. Zheng, E. Kohler, B. Liskov, and S. Madden, “Speedy
transactions in multicore in-memory databases,” in SOSP-24,
2013.
[82] D. M. Tullsen, S. J. Eggers, J. S. Emer, H. M. Levy, J. L. Lo, and
R. L. Stamm, “Exploiting choice: Instruction fetch and issue on an
implementable simultaneous multithreading processor,” in ISCA23, 1996.
[83] D. M. Tullsen, S. J. Eggers, and H. M. Levy, “Simultaneous multithreading: Maximizing on-chip parallelism,” in ISCA-22, 1995.
[84] D. M. Tullsen, J. L. Lo, S. J. Eggers, and H. M. Levy, “Supporting
fine-grained synchronization on a simultaneous multithreading
processor,” in HPCA-5, 1999.
[85] N. Vachharajani, R. Rangan, E. Raman, M. J. Bridges, G. Ottoni,
and D. I. August, “Speculative decoupled software pipelining,” in
PACT-16, 2007.
[86] G. Voskuilen, F. Ahmad, and T. Vijaykumar, “TimeTraveler: Exploiting acyclic races for optimizing memory race recording,” in
ISCA-37, 2010.
[87] S. Wallace, B. Calder, and D. M. Tullsen, “Threaded multiple path
execution,” in ISCA-25, 1998.
[88] A. Wang, M. Gaudet, P. Wu, J. N. Amaral, M. Ohmacht, C. Barton,
R. Silvera, and M. Michael, “Evaluation of Blue Gene/Q hardware
support for transactional memories,” in PACT-21, 2012.
[89] D. J. Welsh and M. B. Powell, “An upper bound for the chromatic
number of a graph and its application to timetabling problems,”
The Computer Journal, vol. 10, no. 1, 1967.
[90] L. Yen, J. Bobba, M. Marty, K. Moore, H. Volos, M. Hill, M. Swift,
and D. Wood, “LogTM-SE: Decoupling hardware transactional
memory from caches,” in HPCA-13, 2007.
[91] R. M. Yoo, C. J. Hughes, K. Lai, and R. Rajwar, “Performance
evaluation of Intel transactional synchronization extensions for
high-performance computing,” in SC13, 2013.
[92] R. M. Yoo and H.-H. S. Lee, “Adaptive transaction scheduling for
transactional memory systems,” in SPAA, 2008.
[93] Y. Zhang, L. Rauchwerger, and J. Torrellas, “Hardware for speculative run-time parallelization in distributed shared-memory multiprocessors,” in HPCA-4, 1998.
