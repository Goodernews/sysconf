
[1] Apache Hadoop, http://hadoop.apache.org/.
[2] Building the Periscope Data Cache with Amazon Redshift.

https://goo.gl/c68EzG.

[3] Discardable distributed memory: Supporting memory
storage in HDFS, http://hortonworks.com/blog/ddm/.

[4] Hadoop fair scheduler,

http://hadoop.apache.org/docs/r1.2.1/fair_scheduler.html.

[5] Livy job server. https://github.com/cloudera/livy.
[6] Presto: Interacting with petabytes of data at Facebook.

http://on.fb.me/LnFVAM.

[7] REST job server for Apache Spark.

https://github.com/spark-jobserver/spark-jobserver.

[8] ROBUS Cache Planner,

https://github.com/dukedbgroup/ROBUS.

[9] The self managing database: Automatic SGA memory

management. Oracle white paper, November 2003.
http://goo.gl/7in5Vb.

[10] Spark: Lightning fast cluster computing,

https://spark.apache.org/.

[11] TPC-DS benchmark, http://www.tpc.org/tpcds/.
[12] TPC-H benchmark, http://www.tpc.org/tpch/.
[13] A. Abdulkadiroglu and T. Sonmez. Random serial

dictatorship and the core from random endowments in house
allocation problems. Econometrica, 66(3):689–701, 1998.

[14] P. Agrawal, D. Kifer, and C. Olston. Scheduling shared scans
of large data ﬁles. Proc. VLDB Endow., 1(1):958–969, Aug.
2008.

[15] S. Agrawal, S. Chaudhuri, and V. R. Narasayya. Automated

selection of materialized views and indexes in SQL
databases. VLDB ’00, pages 496–505, San Francisco, CA,
USA, 2000. Morgan Kaufmann Publishers Inc.

[16] G. Ananthanarayanan, A. Ghodsi, A. Wang, D. Borthakur,

S. Kandula, S. Shenker, and I. Stoica. PACMan: Coordinated
memory caching for parallel jobs. NSDI’12, pages 20–20,
Berkeley, CA, USA, 2012. USENIX Association.

[17] M. Andrews. Instability of the proportional fair scheduling

algorithm for hdr. Wireless Communications, IEEE
Transactions on, 3(5):1422–1426, 2004.

[18] S. Arora, E. Hazan, and S. Kale. The multiplicative weights
update method: A meta algorithm and applications. Theory
of Computing, 8:121–164, 2005.

[19] S. Aulbach, T. Grust, D. Jacobs, A. Kemper, and J. Rittinger.

Multi-tenant databases for software as a service:
Schema-mapping techniques. SIGMOD ’08, pages
1195–1206, New York, NY, USA, 2008. ACM.

[20] R. J. Aumann. Markets with a continuum of traders.

Econometrica: Journal of the Econometric Society, pages
39–50, 1964.

[21] M. Berkelaar, K. Eikland, and P. Notebaert. lpsolve : Open

source (Mixed-Integer) Linear Programming system.
[22] A. Bhalgat, S. Gollapudi, and K. Munagala. Optimal

auctions via the multiplicative weight method. In
Proceedings of the fourteenth ACM conference on Electronic
commerce, pages 73–90. ACM, 2013.

[23] A. Bogomolnaia and H. Moulin. A new solution to the

random assignment problem. Journal of Economic Theory,
100(2):295–328, 2001.

[24] N. Bruno and S. Chaudhuri. An online approach to physical

design tuning. In ICDE, 2007.

[25] E. Budish. The combinatorial assignment problem:

Approximate competitive equilibrium from equal incomes.
Journal of Political Economy, 119(6):1061–1103, 2011.

[26] E. Budish, Y.-K. Che, F. Kojima, and P. Milgrom. Designing

random allocation mechanisms: Theory and applications.
American Economic Review, 103(2):585–623, 2013.
[27] Y. Cai, C. Daskalakis, and S. M. Weinberg. Optimal

multi-dimensional mechanism design: Reducing revenue to
welfare maximization. In FOCS, 2012.

[28] D. Chakrabarty, A. Mehta, and V. Vazirani. Design is as easy
as optimization. In M. Bugliesi, B. Preneel, V. Sassone, and
I. Wegener, editors, Automata, Languages and
Programming, volume 4051 of Lecture Notes in Computer
Science, pages 477–488. Springer Berlin Heidelberg, 2006.

[29] C. Curino, D. E. Difallah, C. Douglas, S. Krishnan,

R. Ramakrishnan, and S. Rao. Reservation-based scheduling:
If you’re late don’t blame us! In Proceedings of the ACM
Symposium on Cloud Computing, SOCC ’14, pages
2:1–2:14, New York, NY, USA, 2014. ACM.

[30] C. Curino, E. P. Jones, S. Madden, and H. Balakrishnan.

Workload-aware database monitoring and consolidation. In
Proceedings of the 2011 ACM SIGMOD International
Conference on Management of Data, SIGMOD ’11, pages
313–324, New York, NY, USA, 2011. ACM.

[31] G. Debreu and H. Scarf. A limit theorem on the core of an

economy. International Economic Review, 4(3):pp. 235–246,
1963.

[32] I. Elghandour and A. Aboulnaga. Restore: Reusing results of

mapreduce jobs. Proc. VLDB Endow., 5(6):586–597, Feb.
2012.

[33] F. Färber, S. K. Cha, J. Primsch, C. Bornhövd, S. Sigg, and

W. Lehner. SAP HANA database: Data management for
modern business applications. SIGMOD Rec., 40(4):45–51,
Jan. 2012.

[34] D. K. Foley. Lindahl’s solution and the core of an economy

with public goods. Econometrica: Journal of the
Econometric Society, pages 66–72, 1970.

[35] Y. Freund and R. E. Schapire. Adaptive game playing using

multiplicative weights. Games and Economic Behavior,
29(1–2):79 – 103, 1999.

[36] A. Ghodsi, M. Zaharia, B. Hindman, A. Konwinski,

S. Shenker, and I. Stoica. Dominant resource fairness: Fair
allocation of multiple resource types. NSDI’11, pages
323–336, Berkeley, CA, USA, 2011. USENIX Association.
[37] A. Ghodsi, M. Zaharia, S. Shenker, and I. Stoica. Choosy:

Max-min fair sharing for datacenter jobs with constraints. In
EuroSys, pages 365–378. ACM, 2013.

[38] D. Gillies. Some Theorems on n-Person Games. PhD thesis,

Princeton University, 1953.

[39] J. Goldstein and P.-A. Larson. Optimizing queries using

materialized views: A practical, scalable solution. SIGMOD
’01, pages 331–342, New York, NY, USA, 2001. ACM.

[40] J. Gray, K. Baclawski, P. Sundaresan, and S. Englert.
Quickly generating billion-record synthetic databases.
Association for Computing Machinery, Inc., January 1994.

[41] H. Gupta and I. S. Mumick. Selection of views to materialize

in a data warehouse. IEEE Transactions on Knowledge and
Data Engineering, 17(1):24–43, 2005.

[42] S. Im, J. Kulkarni, and K. Munagala. Competitive algorithms

from competitive equilibria: Non-clairvoyant scheduling
under polyhedral constraints. STOC ’14, pages 313–322,
2014.

231[43] M. Isard, V. Prabhakaran, J. Currey, U. Wieder, K. Talwar,
and A. Goldberg. Quincy: Fair scheduling for distributed
computing clusters. SOSP ’09, pages 261–276, New York,
NY, USA, 2009. ACM.

[44] D. Jacobs, S. Aulbach, and T. U. München. Ruminations on
multi-tenant databases. In BTW Proceedings, volume 103 of
LNI, pages 514–521. GI, 2007.

[45] K. Jain and V. V. Vazirani. Eisenberg-gale markets:

Algorithms and structural properties. In Proceedings of the
thirty-ninth annual ACM symposium on Theory of
computing, pages 364–373. ACM, 2007.

[46] R. K. Jain, D.-M. W. Chiu, and W. R. Hawe. A quantitative

measure of fairness and discrimination for resource
allocation in shared computer systems. Technical report,
Digital Equipment Corporation, Sept. 1984.

[47] M. Kaneko. The ratio equilibrium and a voting game in a

public goods economy. Journal of Economic Theory,
16(2):123–136, 1977.

[48] I. Kash, A. D. Procaccia, and N. Shah. No agent left behind:

Dynamic fair division of multiple resources. AAMAS ’13,
pages 351–358, Richland, SC, 2013. International
Foundation for Autonomous Agents and Multiagent Systems.

[49] F. Kelly, L. Massoulié, and N. Walton. Resource pooling in
congested networks: proportional fairness and product form.
Queueing Systems, 63(1-4):165–194, 2009.

[50] F. P. Kelly, A. K. Maulloo, and D. K. H. Tan. Rate control for

communication networks: Shadow prices, proportional
fairness and stability. The Journal of the Operational
Research Society, 49(3):pp. 237–252, 1998.

[51] Y. Kotidis and N. Roussopoulos. DynaMat: A dynamic view

management system for data warehouses. SIGMOD ’99,
pages 371–382, New York, NY, USA, 1999. ACM.

[52] H. W. Kuhn and A. W. Tucker. Nonlinear programming. In

Proceedings of the Second Berkeley Symposium on
Mathematical Statistics and Probability, pages 481–492,
Berkeley, Calif., 1951. University of California Press.

[53] J. LeFevre, J. Sankaranarayanan, H. Hacigumus, J. Tatemura,

N. Polyzotis, and M. J. Carey. Miso: Souping up big data
query processing with a multistore system. SIGMOD ’14,
pages 1591–1602, New York, NY, USA, 2014. ACM.

[54] H. Li, A. Ghodsi, M. Zaharia, E. Baldeschwieler, S. Shenker,

and I. Stoica. Tachyon: Memory throughput I/O for cluster
computing frameworks. LADIS, 18:1, 2013.

[55] A. Mas-Colell and J. Silvestre. Cost share equilibria: A

lindahlian approach. Journal of Economic Theory,
47(2):239–256, 1989.

[56] H. Mistry, P. Roy, S. Sudarshan, and K. Ramamritham.

Materialized view selection and maintenance using
multi-query optimization. SIGMOD ’01, pages 307–318,
New York, NY, USA, 2001. ACM.

[57] V. Narasayya, I. Menache, M. Singh, F. Li, M. Syamala, and

S. Chaudhuri. Sharing buffer pool memory in multi-tenant
relational database-as-a-service. Proc. VLDB Endow.,
8(7):726–737, Feb. 2015.

[58] V. R. Narasayya, S. Das, M. Syamala, B. Chandramouli, and

S. Chaudhuri. SQLVM: performance isolation in
multi-tenant relational database-as-a-service. In CIDR 2013,
Asilomar, CA, USA, January 6-9, 2013, Online Proceedings.
www.cidrdb.org, 2013.

[59] J. Nash. The bargaining problem. Econometrica,

18(2):155–162, 1950.

[60] T. Nykiel, M. Potamias, C. Mishra, G. Kollios, and

N. Koudas. MRShare: Sharing across multiple queries in
mapreduce. Proc. VLDB Endow., 3(1-2):494–505, Sept.
2010.

[61] E. J. O’Neil, P. E. O’Neil, and G. Weikum. The LRU-K page

replacement algorithm for database disk buffering. In
Proceedings of the 1993 ACM SIGMOD International
Conference on Management of Data, SIGMOD ’93, pages
297–306, New York, NY, USA, 1993. ACM.

[62] J. Ousterhout, P. Agrawal, D. Erickson, C. Kozyrakis,

J. Leverich, D. Mazières, S. Mitra, A. Narayanan,
G. Parulkar, M. Rosenblum, S. M. Rumble, E. Stratmann,
and R. Stutsman. The case for RAMClouds: Scalable
high-performance storage entirely in DRAM. SIGOPS Oper.
Syst. Rev., 43(4):92–105, Jan. 2010.

[63] D. C. Parkes, A. D. Procaccia, and N. Shah. Beyond

dominant resource fairness: Extensions, limitations, and
indivisibilities. EC ’12, pages 808–825, New York, NY,
USA, 2012. ACM.

[64] Q. Pu, H. Li, M. Zaharia, A. Ghodsi, and I. Stoica. FairRide:

Near-optimal, fair cache sharing. In 13th USENIX
Symposium on Networked Systems Design and
Implementation (NSDI 16), pages 393–406, Santa Clara, CA,
Mar. 2016. USENIX Association.

[65] K. Ren, Y. Kwon, M. Balazinska, and B. Howe. Hadoop’s

adolescence: An analysis of hadoop usage in scientiﬁc
workloads. Proc. VLDB Endow., 6(10):853–864, Aug. 2013.

[66] Z. Ren, X. Xu, J. Wan, W. Shi, and M. Zhou. Workload
characterization on a production hadoop cluster: A case
study on Taobao. In IISWC’12, pages 3–13, 2012.

[67] H. E. Scarf. The core of an n person game. Econometrica,

35(1):pp. 50–69, 1967.

[68] T. K. Sellis. Multiple-query optimization. ACM Trans.

Database Syst., 13(1):23–52, Mar. 1988.

[69] A. L. Stolyar. On the asymptotic optimality of the gradient
scheduling algorithm for multiuser throughput allocation.
Oper. Res., 53(1):12–25, 2005.

[70] A. J. Storm, C. Garcia-Arellano, S. S. Lightstone, Y. Diao,
and M. Surendra. Adaptive self-tuning memory in DB2. In
Proceedings of the 32Nd International Conference on Very
Large Data Bases, VLDB ’06, pages 1081–1092. VLDB
Endowment, 2006.

[71] H. Varian. Two problems in the theory of fairness. Journal of

Public Economics, 5(3-4):249–260, 1976.

[72] V. K. Vavilapalli, A. C. Murthy, C. Douglas, S. Agarwal,
M. Konar, R. Evans, T. Graves, J. Lowe, H. Shah, S. Seth,
B. Saha, C. Curino, O. O’Malley, S. Radia, B. Reed, and
E. Baldeschwieler. Apache hadoop YARN: Yet another
resource negotiator. In Proceedings of the 4th Annual
Symposium on Cloud Computing, SOCC ’13, pages
5:1–5:16, New York, NY, USA, 2013. ACM.

[73] X. Wang, C. Olston, A. D. Sarma, and R. Burns. CoScan:

Cooperative scan sharing in the cloud. In Proceedings of the
2Nd ACM Symposium on Cloud Computing, SOCC ’11,
pages 11:1–11:12, New York, NY, USA, 2011. ACM.

[74] J. Yang, K. Karlapalem, and Q. Li. Algorithms for

materialized view design in data warehousing environment.
VLDB ’97, pages 136–145, San Francisco, CA, USA, 1997.
Morgan Kaufmann Publishers Inc.

[75] M. Zukowski, S. Héman, N. Nes, and P. Boncz. Cooperative
scans: Dynamic bandwidth sharing in a DBMS. VLDB ’07,
pages 723–734. VLDB Endowment, 2007.

