[1] Sarita Adve and Mark Hill. 1990. Weak Ordering – A New Definition. In Proceedings of the 17th Annual International Symposium on Computer Architecture.
[2] Sarita V. Adve. 1993. Designing Memory Consistency Models for Shared-Memory
Multiprocessors. Ph.D. Dissertation. University of Wisconsin, Madison.
[3] Sarita V. Adve and Hans-J. Boehm. 2010. Memory Models: A Case for Rethinking
Parallel Languages and Hardware. Communications of the ACM (August 2010),
90–101.
[4] S. V. Adve and M. D. Hill. 1993. A Unified Formalization of Four Shared-Memory
Models. TPDS, Article 6 (June 1993), 613-624 pages.
[5] N. Agarwal, T. Krishna, Li-Shiuan Peh, and N.K. Jha. 2009. GARNET: A Detailed
On-chip Network Model Inside a Full-system Simulator. In IEEE International
Symposium on Performance Analysis of Systems and Software.
[6] Jade Alglave, Luc Maranget, and Michael Tautschnig. 2014. Herding Cats:
Modelling, Simulation, Testing, and Data Mining for Weak Memory. ACM
Transactions on Programming Languages and Systems 36, 2, Article 7 (July
2014), 7:1–7:74 pages.
[7] Johnathan Alsop, Bradford Beckmann, Marc Orr, and David Wood. 2016. Lazy
Release Consistency for GPUs. In Proceedings of the 49th International Symposium on Microarchitecture.
[8] Ali Bakhoda, George L. Yuan, Wilson W. L. Fung, Henry Wong, and Tor M.
Aamodt. 2009. Analyzing CUDA Workloads Using a Detailed GPU Simulator. In
IEEE International Symposium on Performance Analysis of Systems and Software.
[9] Mark Batty, Alastair F. Donaldson, and John Wickerson. 2016. Overhauling SC
Atomics in C11 and OpenCL. In Proceedings of the 43rd Annual ACM SIGPLANSIGACT Symposium on Principles of Programming Languages. 634–648.
[10] Mark Batty, Kayvan Memarian, Kyndylan Nienhuis, Jean Pichon-Pharabod, and
Peter Sewell. 2015. The Problem of Programming Language Concurrency Semantics. In Programming Languages and Systems. Lecture Notes in Computer
Science, Vol. 9032. 283–307.
[11] Hans-J. Boehm. 2012. Can Seqlocks Get Along with Programming Language
Memory Models?. In Proceedings of the 2012 ACM SIGPLAN Workshop on
Memory Systems Performance and Correctness. 12–20.
[12] Hans-J. Boehm. 2013. N3710: Specifying the absence of "out of thin air" results
(LWG2265). (2013).
[13] Hans-J. Boehm. 2013. N3786: Prohibiting "out of thin air" results in C++14.
(2013).
[14] Hans-J. Boehm and Sarita V. Adve. 2008. Foundations of the C++ Concurrency
Memory Model. In Proceedings of the 29th ACM SIGPLAN Conference on
Programming Language Design and Implementation. 68–78.
[15] Hans-J. Boehm and Brian Demsky. 2014. Outlawing Ghosts: Avoiding Out-ofthin-air Results. In Proceedings of the Workshop on Memory Systems Performance
and Correctness. 7:1–7:6.
[16] M. Burtscher, R. Nasre, and K. Pingali. 2012. A Quantitative Study of Irregular
Programs on GPUs. In IEEE International Symposium on Workload Characterization. 141–151.
[17] C++. 2015. C++ Reference: Memory Order. http://en.cppreference.com/w/cpp/
atomic/memory_order. (2015).
[18] Shuai Che, B.M. Beckmann, S.K. Reinhardt, and K. Skadron. 2013. Pannotia:
Understanding Irregular GPGPU Graph Applications. In IEEE International
Symposium on Workload Characterization. 185–195.
[19] Shuai Che, M. Boyer, Jiayuan Meng, D. Tarjan, J.W. Sheaffer, Sang-Ha Lee, and
K. Skadron. 2009. Rodinia: A Benchmark Suite for Heterogeneous Computing.
In IEEE International Symposium on Workload Characterization. 44–54.
[20] Shuai Che, J.W. Sheaffer, M. Boyer, L.G. Szafaryn, Liang Wang, and K. Skadron.
2010. A Characterization of the Rodinia Benchmark Suite with Comparison to
Contemporary CMP workloads. In IEEE International Symposium on Workload
Characterization. 1–11.
[21] Byn Choi, R. Komuravelli, Hyojin Sung, R. Smolinski, N. Honarmand, S.V.
Adve, V.S. Adve, N.P. Carter, and Ching-Tsun Chou. 2011. DeNovo: Rethinking
the Memory Hierarchy for Disciplined Parallelism. In Proceedings of the 20th
International Conference on Parallel Architectures and Compilation Techniques.
https://doi.org/10.1109/PACT.2011.21
[22] Timothy A. Davis and Yifan Hu. 2011. The University of Florida Sparse Matrix
Collection. ACM Transactions on Mathematical Software 38, 1 (2011), 1:1–1:25.
[23] M. Desnoyers, P. E. McKenney, A. S. Stern, M. R. Dagenais, and J. Walpole.
2012. User-Level Implementations of Read-Copy Update. IEEE Transactions on
Parallel and Distributed Systems 23, 2 (Feb 2012), 375–382.
[24] M. Dubois, C. , and F. Briggs. 1986. Memory Access Buffering in Multiprocessors. In Proceedings of the 13th Annual International Symposium on Computer
Architecture. 434–442.
[25] Wilson W. L. Fung and Tor M. Aamodt. 2013. Energy Efficient GPU Transactional Memory via Space-time Optimizations. In Proceedings of the 46th Annual
IEEE/ACM International Symposium on Microarchitecture. 408–420.
[26] Benedict R. Gaster, Derek Hower, and Lee Howes. 2015. HRF-Relaxed: Adapting
HRF to the Complexities of Industrial Heterogeneous Memory Models. ACM
Transactions on Architecture and Code Optimizations 12 (April 2015), 7:1–7:26.
[27] Kourosh Gharachorloo, Sarita V. Adve, Anoop Gupta, John L. Hennessy, and
Mark D. Hill. 1992. Programming for Different Memory Consistency Models.
Journal of Parallel and Distributed Computing 15 (1992), 399–407.
[28] Kourosh Gharachorloo, Daniel Lenoski, James Laudon, Phillip Gibbons, Anoop
Gupta, and John Hennessy. 1990. Memory Consistency and Event Ordering in
Scalable Shared-memory Multiprocessors. In Proceedings of the 17th Annual
International Symposium on Computer Architecture. 15–26.
[29] James R Goodman. 1989. Cache Consistency and Sequential Consistency. Technical Report.
[30] Vincent Gramoli. 2015. More Than You Ever Wanted to Know About Synchronization: Synchrobench, Measuring the Impact of the Synchronization on
Concurrent Algorithms. In Proceedings of the 20th ACM SIGPLAN Symposium
on Principles and Practice of Parallel Programming. 1–10.
[31] J. Hestness, S. Keckler, and David A. Wood. 2015. GPU Computing Pipeline
Inefficiencies and Optimization Opportunities in Heterogeneous CPU-GPU Processors. In IEEE International Symposium on Workload Characterization. 87–97.
[32] Derek R. Hower, Blake A. Hechtman, Bradford M. Beckmann, Benedict R. Gaster,
Mark D. Hill, Steven K. Reinhardt, and David A. Wood. 2014. HeterogeneousRace-Free Memory Models. In Proceedings of the 19th International Conference
on Architectural Support for Programming Languages and Operating Systems.
427–440.
[33] HSA Foundation. 2015. HSA Platform System Architecture Specification. http:
//www.hsafoundation.com/?ddownload=4944. (2015).
[34] IntelPR. 2014. Intel Discloses Newest Microarchitecture and 14 Nanometer
Manufacturing Process Technical Details. Intel Newsroom (2014).
[35] Alan Jeffrey and James Riely. 2016. On Thin Air Reads: Towards an Event Structures Model of Relaxed Memory. In Proceedings of the 31st Annual ACM/IEEE
Symposium on Logic in Computer Science. 759–767.
[36] Jeehoon Kang, Chung-Kil Hur, Ori Lahav, Viktor Vafeiadis, and Derek Dreyer.
2017. A Promising Semantics for Relaxed-memory Concurrency. In Proceedings
of the 44th ACM SIGPLAN Symposium on Principles of Programming Languages.
175–189.
[37] Rakesh Komuravelli, Matthew D. Sinclair, Johnathan Alsop, Muhammad Huzaifa,
Prakalp Srivastava, Maria Kotsifakou, Sarita V. Adve, and Vikram S. Adve. 2015.
Stash: Have Your Scratchpad and Cache it Too. In Proceedings of the 42nd Annual
International Symposium on Computer Architecture. 707–719.
[38] L. Howes and A. Munshi. 2015. The OpenCL Specification, Version 2.0. Khronos
Group. (2015).
[39] Ori Lahav, Nick Giannarakis, and Viktor Vafeiadis. 2016. Taming ReleaseAcquire Consistency. In Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT
Symposium on Principles of Programming Languages. 649–662.

[40] Jingwen Leng, Tayler Hetherington, Ahmed ElTantawy, Syed Gilani, Nam Sung
Kim, Tor M. Aamodt, and Vijay Janapa Reddi. 2013. GPUWattch: Enabling Energy Optimizations in GPGPUs. In Proceedings of the 40th Annual International
Symposium on Computer Architecture.
[41] Sheng Li, Jung-Ho Ahn, R.D. Strong, J.B. Brockman, D.M. Tullsen, and N.P.
Jouppi. 2009. McPAT: An Integrated Power, Area, and Timing Modeling Framework for Multicore and Manycore Architectures. In 42nd Annual IEEE/ACM
International Symposium on Microarchitecture. 469–480.
[42] Jeremy Manson, William Pugh, and Sarita V. Adve. 2005. The Java Memory
Model. In Proceedings of the 32nd Symposium on Principles of Programming
Languages. 378–391.
[43] M. M. K. Martin, D. J. Sorin, B. M. Beckmann, M. R. Marty, M. Xu, A. R.
Alameldeen, K. E. Moore, M. D. Hill, and D. A. Wood. 2005. Multifacet’s
General Execution-driven Multiprocessor Simulator (GEMS) Toolset. SIGARCH
Computer Architecture News (2005). https://doi.org/10.1145/1105734.1105747
[44] Paul McKenney. 2015. Some Examples of Kernel-Hacker Informal Correctness Reasoning. In Proceedings of the Dagstuhl Workshop on Compositional
Verification Methods for Next-Generation Concurrency. 15.
[45] Paul E. McKenney, Torvald Riegel, and Jeff Preshing. 2014. N4036: Towards
Implementation and Use of memory_order_consume. (2014).
[46] David S. Miller. 2016. Semantics and Behavior of Atomic and Bitmask Operations.
(2016).
[47] NVIDIA. 2010. CUDA SDK 3.1. (2010).
[48] Stephen Olivier, Jun Huan, Jinze Liu, Jan Prins, James Dinan, P. Sadayappan,
and Chau-Wen Tseng. 2007. UTS: An Unbalanced Tree Search Benchmark. In
Languages and Compilers for Parallel Computing. Lecture Notes in Computer
Science, Vol. 4382. 235–250.
[49] Jean Pichon-Pharabod and Peter Sewell. 2016. A Concurrency Semantics for
Relaxed Atomics That Permits Optimisation and Avoids Thin-air Executions. In
Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages. 622–633.
[50] Victor Podlozhnyuk. 2007. Histogram calculation in CUDA. (2007), 11 pages.
[51] Carl G. Ritson and Scott Owens. 2016. Benchmarking Weak Memory Models. In
Proceedings of the 21st ACM SIGPLAN Symposium on Principles and Practice of
Parallel Programming. Article 24, 11 pages.
[52] Matthew Sinclair, Henry Duwe, and Karthikeyan Sankaralingam. 2011. Porting
CMP Benchmarks to GPUs. Technical Report. Department of Computer Sciences,
The University of Wisconsin-Madison.
[53] Matthew D. Sinclair, Johnathan Alsop, and Sarita V. Adve. 2015. Efficient GPU
Synchronization without Scopes: Saying No to Complex Consistency Models. In
Proceedings of the 48th Annual IEEE/ACM International Symposium on Microarchitecture. 647–659.
[54] Richard Smith. 2017. N4659: Working Draft, Standard for Programming Language C++. (2017).
[55] Tyler Sorensen, Jade Alglave, Ganesh Gopalakrishnan, and Vinod Grover. 2013.
ICS: U: Towards Shared Memory Consistency Models for GPUs. In Towards
Shared Memory Consistency Models for GPUs. 489–490.
[56] Tyler Sorensen and Alastair F. Donaldson. 2016. Exposing Errors Related to
Weak Memory in GPU Applications. In Proceedings of the 37th ACM SIGPLAN
Conference on Programming Language Design and Implementation. 100–113.
[57] John A Stratton, Christopher Rodrigues, I-Jui Sung, Nady Obeid, Li-Wen Chang,
Nasser Anssari, Geng Daniel Liu, and WMW Hwu. 2012. Parboil: A Revised
Benchmark Suite for Scientific and Commercial Throughput Computing. Technical
Report. Department of ECE and CS, University of Illinois at Urbana-Champaign.
[58] Jeff A. Stuart and John D. Owens. 2011. Efficient Synchronization Primitives for
GPUs. CoRR abs/1110.4623 (2011).
[59] Hyojin Sung and Sarita V. Adve. 2015. DeNovoSync: Efficient Support for
Arbitrary Synchronization without Writer-Initiated Invalidations. In Proceedings
of the 20th International Conference on Architectural Support for Programming
Languages and Operating Systems. 545–559.
[60] Hyojin Sung, Rakesh Komuravelli, and Sarita V. Adve. 2013. DeNovoND: Efficient Hardware Support for Disciplined Non-determinism. In Proceedings of
the 18th International Conference on Architectural Support for Programming
Languages and Operating Systems. 13–26.
[61] Herb Sutter. 2012. Atomic Weapons: The C++ Memory Model and Modern
Hardware. In C++ and Beyond.
[62] Viktor Vafeiadis and Chinmay Narayan. 2013. Relaxed Separation Logic: A
Program Logic for C11 Concurrency. In Proceedings of the 2013 ACM SIGPLAN
International Conference on Object Oriented Programming Systems Languages
& Applications. 867–884.
[63] Guowei Zhang, Webb Horn, and Daniel Sanchez. 2015. Exploiting Commutativity
to Reduce the Cost of Updates to Shared Data in Cache-coherent Systems. In
Proceedings of the 48th International Symposium on Microarchitecture. 13–25.
