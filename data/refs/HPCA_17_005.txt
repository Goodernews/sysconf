[1] M. Ahmed, S. Traverso, P. Giaccone, E. Leonardi, and S. Niccolini,
“Analyzing the performance of LRU caches under non-stationary
traffic patterns,” arXiv:1301.4909v1 [cs.NI], 2013.
[2] A. Aho, P. Denning, and J. Ullman, “Principles of optimal page
replacement,” J. ACM, 1971.
[3] A. Alameldeen and D. Wood, “IPC considered harmful for multiprocessor workloads,” IEEE Micro, vol. 26, no. 4, 2006.
[4] O. Bahat and A. Makowski, “Optimal replacement policies for nonuniform cache objects with optional eviction,” in INFOCOM, 2003.
[5] N. Beckmann, “Design and analysis of spatially-partitioned shared
caches,” Ph.D. dissertation, Massachusetts Institute of Technology,
2015.
[6] N. Beckmann and D. Sanchez, “Bridging theory and practice in cache
replacement,” Massachusetts Institute of Technology, Tech. Rep. MITCSAIL-TR-2015-034, 2015.
[7] N. Beckmann and D. Sanchez, “Talus: A simple way to remove cliffs
in cache performance,” in Proc. HPCA-21, 2015.
[8] N. Beckmann and D. Sanchez, “Cache calculus: Modeling cache
performance through differential equations,” IEEE CAL, 2016.
[9] N. Beckmann and D. Sanchez, “Modeling cache performance beyond
lru,” in Proc. HPCA-22, 2016.
[10] L. Belady, “A study of replacement algorithms for a virtual-storage
computer,” IBM Sys. J., vol. 5, no. 2, 1966.
[11] S. Das, T. M. Aamodt, and W. J. Dally, “Reuse distance-based
probabilistic cache replacement,” ACM TACO, vol. 12, no. 4, 2015.
[12] B. D. de Dinechin, R. Ayrignac, P.-E. Beaucamps, P. Couvert,
B. Ganne, P. G. de Massas et al., “A clustered manycore processor
architecture for embedded and accelerated applications,” in Proc.
HPEC, 2013.
[13] J. Doweck, “Inside the CORE microarchitecture,” in HotChips-18,
2006.
[14] N. Duong, D. Zhao, T. Kim, R. Cammarota, M. Valero, and A. V.
Veidenbaum, “Improving cache management policies using dynamic
reuse distances,” in Proc. MICRO-45, 2012.
[15] M. Garetto, E. Leonardi, and V. Martina, “A unified approach to the
performance analysis of caching systems,” ACM TOMPECS, vol. 1,
no. 3, 2016.
[16] A. Jain and C. Lin, “Back to the future: Leveraging Belady’s algorithm for improved cache replacement,” in Proc. ISCA-43, 2016.
[17] A. Jaleel, K. Theobald, S. Steely Jr, and J. Emer, “High performance
cache replacement using re-reference interval prediction,” in Proc.
ISCA-37, 2010.
[18] P. Jelenković and A. Radovanović, “Least-recently-used caching with
dependent requests,” Theor. Comput. Sci., vol. 326, no. 1, 2004.
[19] D. Jiménez, “Insertion and promotion for tree-based pseudolru lastlevel caches,” in Proc. MICRO-46, 2013.
[20] G. Keramidas, P. Petoumenos, and S. Kaxiras, “Cache replacement
based on reuse-distance prediction,” in Proc. ICCD, 2007.
[21] S. Khan, Y. Tian, and D. Jiménez, “Sampling dead block prediction
for last-level caches,” in Proc. MICRO-43, 2010.
[22] S. Khan, Z. Wang, and D. Jimenez, “Decoupled dynamic cache
segmentation,” in Proc. HPCA-18, 2012.
[23] A. Kolobov, “Planning with Markov decision processes: An AI perspective,” Synthesis Lectures on Artificial Intelligence and Machine
Learning, vol. 6, no. 1, 2012.
[24] N. Kurd, S. Bhamidipati, C. Mozak, J. Miller, T. Wilson, M. Nemani
et al., “Westmere: A family of 32nm IA processors,” in Proc. ISSCC,
2010.
[25] R. Mattson, J. Gecsei, D. Slutz, and I. Traiger, “Evaluation techniques
for storage hierarchies,” IBM Sys. J., vol. 9, no. 2, 1970.
[26] N. Megiddo and D. S. Modha, “ARC: A self-tuning, low overhead
replacement cache.” in Proc. FAST, 2003.
[27] P. Petoumenos, G. Keramidas, and S. Kaxiras, “Instruction-based
reuse-distance prediction for effective cache management,” in Proc.
SAMOS, 2009.
[28] S. Podlipnig and L. Böszörmenyi, “A survey of web cache replacement strategies,” ACM Computing Surveys (CSUR), 2003.
[29] M. Puterman, Markov decision processes: discrete stochastic dynamic
programming. Wiley, 2009.
[30] M. Qureshi, A. Jaleel, Y. Patt, S. Steely, and J. Emer, “Adaptive
insertion policies for high performance caching,” in Proc. ISCA-34,
2007.
[31] E. Rotem, A. Naveh, A. Ananthakrishnan, D. Rajwan, and E. Weissmann, “Power-management architecture of the intel microarchitecture
code-named sandy bridge,” IEEE Micro, vol. 32, no. 2, 2012.
[32] D. Sanchez and C. Kozyrakis, “ZSim: fast and accurate microarchitectural simulation of thousand-core systems,” in Proc. ISCA-40, 2013.
[33] R. Sen and D. A. Wood, “Reuse-based online models for caches,” in
ACM SIGMETRICS Performance Evaluation Review, 2013.
[34] J. Shun, G. Blelloch, J. Fineman, P. Gibbons, A. Kyrola, H. V.
Simhadri et al., “Brief announcement: the problem based benchmark
suite,” in Proc. SPAA, 2012.
[35] M. Takagi and K. Hiraki, “Inter-reference gap distribution replacement: an improved replacement algorithm for set-associative caches,”
in Proc. ICS-18, 2004.
[36] S. Thoziyoor, N. Muralimanohar, J. H. Ahn, and N. P. Jouppi, “CACTI
5.1,” HP Labs, Tech. Rep. HPL-2008-20, 2008.
[37] S. Traverso, M. Ahmed, M. Garetto, P. Giaccone, E. Leonardi, and
S. Niccolini, “Temporal locality in today’s content caching: why it
matters and how to model it,” in Proc. SIGCOMM, 2013.
[38] R. Wang and L. Chen, “Futility scaling: High-associativity cache
partitioning,” in Proc. MICRO-47, 2014.
[39] C.-J. Wu, A. Jaleel, W. Hasenplaugh, M. Martonosi, S. C. Steely Jr,
and J. Emer, “SHiP: signature-based hit predictor for high performance caching,” in Proc. MICRO-44, 2011.
[40] T. Yoshida, M. Hondou, T. Tabata, R. Kan, N. Kiyota, H. Kojima et al.,
“SPARC64 XIfx: Fujitsu’s Next Generation Processor for HPC,” IEEE
Micro, vol. 30, no. 2, 2015.