[1] M. Abdel-Majeed and M. Annavaram, “Warped register file: A power efficient
register file for gpgpus,” in High Performance Computer Architecture (HPCA2013),
2013 IEEE 19th International Symposium on. IEEE, 2013, pp. 412–423.
[2] M. Abdel-Majeed, W. Dweik, H. Jeon, and M. Annavaram, “Warped-re: Low-cost
error detection and correction in gpus,” in 2015 45th Annual IEEE/IFIP International
Conference on Dependable Systems and Networks. IEEE, 2015, pp. 331–342.
[3] J. Anantpur and R. Govindarajan, “Taming control divergence in gpus through
control flow linearization,” in International Conference on Compiler Construction.
Springer, 2014, pp. 133–153.
[4] R. Ausavarungnirun, S. Ghose, O. Kayiran, G. H. Loh, C. R. Das, M. T. Kandemir,
and O. Mutlu, “Exploiting inter-warp heterogeneity to improve gpgpu performance,” in 2015 International Conference on Parallel Architecture and Compilation
(PACT). IEEE, 2015, pp. 25–38.
[5] A. Bakhoda, G. L. Yuan, W. W. Fung, H. Wong, and T. M. Aamodt, “Analyzing cuda
workloads using a detailed gpu simulator,” in Performance Analysis of Systems
and Software, 2009. ISPASS 2009. IEEE International Symposium on. IEEE, 2009,
pp. 163–174.
[6] S. Che, M. Boyer, J. Meng, D. Tarjan, J. W. Sheaffer, S.-H. Lee, and K. Skadron,
“Rodinia: A benchmark suite for heterogeneous computing,” in Workload Characterization, 2009. IISWC 2009. IEEE International Symposium on. IEEE, 2009, pp.
44–54.
[7] A. ElTantawy and T. M. Aamodt, “Mimd synchronization on simt architectures,”
in Proceedings of the 49th annual IEEE/ACM International Symposium on Microarchitecture, 2016.
[8] A. ElTantawy, J. W. Ma, M. O’Connor, and T. M. Aamodt, “A scalable multi-path
microarchitecture for efficient gpu control flow,” in 2014 IEEE 20th International
Symposium on High Performance Computer Architecture (HPCA). IEEE, 2014, pp.
248–259.
[9] M. Gebhart, D. R. Johnson, D. Tarjan, S. W. Keckler, W. J. Dally, E. Lindholm,
and K. Skadron, “Energy-efficient mechanisms for managing thread context in
throughput processors,” in ACM SIGARCH Computer Architecture News, vol. 39,
no. 3. ACM, 2011, pp. 235–246.
[10] M. Gebhart, D. R. Johnson, D. Tarjan, S. W. Keckler, W. J. Dally, E. Lindholm, and
K. Skadron, “A hierarchical thread scheduler and register file for energy-efficient
throughput processors,” ACM Transactions on Computer Systems (TOCS), vol. 30,
no. 2, p. 8, 2012.
[11] M. Gebhart, S. W. Keckler, and W. J. Dally, “A compile-time managed multi-level
register file hierarchy,” in Proceedings of the 44th annual IEEE/ACM international
symposium on microarchitecture. ACM, 2011, pp. 465–476.
[12] M. Gebhart, S. W. Keckler, B. Khailany, R. Krashinsky, and W. J. Dally, “Unifying
primary cache, scratch, and register file memories in a throughput processor,”
in Proceedings of the 2012 45th Annual IEEE/ACM International Symposium on
Microarchitecture. IEEE Computer Society, 2012, pp. 96–106.
[13] M. Gebhart, B. A. Maher, K. E. Coons, J. Diamond, P. Gratz, M. Marino, N. Ranganathan, B. Robatmili, A. Smith, J. Burrill, S. W. Keckler, D. Burger, and K. S.
McKinley, “An evaluation of the trips computer system,” in Proceedings of the 14th
International Conference on Architectural Support for Programming Languages and
Operating Systems, ser. ASPLOS XIV, 2009, pp. 1–12.
[14] S. Z. Gilani, N. S. Kim, and M. J. Schulte, “Power-efficient computing for
compute-intensive gpgpu applications,” in High Performance Computer Architecture (HPCA2013), 2013 IEEE 19th International Symposium on. IEEE, 2013, pp.
330–341.
[15] N. Goswami, B. Cao, and T. Li, “Power-performance co-optimization of throughput core architecture using resistive memory,” in High Performance Computer
Architecture (HPCA2013), 2013 IEEE 19th International Symposium on. IEEE,
2013, pp. 342–353.
[16] C. Gregg, J. Dorn, K. Hazelwood, and K. Skadron, “Fine-grained resource sharing
for concurrent gpgpu kernels,” in Presented as part of the 4th USENIX Workshop
on Hot Topics in Parallelism, 2012.
[17] K. Hsieh, E. Ebrahimi, G. Kim, N. Chatterjee, M. OâĂŹConnor, N. Vijaykumar,
O. Mutlu, and S. W. Keckler, “Transparent offlloading and mapping (tom): Enabling programmer-transparent near-data processing in gpu systems,” in Proceedings of the 43rd Annual International Symposium on Computer Architecture,
2016, pp. 204–216.
[18] J. A. Jablin, T. B. Jablin, O. Mutlu, and M. Herlihy, “Warp-aware trace scheduling for gpus,” in Proceedings of the 23rd international conference on Parallel
architectures and compilation. ACM, 2014, pp. 163–174.
[19] H. Jeon, G. S. Ravi, N. S. Kim, and M. Annavaram, “Gpu register file virtualization,”
in Proceedings of the 48th International Symposium on Microarchitecture. ACM,
2015, pp. 420–432.
[20] N. Jing, S. Chen, S. Jiang, L. Jiang, C. Li, and X. Liang, “Bank stealing for conflict
mitigation in gpgpu register file,” in Low Power Electronics and Design (ISLPED),
2015 IEEE/ACM International Symposium on. IEEE, 2015, pp. 55–60.
[21] N. Jing, H. Liu, Y. Lu, and X. Liang, “Compiler assisted dynamic register file
in gpgpu,” in Proceedings of the 2013 International Symposium on Low Power
Electronics and Design. IEEE Press, 2013, pp. 3–8.
[22] N. Jing, Y. Shen, Y. Lu, S. Ganapathy, Z. Mao, M. Guo, R. Canal, and X. Liang, “An
energy-efficient and scalable edram-based register file architecture for gpgpu,”
in ACM SIGARCH Computer Architecture News, vol. 41, no. 3. ACM, 2013, pp.
344–355.
[23] N. Jing, J. Wang, F. Fan, W. Yu, L. Jiang, C. Li, and X. Liang, “Cache-emulated
register file: An integrated on-chip memory architecture for high performance
gpgpus,” in Microarchitecture (MICRO), 2016 49th Annual IEEE/ACM International
Symposium on. IEEE, 2016, pp. 1–12.
[24] A. Jog, O. Kayiran, N. Chidambaram Nachiappan, A. K. Mishra, M. T. Kandemir,
O. Mutlu, R. Iyer, and C. R. Das, “Owl: cooperative thread array aware scheduling
techniques for improving gpgpu performance,” in ACM SIGPLAN Notices, vol. 48,
no. 4. ACM, 2013, pp. 395–406.
[25] A. Jog, O. Kayiran, A. K. Mishra, M. T. Kandemir, O. Mutlu, R. Iyer, and C. R.
Das, “Orchestrated scheduling and prefetching for gpgpus,” in ACM SIGARCH
Computer Architecture News, vol. 41, no. 3. ACM, 2013, pp. 332–343.
[26] A. Jog, O. Kayiran, A. Pattnaik, M. T. Kandemir, O. Mutlu, R. Iyer, and C. R. Das,
“Exploiting core-criticality for enhanced gpu performance,” in Proceedings of the
2016 ACM SIGMETRICS International Conference on Measurement and Modeling
of Computer Science. ACM, 2016, pp. 351–363.
[27] O. Kayiran, A. Jog, M. T. Kandemir, and C. R. Das, “Neither more nor less: optimizing thread-level parallelism for gpgpus,” in Proceedings of the 22nd international
conference on Parallel architectures and compilation techniques. IEEE Press, 2013,
pp. 157–166.
[28] O. Kayıran, A. Jog, A. Pattnaik, R. Ausavarungnirun, X. Tang, M. T. Kandemir,
G. H. Loh, O. Mutlu, and C. R. Das, “ µ c-states: Fine-grained gpu datapath power
management,” in 2016 International Conference on Parallel Architecture and Compilation (PACT), 2016.
[29] S. W. Keckler, W. J. Dally, B. Khailany, M. Garland, and D. Glasco, “Gpus and the
future of parallel computing,” IEEE Micro, no. 5, pp. 7–17, 2011.
[30] J. Kim, C. Torng, S. Srinath, D. Lockhart, and C. Batten, “Microarchitectural
mechanisms to exploit value structure in simt architectures,” in ACM SIGARCH
Computer Architecture News, vol. 41, no. 3. ACM, 2013, pp. 130–141.
[31] S. Lee, K. Kim, G. Koo, H. Jeon, W. W. Ro, and M. Annavaram, “Warpedcompression: enabling power efficient gpus through register compression,” in
Proceedings of the 42nd Annual International Symposium on Computer Architecture.
ACM, 2015, pp. 502–514.
[32] S.-Y. Lee, A. Arunkumar, and C.-J. Wu, “Cawa: coordinated warp scheduling and
cache prioritization for critical warp acceleration of gpgpu workloads,” in ACM
SIGARCH Computer Architecture News, vol. 43, no. 3. ACM, 2015, pp. 515–527.
[33] J. Leng, T. Hetherington, A. ElTantawy, S. Gilani, N. S. Kim, T. M. Aamodt, and V. J.
Reddi, “Gpuwattch: enabling energy optimizations in gpgpus,” ACM SIGARCH
Computer Architecture News, vol. 41, no. 3, pp. 487–498, 2013.
[34] J. Leng, Y. Zu, and V. J. Reddi, “Gpu voltage noise: Characterization and hierarchical smoothing of spatial and temporal voltage noise interference in gpu
architectures,” in 2015 IEEE 21st International Symposium on High Performance
Computer Architecture (HPCA). IEEE, 2015, pp. 161–173.
[35] J. Leng, Y. Zu, M. Rhu, M. Gupta, and V. J. Reddi, “Gpuvolt: Modeling and characterizing voltage noise in gpu architectures,” in Proceedings of the 2014 international
symposium on Low power electronics and design. ACM, 2014, pp. 141–146.
[36] C. Li, Y. Yang, Z. Lin, and H. Zhou, “Automatic data placement into gpu on-chip
memory resources,” in Code Generation and Optimization (CGO), 2015 IEEE/ACM
International Symposium on. IEEE, 2015, pp. 23–33.
[37] D. Li, M. Rhu, D. R. Johnson, M. O’Connor, M. Erez, D. Burger, D. S. Fussell, and
S. W. Redder, “Priority-based cache allocation in throughput processors,” in 2015
IEEE 21st International Symposium on High Performance Computer Architecture
(HPCA). IEEE, 2015, pp. 89–100.
[38] Z. Li, J. Tan, and X. Fu, “Hybrid cmos-tfet based register files for energy-efficient
gpgpus,” in Quality Electronic Design (ISQED), 2013 14th International Symposium
on. IEEE, 2013, pp. 112–119.
[39] X. Liang and D. Brooks, “Mitigating the impact of process variations on processor
register files and execution units,” in Proceedings of the 39th Annual IEEE/ACM
International Symposium on Microarchitecture. IEEE Computer Society, 2006,
pp. 504–514.
[40] Y. Liu, Z. Yu, L. Eeckhout, V. J. Reddi, Y. Luo, X. Wang, Z. Wang, and C. Xu,
“Barrier-aware warp scheduling for throughput processors,” in Proceedings of the
2016 International Conference on Supercomputing. ACM, 2016, p. 42.
[41] Z. Liu, S. Gilani, M. Annavaram, and N. S. Kim, “G-scalar: Cost-effective generalized scalar execution architecture for power-efficient gpus,” in IEEE Int. Symp. on
High-Performance Computer Architecture (HPCA), 2017.
[42] M. Mao, W. Wen, Y. Zhang, Y. Chen, and H. Li, “Exploration of gpgpu register file
architecture using domain-wall-shift-write based racetrack memory,” in Design
Automation Conference (DAC), 2014 51st ACM/EDAC/IEEE. IEEE, 2014, pp. 1–6.
[43] S. Melvin and Y. Patt, “Enhancing instruction scheduling with a block-structured
isa,” International Journal of Parallel Programming, vol. 23, no. 3, pp. 221–243,
1995.
[44] M. Namaki-Shoushtari, A. Rahimi, N. Dutt, P. Gupta, and R. K. Gupta,
“Argo: aging-aware gpgpu register file allocation,” in Proceedings of the Ninth
IEEE/ACM/IFIP International Conference on Hardware/Software Codesign and System Synthesis. IEEE Press, 2013, p. 30.
[45] V. Narasiman, M. Shebanow, C. J. Lee, R. Miftakhutdinov, O. Mutlu, and Y. N.
Patt, “Improving gpu performance via large warps and two-level warp scheduling,” in Proceedings of the 44th Annual IEEE/ACM International Symposium on
Microarchitecture. ACM, 2011, pp. 308–317.
[46] Nvidia, “Nvidia cuda programming guide,” http://docs.nvidia.com/cuda/
cuda-c-programming-guide, accessed: August 2017.
[47] D. W. Oehmke, N. L. Binkert, T. Mudge, and S. K. Reinhardt, “How to fake 1000
registers,” in Proceedings of the 38th annual IEEE/ACM International Symposium
on Microarchitecture. IEEE Computer Society, 2005, pp. 7–18.
[48] S. Pai, M. J. Thazhuthaveetil, and R. Govindarajan, “Improving gpgpu concurrency
with elastic kernels,” in Proceedings of the Eighteenth International Conference
on Architectural Support for Programming Languages and Operating Systems, ser.
ASPLOS ’13. ACM, 2013, pp. 407–418.
[49] J. J. K. Park, Y. Park, and S. Mahlke, “Elf: Maximizing memory-level parallelism
for gpus with coordinated warp and fetch scheduling,” in Proceedings of the
International Conference for High Performance Computing, Networking, Storage
and Analysis. ACM, 2015, p. 18.
[50] G. Pekhimenko, E. Bolotin, N. Vijaykumar, O. Mutlu, T. C. Mowry, and S. W.
Keckler, “A case for toggle-aware compression for gpu systems,” in 2016 IEEE
International Symposium on High Performance Computer Architecture (HPCA).
IEEE, 2016, pp. 188–200.
[51] G. Pekhimenko, V. Seshadri, O. Mutlu, P. B. Gibbons, M. A. Kozuch, and T. C.
Mowry, “Base-delta-immediate compression: practical data compression for onchip caches,” in Proceedings of the 21st international conference on Parallel architectures and compilation techniques. ACM, 2012, pp. 377–388.
[52] B. Pichai, L. Hsu, and A. Bhattacharjee, “Architectural support for address translation on gpus: designing memory management units for cpu/gpus with unified
address spaces,” in ACM SIGARCH Computer Architecture News, vol. 42, no. 1.
ACM, 2014, pp. 743–758.
[53] D. Ponomarev, G. Kucuk, O. Ergin, and K. Ghose, “Reducing datapath energy
through the isolation of short-lived operands,” in Parallel Architectures and Compilation Techniques, 2003. PACT 2003. Proceedings. 12th International Conference
on. IEEE, 2003, pp. 258–268.
[54] M. Rhu and M. Erez, “Maximizing simd resource utilization in gpgpus with simd
lane permutation,” in ACM SIGARCH Computer Architecture News, vol. 41, no. 3.
ACM, 2013, pp. 356–367.
[55] T. G. Rogers, D. R. Johnson, M. O’Connor, and S. W. Keckler, “A variable warp
size architecture,” in ACM SIGARCH Computer Architecture News, vol. 43, no. 3.
ACM, 2015, pp. 489–501.
[56] T. G. Rogers, M. O’Connor, and T. M. Aamodt, “Cache-conscious wavefront scheduling,” in Proceedings of the 2012 45th Annual IEEE/ACM International Symposium
on Microarchitecture. IEEE Computer Society, 2012, pp. 72–83.
[57] A. Roth, “Physical register reference counting,” IEEE Computer Architecture Letters,
vol. 7, no. 1, pp. 9–12, 2008.
[58] K. Sankaralingam, R. Nagarajan, H. Liu, C. Kim, J. Huh, D. Burger, S. W. Keckler,
and C. R. Moore, “Exploiting ilp, tlp, and dlp with the polymorphous trips architecture,” in Computer Architecture, 2003. Proceedings. 30th Annual International
Symposium on. IEEE, 2003, pp. 422–433.
[59] M. Stephenson, S. K. Sastry Hari, Y. Lee, E. Ebrahimi, D. R. Johnson, D. Nellans,
M. O’Connor, and S. W. Keckler, “Flexible software profiling of gpu architectures,”
in ACM SIGARCH Computer Architecture News, vol. 43, no. 3. ACM, 2015, pp.
185–197.
[60] J. Tan and X. Fu, “Mitigating the susceptibility of gpgpus register file to process
variations,” in Parallel and Distributed Processing Symposium (IPDPS), 2015 IEEE
International. IEEE, 2015, pp. 969–978.
[61] J. Tan, Z. Li, and X. Fu, “Soft-error reliability and power co-optimization for
gpgpus register file using resistive memory,” in 2015 Design, Automation & Test
in Europe Conference & Exhibition (DATE). IEEE, 2015, pp. 369–374.
[62] J. Tan, S. L. Song, K. Yan, X. Fu, A. Marquez, and D. Kerbyson, “Combating the
reliability challenge of gpu register file at low supply voltage,” in Proceedings
of the 2016 International Conference on Parallel Architectures and Compilation.
ACM, 2016, pp. 3–15.
[63] N. Vijaykumar, K. Hsieh, G. Pekhimenko, S. Khan, A. Shrestha, S. Ghose, A. Jog,
P. B. Gibbons, and O. Mutlu, “Zorua: A holistic approach to resource virtualization
in gpus,” in Proceedings of the 49th annual IEEE/ACM International Symposium on
Microarchitecture, 2016.
[64] N. Vijaykumar, G. Pekhimenko, A. Jog, A. Bhowmick, R. Ausavarungnirun, C. Das,
M. Kandemir, T. C. Mowry, and O. Mutlu, “A case for core-assisted bottleneck
acceleration in gpus: enabling flexible data compression with assist warps,” in
ACM SIGARCH Computer Architecture News, vol. 43, no. 3. ACM, 2015, pp.
41–53.
[65] S. Wang, Y. Liang, C. Zhang, X. Xie, G. Sun, Y. Liu, Y. Wang, and X. Li,
“Performance-centric register file design for gpus using racetrack memory,” in
2016 21st Asia and South Pacific Design Automation Conference (ASP-DAC). IEEE,
2016, pp. 25–30.
[66] B. Wu, G. Chen, D. Li, X. Shen, and J. Vetter, “Enabling and exploiting flexible task
assignment on gpu through sm-centric program transformations,” in Proceedings
of the 29th ACM on International Conference on Supercomputing. ACM, 2015, pp.
119–130.
[67] X. Xie, Y. Liang, X. Li, Y. Wu, G. Sun, T. Wang, and D. Fan, “Enabling coordinated
register allocation and thread-level parallelism optimization for gpus,” in Proceedings of the 48th International Symposium on Microarchitecture. ACM, 2015, pp.
395–406.
[68] J. Yan and W. Zhang, “Exploiting virtual registers to reduce pressure on real
registers,” ACM Transactions on Architecture and Code Optimization (TACO),
vol. 4, no. 4, p. 3, 2008.
[69] W.-k. S. Yu, R. Huang, S. Q. Xu, S.-E. Wang, E. Kan, and G. E. Suh, “Sram-dram
hybrid memory with applications to efficient register files in fine-grained multithreading,” in ACM SIGARCH Computer Architecture News, vol. 39, no. 3. ACM,
2011, pp. 247–258.