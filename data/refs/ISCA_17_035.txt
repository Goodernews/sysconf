[1] 2016. Intel© 64 and IA-32 Architectures Software Developer’s Manual.
[2] 2016. perf: Linux profiling with performance counters. https://perf.wiki.kernel.
org/index.php/Main_Page. (2016).
[3] Keith Adams and Ole Agesen. 2006. A comparison of software and hardware
techniques for x86 virtualization. In Intl. Conf. on Arch. Support for Programming
Languages & Operating Systems (ASPLOS). https://doi.org/10.1145/1168857.
1168860
[4] Advanced Micro Devices 2015. AMD64 Architecture Programmer’s Manual
(Volume 2). Advanced Micro Devices.
[5] Jeongseob Ahn, Seongwook Jin, and Jaehyuk Huh. 2012. Revisiting hardwareassisted Page Walks for virtualized systems. In Intl. Symp. on Computer Architecture (ISCA). https://doi.org/10.1145/2366231.2337214
[6] ARM 2016. ARMv8 Architecture Reference Manual. ARM.
[7] Thomas W. Barr, Alan L. Cox, and Scott Rixner. 2010. Translation caching:
skip, don’t walk (the page table). In Intl. Symp. on Computer Architecture (ISCA).
https://doi.org/10.1145/1815961.1815970
[8] Thomas W. Barr, Alan L. Cox, and Scott Rixner. 2011. SpecTLB: a mechanism for
speculative address translation. In Intl. Symp. on Computer Architecture (ISCA).
https://doi.org/10.1145/2000064.2000101
[9] Paul S. Barth, Rishiyur §. Nikhil, and Arvind. 1991. M-Structures: extending a
parallel, non-strict, functional language with state. In ACM Conf. on Functional
Programming Languages and Computer Architecture. https://doi.org/10.1007/
3540543961_26

[10] Arkaprava Basu, Jayneel Gandhi, Jichuan Chang, Mark D. Hill, and Michael M.
Swift. 2013. Efficient virtual memory for big memory servers. In nil. Symp. on
Computer Architecture (ISCA). https://doi.org/10.1145/2485922.2485943

[11] Ravi Bhargava, Benjamin Serebrin, Francesco Spadini, and Srilatha Manne. 2008.
Accelerating two-dimensional page walks for virtualized systems. In Intl. Conf.
on Arch, Support for Programming Languages & Operating Systems (ASPLOS).
https://doi.org/10.1145/1346281.1346286

[12] Abhishek Bhattacharjee. 2013. Large-reach memory management unit caches.
In Intl. Symp. on Microarchitecture (MICRO). https://doi.org/10.1145/2540708.
2540741

[13] Abhishek Bhattacharjee, Daniel Lustig, and Margaret Martonosi. 2011. Shared
last-level TLBs for chip multiprocessors. In Symp. on High-Performance Computer Architecture (HPCA). https://doi.org/10.1109/HPCA.2011.5749717
[14] Abhishek Bhattacharjee and Margaret Martonosi. 2009. Characterizing the TLB
behavior of emerging parallel workloads on chip multiprocessors. In Intl. Conf.
on Parallel Arch. and Compilation Techniques (PACT). https://doi.org/10.1109/
PACT.2009.26

[15] Jeffrey Buell, Daniel Hecht, Jin Heo, Kalyan Saladi, and RH Taheri. 2013. Methodology for performance analysis of VMware vSphere under Tier-1 applications.
VMware Technical Journal 2, 1 (2013).

[16] Xiaotao Chang, Hubertus Franke, Yi Ge, Tao Liu, Kun Wang, Jimi Xenidis, Fei
Chen, and Yu Zhang. 2013. Improving virtualization in the presence of software
managed translation lookaside buffers. In Inti. Symp. on Computer Architecture
(ISCA). https://doi.org/10.1145/2485922.2485933

[17] Robert S. Chappell, Jared Stark, Sangwook P. Kim, Steven K. Reinhardt, and
Yale N. Patt. 1999. Simultaneous subordinate microthreading (SSMT). In Inti.
Symp. on Computer Architecture (ISCA). https://doi.org/10.1109/ISCA.1999,
765950

[18] Dawson Engler, Frans Kaashoek, and James O’ Toole, Jr. 1995. Exokernel: an
operating system architecture for application-level resource management. In ACM
Symp. on Operating Systems Principles (SOSP). https://doi.org/10.1145/224056.
224076

[19] Dawson R. Engler, Sandeep K. Gupta, and Frans M. Kaashoek. 1995. AVM:
Application-level virtual memory. In Hot Topics in Operating Systems (HotOS).
https://doi.org/10.1109/HOTOS.1995.513458

[20] Zhen Fang, Lixin Zhang, John B Carter, Wilson C Hsieh, and Sally A McKee.
2001. Reevaluating online superpage promotion with hardware support. In Symp.
on High-Performance Computer Architecture (HPCA). https://doi.org/10.1109/
HPCA.2001.903252

[21] Narayanan Ganapathy and Curt Schimmel. 1998. General purpose operating
system support for multiple page sizes. In USENIX Ann. Tech. Symp. (ATC).
http://dl.acm.org/citation.cfm?id=1268256.1268264

[22] Jayneel Gandhi, Arkaprava Basu, Mark D. Hill, and Michael M. Swift. 2014.
BadgerTrap: A Tool to Instrument x86-64 TLB Misses. Computer Architecture
News 42, 2 (Sept. 2014), 20-23. https://doi.org/10.1145/2669594.2669599
[23] Jayneel Gandhi, Arkaprava Basu, Mark D. Hill, and Michael M. Swift. 2014.
Efficient memory virtualization: reducing dimensionality of nested page walks. In
Intl. Symp. on Microarchitecture (MICRO). https://doi.org/10.1109/MICRO.2014.
37

[24] Jayneel Gandhi, Mark D. Hill, and Michael M. Swift. 2016. Agile paging:
exceeding the best of nested and shadow paging. In Intl. Symp. on Computer
Architecture (ISCA). https://doi.org/10.1109/ISCA.2016.67

[25] Fei Guo, Seongbeom Kim, Yury Baskakov, and Ishan Banerjee. 2015. Proactively breaking large pages to improve memory overcommitment performance
in VMware ESXi. In Intl. Conf. on Virtual Execution Environments (VEE).
https://doi.org/10.1145/2731186.2731187

[26] Bruce Jacob and Trevor Mudge. 1997. Software-managed address translation. In
Symp. on High-Performance Computer Architecture (HPCA). https://doi.org/10.
1109/HPCA.1997.569652

[27] Gokul B. Kandiraju and Anand Sivasubramaniam. 2002. Going the distance
for TLB prefetching: an application-driven study. In Intl. Symp. on Computer
Architecture (ISCA). https://doi.org/10.1109/ISCA.2002. 1003578

[28] Vasileios Karakostas, Jayneel Gandhi, Adrién Cristal, Mark D. Hill, Kathryn S.
McKinley, Mario Nemirovsky, Michael M. Swift, and Osman S. Unsal. 2016.
Energy-efficient address translation. In Symp. on High-Performance Computer
Architecture (HPCA). https://doi.org/10.1109/HPCA.2016.7446100

[29] Henry M Levy. 1984. Capability-based computer systems. Digital Press.
Daniel Lustig, Abhishek Bhattacharjee, and Margaret Martonosi. 2013. TLB
improvements for chip multiprocessors: Inter-core cooperative prefetchers and
shared last-level TLBs. ACM Trans. on Arch. & Code Optim. 10, 1 (2013).
https://doi.org/10.1145/2445572.2445574

[30] MIPS Technologies 2011. MIPS Architecture For Programmers Volume I-A:
Introduction to the MIPS32 Architecture. MIPS Technologies. Revision 3.02.

[31] David Nagle, Richard Uhlig, Tim Stanley, Stuart Sechrest, Trevor Mudge, and
Richard Brown. 1993. Design tradeoffs for software-managed TLBs. In Intl.
Symp. on Computer Architecture (ISCA). https://doi.org/10,.1145/165123. 165127
[32] Binh Pham, Arup Bhattacharjee, Yasuko Eckert, and Gabriel H. Loh. 2014.
Increasing TLB reach by exploiting clustering in page translations. In Symp.
on High-Performance Computer Architecture (HPCA). https://doi.org/10.1109/
HPCA.2014.6835964

[33] Binh Pham, Jan Vesely, Gabriel H. Loh, and Abhishek Bhattacharjee. 2015. Large
pages and lightweight memory management in virtualized environments: can
you have it both ways?. In Intl. Symp. on Microarchitecture (MICRO). https:
/Aoi.org/10.1145/2830772.2830773

[34] Sagi Shahar, Shai Bergman, and Mark Silberstein. 2016. ActivePointers: A case
for software address translation on GPUs. In Jntl. Symp. on Computer Architecture
(ISCA). https://doi.org/10.1109/ISCA.2016.58

[35] Madhusudhan Talluri and Mark D. Hill. 1994. Surpassing the TLB performance
of superpages with less operating system support. In Intl. Conf. on Arch. Support
for Programming Languages & Operating Systems (ASPLOS). https://doi.org/10.
1145/195473.195531

[36] Madhusudhan Talluri, Shing Kong, Mark D. Hill, and David A. Patterson. 1992.
Tradeoffs in supporting two page sizes. In Inti. Symp. on Computer Architecture
(ISCA). https://doi.org/10.1145/139669.140406

[37] Xiaolin Wang, Jiarui Zang, Zhenlin Wang, Yingwei Luo, and Xiaoming Li. 2011.
Selective hardware/software memory virtualization. In Intl. Conf. on Virtual
Execution Environments (VEE). https://doi.org/10.1145/1952682.1952710
[38] David L. Weaver and Tom Germond (Eds.). 1994. The SPARC Architecture
Manual (Version 9). Prentice Hall. SPARC International, Inc.

[39] Timothy Wood, Gabriel Tarasuk-levin, Prashant Shenoy, Peter Desnoyers, Emmanuel Cecchet, and Mark D. Corner. 2009. Memory Buddies: exploiting page
sharing for smart colocation. In Intl. Conf. on Virtual Execution Environments
(VEE). https://doi.org/10.1145/1508293.1508299

[40] Idan Yaniv and Dan Tsafrir. 2016. Hash, don’t cache (the page table). In Intl.
Conf. on Measurement & Modeling of Computer Systems (SIGMETRICS). https:
/Aoi.org/10.1145/2896377.2901456

[41] Lixin Zhang, Evan Speight, Ram Rajamony, and Jiang Lin. 2010. Enigma:
architectural and operating system support for reducing the impact of address
translation. In ACM Intl. Conf. on Supercomputing. https://doi.org/10.1145/
1810085.1810109