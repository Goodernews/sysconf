[1] Martin Abadi. 1999. Secrecy by Typing in Security Protocols. 7, ACM 46, 5 (Sept. 1999), 749-786.



[2] Andrew W. Appel, Paul-André Melliés, Christopher D. Richards, and Jéréme Vouillon. 2007. A Very Modal Model of a Modern, Major, General

Type System. In Proceedings of the 34th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL ’07).

109-122,



[3] Jesper Bengtson, Karthikeyan Bhargavan, Cédric Fournet, Andrew D. Gordon, and Sergio Maffeis. 2011. Refinement Types for Secure

Implementations. ACM Trans. Program. Lang. Syst. 33, 2 (Feb. 2011), 8:18:45.



[4] Lars Birkedal, Bernhard Reus, Jan Schwinghammer, Kristian Stovring, Jacob Thamsborg, and Hongseok Yang. 2011. Step-indexed Kripke

Models over Recursive Worlds. In Proceedings of the 38th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming

Languages (POPL *11). 119-132.



[5] Douglas Crockford. 2008. Making JavaScript Safe for Advertising. (2008). Retrieved April, 2017 from http://www.adsafe.org/



[6] Dominique Devriese, Lars Birkedal, and Frank Piessens. 2016. Reasoning about Object Capabilities with Logical Relations and Effect

Parametricity. In IEEE European Symposium on Security and Privacy (EuroS&P). 147-162.



[7] Thomas Dinsdale-Young, Mike Dodds, Philippa Gardner, Matthew J. Parkinson, and Viktor Vafeiadis. 2010. Concurrent Abstract Predicates.

In Proceedings of the 24th European Conference on Object-Oriented Programming (ECOOP °10). 504-528.



[8] Sophia Drossopoulou, James Noble, and Mark S. Miller. 2015a. Swapsies on the Internet: First Steps Towards Reasoning About Risk and Trust

in an Open World. In Proceedings of the 10th ACM Workshop on Programming Languages and Analysis for Security (PLAS’15). 2-15.



[9] Sophia Drossopoulou, James Noble, Mark S. Miller, and Toby Murray. 2015b. Reasoning about Risk and Trust in an Open World. Technical

Report ECSTR-15-08. Victoria University of Wellington.



[10] Matthias Felleisen and Robert Hieb. 1992. The revised report on the syntactic theories of sequential control and state. Theor. Comput. Sci. 103,

2 (Sept. 1992), 235-271.



[11] Google, Inc. 2015. Caja membrane implementation. (Feb. 2015). Retrieved July, 2015 from https://github.com/google/caja/blob/master/src/

com/google/caja/plugin/taming-membrane.js



[12] Andrew D. Gordon and Alan Jeffrey. 2001. Authenticity by Typing for Security Protocols. In Proceedings of the 14th IEEE Workshop on

Computer Security Foundations (CSFW ’01). 145-159.



[13] Ralf Jung, Robbert Krebbers, Lars Birkedal, and Derek Dreyer. 2016. Higher-order Ghost State. In Proceedings of the 21st ACM SIGPLAN

International Conference on Functional Programming (ICFP ’16). 256-269.



[14] Ralf Jung, David Swasey, Filip Sieczkowski, Kasper Svendsen, Aaron Turon, Lars Birkedal, and Derek Dreyer. 2015. Iris: Monoids and

Invariants as an Orthogonal Basis for Concurrent Reasoning. In Proceedings of the 42nd Annual ACM SIGPLAN-SIGACT Symposium on

Principles of Programming Languages (POPL °15). 637-650.



[15] Robbert Krebbers, Ralf Jung, Ale’ Bizjak, Jacques-Henri Jourdan, Derek Dreyer, and Lars Birkedal. 2017a. The Essence of Higher-Order

Concurrent Separation Logic. In Proceedings of the 26th European Symposium on Programming (ESOP ’17). 696-723.



[16] Robbert Krebbers, Amin Timany, and Lars Birkedal. 2017b. Interactive Proofs in Higher-order Concurrent Separation Logic. In Proceedings of

the 44th ACM SIGPLAN Symposium on Principles of Programming Languages (POPL ’17). 205-217.



[17] Adrian Mettler, David Wagner, and Tyler Close. 2010. Joe-E: A Security-Oriented Subset of Java. In Proceedings of the Network and Distributed

System Security Symposium (NDSS 710).



[18] Mark Samuel Miller. 2006. Robust Composition: Towards a Unified Approach to Access Control and Concurrency Control. Ph.D. Dissertation.

Johns Hopkins University.



[19] Mark S. Miller. 2008. Sealers and Unsealers. (2008). Retrieved February, 2017 from http://wiki-erights.org/wiki/Walnut/Secure_Distributed_

Computing/Capability_Patterns#Sealers_and_Unsealers



[20] Mark S. Miller, Tom Van Cutsem, and Bill Tulloh. 2013. Distributed Electronic Rights in Javascript. In Proceedings of the 22Nd European

Conference on Programming Languages and Systems (ESOP’13). 1-20.



[21] Mark S. Miller, Chip Morningstar, and Bill Frantz. 2000. Capability-Based Financial Instruments. In Proceedings of the 4th International

Conference on Financial Cryptography (FC ’00). 349-378.



[22] Mark S. Miller, Mike Samuel, Ben Laurie, Ihab Awad, and Mike Stay. 2008. Caja: Safe active content in sanitized JavaScript. (June 2008).

Retrieved February, 2017 from http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.306.6704 Unpublished draft.



[23] Mark S. Miller and Jonathan S. Shapiro. 2003. Paradigm Regained: Abstraction Mechanisms for Access Control. In Advances in Computing

Science — ASIAN 2003 Programming Languages and Distributed Computation, 8th Asian Computing Science Conference (ASIAN 03). 224-242.

Springer LNCS 2896.



[24] James H. Morris, Jr. 1973. Protection in Programming Languages. Commun. ACM 16, 1 (Jan. 1973), 15-21.



[25] Toby Murray. 2010. Analysing the Security Properties of Object-Capability Patterns. Ph.D. Dissertation. Hertford College.



[26] Joe Gibbs Politz, Arjun Guha, and Shriram Krishnamurthi. 2014. Typed-based verification of Web sandboxes. 7. Comput. Secur. 22, 4 July

2014), 511-565.



[27] Alfred Spiessens. 2007. Patterns of Safe Collaboration. Ph.D. Dissertation. Université catholique de Louvain.



[28] Manuscript submitted to ACM

22 David Swasey, Deepak Garg, and Derek Dreyer



[29] Fred Spiessens and Peter Van Roy. 2004. The Oz-E Project: Design Guidelines for a Secure Multiparadigm Programming Language. In

Proceedings of the Second International Conference on Multiparadigm Programming in Mozart/Oz (MOZ ’04). 21-40.



[30] Fred Spiessens and Peter Van Roy. 2005. A Practical Formal Model for Safety Analysis in Capability-based Systems. In Proceedings of the 1st

International Conference on Trustworthy Global Computing (TGC’05). 248-278.



[31] Marc Stiegler and Mark Miller. 2006. How Emily Tamed the Caml. Technical Report HPL-2006-116. HP Laboratories.



[32] Eijiro Sumii and Benjamin C. Pierce. 2004. A Bisimulation for Dynamic Sealing. In Proceedings of the 31st ACM SIGPLAN-SIGACT Symposium

on Principles of Programming Languages (POPL ’04). 161-172.



[33] Ankur Taly, Ulfar Erlingsson, John C. Mitchell, Mark S. Miller, and Jasvir Nagra. 2011. Automated Analysis of Security-Critical JavaScript

APIs. In Proceedings of the 2011 IEEE Symposium on Security and Privacy (SP ’11). 363-378.



[34] Aaron Turon, Derek Dreyer, and Lars Birkedal. 2013. Unifying refinement and Hoare-style reasoning in a logic for higher-order concurrency.

In Proceedings of the 18th ACM SIGPLAN International Conference on Functional Programming (ICFP ’13). 377-390.
