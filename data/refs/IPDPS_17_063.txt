[1] Top500, “http://www.top500.org/.”
[2] Graph500, “http://www.graph500.org/.”
[3] S. Beamer, A. Buluc, K. Asanovic, and D. Patterson, “Distributed memory breadth-first search revisited: Enabling bottom-up search,” Proceedings of IEEE 27th International Parallel and Distributed Processing Symposium Workshops and PhD Forum, IPDPSW ’13, pp. 1618–1627, 2013.
[4] F. Checconi and F. Petrini, “Traversing trillions of edges in real time: Graph exploration on large-scale parallel machines,” Proceedings of the International Parallel and Distributed Processing Symposium, IPDPS ’14, no. December 2010, pp. 425–434, 2014.
[5] A. Buluc, S. Beamer, K. Madduri, K. Asanovic ́, and D. Patterson, “Distributed-Memory Breadth-First Search on Massive Graphs,” in Parallel Graph Algorithms, 2015.
[6] A. Buluc and K. Madduri, “Parallel breadth-first search on distributed memory systems,” Proceedings of International Conference for High Performance Computing, Networking, Storage and Analysis, SC’11, pp. 1–12, 2011.
[7] S. Beamer, K. Asanovic ́, and D. Patterson, “Direction-optimizing breadth-first search,” in Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis, SC ’12, vol. 21, no. 3-4, 2012, pp. 137–148.
[8] H. Fu, J. Liao, J. Yang, L. Wang, Z. Song, X. Huang, C. Yang, W. Xue, F. Liu, F. Qiao, W. Zhao, X. Yin, C. Hou, C. Zhang, W. Ge, J. Zhang, Y. Wang, C. Zhou, and G. Yang, “The Sunway TaihuLight supercomputer: system and applications,” Science China Information Sciences, vol. 072001, 2016.
[9] J. Dongarra, “Report on the Sunway TaihuLight System,” Tech Report UT-EECS-16-742, p. 2016, 2016.
[10] R. Pearce, M. Gokhale, and N. M. Amato, “Faster Parallel Traversal of Scale Free Graphs at Extreme Scale with Vertex Delegates,” Proceedings of International Conference for High Performance Com- puting, Networking, Storage and Analysis, SC ’14, pp. 549–559, 2014.
[11] K. Ueno and T. Suzumura, “Parallel distributed breadth first search on GPU,” in Proceedings of 20th Annual International Conference on High Performance Computing, HiPC’13, 2013, pp. 314–323.
[12] T. Hiragushi and D. Takahashi, “Efficient hybrid breadth-first search on GPUs,” in ICA3PP’ 13, vol. 8286 LNCS, no. PART 2, 2013, pp. 40–50.
[13] M. Bisson, M. Bernaschi, and E. Mastrostefano, “Parallel Distributed Breadth First Search on the Kepler Architecture,” Proceedings of IEEE Transactions on Parallel and Distributed Systems, TPDS ’16, vol. 27, no. 7, pp. 2091–2102, 2016.
[14] D. P. Scarpazza, O. Villa, and F. Petrini, “Efficient breadth-first search on the cell/BE processor,” Proceedings of IEEE Transactions on Parallel and Distributed Systems, TPDS ’08, vol. 19, no. 10, pp. 1381–1395, 2008.
[15] L. L. L. Luo, M. Wong, and W.-m. H. W.-m. Hwu, “An effective GPU implementation of breadth-first search,” in Proceedings of Design Automation Conference, DAC ’10, 2010, pp. 52–55.
[16] S. Hong, S. K. Kim, T. Oguntebi, and K. Olukotun, “Accelerating CUDA graph algorithms at maximum warp,” in Proceedings of the 16th ACM symposium on Principles and practice of parallel pro- gramming, PPoPP ’11, vol. 46, no. 8, 2011, p. 267.
[17] D. Merrill, M. Garland, and A. Grimshaw, “Scalable GPU graph traversal,” Proceedings of the 17th ACM SIGPLAN symposium on Principles and Practice of Parallel Programming, vol. 47, no. 8, p. 117, 2012.
[18] H. Liu and H. H. Huang, “Enterprise: Breadth-first Graph Traversal on GPUs,” in Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis, 2015, pp. 68:1—-68:12.
[19] Y. Wang, A. Davidson, Y. Pan, Y. Wu, A. Riffel, and J. D. Owens, “Gunrock: a high-performance graph processing library on the GPU,” in Proceedings of the 21st ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, PPoPP ’16. New York, New York, USA: ACM Press, 2016, pp. 1–12.
[20] S. Hong, T. Oguntebi, and K. Olukotun, “Efficient parallel graph exploration on multi-core CPU and GPU,” Proceedings of Parallel Architectures and Compilation Techniques, PACT ’11, pp. 78–88, 2011.
[21] R. Korf and P. Schultze, “Large-scale parallel breadth-first search,” AAAI ’05, pp. 1380–1385, 2005.
[22] R. Pearce, M. Gokhale, and N. M. Amato, “Scaling techniques for massive scale-free graphs in distributed (external) memory,” Proceed- ings of IEEE 27th International Parallel and Distributed Processing Symposium, IPDPS ’13, pp. 825–836, 2013.
[23] V. Agarwal, D. Pasetto, and D. A. Bader, “Scalable Graph Exploration on Multicore Processors,” Proceedings of the 2010 ACM/IEEE Inter- national Conference for High Performance Computing, Networking, Storage and Analysis, SC’10, no. November, 2010.
[24] J. Chhugani, N. Satish, C. Kim, J. Sewall, and P. Dubey, “Fast and efficient graph traversal algorithm for CPUs: Maximizing single- node efficiency,” in Proceedings of the 2012 IEEE 26th International Parallel and Distributed Processing Symposium, IPDPS ’12, 2012, pp. 378–389.
[25] Y. Yasui and K. Fujisawa, “Fast and scalable NUMA-based thread parallel breadth-first search,” in Proceedings of 2015 International Conference on High Performance Computing & Simulation, HPCS ’15. IEEE, jul 2015, pp. 377–385.
[26] A. Yoo and K. Henderson, “A Scalable Distributed Parallel Breadth- First Search Algorithm on BlueGene / L,” Proceedings of the 2005 ACM/IEEE conference on Supercomputing, SC ’05, p. 25, 2005.
[27] F. Checconi, F. Petrini, J. Willcock, A. Lumsdaine, A. R. Choudhury, and Y. Sabharwal, “Breaking the speed and scalability barriers for graph exploration on distributed-memory machines,” in Proceedings of International Conference for High Performance Computing, Net- working, Storage and Analysis, SC ’12, 2012.
[28] B. Betkaoui, Y. Wang, D. B. Thomas, and W. Luk, “A Reconfigurable Computing Approach for Efficient and Scalable Parallel Graph Ex- ploration,” Proceedings of 2012 IEEE 23rd International Conference on Application-Specific Systems, Architectures and Processors ASAP 12, pp. 8–15, 2012.
