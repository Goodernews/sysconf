[1] G. Malewicz, M. H. Austern, A. J. Bik, J. C. Dehnert,
I. Horn, N. Leiser, and G. Czajkowski, “Pregel:
A system for large-scale graph processing,” in
Proceedings of the 2010 ACM SIGMOD International
Conference on Management of Data, ser. SIGMOD
710. New York, NY, USA: ACM, 2010, pp. 135-—
146. [Online]. Available: http://doi.acm.org/10.1145/
1807167.1807184

[2] J. E. Gonzalez, Y. Low, H. Gu, D. Bickson, and
C. Guestrin, “Powergraph: Distributed graph-parallel
computation on natural graphs,’ in Proceedings of
the 10th USENIX Conference on Operating Systems
Design and Implementation, ser. OSDI’12. Berkeley,
CA, USA: USENIX Association, 2012, pp. 17-30.
[Online]. Available: http://dl.acm.org/citation.cfm?id=
2387880.2387883

[3] U. Cheramangalath, R. Nasre, and Y. N. Srikant,
“Falcon: A graph manipulation language for heterogeneous systems,” ACM Trans. Archit. Code Optim.,
vol. 12, no. 4, pp. 54:1-54:27, Dec. 2015. [Online].
Available: http://doi.acm.org/10.1145/2842618

[4] U.Cheramangalath, R.Nasre, and Y. N. Srikant,
“Falcon- graphdsl compiler,’ Jan 2017. [Online].
Available: https://github.com/falcon- graphdsl/

[5] Y. Low, D. Bickson, J. Gonzalez, C. Guestrin,
A. Kyrola, and J. M. Hellerstein, “Distributed
GraphLab: A Framework for Machine Learning and
Data Mining in the Cloud,” Proc. VLDB Endow., vol. 5,
no. 8, pp. 716-727, Apr. 2012. [Online]. Available:
http://dx.doi.org/10.14778/2212351.2212354

[6] K. Lang, “Finding good nearly balanced cuts in power
law graphs,” 2004.

[7] S. Hong, H. Chafi, E. Sedlar, and K. Olukotun, “GreenMarl: A DSL for Easy and Efficient Graph Analysis,”
in Proceedings of the Seventeenth International
Conference on Architectural Support for Programming
Languages and Operating Systems, ser. ASPLOS
XVII. New York, NY, USA: ACM, 2012, pp.
349-362. [Online]. Available: http://doi.acm.org/10.
1145/2150976.2151013

[8] G. Shashidhar and R. Nasre, LightHouse: An Automatic
Code Generator for Graph Algorithms on GPUs.
Cham: Springer International Publishing, 2017, pp.
235-249. [Online]. Available: http://dx.doi.org/10.
1007/978-3-319-52709-3_18

[9] S. Hong, S. Salihoglu, J. Widom, and K. Olukotun,
“Simplifying Scalable Graph Processing with
a Domain-Specific Language,’ in Proceedings
of Annual IEEE/ACM International Symposium
on Code Generation and Optimization, _ ser.
CGO ’14. New York, NY, USA: ACM,
2014, pp. 208:208-208:218. [Online]. Available:
http://doi.acm.org/10.1145/2544137.2544162

[10] S. Salihoglu and J. Widom, “Gps: A graph processing
system,” in Proceedings of the 25th International
Conference on Scientific and Statistical Database
Management, set. SSDBM. New York, NY, USA:
ACM, 2013, pp. 22:1-22:12. [Online]. Available:
http://doi.acm.org/10.1145/2484838.2484843

[11] Z. Khayyat, K. Awara, A. Alonazi, H. Jamjoom,
D. Williams, and P. Kalnis, “Mizan: A_ system
for dynamic load balancing in large-scale graph
processing,” in Proceedings of the 8th ACM European
Conference on Computer Systems, ser. EuroSys
°13.. New York, NY, USA: ACM, 2013, pp. 169182. [Online]. Available: http://doi.acm.org/10.1145/
2465351.2465369

[12] R. Shaposhnik, C. Martella, and D. Logothetis, Practical Graph Analytics with Apache Giraph, 1st ed.
Berkely, CA, USA: Apress, 2015.

[13] R. Chen, J. Shi, Y. Chen, and H. Chen, “Powerlyra:
Differentiated graph computation and partitioning
on skewed graphs,” in Proceedings of the Tenth
European Conference on Computer Systems, set.
EuroSys °15. New York, NY, USA: ACM, 2015,
pp. 1:1-1:15. [Online]. Available: http://doi.acm.org/
10.1145/2741948.2741970

[14] T. White, Hadoop: The Definitive Guide, 1st ed.
O’Reilly Media, Inc., 2009.

[15] Y. Bu, B. Howe, M. Balazinska, and M. D.
Ernst, “Haloop: Efficient iterative data processing
on large clusters,’ Proc. VLDB Endow., vol. 3, no.
1-2, pp. 285-296, Sep. 2010. [Online]. Available:
http://dx.doi.org/10.14778/1920841.1920881

[16] J. Ekanayake, H. Li, B. Zhang, T. Gunarathne,
S.-H. Bae, J. Qiu, and G. Fox, “Twister: A
runtime for iterative mapreduce,” in Proceedings of
the 19th ACM International Symposium on High
Performance Distributed Computing, ser. HPDC °10.
New York, NY, USA: ACM, 2010, pp. 810818. [Online]. Available: http://doi.acm.org/10.1145/
1851476.1851593

[17] B. Shao, H. Wang, and Y. Li, “Trinity: A
distributed graph engine on a memory cloud,”
in Proceedings of the 2013 ACM SIGMOD
International Conference on Management of Data,
ser. SIGMOD 713. New York, NY, USA:
ACM, 2013, pp. 505-516. [Online]. Available:
http://doi.acm.org/10.1145/2463676.2467799

[18] D. Gregor and A. Lumsdaine, “The parallel bgl: A
generic library for distributed graph computations,”
in In Parallel Object-Oriented Scientific Computing
(POOSC), 2005.

[19] A. Kyrola, G. Blelloch, and C. Guestrin, “Graphchi:
Large-scale graph computation on just a pc,’ in
Proceedings of the 10th USENIX Conference on

[20] Operating Systems Design and Implementation, set.
OSDI12. Berkeley, CA, USA: USENIX Association,
2012, pp. 31-46. [Online]. Available: http://dl.acm.
org/citation.cfm?id=2387880.2387884

[21] J. Shun and G. E. Blelloch, “Ligra: A lightweight
graph processing framework for shared memory,”
SIGPLAN Not., vol. 48, no. 8, pp. 135-146, Feb.
2013. [Online]. Available: http://doi.acm.org/10.1145/
2517327.2442530

[22] A. Roy, I. Mihailovic, and W. Zwaenepoel, “Xstream: Edge-centric graph processing using streaming
partitions,” in Proceedings of the Twenty-Fourth ACM
Symposium on Operating Systems Principles, ser.
SOSP °13. New York, NY, USA: ACM, 2013, pp.
472-488. [Online]. Available: http://doi.acm.org/10.
1145/2517349.2522740

[23] J. Yan, G. Tan, Z. Mo, and N. Sun, “Graphine: Programming graph-parallel computation of large natural
graphs for multicore clusters,” JEEE Transactions on
Parallel and Distributed Systems, vol. 27, no. 6, pp.
1647-1659, June 2016.

[24] A. Gharaibeh, L. Beltréo Costa, E. Santos-Neto, and
M. Ripeanu, “A Yoke of Oxen and a Thousand
Chickens for Heavy Lifting Graph Processing,” in
Proceedings of the 21st International Conference on
Parallel Architectures and Compilation Techniques,
ser. PACT 712. New York, NY, USA: ACM, 2012,
pp. 345-354. [Online]. Available: http://doi.acm.org/
10.1145/2370816.2370866

[25] D. Sengupta, N. Sundaram, X. Zhu, T. L. Willke,
J. Young, M. Wolf, and K. Schwan, Graphin: An Online High Performance Incremental Graph Processing
Framework. Cham: Springer International Publishing,
2016, pp. 319-333.

[26] L. G. Valiant, “A bridging model for parallel
computation,” Commun. ACM, vol. 33, no. 8,
pp. 103-111, Aug. 1990. [Online]. Available: http:
//doi.acm.org/10.1145/79173.79181

[27] L. P. Chew, “Guaranteed-quality Mesh Generation
for Curved Surfaces,” in Proceedings of the Ninth
Annual Symposium on Computational Geometry, set.
SCG ’°93. New York, NY, USA: ACM, 1993, pp.
274-280. [Online]. Available: http://doi.acm.org/10.
1145/160985.161150

[28] H. Kwak, C. Lee, H. Park, and S. Moon, “What
is twitter, a social network or a news media?” in
Proceedings of the 19th International Conference on
World Wide Web, ser. WWW °10. New York, NY,
USA: ACM, 2010, pp. 591-600. [Online]. Available:
http://doi.acm.org/10.1145/1772690.1772751

[29] S. Chung and A. Condon, “Parallel implementation of
Bouvka’s minimum spanning tree algorithm,” pp. 302—
308, 1996.
U.Cheramangalath,

[30] R.Nasre, and Y. N.
Srikant, “Dh-falcon  sssp dsl and  autogenerated code,” may 2017. [Online].
Available: https://github.com/falcon-graphdsl/

[31] Falcon- A-Graph-Manipulation-Language-for-Heterogeneous-Syster
blob/master/GPU/sssp.pdf

[32] D. A. Bader and K. Madduri, “Gtgraph: A synthetic
graph generator suite,’ 2006.

[33] F. Chierichetti, R. Kumar, S. Lattanzi, M. Mitzenmacher, A. Panconesi, and P. Raghavan, “On
compressing social networks,” in Proceedings of
the 15th ACM SIGKDD International Conference
on Knowledge Discovery and Data Mining,
ser. KDD_ ’09. New York, NY, USA:
ACM, 2009, pp. 219-228. [Online]. Available:
http://doi.acm.org/10.1145/1557019.1557049

[34] P. Boldi, B. Codenotti, M. Santini, and S. Vigna,
“Ubicrawler: A scalable fully distributed web crawler,”
Softw. Pract. Exper., vol. 34, no. 8, pp. 711-726, Jul.
2004. [Online]. Available: http://dx.doi.org/10.1002/
spe.587

[35] P. Boldi, M. Santini, and S. Vigna, “A large
time-aware web graph,’ SIGIR Forum, vol. 42,
no. 2, pp. 33-38, Nov. 2008. [Online]. Available:
http://doi.acm.org/10.1145/1480506. 1480511

[36] J. Yang and J. Leskovec, “Defining and evaluating
network communities based on ground-truth,” in 20/2
IEEE 12th International Conference on Data Mining,
Dec 2012, pp. 745-754.

[37] L. P. Chew, N. Chrisochoides, and F. Sukup, “Parallel
constrained delaunay meshing,” 1997.

[38] “Parmetis - parallel graph partitioning and fill-reducing
matrix ordering,’ 2013. [Online]. Available: http:
//glaros.dtc.umn.edu/gkhome/metis/parmetis/overview