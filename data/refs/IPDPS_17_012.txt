[1] Inc. AMD. Software optimization guide for amd64 processors, 2005. http://support.amd.com/TechDocs/25112.PDF
[2] Inc. ARM. Arm technical reference manual, 2015.
[3] Matthew Arnold and Barbara G. Ryder. A framework for reducing the cost of instrumented code. In Proceed- ings of PLDI, pages 168–179, Snowbird, Utah, June
2001.
[4] Katelin A. Bailey, Peter Hornyack, Luis Ceze,
Steven D. Gribble, and Henry M. Levy. Exploring storage class memory with key value stores. In Proceedings of the 1st Workshop on Interactions of NVM/FLASH with Operating Systems and Workloads, 2013.
[5] Kumud Bhandari, Dhruva R. Chakrabarti, and Hans- Juergen Boehm. Makalu: fast recoverable allocation of non-volatile memory. In Proceedings of OOPSLA, pages 677–694, 2016.
[6] Hans-Juergen Boehm and Dhruva R. Chakrabarti. Per- sistence programming models for non-volatile memory. In Proceedings of ISMM, pages 55–67, 2016.
[7] Jacob Brock, Chencheng Ye, and Chen Ding. Replace- ment policies for heterogeneous memories. In Pro- ceedings of the International Symposium on Memory Systems, pages 232–237, 2016.
[8] Calin Cascaval, Evelyn Duesterwald, Peter F. Sweeney, and Robert W. Wisniewski. Multiple page size model- ing and optimization. In Proceedings of PACT, pages 339–349, 2005.
[9] Dhruva R. Chakrabarti, Hans-Juergen Boehm, and Ku- mud Bhandari. Atlas: leveraging locks for non-volatile memory consistency. In Proceedings of OOPSLA, pages 433–452, 2014.
[10] Dong Chen, Chencheng Ye, and Chen Ding. Write locality and optimization for persistent memory. In Proceedings of the International Symposium on Mem- ory Systems, pages 77–87, 2016.
[11] T. M. Chilimbi and M. Hirzel. Dynamic hot data stream prefetching for general-purpose programs. In Proceedings of PLDI, pages 199–209, 2002.
[12] Howard Chu. MDB: A memory-mapped database and backend for openldap, 2014. http://www.openldap.org/pub/hyc/mdm-paper.pdf.
[13] C. Clark. A hash table data structure in c., 2005. https://github.com/davidar/c-hashtable.
[14] Peter J. Denning and Stuart C. Schwartz. Properties of the working set model. Communications of the ACM, 15(3):191–198, 1972.
[15] Chen Ding and Pengcheng Li. Cache-conscious mem- ory management. In Proceedings of the ACM SIG- PLAN Workshop on Memory System Performance and Correctness, 2014.
[16] Chen Ding and Pengcheng Li. Timescale stream statisitcs for hierarchical management. In STREAM workshop, 2016.
[17] David Eklov and Erik Hagersten. StatStack: Efficient modeling of LRU caches. In Proceedings of ISPASS, pages 55–65, 2010.
[18] Joseph Izraelevitz, Terence Kelly, and Aasheesh Kolli. Failure-atomic persistent memory updates via JUSTDO logging. In Proceedings of ASPLOS, pages 427–442, 2016.
[19] Joseph Izraelevitz, Hammurabi Mendes, and Michael L. Scott. Linearizability of persistent memory objects under a full-system-crash failure model. In Proceedings of the International Conference on Distributed Computing, pages 313–327, 2016.
[20] Linux OS kernel. Understanding the linux virtual memory manager, 2007. https://www.kernel.org/doc/gorman/pdf/understand.pdf.
[21] Hewlett Packard Labs. Atlas: Pro- gramming for persistent memory, 2016. https://github.com/HewlettPackard/Atlas.
[22] Chris Lattner and Vikram S. Adve. Automatic pool allocation: improving performance by controlling data structure layout in the heap. In Proceedings of PLDI, pages 129–142, 2005.
[23] Stephen Lawson. Intel and micron unveil 3d xpoint – a new class of memory, 2015. http://www.computerworld.com/article/2951869/computer-
hardware/intel-and-micron-unveil-3d-xpoint-a-new- class-of-memory.html.
[24] P. Li, H. Luo, C. Ding, Z. Hu, and H. Ye. Code layout optimization for defensiveness and politeness in shared cache. In Proceedings of ICPP, 2014.
[25] Pengcheng Li and Dhruva R. Chakrabarti. Adaptive software caching for efficient NVRAM data persis- tence. In Proceedings of the LCPC Workshop, pages 93–97, 2016.
[26] Pengcheng Li and Chen Ding. All-window data live- ness. In Proceedings of the ACM SIGPLAN Workshop on Memory Systems Performance and Correctness, 2013.
[27] Pengcheng Li, Chen Ding, and Hao Luo. Modeling heap data growth using average liveness. In Proceed- ings of the 2014 International Symposium on Memory Management, 2014.
[28] Pengcheng Li, Hao Luo, and Chen Ding. Rethinking a heap hierarchy as a cache hierarchy: a higher-order theory of memory demand (hotm). In Proceedings of the 2016 ACM SIGPLAN International Symposium on Memory Management, 2016.
[29] Hao Luo, Guoyang Chen, Pengcheng Li, Chen Ding, and Xipeng Shen. Data-centric combinatorial optimiza- tion of parallel code. In Proceedings of PPoPP, 2016. poster paper.
[30] Hao Luo, Chen Ding, and Pengcheng Li. Optimal thread-to-core mapping for pipeline programs. In Pro- ceedings of the ACM SIGPLAN Workshop on Memory
System Performance and Correctness, 2014.
[31] Hao Luo, Pengcheng Li, and Chen Ding. Parallel data sharing in cache: Theory, measurement and anal- ysis. Technical Report URCS #994, Department of Computer Science, University of Rochester, December
2014.
[32] Hao Luo, Pengcheng Li, and Chen Ding. Thread
data sharing in cache: Theory and measurement. In
Proceedings of PPoPP, 2017.
[33] Hao Luo, Chencheng Ye, Pengcheng Li, and Chen
Ding. Composable modeling of coherence and numa effects for optimizing thread and data placement. In Proceedings of ISPASS, 2016. poster paper.
[34] R. L. Mattson, J. Gecsei, D. Slutz, and I. L. Traiger. Evaluation techniques for storage hierarchies. IBM System Journal, 9(2):78–117, 1970.
[35] Maged M. Michael and Michael L. Scott. Simple, fast, and practical non-blocking and blocking concur- rent queue algorithms. In Proceedings of the ACM Symposium on Principles of Distributed Computing, pages 267–275, 1996.
[36] Sparsh Mittal. A survey of power management tech- niques for phase change memory. Int. J. of Computer Aided Engineering and Technology, 2014.
[37] Qingpeng Niu, James Dinan, Qingda Lu, and P. Sa- dayappan. PARDA: A fast parallel reuse distance analysis algorithm. In Proceedings of IPDPS, 2012.
[38] OpenLDAP. http://www.openldap.org/.
[39] perf: Linux profiling with performance counters.
https://perf.wiki.kernel.org/index.php/Main Page.
[40] Derek L. Schuff, Milind Kulkarni, and Vijay S. Pai. Accelerating multicore reuse distance analysis with sampling and parallelization. In Proceedings of PACT,
pages 53–64, 2010.
[41] Xipeng Shen, Jonathan Shaw, Brian Meeker, and Chen
Ding. Locality approximation using time. In Proceed-
ings of POPL, pages 55–61, 2007.
[42] Peter Snyder. tmpfs: A virtual memory file system. In
In Proceedings of the Autumn 1990 European UNIX
Users Group Conference, 1990.
[43] Haris Volos, Andres Jaan Tack, and Michael M. Swift.
Mnemosyne: Lightweight persistent memory. In Pro-
ceedings of ASPLOS, 2011.
[44] Carl A. Waldspurger, Nohhyun Park, Alexander Garth-
waite, and Irfan Ahmad. Efficient mrc construction with shards. In Proceedings of the 13th USENIX Conference on File and Storage Technologies, 2015.
[45] Steven Cameron Woo, Moriyoshi Ohara, Evan Torrie, Jaswinder Pal Singh, and Anoop Gupta. The splash-2 programs: Characterization and methodological consid- erations. In Proceedings of ISCA, 1995.
[46] Xiaoya Xiang, Chen Ding, Hao Luo, and Bin Bao. HOTL: a higher order theory of locality. In Proceed- ings of ASPLOS, pages 343–356, 2013.
