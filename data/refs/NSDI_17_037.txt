[1] A Twitter Analog to PageRank.
http://thenoisychannel .com/2009/01/13/
a-twitter-analog-to-pagerank.

[2] Accelio based network block device.
https: //github.com/accelio/NBDX.

14th USENIX Symposium on Networked Systems Design and Implementation 661
[3] Amazon EC2 Pricing.
https: //aws.amazon.com/ec2/pricing.
Accessed: 2017-02-02.

[4] Apache Hadoop NextGen MapReduce (YARN).
http: //goo.gl/etTGA.

[5] CloudLab. https: //www.cloudlab.us.

[6] Fio - Flexible I/O Tester.
https: //github.com/axboe/fio.

[7] Google Compute Engine Pricing. https:
//cloud.google.com/compute/pricing.
Accessed: 2017-02-02.

[8] Google Container Engine. https:
//cloud.google.com/container-engine/.

[9] Graph Analytics Benchmark in CloudSuite. http:
//parsa.epfl.ch/cloudsuite/graph.html.

[10] HP Moonshot System: The world’s first
software-defined servers. http: //h10032.www1.
hp.com/ctg/Manual/c03728406. pdf.

[11] HP: The Machine. http://www. labs .hpe.com/
research/themachine/.

[12] Intel RSA. http://www. intel .com/content/
www/us/en/architecture-and-technology/
rsa-demo-x264.html.

[13] Kubermetes. http: //kubernetes.io.

[14] Linux memory management. http:
//wow.tidp.org/LDP/tlk/mm/memory .html.

[15] Linux Multi-Queue Block IO Queueing
Mechanism (blk-mq).
https: //www.thomas-krenn.com/en/wiki/
Linux_Multi-Queue_Block_I0O_Queueing_
Mechanism_(blk-mq).

[16] Mellanox ConnectX-3 User Manual.
http: //www.mellanox.com/related-docs/
user_manuals/ConnectX-3_VPI_Single_
and_Dual_QSFP_Port_Adapter_Card_User_
Manual .pdf.

[17] Mellanox $X6036G Specifications.
http: //www.mellanox.com/related-docs/
prod_gateway_systems/PB_SX6036G. pdf.

[18] Memcached - A distributed memory object
caching system. http: //memcached.org.

[19] Microsoft Azure Cloud Services Pricing.
https://azure .microsoft.com/en-us/
pricing/details/cloud-services/.
Accessed: 2017-02-02.

[20] Redis, an in-memory data structure store.
http://redis.io.

[21] Stackbd: Stacking a block device.
https: //github.com/OrenKishon/stackbd.

[22] TPC Benchmark C (TPC-C).
http://www.tpc.org/tpcc/.

[23] VoltDB.
https: //github.com/VoltDB/voltdb.

[24] G. Ananthanarayanan, A. Ghodsi, S. Shenker, and
I. Stoica. Effective Straggler Mitigation: Attack of
the Clones. In NSDJ, 2013.

[25] E. A. Anderson and J. M. Neefe. An exploration
of network RAM. Technical Report
UCB/CSD-98-1000, EECS Department,
University of California, Berkeley, Dec 1994.

[26] B. Atikoglu, Y. Xu, E. Frachtenberg, S. Jiang, and
M. Paleczny. Workload analysis of a large-scale
key-value store. In SIGMETRICS, 2012.

[27] L. A. Barroso, J. Clidaras, and U. Hélzle. The
datacenter as a computer: An introduction to the
design of warehouse-scale machines. Synthesis
Lectures on Computer Architecture, 8(3):1-154,
2013.

[28] P. Bodik, I. Menache, M. Chowdhury, P. Mani,
D. Maltz, and I. Stoica. Surviving failures in
bandwidth-constrained datacenters. In
SIGCOMM, 2012.

[29] J.B. Carter, J. K. Bennett, and W. Zwaenepoel.
Implementation and performance of Munin. In
SOSP, 1991.

[30] B. L. Chamberlain, D. Callahan, and H. P. Zima.
Parallel programmability and the Chapel language.
International Journal of High Performance
Computing Applications, 21(3):291-312, 2007.

[31] H. Chen, Y. Luo, X. Wang, B. Zhang, Y. Sun, and
Z. Wang. A transparent remote paging model for
virtual machines. In International Workshop on
Virtualization Technology, 2008.

[32] M. Chowdhury, S. Kandula, and I. Stoica.
Leveraging endpoint flexibility in data-intensive
clusters. In SIGCOMM, 2013.

[33] P. Costa, H. Ballani, K. Razavi, and I. Kash.
R2C2: A network stack for rack-scale computers.
In SIGCOMM, 2015.
[34] D. E. Culler, A. Dusseau, S. C. Goldstein,
A. Krishnamurthy, S. Lumetta, T. Von Eicken, and
K. Yelick. Parallel programming in Split-C. In
Supercomputing, 1993.
[35] A. Dragojevic, D. Narayanan, O. Hodson, and ´
M. Castro. FaRM: Fast remote memory. In NSDI,
2014.
[36] S. R. Dulloor, A. Roy, Z. Zhao, N. Sundaram,
N. Satish, R. Sankaran, J. Jackson, and K. Schwan.
Data tiering in heterogeneous memory systems. In
EuroSys, 2016.
[37] S. Dwarkadas, N. Hardavellas, L. Kontothanassis,
R. Nikhil, and R. Stets. Cashmere-VLM: Remote
memory paging for software distributed shared
memory. In IPPS/SPDP, 1999.
[38] M. J. Feeley, W. E. Morgan, E. Pighin, A. R.
Karlin, H. M. Levy, and C. A. Thekkath.
Implementing global memory management in a
workstation cluster. In SOSP, 1995.
[39] M. J. Feeley, W. E. Morgan, E. Pighin, A. R.
Karlin, H. M. Levy, and C. A. Thekkath.
Implementing global memory management in a
workstation cluster. In ACM SIGOPS Operating
Systems Review, volume 29, pages 201–212.
ACM, 1995.
[40] E. W. Felten and J. Zahorjan. Issues in the
implementation of a remote memory paging
system. Technical Report 91-03-09, University of
Washington, Mar 1991.
[41] M. D. Flouris and E. P. Markatos. The network
RamDisk: Using remote memory on
heterogeneous NOWs. Journal of Cluster
Computing, 2(4):281–293, 1999.
[42] P. X. Gao, A. Narayan, S. Karandikar, J. Carreira,
S. Han, R. Agarwal, S. Ratnasamy, and S. Shenker.
Network requirements for resource disaggregation.
In OSDI, 2016.
[43] A. Ghodsi, M. Zaharia, B. Hindman,
A. Konwinski, S. Shenker, and I. Stoica. Dominant
resource fairness: Fair allocation of multiple
resource types. In NSDI, 2011.
[44] A. Ghodsi, M. Zaharia, S. Shenker, and I. Stoica.
Choosy: Max-min fair sharing for datacenter jobs
with constraints. In EuroSys, 2013.
[45] J. E. Gonzalez, Y. Low, H. Gu, D. Bickson, and
C. Guestrin. PowerGraph: Distributed
graph-parallel computation on natural graphs. In
OSDI, 2012.
[46] J. E. Gonzalez, R. S. Xin, A. Dave, D. Crankshaw,
M. J. Franklin, and I. Stoica. GraphX: Graph
processing in a distributed dataflow framework. In
OSDI, 2014.
[47] R. Grandl, G. Ananthanarayanan, S. Kandula,
S. Rao, and A. Akella. Multi-resource packing for
cluster schedulers. In SIGCOMM, 2014.
[48] C. Guo, H. Wu, Z. Deng, G. Soni, J. Ye, J. Padhye,
and M. Lipshteyn. RDMA over commodity
Ethernet at scale. In SIGCOMM, 2016.
[49] S. Han, N. Egi, A. Panda, S. Ratnasamy, G. Shi,
and S. Shenker. Network support for resource
disaggregation in next-generation datacenters. In
HotNets, 2013.
[50] B. Hindman, A. Konwinski, M. Zaharia,
A. Ghodsi, A. Joseph, R. Katz, S. Shenker, and
I. Stoica. Mesos: A Platform for Fine-Grained
Resource Sharing in the Data Center. In NSDI,
2011.
[51] A. Kalia, M. Kaminsky, and D. G. Andersen.
Using RDMA efficiently for key-value services. In
SIGCOMM, 2014.
[52] H. Kwak, C. Lee, H. Park, and S. Moon. What is
Twitter, a social network or a news media? In
WWW, 2010.
[53] F. Li, S. Das, M. Syamala, and V. R. Narasayya.
Accelerating relational databases by leveraging
remote memory and RDMA. In SIGMOD, 2016.
[54] K. Li and P. Hudak. Memory coherence in shared
virtual memory systems. ACM TOCS,
7(4):321–359, 1989.
[55] S. Liang, R. Noronha, and D. K. Panda. Swapping
to remote memory over Infiniband: An approach
using a high performance network block device. In
Cluster Computing, 2005.
[56] K. Lim, J. Chang, T. Mudge, P. Ranganathan, S. K.
Reinhardt, and T. F. Wenisch. Disaggregated
memory for expansion and sharing in blade
servers. In ISCA, 2009.
[57] K. Lim, Y. Turner, J. R. Santos, A. AuYoung,
J. Chang, P. Ranganathan, and T. F. Wenisch.
System-level implications of disaggregated
memory. In HPCA, 2012.
[58] E. P. Markatos and G. Dramitinos. Implementation
of a reliable remote memory pager. In USENIX
ATC, 1996.
[59] F. Mietke, R. Rex, R. Baumgartl, T. Mehlan,
T. Hoefler, and W. Rehm. Analysis of the memory
registration process in the Mellanox Infiniband
software stack. In Euro-Par, 2006.
[60] C. Mitchell, Y. Geng, and J. Li. Using one-sided
RDMA reads to build a fast, CPU-efficient
key-value store. In USENIX ATC, 2013.
[61] R. Mittal, N. Dukkipati, E. Blem, H. Wassel,
M. Ghobadi, A. Vahdat, Y. Wang, D. Wetherall,
D. Zats, et al. TIMELY: RTT-based congestion
control for the datacenter. In SIGCOMM, 2015.
[62] M. Mitzenmacher, A. W. Richa, and R. Sitaraman.
The power of two random choices: A survey of
techniques and results. Handbook of Randomized
Computing, pages 255–312, 2001.
[63] J. Nelson, B. Holt, B. Myers, P. Briggs, L. Ceze,
S. Kahan, and M. Oskin. Latency-tolerant
software distributed shared memory. In USENIX
ATC, 2015.
[64] T. Newhall, S. Finney, K. Ganchev, and
M. Spiegel. Nswap: A network swapping module
for Linux clusters. In Euro-Par, 2003.
[65] B. Nitzberg and V. Lo. Distributed shared
memory: A survey of issues and algorithms.
Computer, 24(8):52–60, 1991.
[66] J. Ousterhout, P. Agrawal, D. Erickson,
C. Kozyrakis, J. Leverich, D. Mazieres, S. Mitra, `
A. Narayanan, G. Parulkar, M. Rosenblum, S. M.
Rumble, E. Stratmann, and R. Stutsman. The case
for RAMClouds: Scalable high performance
storage entirely in DRAM. SIGOPS OSR, 43(4),
2010.
[67] K. Ousterhout, P. Wendell, M. Zaharia, and
I. Stoica. Sparrow: Distributed, low latency
scheduling. In SOSP, 2013.
[68] G. Park. Brief announcement: A generalization of
multiple choice balls-into-bins. In PODC, 2011.
[69] R. Power and J. Li. Piccolo: Building fast,
distributed programs with partitioned tables. In
OSDI, 2010.
[70] P. S. Rao and G. Porter. Is memory disaggregation
feasible?: A case study with Spark SQL. In ANCS,
2016.
[71] C. Reiss. Understanding Memory Configurations
for In-Memory Analytics. PhD thesis, EECS
Department, University of California, Berkeley,
Aug 2016.
[72] C. Reiss, A. Tumanov, G. R. Ganger, R. H. Katz,
and M. A. Kozuch. Heterogeneity and dynamicity
of clouds at scale: Google trace analysis. In SoCC,
2012.
[73] M. Schwarzkopf, A. Konwinski,
M. Abd-El-Malek, and J. Wilkes. Omega: flexible,
scalable schedulers for large compute clusters. In
EuroSys, 2013.
[74] R. Stoica and A. Ailamaki. Enabling efficient OS
paging for main-memory OLTP databases. In
Ninth International Workshop on Data
Management on New Hardware, 2013.
[75] S. Venkataraman, A. Panda, G. Ananthanarayanan,
M. J. Franklin, and I. Stoica. The power of choice
in data-aware cluster scheduling. In OSDI, 2014.
[76] A. Verma, L. Pedrosa, M. Korupolu,
D. Oppenheimer, E. Tune, and J. Wilkes.
Large-scale cluster management at google with
Borg. In EuroSys, 2015.
[77] M. Zaharia, M. Chowdhury, T. Das, A. Dave,
J. Ma, M. McCauley, M. Franklin, S. Shenker, and
I. Stoica. Resilient distributed datasets: A
fault-tolerant abstraction for in-memory cluster
computing. In NSDI, 2012.
[78] Q. Zhang, M. F. Zhani, S. Zhang, Q. Zhu,
R. Boutaba, and J. L. Hellerstein. Dynamic
energy-aware capacity provisioning for cloud
computing environments. In ICAC, 2012.
[79] Y. Zhu, H. Eran, D. Firestone, C. Guo,
M. Lipshteyn, Y. Liron, J. Padhye, S. Raindel,
M. H. Yahia, and M. Zhang. Congestion control
for large-scale RDMA deployments. In
SIGCOMM, 2015.
