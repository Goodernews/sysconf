[1] L. Lamport, “Time, clocks, and the ordering of events in a distributed
system,” Communications of the ACM, vol. 21, no. 7, pp. 558–565, 1978.
[2] F. B. Schneider, “Implementing fault-tolerant services using the state
machine approach: A tutorial,” ACM Computing Surveys, vol. 22, no. 4,
pp. 299–319, 1990.
[3] M. P. Herlihy and J. M. Wing, “Linearizability: A correctness condition
for concurrent objects,” ACM Transactions on Programming Languages
and Systems (TOPLAS), vol. 12, no. 3, pp. 463–492, 1990.
[4] H. Attiya and J. Welch, Distributed Computing: Fundamentals, Simulations, and Advanced Topics. Wiley-Interscience, 2004.
[5] M. Burrows, “The chubby lock service for loosely-coupled distributed
systems,” in OSDI, 2006.
[6] P. Hunt, M. Konar, F. P. Junqueira, and B. Reed, “Zookeeper: wait-free
coordination for internet-scale systems,” in ATC, vol. 8, 2010.
[7] A. Verma, L. Pedrosa, M. Korupolu, D. Oppenheimer, E. Tune, and
J. Wilkes, “Large-scale cluster management at google with borg,” in
EuroSys, 2015.
[8] S. Ghemawat, H. Gobioff, and S.-T. Leung, “The google file system,” in
SOSP ’03: Proceedings of the nineteenth ACM symposium on Operating
systems principles, 2003, pp. 29–43.
[9] F. Chang, J. Dean, S. Ghemawat, W. C. Hsieh, D. A. Wallach, M. Burrows, T. Chandra, A. Fikes, and R. E. Gruber, “Bigtable: A distributed
storage system for structured data,” ACM Trans. Comput. Syst., vol. 26,
no. 2, pp. 1–26, 2008.
[10] K. Shvachko, H. Kuang, S. Radia, and R. Chansler, “The hadoop
distributed file system,” in MSST, 2010.
[11] A. Lakshman and P. Malik, “Cassandra: a decentralized structured
storage system,” ACM SIGOPS Operating Systems Review, vol. 44, no. 2,
pp. 35–40, 2010.
[12] I. Moraru, D. G. Andersen, and M. Kaminsky, “There is more consensus
in egalitarian parliaments,” in SOSP, 2013.
[13] R. Kotla and M. Dahlin, “High throughput byzantine fault tolerance,”
in DSN, 2004.
[14] M. Kapritsos, Y. Wang, V. Quema, A. Clement, L. Alvisi, and M. Dahlin,
“All about eve: execute-verify replication for multi-core servers,” in
OSDI, 2012.
[15] P. J. Marandi, C. E. B. Bezerra, and F. Pedone, “Rethinking statemachine replication for parallelism,” in ICDCS, 2014.
[16] R. Kapitza, M. Schunter, C. Cachin, K. Stengel, and T. Distler, “Storyboard: Optimistic deterministic multithreading.” in HotDep, 2010.
[17] H. Cui, R. Gu, C. Liu, T. Chen, and J. Yang, “Paxos made transparent,”
in SOSP, 2015.

[18] T. D. Chandra and S. Toueg, “Unreliable failure detectors for reliable
distributed systems,” Journal of the ACM, vol. 43, no. 2, pp. 225–267,
1996.
[19] L. Lamport, “The part-time parliament,” ACM Transactions on Computer
Systems, vol. 16, no. 2, pp. 133–169, May 1998.
[20] P. J. Marandi, C. E. B. Bezerra, and F. Pedone, “Rethinking statemachine replication for parallelism,” in ICDCS, 2014.
[21] S. Benz, P. J. Marandi, F. Pedone, and B. Garbinato, “Building global
and scalable systems with atomic multicast,” in Middleware, 2014.
[22] J. C. Corbett, J. Dean, M. Epstein, A. Fikes, C. Frost, J. Furman,
S. Ghemawat, A. Gubarev, C. Heiser, P. Hochschild et al., “Spanner:
Google’s globally-distributed database,” in OSDI, 2012.
[23] Z. Guo, C. Hong, M. Yang, L. Zhou, L. Zhuang, and D. Zhou, “Rex:
Replication at the speed of multi-core,” in EuroSys, 2014.
[24] M. Olszewski, J. Ansel, and S. Amarasinghe, “Kendo: efficient deterministic multithreading in software,” ACM Sigplan Notices, vol. 44, no. 3,
pp. 97–108, 2009.
[25] N. Hunt, T. Bergan, L. Ceze, and S. D. Gribble, “DDOS: taming
nondeterminism in distributed systems,” in ACM SIGPLAN Notices,
vol. 48, no. 4, 2013, pp. 499–508.
