[1] H. W. Cain, M. M. Michael, B. Frey, C. May, D. Williams, and
H. Le. Robust architectural support for transactional memory in the
Power architecture. In Proc. of the 40th Intl. Symp. on Computer
Architecture, ISCA ’13, pages 225-236, Tel-Aviv, Israel, 2013.

[2] S. Chaudhry, P. Caprioli, S. Yip, and M. Tremblay. High-performance
throughput computing. IEEE Micro, 25(3):32-45, May 2005.

[3] S. Chaudhry, R. Cypher, M. Ekman, M. Karlsson, A. Landin, 8. Yip,
H. Zeffer, and M. Tremblay. Simultaneous speculative threading: A
novel pipeline architecture implemented in Sun’s Rock processor. In
Proc. of the 36th Intl. Symp. on Computer Architecture, ISCA ’09,
pages 484–495, Austin, TX, USA, 2009.
[4] L. Dalessandro, F. Carouge, S. White, Y. Lev, M. Moir, M. L. Scott,
and M. F. Spear. Hybrid NOrec: A case study in the effectiveness of
best effort hardware transactional memory. In Proc. of the 16th Intl.
Conference on Architectural Support for Programming Languages
and Operating Systems, ASPLOS XVI, pages 39–52, Newport Beach,
CA, USA, 2011.
[5] D. Dice, T. L. Harris, A. Kogan, Y. Lev, and M. Moir. Hardware extensions to make lazy subscription safe. arXiv preprint arXiv:1407.6968,
2014.
[6] D. Dice, A. Kogan, and Y. Lev. Refined transactional lock elision. In
10th ACM SIGPLAN Wkshp. on Transactional Computing, TRANSACT ’15, Portland, OR, USA, 2015.
[7] D. Dice, A. Kogan, Y. Lev, T. Merrifield, and M. Moir. Adaptive integration of hardware and software lock elision techniques. In Proc. of
the 26th ACM Symp. on Parallelism in Algorithms and Architectures,
SPAA ’14, pages 188–197, Prague, Czech Republic, 2014.
[8] D. Didona, N. Diegues, A.-M. Kermarrec, R. Guerraoui, R. Neves,
and P. Romano. ProteusTM: Abstraction meets performance in transactional memory. In Proc. of the 21st Intl. Conf. on Architectural Support for Programming Languages and Operating Systems, ASPLOS
’16, pages 757–771, Atlanta, GA, USA, 2016.
[9] J. Dundas and T. Mudge. Improving data cache performance by preexecuting instructions under a cache miss. In Proc. of the 11th Intl.
Conf. on Supercomputing, ICS ’97, pages 68–75, Vienna, Austria,
1997.
[10] P. Hammarlund, A. J. Martinez, A. A. Bajwa, D. L. Hill, E. Hallnor,
H. Jiang, M. Dixon, M. Derr, M. Hunsaker, R. Kumar, R. B. Osborne,
R. Rajwar, R. Singhal, R. D’Sa, R. Chappell, S. Kaushik, S. Chennupaty, S. Jourdan, S. Gunther, T. Piazza, and T. Burton. Haswell:
The fourth-generation Intel core processor. IEEE Micro, 34(2):6–20,
2014.
[11] M. Herlihy and J. E. B. Moss. Transactional memory: Architectural
support for lock-free data structures. In Proc. of the 20th Intl. Symp.
on Computer Architecture, ISCA ’93, pages 289–300, San Diego, CA,
USA, 1993.
[12] J. Izraelevitz, A. Kogan, and Y. Lev. Implicit acceleration of critical
sections via unsuccessful speculation. In 11th ACM SIGPLAN Wkshp.
on Transactional Computing, TRANSACT ’16, Barcelona, Spain,
2016.
[13] C. Jacobi, T. Slegel, and D. Greiner. Transactional memory architecture and implementation for IBM System z. In Proc. of the 45th
ACM/IEEE Intl. Symp. on Microarchitecture, MICRO 45, pages 25–
36, Vancouver, Canada, 2012.
[14] A. Kleen. Scaling existing lock-based applications with lock elision.
Commun. ACM, 57(3):52–56, Mar. 2014.
[15] A. Krishna, T. Heil, N. Lindberg, F. Toussi, and S. VanderWiel. Hardware acceleration in the ibm poweren processor: Architecture and performance. In Proc. of the 21st Intl. Conf. on Parallel Architectures
and Compilation Techniques, PACT ’12, pages 389–400, Minneapolis, MN, USA, 2012.
[16] Y. Lev, M. Moir, and D. Nussbaum. PhTM: Phased transactional
memory. In 2nd ACM SIGPLAN Wkshp. on Transactional Computing,
TRANSACT ’07, Portland, OR, USA, 2007.
[17] J. M. Mellor-Crummey and M. L. Scott. Algorithms for scalable
synchronization on shared-memory multiprocessors. ACM Trans. on
Computer Systems, 9(1):21–65, Feb. 1991.
[18] O. Mutlu, J. Stark, C. Wilkerson, and Y. N. Patt. Runahead execution: an alternative to very large instruction windows for out-of-order
processors. In Proc. of the 9th Intl. Symp. on High-Performance Computer Architecture, pages 129–140, Anaheim, CA, USA, 2003.
[19] J. Park. SpMP (sparse matrix pre-processing) library. https://
github.com/IntelLabs/SpMP/.
[20] R. Rajwar and J. R. Goodman. Speculative lock elision: Enabling
highly concurrent multithreaded execution. In Proc. of the 34th
ACM/IEEE Intl. Symp. on Microarchitecture, MICRO 34, pages 294–
305, Austin, TX, USA, 2001.
[21] R. Titos-Gil, M. E. Acacio, J. M. Garcia, T. Harris, A. Cristal, O. Unsal, I. Hur, and M. Valero. Hardware transactional memory with
software-defined conflicts. ACM Trans. on Architecture and Code
Optimization, 8(4):31:1–31:20, Jan. 2012.
[22] L. Xiang and M. L. Scott. Software partitioning of hardware transactions. In Proc. of the 20th ACM SIGPLAN Symp. on Principles
and Practice of Parallel Programming, PPoPP ’15, pages 76–86, San
Francisco, CA, USA, 2015.

