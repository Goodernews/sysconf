[1] Filesystem in Userspace. http://libfuse.github.io/.
[2] M. Abadi, A. Agarwal, P. Barham, E. Brevdo, Z. Chen, C. Citro, G. S. Corrado,
A. Davis, J. Dean, M. Devin, S. Ghemawat, I. Goodfellow, A. Harp, G. Irving, M. Is-
ard, Y. Jia, R. Jozefowicz, L. Kaiser, M. Kudlur, J. Levenberg, D. Mane, R. Monga,
S. Moore, D. Murray, C. Olah, M. Schuster, J. Shlens, B. Steiner, I. Sutskever, K. Tal-
war, P. Tucker, V. Vanhoucke, V. Vasudevan, F. Viegas, O. Vinyals, P. Warden,
M. Wattenberg, M. Wicke, Y. Yu, and X. Zheng. TensorFlow: Large-Scale Machine
Learning on Heterogeneous Distributed Systems. Technical report, 2015.

[3] A. Adya, W. J. Bolosky, M. Castro, G. Cermak, R. Chaiken, J. R. Douceur, J. Howell,
J. R. Lorch, M. Theimer, and R. P. Wattenhofer. FARSITE: Federated, Available,
and Reliable Storage for an Incompletely Trusted Environment. In Proceedings of
the 5th Symposium on Operating Systems Design and Implementation (OSDI ’02),
Boston, Massachusetts, December 2002.

[4] B. Atikoglu, Y. Xu, E. Frachtenberg, S. Jiang, and M. Paleczny. Workload analysis
of a large-scale key-value store. In Proceedings of the 12th ACM SIGMETRIC-
S/PERFORMANCE Joint International Conference on Measurement and Modeling
of Computer Systems, SIGMETRICS ’12, New York, NY, USA, 2012.

[5] K. Bailey, L. Ceze, S. D. Gribble, and H. M. Levy. Operating System Implications of
Fast, Cheap, Non-volatile Memory. In Proceedings of the 13th USENIX Conference
on Hot Topics in Operating Systemsi (HotOS ’13), Napa, California, May 2011.

[6] J. K. Bennett, J. B. Carter, and W. Zwaenepoel. Munin: Distributed Shared Memory
Based on Type-Specific Memory Coherence.
In Proceedings of the 2ed ACM
SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPOPP
’90), Seattle, Washington, March 1990.

[7] C. Binnig, A. Crotty, A. Galakatos, T. Kraska, and E. Zamanian. The End of Slow
Networks: It’s Time for a Redesign. Proc. VLDB Endow., 9(7):528–539, March
2016.

[8] R. Bisiani and M. Ravishankar. PLUS: A Distributed Shared-Memory System. In
Proceedings of the 17th Annual International Symposium on Computer Architecture
(ISCA ’90), Seattle, Washington, May 1990.

[9] D. L. Black, A. Gupta, and W.-D. Weber. Competitive Management of Distributed
Shared Memory. In Proceedings of the 34th IEEE Computer Society International
Conference on COMPCON (COMPCON ’89), San Francisco, California, March 1989.
[10] L. Breslau, P. Cao, L. Fan, G. Phillips, and S. Shenker. Web caching and zipf-like
distributions: evidence and implications. In INFOCOM ’99. Eighteenth Annual
Joint Conference of the IEEE Computer and Communications Societies. Proceedings.
IEEE, 1999.

[11] B. Calder, J. Wang, A. Ogus, N. Nilakantan, A. Skjolsvold, S. McKelvie, Y. Xu,
S. Srivastav, J. Wu, H. Simitci, J. Haridas, C. Uddaraju, H. Khatri, A. Edwards,
V. Bedekar, S. Mainali, R. Abbasi, A. Agarwal, M. F. u. Haq, M. I. u. Haq, D. Bhard-
waj, S. Dayanand, A. Adusumilli, M. McNett, S. Sankaran, K. Manivannan, and
L. Rigas. Windows azure storage: A highly available cloud storage service with
strong consistency. In Proceedings of the 23rd ACM Symposium on Operating

Number of Nodes24816K commits per sec010203040MRSWMRMWChunk Size (MB)1481632Commit Latency (us)050100150200250MRMW_1MRSW_1MRMW_2MRSW_2Replication Degree1234Improvement (%)020406080MRMWMRSWNumber of Nodes Committing1234Latency (us)050100150200250MRSW−ConflictMRMW−ConflictMRSW−NoConflictMRMW−NoConflictSoCC ’17, September 24–27, 2017, Santa Clara, CA, USA

Y. Shan et al.

Systems Principles (SOSP ’11), Cascais, Portugal, October 2011.

[12] Y. Chen, X. Wei, J. Shi, R. Chen, and H. Chen. Fast and general distributed trans-
actions using rdma and htm. In Proceedings of the Eleventh European Conference
on Computer Systems (EUROSYS’16), London, UK, April 2016.

[13] B.-G. Chun, F. Dabek, A. Haeberlen, E. Sit, H. Weatherspoon, M. F. Kaashoek,
J. Kubiatowicz, and R. Morris. Efficient Replica Maintenance for Distributed
Storage Systems.
In Proceedings of the 3rd Conference on Networked Systems
Design and Implementation (NSDI ’06), San Jose, California, May 2006.

[14] C. Clark, K. Fraser, S. Hand, J. G. Hansen, E. Jul, C. Limpach, I. Pratt, and
A. Warfield. Live migration of virtual machines.
In Proceedings of the 2nd
Symposium on Networked Systems Design and Implementation (NSDI ’05), Boston,
Massachusetts, May 2005.

[15] J. Coburn, A. M. Caulfield, A. Akel, L. M. Grupp, R. K. Gupta, R. Jhala, and
S. Swanson. NV-Heaps: Making Persistent Objects Fast and Safe with Next-
generation, Non-volatile Memories.
In Proceedings of the 16th International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS ’11), New York, New York, March 2011.

[16] J. Condit, E. B. Nightingale, C. Frost, E. Ipek, D. Burger, B. C. Lee, and D. Coetzee.
Better I/O through Byte-Addressable, Persistent Memory.
In Proceedings of
the 22nd ACM Symposium on Operating Systems Principles (SOSP ’09), Big Sky,
Montana, October 2009.

[17] B. F. Cooper, A. Silberstein, E. Tam, R. Ramakrishnan, and R. Sears. Benchmarking
Cloud Serving Systems with YCSB. In Proceedings of the 1st ACM Symposium on
Cloud Computing (SoCC ’10), New York, New York, June 2010.

[18] G. DeCandia, D. Hastorun, M. Jampani, G. Kakulapati, A. Lakshman, A. Pilchin,
S. Sivasubramanian, P. Vosshall, and W. Vogels. Dynamo: Amazon’s Highly
Available Key-Value Store. In Proceedings of the 21st ACM Symposium on Operating
Systems Principles (SOSP ’07), Stevenson, Washington, October 2007.

[19] G. S. Delp. The Architecture and Implementation of MEMNET: A High–speed
Shared-memory Computer Communication Network. PhD thesis, Newark, DE,
USA, 1988. Order No. GAX88-24208.

[20] F. Douglis and J. K. Ousterhout. Process Migration in the Sprite Operating Sys-
tem. In Proceedings of the 7th International Conference on Distributed Computing
Systems, pages 18–25, Berlin, West Germany, September 1987. IEEE.

[21] A. DragojeviÄĞ, D. Narayanan, O. Hodson, and M. Castro. FaRM: Fast Remote
Memory. In Proceedings of the 11th USENIX Conference on Networked Systems
Design and Implementation (NSDI ’14), Seattle, Washington, April 2014.

[22] S. R. Dulloor, S. Kumar, A. Keshavamurthy, P. Lantz, D. Reddy, R. Sankaran, and
J. Jackson. System software for persistent memory. In Proceedings of the EuroSys
Conference (EuroSys ’14), Amsterdam, The Netherlands, April 2014.

[23] P. Ferreira and M. Shapiro. Larchant: Persistence by Reachability in Distributed
Shared Memory through Garbage Collection. In Distributed Computing Systems,
1996., Proceedings of the 16th International Conference on, 1996.

[24] P. Ferreira, M. Shapiro, X. Blondel, O. Fambon, J. Garcia, S. Kloosterman, N. Richer,
M. Robert, F. Sandakly, G. Coulouris, J. Dollimore, P. Guedes, D. Hagimont, and
S. Krakowiak. PerDiS: Design, Implementation, and Use of a PERsistent DIstributed
Store. 2000.

[25] B. D. Fleisch and G. J. Popek. Mirage: A Coherent Distributed Shared Memory
Design. In Proceedings of the 12th ACM Symposium on Operating Systems Principles
(SOSP ’89).

[26] S. Ghemawat, H. Gobioff, and S.-T. Leung. The Google File System. In Proceedings
of the 19th ACM Symposium on Operating Systems Principles (SOSP ’03), Bolton
Landing, New York, October 2003.

[27] P. B. Gibbons, M. Merritt, and K. Gharachorloo. Proving Sequential Consistency
of High-Performance Shared Memories. In Proceedings of the 3rd Annual ACM
Symposium on Parallel Algorithms and Architectures (SPAA ’91), Hilton Head,
South Carolina, July 1991.

[28] J. E. Gonzalez, Y. Low, H. Gu, D. Bickson, and C. Guestrin. PowerGraph: Dis-
tributed Graph-Parallel Computation on Natural Graphs. In Proceedings of the
10th USENIX conference on Operating Systems Design and Implementation (OSDI
’12), Vancouver, Canada, October 2010.

[29] J. E. Gonzalez, R. S. Xin, A. Dave, D. Crankshaw, M. J. Franklin, and I. Stoica.
GraphX: Graph Processing in A Distributed Dataflow Framework. In Proceedings
of the 11th USENIX Conference on Operating Systems Design and Implementation
(OSDI ’14), Broomfield, Colorado, October 2014.

[30] J. Gray. Notes on data base operating systems. In Operating Systems, An Advanced

Course, London, UK, UK, 1978.

[31] J. Gu, Y. Lee, Y. Zhang, M. Chowdhury, and K. Shin. Efficient Memory Disag-
gregation with Infiniswap. In Proceedings of the 14th USENIX Symposium on
Networked Systems Design and Implementation (NSDI’17), Boston, MA, USA, April
2017.

[32] C. Guo, H. Wu, Z. Deng, G. Soni, J. Ye, J. Padhye, and M. Lipshteyn. RDMA
over Commodity Ethernet at Scale. In Proceedings of the 2016 ACM SIGCOMM
Conference (SIGCOMM ’16), Florianopolis, Brazil, August 2016.

[33] M. Hosomi, H. Yamagishi, T. Yamamoto, K. Bessho, Y. Higo, K. Yamane, H. Yamada,
M. Shoji, H. Hachino, C. Fukumoto, et al. A Novel Nonvolatile Memory with
Spin Torque Transfer Magnetization Switching: Spin-RAM. In Electron Devices

http:

Meeting, 2005. IEDM Technical Digest. IEEE International, pages 459–462, 2005.

[34] IBM. Crail Distributed File System. http://www.crail.io/.
[35] Intel Corporation. Deprecating the PCOMMIT Instruction. https://software.intel.

com/en-us/blogs/2016/09/12/deprecate-pcommit-instruction.

[36] Intel Corporation.

Intel Non-Volatile Memory 3D XPoint.
//www.intel.com/content/www/us/en/architecture-and-technology/
non-volatile-memory.html?wapkw=3d+xpoint.

[37] A. Kalia, M. Kaminsky, and D. G. Andersen. Using RDMA Efficiently for Key-Value
Services. In Proceedings of the 2014 ACM conference on SIGCOMM (SIGCOMM
’14), Chicago, Illinois, August 2014.

[38] A. Kalia, M. Kaminsky, and D. G. Andersen. FaSST: Fast, Scalable and Simple
Distributed Transactions with Two-Sided (RDMA) Datagram RPCs.
In 12th
USENIX Symposium on Operating Systems Design and Implementation (OSDI ’16),
Savanah, GA, November 2016.

[39] P. Keleher, A. L. Cox, and W. Zwaenepoel. Lazy Release Consistency for Software
Distributed Shared Memory.
In Proceedings of the 19th Annual International
Symposium on Computer Architecture (ISCA ’92), Queensland, Australia, May
1992.

[40] R. E. Kessler and M. Livny. An Analysis of Distributed Shared Memory Algorithms.

ACM Transactions on Computer Systems, 7(4):321–359, November 1989.

[41] A. Kolli, S. Pelley, A. Saidi, P. M. Chen, and T. F. Wenisch. High-performance
transactions for persistent memories. In Proceedings of the Twenty-First Inter-
national Conference on Architectural Support for Programming Languages and
Operating Systems, ASPLOS ’16, New York, NY, USA, 2016.

[42] A. Kolli, J. Rosen, S. Diestelhorst, A. G. Saidi, S. Pelley, S. Liu, P. M. Chen, and T. F.
Wenisch. Delegated persist ordering. In 49th Annual IEEE/ACM International
Symposium on Microarchitecture, MICRO 2016, Taipei, Taiwan, October 15-19, 2016,
2016.

[43] L. Kontothanassis, G. Hunt, R. Stets, N. Hardavellas, M. Cierniak, S. Parthasarathy,
J. Wagner Meira, S. Dwarkadas, and M. Scott. VM-Based Shared Memory on Low-
Latency, Remote-Memory-Access Networks. In Proceedings of the 24th Annual
International Symposium on Computer Architecture (ISCA ’97), Denver, Colorado,
June 1997.

[44] O. Krieger and M. Stumm. An Optimistic Algorithm for Consistent Replicated
Shared Data. In Proceedings of the 23rd Annual Hawaii International Conference
on System Sciences (HICSS ’90), Kailua-Kona, Hawaii, January 1990.

[45] J. Kubiatowicz, D. Bindel, P. Eaton, Y. Chen, D. Geels, R. Gummadi, S. Rhea,
W. Weimer, C. Wells, H. Weatherspoon, and B. Zhao. OceanStore: An Architec-
ture for Global-Scale Persistent Storage. In Proceedings of the 9th International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS IX), Cambridge, Massachusetts, November 2000.

[46] H. Kwak, C. Lee, H. Park, and S. Moon. What is Twitter, A Social Network or A
News Media? In Proceedings of the 19th International Conference on World Wide
Web (WWW ’10), Raleigh, North Carolina, April 2010.

[47] A. Kyrola, G. Blelloch, and C. Guestrin. GraphChi: Large-Scale Graph Compu-
tation on Just a PC. In Proceedings of the 10th USENIX conference on Operating
Systems Design and Implementation (OSDI ’12), Hollywood, California, October
2012.

[48] B. W. Lampson. Atomic transactions. In Distributed Systems - Architecture and

Implementation, An Advanced Course, London, UK, UK, 1981.

[49] P. Lawrence, B. Sergey, R. Motwani, and T. Winograd. The pagerank citation
ranking: Bringing order to the web. Technical report, Stanford University, 1998.
[50] B. C. Lee, E. Ipek, O. Mutlu, and D. Burger. Phase Change Memory Architecture

and the Quest for Scalability. Commun. ACM, 53(7):99–106, 2010.

[51] B. C. Lee, P. Zhou, J. Yang, Y. Zhang, B. Zhao, E. Ipek, O. Mutlu, and D. Burger.
Phase-change technology and the future of main memory. IEEE micro, 30(1):143,
2010.

[52] M.-J. Lee, C. B. Lee, D. Lee, S. R. Lee, M. Chang, J. H. Hur, Y.-B. Kim, C.-J. Kim,
D. H. Seo, S. Seo, et al. A Fast, High-Endurance and Scalable Non-Volatile Memory
Device Made from Asymmetric Ta2O(5-x)/TaO(2-x) Bilayer Structures. Nature
materials, 10(8):625–630, 2011.

[53] J. Leskovec and A. Krevl. SNAP Datasets: Stanford large network dataset collec-

tion. http://snap.stanford.edu/data, June 2014.

[54] V. M. Lo. Operating Systems Enhancements for Distributed Shared Memory.

Advancies in Computers, 39:191–237, December 1994.

[55] Y. Low, J. Gonzalez, A. Kyrola, D. Bickson, C. Guestrin, and J. M. Hellerstein.
GraphLab: A New Framework For Parallel Machine Learning. In Proceedings
of the 26th Conference on Uncertainty in Artificial Intelligence (UAI ’10), Catalina
Island, California, July 2010.

[56] Y. Low, J. Gonzalez, A. Kyrola, D. Bickson, C. Guestrin, and J. M. Hellerstein.
Distributed GraphLab: A Framework for Machine Learning in the Cloud. VLDB
Endowment, 5(8):716–727, April 2012.

[57] Y. Lu, J. Shu, Y. Chen, and T. Li. Octopus: an rdma-enabled distributed persistent
memory file system. In 2017 USENIX Annual Technical Conference (USENIX ATC
17), Santa Clara, CA, 2017.

[58] C.-K. Luk, R. Cohn, R. Muth, H. Patil, A. Klauser, G. Lowney, S. Wallace, V. J.
Reddi, and K. Hazelwood. Pin: Building Customized Program Analysis Tools with
Dynamic Instrumentation. In Proceedings of the 2005 ACM SIGPLAN Conference on
Distributed Shared Persistent Memory
SoCC ’17, September 24–27, 2017, Santa Clara, CA, USA

[59] G. Malewicz, M. H. Austern, A. J. Bik, J. C. Dehnert, I. Horn, N. Leiser, and G. Cza-
jkowski. Pregel: A System for Large-scale Graph Processing. In Proceedings of the
2010 ACM SIGMOD International Conference on Management of Data (SIGMOD
’10), Indianapolis, Indiana, June 2010.

[60] Mellanox Technologies.

Rdma aware networks programming user man-
http://www.mellanox.com/related-docs/prod_software/RDMA_Aware_ual.
Programming_user_manual.pdf.

[61] A. Memaripour, A. Badam, A. Phanishayee, Y. Zhou, R. Alagappan, K. Strauss,
and S. Swanson. Atomic in-place updates for non-volatile main memories with
kamino-tx. In Proceedings of the Twelfth European Conference on Computer Systems,
EuroSys ’17, 2017.

[62] J. C. Mogul, E. Argollo, M. Shah, and P. Faraboschi. Operating System support for
NVM+DRAM Hybrid Main Memory. In Proceedings of the 12th Workshop on Hot
Topics in Operating Systems (HotOS ’09), Monte Verita, Switzerland, May 2009.

[63] MongoDB Inc. MongoDB. http://www.mongodb.org/.
[64] D. Narayanan and O. Hodson. Whole-System Persistence. In Proceedings of the
17th International Conference on Architectural Support for Programming Languages
and Operating Systems (ASPLOS ’12), London, United Kingdom, March 2012.

[65] J. Nelson, B. Holt, B. Myers, P. Briggs, L. Ceze, S. Kahan, and M. Oskin. Latency-
Tolerant Software Distributed Shared Memory. In Proceedings of the 2015 USENIX
Conference on Usenix Annual Technical Conference (ATC ’15), Santa Clara, Califor-
nia, July 2015.

[66] N. Neves, M. Castro, and P. Guedes. A checkpoint protocol for an entry consistent
shared memory system. In Proceedings of the Thirteenth Annual ACM Symposium
on Principles of Distributed Computing, New York, NY, USA, 1994.

[67] D. Ongaro, S. M. Rumble, R. Stutsman, J. Ousterhout, and M. Rosenblum. Fast
Crash Recovery in RAMCloud. In Proceedings of the 23rd ACM Symposium on
Operating Systems Principles (SOSP ’11), Cascais, Portugal, October 2011.

[68] S. Osman, D. Subhraveti, G. Su, and J. Nieh. The Design and Implementation of
Zap: A System for Migrating Computing Environments. In Proceedings of the 5th
Symposium on Operating Systems Design and Implementation (OSDI ’02), Boston,
Massachusetts, December 2002.

[69] J. Ou, J. Shu, and Y. Lu. A high performance file system for non-volatile main
memory. In Proceedings of the Eleventh European Conference on Computer Systems,
EuroSys ’16, New York, NY, USA, 2016.

[70] S. Pelley, P. M. Chen, and T. F. Wenisch. Memory persistency. In Proceeding of
the 41st Annual International Symposium on Computer Architecuture, ISCA ’14,
Piscataway, NJ, USA, 2014.

[71] S. Pelley, P. M. Chen, and T. F. Wenisch. Memory persistency. In Proceeding of
the 41st Annual International Symposium on Computer Architecuture, ISCA ’14,
Minneapolis, Minnesota, USA, 2014.

[72] Peter X. Gao and Akshay Narayan and Sagar Karandikar and Joao Carreira and
Sangjin Han and Rachit Agarwal and Sylvia Ratnasamy and Scott Shenker. Net-
work Requirements for Resource Disaggregation. In 12th USENIX Symposium on
Operating Systems Design and Implementation (OSDI ’16), Savanah, GA, November
2016.

[73] K. Petersen, M. J. Spreitzer, D. B. Terry, M. M. Theimer, and A. J. Demers. Flexible
Update Propagation for Weakly Consistent Replication. In Proceedings of the 16th
ACM Symposium on Operating Systems Principles (SOSP ’97), Saint-Malo, France,
October 1997.

[74] M. K. Qureshi, M. M. Franceschini, L. A. Lastras-Montaño, and J. P. Karidis.
Morphable memory system: a robust architecture for exploiting multi-level phase
change memories. In Proceedings of the 37th Annual International Symposium on
Computer Architecture (ISCA ’07), June 2010.

[75] M. K. Qureshi, J. Karidis, M. Franceschini, V. Srinivasan, L. Lastras, and B. Abali.
Enhancing lifetime and security of pcm-based main memory with start-gap wear
leveling. In Proceedings of the 42Nd Annual IEEE/ACM International Symposium
on Microarchitecture, MICRO 42, New York, NY, USA, 2009.

[76] U. Ramachandran and M. Y. A. Khalidi. An Implementation of Distributed Shared

Memory. Software:Practice and Experience, 21(5):443–464, May 1991.

[77] G. C. Richard and M. Singhal. Using logging and asynchronous checkpointing to
implement recoverable distributed shared memory. In Proceedings of 1993 IEEE
12th Symposium on Reliable Distributed Systems, Oct 1993.

[78] G. Samaras, K. Britton, A. Citron, and C. Mohan. Two-phase commit optimiza-
tions and tradeoffs in the commercial environment. In Proceedings of the Ninth
International Conference on Data Engineering, Washington, DC, USA, 1993.

[79] D. J. Scales, K. Gharachorloo, and C. A. Thekkath. Shasta: A low overhead,
software-only approach for supporting fine-grain shared memory. In Proceedings
of the Seventh International Conference on Architectural Support for Programming
Languages and Operating Systems, ASPLOS VII, Cambridge, Massachusetts, USA,
1996.

[80] M. Shapiro and P. Ferreira. Larchant-rdoss: A distributed shared persistent

memory and its garbage collector. Technical report, Ithaca, NY, USA, 1994.

[81] M. Shapiro, S. Kloosterman, F. Riccardi, and T. Perdis. Perdis - a persistent
distributed store for cooperative applications. In In Proc. 3rd Cabernet Plenary W,
1997.


[82] M. Stumm and S. Zhou. Algorithms Implementing Distributed Shared Memory.

IEEE Computer, 23(5):54–64, May 1990.

[83] M. Stumm and S. Zhou. Fault Tolerant Distributed Shared Memory Algorithms.
In Proceedings of the 2nd IEEE Symposium on Parallel and Distributed Processing
(IPDPS ’90), Dallas, Texas, December 1990.

[84] M. Stumm and S. Zhou. Fault tolerant distributed shared memory algorithms. In
Proceedings of the Second IEEE Symposium on Parallel and Distributed Processing
1990, Dec 1990.

[85] K. Suzuki and S. Swanson. The Non-Volatile Memory Technology Database
(NVMDB). Technical Report CS2015-1011, Department of Computer Science &
Engineering, University of California, San Diego, May 2015.

[86] D. B. Terry, V. Prabhakaran, R. Kotla, M. Balakrishnan, M. K. Aguilera, and
H. Abu-Libdeh. Consistency-Based Service Level Agreements for Cloud Storage.
In Proceedings of the 24th ACM Symposium on Operating Systems Principles (SOSP
’13), Farmington, Pennsylvania, November 2013.

[87] S.-Y. Tsai and Y. Zhang. Lite kernel rdma support for datacenter applications. In
Proceedings of the 26nd ACM Symposium on Operating Systems Principles (SOSP
’17), Shanghai, China, 2017.

[88] H. Volos, A. J. Tack, and M. M. Swift. Mnemosyne: Lightweight persistent memory.
In Proceedings of the Sixteenth International Conference on Architectural Support
for Programming Languages and Operating Systems (ASPLOS ’11), New York, New
York, March 2011.

[89] X. Wu and A. Reddy. Scmfs: A file system for storage class memory. In Inter-
national Conference for High Performance Computing, Networking, Storage and
Analysis (SC ’11), Nov 2011.

[90] J. J. Yang, D. B. Strukov, and D. R. Stewart. Memristive devices for computing.

Nature nanotechnology, 8(1):13–24, 2013.

[91] M. Zaharia, M. Chowdhury, T. Das, A. Dave, J. Ma, M. McCauley, M. J. Franklin,
S. Shenker, and I. Stoica. Resilient Distributed Datasets: A Fault-Tolerant Ab-
straction for In-Memory Cluster Computing. In Proceedings of the 9th USENIX
conference on Networked Systems Design and Implementation (NSDI ’12), San Jose,
California, April 2012.

[92] E. Zamanian, C. Binnig, T. Harris, and T. Kraska. The End of a Myth: Distributed

Transactions Can Scale. Proc. VLDB Endow., 10(6):685–696, February 2017.

[93] I. Zhang, N. K. Sharma, A. Szekeres, A. Krishnamurthy, and D. R. K. Ports. Building
Consistent Transactions with Inconsistent Replication. In Proceedings of the 25th
ACM Symposium on Operating Systems Principles (SOSP ’15), Monterey, California,
October 2015.

[94] Y. Zhang and S. Swanson. A Study of Application Performance with Non-Volatile
Main Memory. In Proceedings of the 31st IEEE Conference on Massive Data Storage
(MSST ’15), Santa Clara, California, June 2015.

[95] Y. Zhang, J. Yang, A. Memaripour, and S. Swanson. Mojim: A Reliable and Highly-
Available Non-Volatile Memory System. In Proceedings of the 20th International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS ’15), Istanbul, Turkey, March 2015.

[96] S. Zhou, M. Stumm, K. Li, and D. Wortman. Heterogeneous Distributed Shared
Memory. IEEE Transactions on Parallel and Distributed Systems, 3(5):540–554,
September 1992.

[97] Y. Zhou, L. Iftode, and K. Li. Performance Evaluation of Two Home-based
In
Lazy Release Consistency Protocols for Shared Virtual Memory Systems.
Proceedings of the Second USENIX Symposium on Operating Systems Design and
Implementation, OSDI ’96, Seattle, Washington, USA, 1996.

Programming Language Design and Implementation (PLDI ’05), Chicago, Illinois,
2005.
