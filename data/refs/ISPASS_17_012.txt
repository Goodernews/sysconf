[1]

S. K. Bhat, A. Saya, H. K. Rawat et al., “Harnessing energy efficiency
of heterogeneous-ISA platforms,” in Proceedings of the Workshop on
Power-Aware Computing and Systems. ACM, 2015, pp. 6–10.

[2]

S. Kamil, J. Shalf, and E. Strohmaier, “Power efficiency in high performance computing,” in Proceedings of the International Symposium
on Parallel and Distributed Processing, April 2008, pp. 1–8.

[3]

A. Ilic, F. Pratas, and L. Sousa, “Cache-aware Roofline model:
Upgrading the loft,” IEEE Computer Architecture Letters, vol. 13,
no. 1, pp. 21–24, Jan 2014.

[4]

“GPU Impact by Domain,” NVIDIA. [Online]. Available: http:
//www.nvidia.com/object/gpu-applications-domain.html

[5]

S. Williams, A. Waterman, and D. Patterson, “Roofline: an insightful
visual performance model for multicore architectures,” Communications of the ACM, vol. 52, no. 4, pp. 65–76, 2009.

[6]

“CUDA C Programming Guide,” NVIDIA, 2016. [Online]. Available:
https://docs.nvidia.com/cuda/pdf/CUDA C Programming Guide.pdf

[7]

“The OpenCL specification,” Khronos OpenCL Working Group,
2016. [Online]. Available: https://www.khronos.org/registry/cl/specs/
opencl-2.2.pdf

[8]

——, “Beyond the Roofline: Cache-aware Power and EnergyEfficiency Modeling for Multi-cores,” IEEE Transactions on Computers, vol. PP, no. 99, pp. 1–8, Jun 2016.


[9] U. Lopez-Novoa, A. Mendiburu, and J. Miguel-Alonso, “A survey
of performance modeling and simulation techniques for acceleratorbased computing,” IEEE Transactions on Parallel and Distributed
Systems, vol. 26, no. 1, pp. 272–281, Jan 2015.

[10] J. W. Choi, D. Bedard, R. Fowler et al., “A roofline model of
energy,” in Proceedings of the International Symposium on Parallel
& Distributed Processing. IEEE, 2013, pp. 661–672.
[11] H. Jia, Y. Zhang, G. Long et al., “GPURoofline: a model for guiding
performance optimizations on GPUs,” in Proceedings of the International European Conference on Parallel and Distributed Computing.
Springer, 2012, pp. 920–932.
[12] E. Konstantinidis and Y. Cotronis, “A practical performance model
for compute and memory bound GPU kernels,” in Proceedings of
the Euromicro International Conference on Parallel, Distributed and
Network-Based Processing, March 2015, pp. 651–658.
[13] C. Nugteren, G.-J. van den Braak, and H. Corporaal, “Roofline-aware
DVFS for GPUs,” in Proceedings of the International Workshop on
Adaptive Self-tuning Computing Systems, vol. 10, no. 100, 2014.
[14] Intel. (2017) Intel Advisor Roofline. [Online]. Available: https:
//software.intel.com/en-us/articles/intel-advisor-roofline

[15] K. Kim, K. Kim, and Q. Park, “Performance analysis and optimization
of three-dimensional fdtd on gpu using roofline model,” Computer
Physics Communications, vol. 182, no. 6, pp. 1201–1207, 6 2011.

[16] R. Yokota and L. A. Barba, “Hierarchical n-body simulations with
autotuning for heterogeneous systems,” Computing in Science &
Engineering, vol. 14, no. 3, pp. 30–39, 2012.
[17] M. Bader et al., “Porting large hpc applications to gpu clusters: The
codes gene and vertex,” Parallel Computing: Accelerating Computational Science and Engineering, vol. 25, p. 305, 2014.
[18] H. Wong, M. M. Papadopoulou, M. Sadooghi-Alvandi et al., “Demystifying gpu microarchitecture through microbenchmarking,” in
Proceedings of the IEEE International Symposium on Performance
Analysis of Systems Software, March 2010, pp. 235–246.
[19] X. Mei and X. Chu, “Dissecting gpu memory hierarchy through
microbenchmarking,” IEEE Transactions on Parallel and Distributed
Systems, vol. PP, no. 99, pp. 1–1, 2016.
[20] R. Meltzer, C. Zeng, and C. Cecka, “Micro-benchmarking the c2070,”
in Proceedings of the GPU Technology Conference (GTC), 2013.

[21] J. A. Stratton, C. Rodrigrues, I.-J. Sung et al., “Parboil: A revised
benchmark suite for scientific and commercial throughput computing,” University of Illinois at Urbana-Champaign, Urbana, Tech. Rep.
IMPACT-12-01, Mar. 2012.
[22] A. Danalis, G. Marin, C. McCurdy et al., “The scalable heterogeneous computing (shoc) benchmark suite,” in Proceedings of the 3rd
Workshop on General-Purpose Computation on Graphics Processing
Units. ACM, 2010, pp. 63–74.
[23] S. Che, M. Boyer, J. Meng et al., “Rodinia: A benchmark suite
for heterogeneous computing,” in IEEE International Symposium on
Workload Characterization. IEEE, 2009, pp. 44–54.


[24] L.-N. Pouchet, “Polybench: The polyhedral benchmark suite,” URL:
http://www. cs. ucla. edu/pouchet/software/polybench, 2012.
