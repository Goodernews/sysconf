
[1] http://drill apache.org/.

[2] http://impala.io/.

[3] http://parquet.apache.org/documentation/latest/.

[4] https://berlinbuzzwords.de/sites/berlinbuzzwords.de/
files/media/documents/ted_dunningwhat_and_why_and_how_apache_drill pdf.

[5] https://cwiki.apache.org/confluence/display/hive
Aanguagemanual+orc.

[6] https://cwiki.apache.org/confluence/display/hive/ parquet.

[7] https://en.wikipedia.org/wiki/hamiltonian_path_problem.

[8] http://spark.apache.org/sql/.

[9] https://prestodb.io/.

[10] http:/Avww.odbms.org/2014/03/star-schema-benchmark/.

[11] http:/Awww.seagate.com/staticfiles/docs/pdf/
datasheet/disc/barracuda-ds 1737-1-1111us.pdf.

[12] http:/Awww.seagate.com/staticfiles/docs/pdf/
datasheet/disc/savvio10k5-fips-data-sheet-ds1727-4-1201us.pdf.

[13] http:/Avww.seagate.com/www-content/
product-content/constellation-fam/constellationes/constellation-es-3/en-us/docs/constellation-es-3-datasheet-ds1769-1-1210us.pdf.

[14] http:/Avww.tpc.org/tpch/.

[15] D. Abadi, P. A. Boncz, S. Harizopoulos, S. Idreos, and.

S. Madden. The design and implementation of modern
column-oriented database systems. Foundations and Trends in
Databases, 5(3):197-280, 2013.

[16] D. J. Abadi, P. A. Boncz, and S. Harizopoulos.
Column-oriented database systems. PVLDB, 2(2): 1664-1665,
2009.

[17] D. J. Abadi, S. Madden, and N. Hachem. Column-stores vs.
row-stores: how different are they really? In SIGMOD, pages
967-980, 2008.

[18] D. J. Abadi, D. S. Myers, D. J. DeWitt, and S. R. Madden.
Materialization strategies in a column-oriented dbms. In
ICDE, pages 466-475, 2007.

[19] S. Agarwal, B. Mozafari, A. Panda, H. Milner, S$. Madden,
and I. Stoica. Blinkdb: queries with bounded errors and
bounded response times on very large data. In EuroSys, pages
29-42, 2013.

[20] A. Ailamaki, D. J. DeWitt, M. D. Hill, and M. Skounakis.
Weaving relations for cache performance. In VLDB, pages
169-180, 2001.

[21] I. Alagiannis, S. Idreos, and A. Ailamaki. H2o0: a hands-free
adaptive store. In SIGMOD, pages 1103-1114, 2014.

[22] R. H. Arpaci-Dusseau and A. C. Arpaci-Dusseau. Hard disk
drives. In Operating Systems: Three Easy Pieces.
Arpaci-Dusseau Books, 0.80 edition, May 2014.

[23] C. Curino, E. Jones, Y. Zhang, and S. Madden. Schism: a
workload-driven approach to database replication and
partitioning. PVLDB, 3(1-2):48-57, 2010.

[24] A. Floratou, J. M. Patel, E. J. Shekita, and S. Tata.
Column-oriented storage techniques for mapreduce. PVLDB,
4(7):419-429, 2011.

[25] K.S. G., H. S. G., and M. B. Taghadosi. Importance of the
initial conditions and the time schedule in the simulated
annealing. In R. Chibante, editor, Simulated Annealing,
Theory with Applications, chapter 12, pages 217-234. Sciyo,
August 2010.

[26] M. Grund, J. Kriiger, H. Plattner, A. Zeier, P. Cudre-Mauroux,

311

and S. Madden. Hyrise: a main memory hybrid storage engine.
PVLDB, 4(2):105-116, 2010.

[27] S. Guo, J. Xiong, W. Wang, and R. Lee. Mastiff: A
mapreduce-based system for time-based big data analytics. In
CLUSTER, pages 72-80, 2012.

[28] R. A. Hankins and J. M. Patel. Data morphing: an adaptive,
cache-conscious storage technique. In VLDB, pages 417-428,
2003.

[29] Y. He, R. Lee, Y. Huai, Z. Shao, N. Jain, X. Zhang, and Z. Xu.
Refile: A fast and space-efficient data placement structure in
mapreduce-based warehouse systems. In ICDE, pages
1199-1208, 2011.

[30] Y. Huai, S. Ma, R. Lee, O. O’Malley, and X. Zhang.
Understanding insights into the basic structure and essential
issues of table placement methods in clusters. PVLDB,
6(14):1750-1761, 2013.

[31] D. M. Jacobson and J. Wilkes. Disk scheduling algorithms
based on rotational position. Citeseer, 1991.

[32] A. Jindal and J. Dittrich. Relax and let the database do the
partitioning online. In BIRTE, pages 65-80, 2011.

[33] A. Jindal, E. Palatinus, V. Pavlov, and J. Dittrich. A
comparison of knives for bread slicing. PVLDB,
6(6):361-372, 2013.

[34] A. Jindal, J. Quiané-Ruiz, and J. Dittrich. Trojan data layouts:
right shoes for a running elephant. In SOCC, page 21, 2011.

[35] S. Kirkpatrick et al. Optimization by simmulated annealing.
Science, 220(4598):671-680, 1983.

[36] Y. Li and J. M. Patel. Widetable: An accelerator for analytical
data processing. PVLDB, 7(10):907-918, 2014.

[37] T. W. Manikas and J. T. Cain. Genetic algorithms vs.
simulated annealing: A comparison of approaches for solving
the circuit partitioning problem. 1996.

[38] S. Navathe, S. Ceri, G. Wiederhold, and J. Dou. Vertical
partitioning algorithms for database design. TODS,
9(4):680-710, 1984.

[39] Y. Nourani and B. Andresen. A comparison of simulated
annealing cooling strategies. Journal of Physics A:
Mathematical and General, 31(41):8373, 1998.

[40] C. Olston, B. Reed, U. Srivastava, R. Kumar, and A. Tomkins.
Pig latin: a not-so-foreign language for data processing. In
SIGMOD, pages 1099-1110, 2008.

[41] S. Papadomanolakis and A. Ailamaki. Autopart: Automating
schema design for large scientific databases using data
partitioning. In SSDBM, pages 383-392, 2004.

[42] C. Ruemmler and J. Wilkes. An introduction to disk drive
modeling. Computer, 27(3):17-28, 1994.

[43] J. Shafer, S. Rixner, and A. Cox. The hadoop distributed
filesystem: Balancing portability and performance. In ISPASS,
pages 122-133, 2010.

[44] D. SIRI zak, J. Wréblewski, V. Eastwood, and P. Synak.
Brighthouse: an analytic data warehouse for ad-hoc queries.
PVLDB, 1(2):1337-1345, 2008.

[45] M. Stonebraker, D. J. Abadi, A. Batkin, X. Chen,

M. Cherniack, M. Ferreira, E. Lau, A. Lin, S. Madden,
E. O’Neil, et al. C-store: a column-oriented dbms. In VLDB,
pages 553-564, 2005.

[46] L. Sun, M. J. Franklin, S. Krishnan, and R. S. Xin.
Fine-grained partitioning for aggressive data skipping. In
SIGMOD, pages 1115-1126, 2014.

[47] H. Szu and R. Hartley. Fast simulated annealing. Physics
letters A, 122(3):157-162, 1987.
[48] A. Thusoo, J. S. Sarma, N. Jain, Z. Shao, P, Chakka,
N. Zhang, S. Anthony, H. Liu, and R. Murthy. Hive - a
petabyte scale data warehouse using hadoop. In ICDE, pages
996-1005, 2010.

[49] R. Van Meter. Observing the effects of multi-zone disks. In
The Usenix Technical Conference, pages 19-30, 1997.

[50] T. White. The hadoop distributed file system. In Hadoop: The
Definitive Guide. O’Reilly Media, Inc., 4 edition, March 2015.

[51] D. Whitley. A genetic algorithm tutorial. Statistics and
computing, 4(2):65-85, 1994.

[52] Y. Yan, L. J. Chen, and Z. Zhang. Error-bounded sampling for
analytics on big sparse data. PVLDB, 7(13):1508-1519, 2014.

[53] M. Zaharia, M. Chowdhury, M. J. Franklin, S. Shenker, and
I. Stoica. Spark: Cluster computing with working sets. In
HotCloud, page 95, 2010.

[54] J. Zhou, N. Bruno, and W. Lin. Advanced partitioning
techniques for massively distributed computation. In
SIGMOD, pages 13-24, 2012.

