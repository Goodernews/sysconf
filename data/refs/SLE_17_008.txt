
[1] Ralph Becket and Zoltan Somogyi. 2008. DCGs +
Memoing = Packrat Parsing but Is It Worth It?. In Proc.
of Practical Aspects of Declarative Languages: 10th
International Symposium (PADL 2008). Springer,
182-196. https://doi.org/10.1007/978-3-540-77442-6_13

[2] Stuart K. Card, Thomas P. Moran, and Allen Newell.
1980. The Keystroke-Level Model for User Performance
Time with Interactive Systems. Commun. ACM 23, 7
(1980), 396-410. https://doi.org/10.1145/358886.358895

[3] Bryan Ford. 2002. Packrat Parsing: A Practical
Linear-Time Algorithm with Backtracking. Master’s
thesis. Massachusetts Institute of Technology.

[4] Bryan Ford. 2002. Packrat Parsing: Simple, Powerful,
Lazy, Linear Time. In Proc. of the Seventh ACM
SIGPLAN International Conference on Functional
Programming (ICFP ’02), Vol. 37. ACM, 36-47.
https://doi.org/10.1145/581478.58 1483

[5] Bryan Ford. 2004. Parsing Expression Grammars: A
Recognition-Based Syntactic Foundation. In Proc. of the
31st ACM SIGPLAN-SIGACT Symposium on Principles of
Programming Languages (POPL ’04). ACM, 111-122.
https://doi.org/10.1145/96400 1.964011

[6] Carlo Ghezzi and Dino Mandrioli. 1979. Incremental
Parsing. ACM Transactions on Programming Languages
and Systems (TOPLAS) 1, 1 (Jan. 1979), 58-70.
https://doi.org/10.1145/357062.357066

25

Patrick Dubroy and Alessandro Warth

[7] Carlo Ghezzi and Dino Mandrioli. 1980. Augmenting
Parsers to Support Incrementality. 7, ACM 27, 3 July
1980), 564-579. https://doi.org/10.1145/322203.322215

[8] Robert Grimm. 2006. Better Extensibility Through
Modular Syntax. In Proc. of the 27th ACM SIGPLAN
Conference on Programming Language Design and
Implementation (PLDI ’06). ACM, 38-51.
https://doi.org/10.1145/1133981.1133987

[9] Marijn Haverbeke. 2017. Acorn webpage. (2017).
https://github.com/ternjs/acorn

[10] Israel Herraiz, Daniel M. German, and Ahmed E.
Hassan. 2011. On the Distribution of Source Code File
Sizes.. In ICSOFT (2). 5-14.

[11] Kimio Kuramitsu. 2015. Packrat Parsing with Elastic
Sliding Window. Journal of Information Processing 23, 4
(7 2015), 505-512. https://doi.org/10.2197/ipsjjip.23.505

[12] Ilya Lakhin. 2013. Incremental Parser Based on
Invariant Syntax Fragments (LtU post). (2013).
http://lambda-the-ultimate.org/node/4840

[13] Iya Lakhin. 2013. Papa Carlo webpage. (2013).
http://lakhin.com/projects/papa-carlo/

[14] J.-M. Larchevéque. 1995. Optimal Incremental Parsing.
ACM Transactions on Programming Languages and
Systems (TOPLAS) 17, 1 (Jan. 1995), 1-15.
https://doi.org/10.1145/200994.200996

[15] Robert B. Miller. 1968. Response Time in
Man-Computer Conversational Transactions. In Proc.
of the December 9-11, 1968, Fall Joint Computer
Conference, Part I. ACM, 267-277.
https://doi.org/10.1145/1476589. 1476628

[16] Kota Mizushima et al. 2010. Packrat Parsers Can
Handle Practical Grammars in Mostly Constant Space.
In Proc. of PASTE ’10. ACM, 29-36.
https://doi.org/10.1145/1806672. 1806679

[17] Arvind M. Murching, Y-V. Prasad, and Y.N. Srikant.
1990. Incremental Recursive Descent Parsing.
Computer Languages 15, 4 (1990), 193-204.
https://doi.org/10.1016/0096-0551(90)90020-P

[18] John J. Shilling. 1993. Incremental LL (1) Parsing in
Language-Based Editors. IEEE Transactions on Software
Engineering 19, 9 (1993), 935-940.
https://doi.org/10.1109/32.241775

[19] Tim A. Wagner and Susan L. Graham. 1998. Efficient
and Flexible Incremental Parsing. ACM Transactions on
Programming Languages and Systems (TOPLAS) 20, 5
(Sept. 1998), 980-1013.
https://doi.org/10.1145/293677.293678

[20] Alessandro Warth, Patrick Dubroy, et al. 2016. Ohm
webpage. (2016). hitps://ohmlang.github.io/

[21] Alessandro Warth, Patrick Dubroy, and Tony
Garnock-Jones. 2016. Modular Semantic Actions. In
Proc. of the 12th Symposium on Dynamic Languages
(DLS 2016). ACM, 108-119.
https://doi.org/10.1145/2989225.2989231
