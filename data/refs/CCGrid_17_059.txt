[1] M. D. McIlroy, “Mass-produced Software Components,”
Proc. NATO Conf. on Software Engineering, Garmisch, Germany, 1968.
[2] C. Szyperski, Component Software: Beyond Object-Oriented
Programming. Addison-Wesley Longman Publishing Co.,
Inc., 2002.
[3] B. A. Allan and al., “A Component Architecture for HighPerformance Scientiﬁc Computing,” International Journal of
High Performance Computing Applications, 2006.
[4] J. Bigot, Z. Hou, C. Pérez, and V. Pichon, “A low level
component model easing performance portability of HPC
applications,” Computing, 2013.
[5] E. Slaughter, W. Lee, S. Treichler, M. Bauer, and A. Aiken,
“Regent: a high-productivity programming language for hpc
with logical regions,” in Intl Conf. for High Performance
Computing, Networking, Storage and Analysis. ACM, 2015.
[6] W. Wu, A. Bouteiller, G. Bosilca, M. Faverge, and J. Dongarra, “Hierarchical dag scheduling for hybrid distributed
systems,” in International Parallel and Distributed Processing
Symposium. IEEE, 2015.
[7] J. Bueno, J. Planas, A. Duran, X. Martorell, E. Ayguadé,
R. M. Badia, and J. Labarta, “Productive programming of
gpu clusters with ompss,” in International Parallel and Distributed Processing Symposium. IEEE, 2012.
[8] C. Augonnet, S. Thibault, R. Namyst, and P.-A. Wacrenier, “StarPU: A Uniﬁed Platform for Task Scheduling on
Heterogeneous Multicore Architectures,” Concurrency and
Computation: Practice and Experience, Special Issue: EuroPar 2009, 2011.
[9] V. Grandgirard, J. Abiteboul, J. Bigot, T. Cartier-Michaud,
N. Crouseilles, G. Dif-Pradalier, C. Ehrlacher, D. Esteve, X. Garbet, P. Ghendrih, G. Latu, M. Mehrenberger,
C. Norscini, C. Passeron, F. Rozar, Y. Sarazin, E. Sonnendrücker, A. Strugarek, and D. Zarzoso, “A 5D gyrokinetic full-f global semi-Lagrangian code for ﬂux-driven ion
turbulence simulations,” Computer Physics Communications,
2016.
[10] J. Bigot, V. Grandgirard, G. Latu, C. Passeron, F. Rozar, and
O. Thomine, “Scaling GYSELA code beyond 32K-cores on
Blue Gene/Q,” ESAIM: Proceedings, 2013.
[11] V. Grandgirard, “High-Q club: Highest scaling codes on
JUQUEEN – GYSELA: GYrokinetic SEmi-LAgrangian
code for plasma turbulence simulations,” March 2015.
[Online]. Available: http://www.fz-juelich.de/ias/jsc/EN/
Expertise/High-Q-Club/Gysela/ node.html
[12] M. Bauer, S. Treichler, E. Slaughter, and A. Aiken, “Legion:
Expressing locality and independence with logical regions,”
in Intl Conf. on High Performance Computing, Networking,
Storage and Analysis. IEEE, 2012.
[13] T. Gautier, J. V. Ferreira Lima, N. Maillard, and B. Rafﬁn,
“XKaapi: A Runtime System for Data-Flow Task Programming on Heterogeneous Architectures,” in International Symposium on Parallel and Distributed Processing. IEEE, 2013.
[14] S. Benkner, S. Pllana, J. L. Träff, P. Tsigas, A. Richards,
R. Namyst, B. Bachmayer, C. Kessler, D. Moloner, and
P. Sanders, “The PEPPHER approach to programmability
and performance portability for heterogeneous many-core
architectures,” in ParCo. IOS press, 2011.
[15] A. Espinosa, P. Beckman, M. Hategan, Z. Zhang, M. Wilde,
K. Iskra, I. Foster, B. Clifford, and I. Raicu, “Parallel scripting
for applications at the petascale and beyond,” Computer,
2009.
[16] OpenMP Architecture Review Board, “OpenMP Application
Programming Interface Version 4.5,” 2015. [Online]. Available: http://www.openmp.org/mp-documents/openmp-4.5.pdf
[17] J. Montagnat, B. Isnard, T. Glatard, K. Maheshwari, and M. B.
Fornarino, “A data-driven workﬂow language for grids based
on array programming principles,” in Workshop on Workﬂows
in Support of Large-Scale Science. ACM, 2009.
[18] J. Allard, V. Gouranton, L. Lecointre, S. Limet, E. Melin,
B. Rafﬁn, and S. Robert, “FlowVR: a middleware for large
scale virtual reality applications,” in International Euro-Par
Conference on Parallel Processing. Springer, 2004.
[19] M. Aldinucci, M. Danelutto, P. Kilpatrick, and M. Torquati,
“Fastﬂow: high-level and efﬁcient streaming on multi-core,”
in Programming Multi-core and Many-core Computing Systems, 2014.
[20] K.-K. Lau, L. Saﬁe, P. Stepan, and C. Tran, “A component model that is both control-driven and data-driven,”
in International Symposium on Component Based Software
Engineering. ACM, 2011.
[21] H. L. Bouziane, C. Pérez, and T. Priol, “A software component model with spatial and temporal compositions for
grid infrastructures,” in International Euro-Par Conference on
Parallel Processing. Springer, 2008.
[22] H. Coullon, C. Pérez, and J. Richard, “Feasibility Study of
a Runtime Component-based Model Integrating Task Graph
Concept on a 1D Advection Case Study,” 2016. [Online].
Available: https://hal.inria.fr/hal-01348204