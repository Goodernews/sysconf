[1] A. Maji et al., “ICE: An Integrated Configuration Engine for Interference
Mitigation in Cloud Services,” in Proceedings of ICAC 2015, pp. 91–
100.
[2] ——, “Mitigating Interference in Cloud Services by Middleware Reconfiguration,” in Proceedings of Middleware 2014, pp. 277–288.
[3] C. Wang et al., “Effective Capacity Modulation as an Explicit Control
Knob for Public Cloud Profitability,” in Proceedings of ICAC 2016, pp.
95–104.
[4] Y. Xu et al., “Small is Better: Avoiding Latency Traps in Virtualized
Data Centers,” in Proceedings of SOCC 2013, pp. 7–16.
[5] X. Bu et al., “Interference and Locality-Aware Task Scheduling for
MapReduce Applications in Virtual Clusters,” in Proceedings of HPDC
2013, pp. 227–238.
[6] D. Novakovic et al., “Deepdive: Transparently Identifying and Managing
Performance Interference in Virtualized Environments,” in Proceedings
of USENIX ATC 2013, pp. 219–230.

[7] N. Vasic et al., “DejaVu: Accelerating Resource Allocation in Virtualized
Environments,” in Proceedings of ASPLOS 2012, pp. 423–436.
[8] M. Zaharia et al., “Improving MapReduce Performance in Heterogeneous Environments,” in Proceedings of OSDI 2008, pp. 29–42.
[9] R. C. Chiang et al., “TRACON: Interference-Aware Scheduling for DataIntensive Applications in Virtualized Environments,” in Proceedings of
SC 2011, pp. 1–12.
[10] R. Nathuji et al., “Q-clouds: Managing Performance Interference Effects
for QOS-Aware Clouds,” in Proceedings of EuroSys 2010, pp. 237–250.
[11] C. Delimitrou and C. Kozyrakis, “QoS-Aware Scheduling in Heterogeneous Datacenters with Paragon,” ACM Transactions on Computer
Systems, vol. 31, no. 4, 2013.
[12] S. Nathan et al., “Towards a Comprehensive Performance Model of
Virtual Machine Live Migration,” in Proceedings of SOCC 2015, pp.
288–301.
[13] C. Delimitrou et al., “Tarcil: High Quality and Low Latency Scheduling
in Large, Shared Clusters,” in Proceedings of SOCC 2015, pp. 97–110.
[14] ——, “Quasar: Resource-Efficient and QoS-Aware Cluster Management,” in Proceedings of ASPLOS 2014, pp. 127–144.
[15] M. Harchol-Balter, Performance Modeling and Design of Computer
Systems: Queueing Theory in Action. Cambridge University Press.
[16] K. Leonard, Queueing Systems, Volume 2.
New York: WileyInterscience, 1976.
[17] “HAProxy: The Reliable, High Performance TCP/HTTP Load Balancer,” http://www.haproxy.org.
[18] Q. Zhang et al., “A Regression-based Analytic Model for Capacity
Planning of Multi-tier Applications,” Cluster Computing, vol. 11, no. 3,
pp. 197–211, 2008.
[19] T. Horvath et al., “Multi-mode Energy Management for Multi-tier Server
Clusters,” in Proceedings of PACT 2008, pp. 270–279.
[20] M. I. Reiman and B. Simon, “An Interpolation Approximation for
Queueing Systems with Poisson Input,” Operations Research, vol. 36,
no. 3, pp. 454–469, 1988.
[21] M. Boon, E. Winands, I. Adan, and A. van Wijk, “Closed-form waiting
time approximations for polling systems,” Performance Evaluation,
vol. 68, no. 3, pp. 290 – 306, 2011.
[22] J. Mukherjee et al., “Resource Contention Detection in Virtualized Environments,” IEEE Transactions on Network and Service Management,
vol. 12, no. 2, pp. 217–231, 2015.
[23] M. Ferdman et al., “Clearing the Clouds: A Study of Emerging Scaleout Workloads on Modern Hardware,” in Proceedings of ASPLOS 2012,
pp. 37–48.
[24] E.-J. Van Baaren, “WikiBench: A distributed, Wikipedia based web
application benchmark,” Master’s thesis, Vrije Univesiteit Amsterdam,
the Netherlands, 2009.
[25] “Google Cloud Platform: Setting Up HTTP(S) Load Balancing,” https:
//cloud.google.com/compute/docs/load-balancing/http.
[26] X. Zhang et al., “CPI2 : CPU Performance Isolation for Shared Compute
Clusters,” in Proceedings of EuroSys 2013, pp. 379–391.
[27] M. Hall, E. Frank, G. Holmes, B. Pfahringer, P. Reutemann, and I. H.
Witten, “The WEKA Data Mining Software: An Update,” SIGKDD
Explorations Newsletter, vol. 11, no. 1, pp. 10–18, 2009.
[28] X. Zhang et al., “CPI2 : CPU Performance Isolation for Shared Compute
Clusters,” in Proceedings of the 8th ACM European Conference on
Computer Systems, ser. EuroSys ’13, 2013, pp. 379–391.
[29] David Lo et al., “Heracles: Improving Resource Efficiency at Scale,” in
ACM SIGARCH Computer Architecture News, vol. 43, no. 3. ACM,
2015, pp. 450–462.
[30] X. Chen et al., “CloudScope: Diagnosing and Managing Performance
Interference in Multi-tenant Clouds,” in Proceedings of MASCOTS 2015,
pp. 164–173.
[31] “AWS: How Elastic Load Balancing Works,” http://docs.aws.amazon.
com/ElasticLoadBalancing/latest/DeveloperGuide/how-elb-works.html.
[32] S. A. Javadi et al., “UIE: User-centric Interference Estimation for Cloud
Applications,” in Proceedings of IC2E 2016, pp. 119–122.
[33] G. Casale et al., “A Feasibility Study of Host-level Contention Detection
by Guest Virtual Machines,” in Proceedings of CloudCom 2013, pp.
152–157.
[34] Y. Amannejad et al., “Detecting Performance Interference in Cloudbased Web Services,” in Proceedings of IFIP IM 2015, pp. 423–431.
[35] J. Mars et al., “Bubble-Up: Increasing Utilization in Modern Warehouse
Scale Computers via Sensible Co-locations,” in Proceedings of MICRO
2011, pp. 248–259.