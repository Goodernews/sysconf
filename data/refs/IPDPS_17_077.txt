[1] C. D. Polychronopoulos, “Loop coalescing: a compiler trans- formation for parallel machines,” University of Illinois at Urbana-Champaign, Center for Supercomputing Research and Development, Technical Report CSRD-635, 1987.
[2] A. M. Ghuloum and A. L. Fisher, “Flattening and paralleliz- ing irregular, recurrent loop nests,” SIGPLAN Not., vol. 30, no. 8, pp. 58–67, Aug. 1995.
[3] OpenMP, “OpenMP Application Program Interface Version 4.0,” 2013. [Online]. Available: http://www.openmp.org/ mp- documents/OpenMP4.0.0.pdf
[4] D. L. Kreher and D. R. Stinson, Combinatorial Algorithms: generation, enumeration, and search. CRC Press, 1999.
[5] P. Clauss, “Counting Solutions to Linear and Nonlinear Constraints Through Ehrhart Polynomials: Applications to Analyze and Transform Scientific Programs,” in Proceedings of the 10th International Conference on Supercomputing, ser. ICS ’96, New York, NY, USA, 1996, pp. 278–285.
[6] P. Clauss and V. Loechner, “Parametric analysis of polyhedral iteration spaces,” J. VLSI Signal Process. Syst., vol. 19, no. 2, pp. 179–194, Jul. 1998.
[7] S. Verdoolaege, R. Seghir, K. Beyls, V. Loechner, and M. Bruynooghe, “Counting integer points in parametric polytopes using barvinok’s rational functions,” Algorithmica, vol. 48, no. 1, pp. 37–66, 2007.
[8] P. Clauss and B. Meister, “Automatic memory layout trans- formations to optimize spatial locality in parameterized loop nests,” SIGARCH Comput. Archit. News, vol. 28, no. 1, pp. 11–19, Mar. 2000.
[9] S.Verdoolaege,“ISL:Anintegersetlibraryforthepolyhedral model,” in Proc. of the Third Int. Conf. on Math. Software, ser. LNCS 6327, 2010, pp. 299–302.
[10] “PLUTO - An automatic parallelizer and locality optimizer for multicores,” http://pluto-compiler.sourceforge.net.
[11] “The Polyhedral Benchmark suite,” http://sourceforge.net/ projects/polybench.
[12] A. Duran, R. Silvera, J. Corbala ́n, and J. Labarta, “Runtime adjustment of parallel nested loops,” in Shared Memory Par- allel Programming with Open MP: 5th International Work- shop on Open MP Applications and Tools, WOMPAT 2004, Houston, TX, USA, May 17-18, 2004, B. M. Chapman, Ed. Springer Berlin Heidelberg, 2005, pp. 137–147.
[13] A. Jackson and O. Agathokleous, “Dynamic loop parallelisa- tion,” CoRR, vol. abs/1205.2367, 2012.
[14] R. Sakellariou, “A compile-time partitioning strategy for non- rectangular loop nests,” in Proceedings of the 11th Inter- national Symposium on Parallel Processing, ser. IPPS ’97. Washington, DC, USA: IEEE Computer Society, 1997, pp. 633–637.
[15] A. Kejariwal, P. Alberto, A. Nicolau, and C. D. Poly- chronopoulos, “A geometric approach for partitioning n- dimensional non-rectangular iteration spaces,” in Proceedings of the 17th International Conference on Languages and Compilers for High Performance Computing, ser. LCPC’04. Berlin, Heidelberg: Springer-Verlag, 2005, pp. 102–116.
[16] N. Kafri and J. A. Sbeih, “Simple near optimal partitioning approach to perfect triangular iteration space,” in Proceedings of the 2008 High Performance Computing & Simulation Conference, 2008.
