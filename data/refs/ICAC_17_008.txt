[1] A. Aamodt and E. Plaza. Case-based reasoning: Foundational issues,
methodological variations, and system approaches. AI communications,
7(1):39–59, 1994.
[2] M. Acher, P. Collet, F. Fleurey, P. Lahire, S. Moisan, J.-P. Rigault, and
et al. Modeling context and dynamic adaptations with feature models.
In 4th International Workshop on Models@run.time, 2009.
[3] M. Acher, P. Collet, P. Lahire, S. Moisan, and J.-P. Rigault. Modeling
variability from requirements to runtime. In Proceedings of 16th IEEE
International Conference on Engineering of Complex Computer Systems
(ICECCS), 2011.
[4] M. Amoui, M. Salehie, S. Mirarab, and L. Tahvildari. Adaptive
action selection in autonomic software using reinforcement learning.
In Autonomic and Autonomous Systems, 2008. ICAS 2008. Fourth
International Conference on, 2008.
[5] C. Amza, A. Chanda, A. L. Cox, S. Elnikety, R. Gil, K. Rajamani,
W. Zwaenepoel, E. Cecchet, and J. Marguerite. Speciﬁcation and
implementation of dynamic web site benchmarks. In Workload Characterization, 2002. WWC-5. 2002 IEEE International Workshop on, pages
3–13. IEEE, 2002.
[6] M. Bashari and E. Bagheri. Engineering self-adaptive systems and
dynamic software product line. In Proceedings of the 17th International
Software Product Line Conference, pages 285–285. ACM, 2013.
[7] Y. Brun, G. D. M. Serugendo, C. Gacek, H. Giese, H. Kienle, M. Litoiu,
H. Muller, M. Pezze, and M. Shaw. Engineering self-adaptive systems
through feedback loops. In Software Engineering for Self-Adaptive
Systems, pages 48–70. 2009.
[8] B. Chen, X. Peng, Y. Yu, B. Nuseibeh, and W. Zhao. Self-adaptation
through incremental generative model transformations at runtime. In 36th
International Conference on Software Engineering, ICSE ’14, Hyderabad,
India.
[9] B. H. Cheng and et al. Software engineering for self-adaptive systems:
A research roadmap. In Software Engineering for Self-Adaptive Systems,
pages 1–26. Springer-Verlag, 2009.
[10] R. de Lemos, H. Giese, H. A. Müller, and et. al. Software engineering
for self-adaptive systems: A second research roadmap. In Software Engineering for Self-Adaptive Systems II - International Seminar, Dagstuhl
Castle, Germany, 2010.
[11] S. Dobson, S. Denazis, and et al. A survey of autonomic communications.
ACM Transactions on Autonomous and Adaptive Systems, 2006.
[12] A. Elkhodary, N. Esfahani, and S. Malek. Fusion: a framework for
engineering self-tuning self-adaptive software systems. In Proceedings of
the 18th international symposium on Foundations of software engineering.
ACM, 2010.
[13] N. Esfahani, A. M. Elkhodary, and S. Malek. A learning-based framework
for engineering feature-oriented self-adaptive software systems. IEEE
Transaction of Software Engineering, 2013.
[14] A. Filieri, H. Hoffmann, and M. Maggio. Automated design of selfadaptive software with control-theoretical formal guarantees. In Proceedings of the 36th International Conference on Software Engineering,
pages 299–310. ACM, 2014.
[15] A. Filieri, H. Hoffmann, and M. Maggio. Automated multi-objective
control for self-adaptive software design. In Proceedings of the 2015
10th Joint Meeting on Foundations of Software Engineering, ESEC/FSE,
pages 13–24, 2015.
[16] D. Garlan, S. Cheng, A. Huang, B. Schmerl, and P. Steenkiste. Rainbow:
Architecture-based self-adaptation with reusable infrastructure. IEEE
Computer, 2004.
[17] C. Ghezzi, L. S. Pinto, P. Spoletini, and G. Tamburrelli. Managing nonfunctional uncertainty via model-driven adaptivity. In 35th International
Conference on Software Engineering, USA, 2013.
[18] C. Ghezzi, L. S. Pinto, P. Spoletini, and G. Tamburrelli. Managing
non-functional uncertainty via model-driven adaptivity. In Proceedings
of the 35th International Conference on Software Engineering, pages
33–42. IEEE Press, 2013.
[19] C. Ghezzi and A. M. Shariﬂoo. Dealing with non-functional requirements
for adaptive systems via dynamic software product-lines. In Software
Engineering for Self-Adaptive Systems, 2010.
[20] C. Ghezzi and A. M. Shariﬂoo. Dealing with non-functional requirements
for adaptive systems via dynamic software product-lines. In Software
Engineering for Self-Adaptive Systems II, pages 191–213. Springer, 2013.
[21] A. Hinton, M. Kwiatkowska, G. Norman, and D. Parker. Prism: A
tool for automatic veriﬁcation of probabilistic systems. In International
Conference on Tools and Algorithms for the Construction and Analysis
of Systems, pages 441–444. Springer, 2006.
[22] H. N. Ho and E. Lee. Model-based reinforcement learning approach for
planning in self-adaptive software system. In International Conference
on Ubiquitous Information Management and Communication, 2015.
[23] L. P. Kaelbling, M. L. Littman, and A. W. Moore. Reinforcement learning:
A survey. Journal of artiﬁcial intelligence research, 4:237–285, 1996.
[24] J. O. Kephart and W. E. Walsh. An artiﬁcial intelligence perspective on
autonomic computing policies. In Policies for Distributed Systems and
Networks, 2004. POLICY 2004. Proceedings. Fifth IEEE International
Workshop on, pages 3–12. IEEE, 2004.
[25] M. J. Khan, M. M. Awais, and S. Shamail. Enabling self-conﬁguration in
autonomic systems using case-based reasoning with improved efﬁciency.
In International Conference on Autonomic and Autonomous Systems,
pages 112–117, 2008.
[26] D. Kim and S. Park. Reinforcement learning-based dynamic adaptation
planning method for architecture-based self-managed software. In
International Workshop on Software Engineering for Adaptive and Selfmanaging Systems, 2009.
[27] C. Klein, M. Maggio, K.-E. Årzén, and F. Hernández-Rodriguez.
Brownout: building more robust cloud applications. In Proceedings
of the 36th International Conference on Software Engineering, pages
700–711. ACM, 2014.
[28] I. Lanese, A. Bucchiarone, and F. Montesi. A framework for rule-based
dynamic adaptation. In TCG 2010: Lecture Notes on Computer Science
6084.
[29] D. B. Leake. Case-Based Reasoning: Experiences, lessons and future
directions. MIT press, 1996.
[30] D. McSherry, S. Hassan, and D. Bustard. Advances in Case-Based
Reasoning: 9th European Conference, ECCBR 2008, Trier, Germany,
September 1-4, 2008. Proceedings, chapter Conversational Case-Based
Reasoning in Self-healing and Recovery. 2008.
[31] G. A. Moreno, J. Cámara, D. Garlan, and B. Schmerl. Proactive selfadaptation under uncertainty: A probabilistic model checking approach. In
Proceedings of the Joint Meeting of the European Software Engineering
Conference and the Symposium on Foundations of Software Engineering
(ESEC/FSE), 2015.
[32] W. Qian, X. Peng, B. Chen, J. Mylopoulos, H. Wang, and W. Zhao.
Rationalism with a dose of empiricism: Case-based reasoning for
requirements-driven self-adaptation. In 22nd International Requirements
Engineering Conference, 2014.
[33] M. M. Richter and R. O. Weber. Case-based reasoning. A Textbook, 546,
2013.
[34] R. S. Sutton and A. G. Barto. Introduction to reinforcement learning,
volume 135. MIT Press Cambridge, 1998.
[35] R. S. Sutton and A. G. Barto. Reinforcement learning: An introduction.
MIT press, 1998.
[36] G. Tesauro et al. Online resource allocation using decompositional
reinforcement learning. In AAAI, volume 5, pages 886–891, 2005.
[37] G. Tesauro, N. K. Jong, R. Das, and M. N. Bennani. A hybrid
reinforcement learning approach to autonomic resource allocation. In
2006 IEEE International Conference on Autonomic Computing, pages
65–73. IEEE, 2006.
