[1] Beignet. https://01.org/zh/beignet/.
[2] Opencl specification 2.0. https://www.khronos.org/registry/cl/specs/
opencl-2.0.pdf.
[3] A. M. Aji, A. J. Pena, P. Balaji, and Wu Chun Feng. Automatic
command queue scheduling for task-parallel workloads in opencl. In
IEEE International Conference on CLUSTER Computing, pages 42–
51, 2015.
[4] D. Boggs, G. Brown, N. Tuck, and K. S. Venkatraman. Denver:
Nvidia’s first 64-bit arm processor. IEEE Micro, 35(2):46–55, 2015.
[5] A. Branover, D. Foley, and M. Steinman. Amd fusion apu: Llano.
IEEE Micro, 32(2):28–37, 2012.
[6] S. Che, M. Boyer, J. Meng, D. Tarjan, J. W. Sheaffer, S.-H. Lee,
and K. Skadron. Rodinia: A benchmark suite for heterogeneous
computing. In IISWC, 2009.
[7] Linchuan Chen, Xin Huo, and G. Agrawal. Accelerating mapreduce
on a coupled cpu-gpu architecture. pages 1–11, 2012.
[8] Q. Chen, H. Yang, J. Mars, and L. Tang. Baymax: Qos awareness
and increased utilization for non-preemptive accelerators in warehouse
scale computers. In ASPLOS, 2016.
[9] Matthew Curtis-Maury, Ankur Shah, Filip Blagojevic, Dimitrios S.
Nikolopoulos, Bronis R. de Supinski, and Martin Schulz. Prediction
models for multi-dimensional power-performance optimization on
many cores. In PACT, 2008.
[10] Ali El-Moursy, Rajeev Garg, David H Albonesi, and Sandhya
Dwarkadas. Compatible phase co-scheduling on a cmp of multithreaded processors. In IPDPS, 2006.
[11] Chris Gregg, Michael Boyer, Kim Hazelwood, and Kevin Skadron.
Dynamic heterogeneous scheduling decisions using historical runtime
data. In Proceedings of the 2nd Workshop on Applications for Multiand Many-Core Processors. San Jose, CA, 2011.
[12] H. P. Intel and Phoenix Microsoft. Advanced configuration & power
interface (acpi) specification. 2006.
[13] D. James. Intel ivy bridge unveiled the first commercial tri-gate,
high-k, metal-gate cpu. Proceedings of the Custom Integrated Circuits
Conference, pages 1–4, 2012.
[14] Y. Jiang, X. Shen, J. Chen, and R. Tripathi. Analysis and approximation of optimal co-scheduling on chip multiprocessors. In PACT,
pages 220–229, October 2008.
[15] Y. Jiang, X. Shen, J. Chen, and R. Tripathi. The complexity and
approximation of optimal job co-scheduling on chip multiprocessors.
IEEE Transactions on Parallel and Distributed Systems., 22(7), 2011.
(DOI: 10.1109/TPDS.2010.193).
[16] Y. Jiang, K. Tian, and X. Shen. Combining locality analysis with
online proactive job co-scheduling in chip multiprocessors. In
Proceedings of The International Conference on High Performance
Embedded Architectures and Compilation (HiPEAC), pages 201–215,
2010.
[17] Rashid Kaleem, Rajkishore Barik, Tatiana Shpeisman, Brian T. Lewis,
Chunling Hu, and Keshav Pingali. Adaptive heterogeneous scheduling
for integrated gpus. In PACT, pages 151–162, 2014.

[18] Toshiya Komoda, Shingo Hayashi, Takashi Nakada, and Shinobu
Miwa. Power capping of cpu-gpu heterogeneous systems through coordinating dvfs and task mapping. In IEEE International Conference
on Computer Design, pages 349 – 356, 2013.
[19] Jaekyu Lee and Hyesoon Kim. Tap: A tlp-aware cache management
policy for a cpu-gpu heterogeneous architecture. In IEEE International Symposium on High-Performance Computer Architecture, pages
1–12, 2012.
[20] Xiaohan Ma, Mian Dong, Lin Zhong, and Zhigang Deng. Statistical
power consumption analysis and modeling for gpu-based computing,
2009.
[21] Vineeth Mekkat, Anup Holey, Pen-Chung Yew, and Antonia Zhai.
Managing shared last-level cache in a heterogeneous multicore processor. In PACT, 2013.
[22] David K. Newsom, Olivier Serres, Sardar F. Azari, and Abdel
Hameed A. Badawy. Energy efficient job co-scheduling for highperformance parallel computing clusters. In IEEE International Conference on Smart City/socialcom/sustaincom, pages 550–556, 2015.
[23] Thomas Phan, Kavitha Ranganathan, and Radu Sion. Evolving
toward the perfect schedule: Co-scheduling job assignments and
data replication in wide-area systems using a genetic algorithm.
In Job Scheduling Strategies for Parallel Processing, International
Workshop, Jsspp 2005, Cambridge, Ma, Usa, June 19, 2005, Revised
Selected Papers, pages 173–193, 2005.
[24] Efraim Rotem, Alon Naveh, Doron Rajwan, Avinash Ananthakrishnan, and Eliezer Weissmann. Power-management architecture of
the intel microarchitecture code-named sandy bridge. IEEE Micro,
32(2):20–27, 2012.
[25] Wei Tang, Narayan Desai, Venkatram Vishwanath, Daniel Buettner,
and Zhiling Lan. Job coscheduling on coupled high-end computing
systems. pages 317–326, 2011.
[26] K. Tian, Y. Jiang, and X. Shen. A study on optimally co-scheduling
jobs of different lengths on chip multiprocessors. In Proceedings of
ACM Computing Frontiers, pages 41–50, 2009.
[27] K. Tian, E. Zhang, and X. Shen. A step towards transparent integration
of input-consciousness into dynamic program optimizations. In the
Conference on Object-Oriented Programming, Systems, Languages,
and Applications (OOPSLA), 2011.
[28] Yuan Wen, Zheng Wang, and Michael F. P. O’Boyle. Smart multitask scheduling for opencl programs on CPU/GPU heterogeneous
platforms. In 21st International Conference on High Performance
Computing, HiPC 2014, Goa, India, December 17-20, 2014, pages
1–10, 2014.
[29] Kenneth Yoshimoto, Patricia Kovatch, and Phil Andrews. Coscheduling with user-settable reservations. In International Conference on Job Scheduling Strategies for Parallel Processing, pages 146–
156, 2005.
[30] Feng Zhang, Jidong Zhai, Wenguang Chen, and Bingsheng He. To corun, or not to co-run: A performance study on integrated architectures.
In IEEE International Symposium on Modeling, pages 89–92, 2015.
[31] Feng Zhang, Jidong Zhai, Wenguang Chen, Bingsheng He, and
Shuhao Zhang. To co-run, or not to co-run: A performance study
on integrated architectures. In 23rd IEEE International Symposium
on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems, MASCOTS 2015, Atlanta, GA, USA, October 5-7,
2015, pages 89–92, 2015.
[32] Huazhe Zhang and Henry Hoffmann. Maximizing performance
under a power cap: A comparison of hardware, software, and hybrid
techniques. In ASPLOS, 2016.
[33] Y. Zhang, M. A. Laurenzano, J. Mars, and L. Tang. Smite: Precise
qos prediction on real-system smt processors to improve utilization in
warehouse scale computers. In Microarchitecture (MICRO), Annual
IEEE/ACM International Symposium on. IEEE, 2016.
[34] Q. Zhu, B. Wu, X. Shen, L. Shen, and Z. Wang. Understanding
co-run degradations on integrated heterogeneous processors. In
International Workshop on Languages and Compilers for Parallel
Computing (LCPC), 2014.
[35] Sergey Zhuravlev, Sergey Blagodurov, and Alexandra Fedorova.
Addressing shared resource contention in multicore processors via
scheduling. Acm Sigplan Notices, 45(3):129–142, 2010.

