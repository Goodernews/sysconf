[1] Android Internals: A Confectioners Cookbook. http://newandroidbook.com/
index.php.
[2] Android View Hierarchy. http://developer.android.com/guide/topics/ui/overview.
html.
[3] Androidwear 2.0. http://www.wareable.com/android-wear/.
[4] Apple View Hierarchy. https://developer.apple.com/library/ios/documentation/
General/Conceptual/Devpedia-CocoaApp/View%20Hierarchy. html.
[5] Apple watchos. http://www.apple.com/watchos/.
[6] Bootstrap. http://getbootstrap.com/.
[7] Card layout. https://developer.android.com/training/wearables/ui/cards.html.
[8] Dex to Java decompiler. https://github.com/skylot/jadx.
[9] Dumpsys battery status.  https://source.android.com/devices/tech/power/
batterystats.html.
[10] Freemarker. http://freemarker.org/.
[11] GPS Heads Up Display. http://www.reconinstruments.com/products/snow2/.
[12] Hierarchy Viewer. http://developer.android.com/tools/help/hierarchy- viewer.
html.
[13] Monsoon Power Monitor.
PowerMonitor/.
[14] ntpd. http://doc.ntp.org/4.1.0/ntpd.htm.
[15] Pebble. https://www.pebble.com/.
[16] Responsive ui design. https://medium.com/google-developers/
building-a-responsive-ui-in-android-7dc7e4efcbb3#.bi9jk1rdy.
[17] Sony SmartEyeglass SDK. _https://developer.sony.com/develop/wearables/
smarteyeglass-sdk/.
[18] Tizen. https://www.tizen.org/.
[19] Ui patterns for wearables. https://developer.android.com/design/wear/patterns.
html.

https://www.msoon.com/LabEquipment/

[20] Wear Spotify for Android Wear. https://play.google.com/store/apps/details?id=
wearablesoftware.wearspotifyplayer&hl=en.

[21] Android Accessibility Service. http://developer.android.com/reference/android/
accessibilityservice/AccessibilityService.html.

[22] Ai Squared. Zoomtext magnifier. http://www.aisquared.com/zoomtext/more/
zoomtext_magnifier.

[23] Google Android Wear Market. https://play.google.com/store/apps/category/
ANDROID_WEAR?hI=en.

[24] J. Andrus, A. Van’t Hof, N. AlDuaij, C. Dall, N. Viennot, and J. Nieh. Cider:
Native execution of ios apps on android. In Proceedings of the ACM International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS), pages 367-382, 2014.

[25] Apple. Airplay—play content from ios devices on appletv. https://www.apple.
com/airplay/.

[26] Apportable. http://www.apportable.com/.

[27] R.A. Baratto, L. N. Kim, and J. Nieh. Thine: A virtual display architecture for thinclient computing. In Proceedings of the ACM SIGOPS Symposium on Operating
Systems Principles (SOSP), pages 277-290, 2005.

[28] A. Baumann, D. Lee, P. Fonseca, L. Glendenning, J. R. Lorch, B. Bond, R. Olinsky,
and G. C. Hunt. Composing OS extensions safely and efficiently with Bascule.
In Proceedings of the ACM European Conference on Computer Systems (EuroSys),
2013.

[29] N. Bila, T. Ronda, I. Mohomed, K. N. Truong, and E. de Lara. Pagetailor: reusable
end-user customization for the mobile web. In Proceedings of the 5th international
conference on Mobile systems, applications and services, pages 16-29. ACM, 2007.

[30] S. M. Billah, D. E. Porter, and I. V. Ramakrishnan. Sinter: Low-bandwidth remote
access for the visually-impaired. In Proceedings of the ACM European Conference
on Computer Systems (EuroSys), 2016.

[31] P.-Y. P. Chi and Y. Li. Weave: Scripting cross-device wearable interaction. In
Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing
Systems, pages 3923-3932. ACM, 2015.

[32] K. Coninx, K. Luyten, C. Vandervelpen, J. Van den Bergh, and B. Creemers.
Dygimes: Dynamically generating interfaces for mobile computing devices and
embedded systems. In International Conference on Mobile Human-Computer
Interaction, pages 256-270. Springer, 2003.

[33] J. R. Douceur, J. Elson, J. Howell, and J. R. Lorch. Leveraging legacy code to
deploy desktop applications on the web. In Proceedings of the USENIX Symposium
on Operating Systems Design and Implementation (OSDI), 2008.

[34] C. D. Estes and K. Mayer-Patel. Moving beyond the framebuffer. In Proceedings
of the 21st International Workshop on Network and Operating Systems Support for
Digital Audio and Video, NOSSDAV ’11, pages 93-98, New York, NY, USA, 2011.
ACM.

[35] Freedom Scientific. Magic screen magnification software. http://www.
freedomscientific.com/products/lv/magic- bl-product-page.asp.

[36] G. Ghiani, M. Manca, and F. Paternd. Authoring context-dependent cross-device
user interfaces based on trigger/action rules. In Proceedings of the 14th International Conference on Mobile and Ubiquitous Multimedia, pages 313-322. ACM,

2015.

[37] P. Hamilton and D. J. Wigdor. Conductor: Enabling and understanding crossdevice interaction. In Proceedings of the SIGCHI Conference on Human Factors in
Computing Systems, CHI 14, pages 2773-2782, New York, NY, USA, 2014. ACM.

[38] S. Hao, B. Liu, S$. Nath, W. G. Halfond, and R. Govindan. Puma: Programmable
ui-automation for large-scale dynamic analysis of mobile apps. In Proceedings
of the 12th Annual International Conference on Mobile Systems, Applications, and
Services, MobiSys ’14, pages 204-217, New York, NY, USA, 2014. ACM.

[39] J. Harder and J. Maynard. Technical deep dive: Ica protocol and acceleration.
http://s3.amazonaws.com/legacy.icmp/additional/ica_acceleration_0709a_pdf.

[40] S. Houben and N. Marquardt. Watchconnect: A toolkit for prototyping
smartwatch-centric cross-device applications. In Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing Systems, pages 1247-1256.
ACM, 2015.

[41] J. Howell, B. Parno, and J. R. Douceur. Embassies: Radically refactoring the
web. In Proceedings of the USENIX Symposium on Networked Systems Design and
Implementation (NSDI), pages 529-546, 2013.

[42] J. Howell, B. Parno, and J. R. Douceur. How to run POSIX apps in a minimal
picoprocess. In Proceedings of the USENIX Annual Technical Conference, pages
321-332, 2013.

[43] Intel. Intel atom 3800 processor series: Android multi-display features in automobiles. http://www. intel.in/content/www/in/en/embedded/products/bay-trail/
atom-e3800-android-display-vehicles-paper.html, 2014.

[44] J. Kim, R. A. Baratto, and J. Nieh. pTHINC: A Thin-client Architecture for Mobile
Wireless Web. In Proceedings of the 15th International Conference on World Wide
Web (WWW), pages 143-152, 2006.

[45] G. Kulkarni, V. Premraj, V. Ordonez, S. Dhay, S. Li, Y. Choi, A. C. Berg, and T. L.
Berg. Babytalk: Understanding and generating simple image descriptions. IEEE
Trans. Pattern Anal. Mach. Intell, 35(12):2891-2903, Dec. 2013.

[46] R. Liu and F. X. Lin. Understanding the characteristics of android wear os.
In Proceedings of the 14th Annual International Conference on Mobile Systems,
Applications, and Services, MobiSys °16, pages 151-164, New York, NY, USA, 2016.
ACM.

[47] J. Meskens, K. Luyten, and K. Coninx. Jelly: A multi-device design environment
for managing consistency across devices. In Proceedings of the International
Conference on Advanced Visual Interfaces, pages 289-296. ACM, 2010.

[48] J. Meskens, J. Vermeulen, K. Luyten, and K. Coninx. Gummy for multi-platform
user interface designs: shape me, multiply me, fix me, use me. In Proceedings of
the working conference on Advanced visual interfaces, pages 233-240. ACM, 2008.

[49] M. Nebeling. Xdbrowser 2.0: Semi-automatic generation of cross-device interfaces.
In Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems,
CHI 17, pages 4574-4584, New York, NY, USA, 2017. ACM.

[50] M. Nebeling and A. K. Dey. Xdbrowser: User-defined cross-device web page
designs. In Proceedings of the 2016 CHI Conference on Human Factors in Computing
Systems, pages 5494-5505. ACM, 2016.

[51] M. Nebeling, T. Mintsi, M. Husmann, and M. Norrie. Interactive development of
cross-device user interfaces. In Proceedings of the 32nd annual ACM conference
on Human factors in computing systems, pages 2793-2802. ACM, 2014.

[52] T.-D. Nguyen, J. Vanderdonckt, and A. Seffah. Generative patterns for designing
multiple user interfaces. In 3rd IEEE/ACM International Conference on Mobile
Software Engineering and Systems MobileSoft’2016, 2016.

[53] J. Nichols, Z. Hua, and J. Barton. Highlight: a system for creating and deploying
mobile web applications. In Proceedings of the 21st annual ACM symposium on
User interface software and technology, pages 249-258. ACM, 2008.

[54] V. Ordonez, W. Liu, J. Deng, Y. Choi, A. C. Berg, and T. L. Berg. Learning to name
objects. Commun. ACM, 59(3):108-115, Feb. 2016.

[55] E. F. Oriana Riva, Suman Nath. Appstract: On-the-fly app content semantics with
better privacy. In ACM Mobicom. ACM, July 2016.

[56] Parallels. Parallels access. http://www.parallels.com/products/access/.

[57] D. E. Porter, S. Boyd-Wickizer, J. Howell, R. Olinsky, and G. Hunt. Rethinking
the library OS from the top down. In Proceedings of the ACM International
Conference on Architectural Support for Programming Languages and Operating
Systems (ASPLOS), pages 291-304, 2011.

[58] A.R. Puerta. A model-based interface development environment. IEEE Software,
14(4):40-47, 1997.

[59] Remote Desktop Protocol. https://en.wikipedia org/wiki/Remote_Desktop_
Protocol.

[60] T. Richardson, Q. Stafford-Fraser, K. Wood, and A. Hopper. Virtual network
computing. Internet Computing, IEEE, 2(1):33-38, Jan 1998.

[61] R. W. Scheifler and J. Gettys. The x window system. ACM Trans. Graph., 5(2):79109, Apr. 1986.

[62] B. K. Schmidt, M. S. Lam, and J. D. Northcutt. The interactive performance of
slim: A stateless, thin-client architecture. In Proceedings of the ACM SIGOPS
Symposium on Operating Systems Principles (SOSP), pages 32-47, 1999.

[63] A. Schulman, T. Thapliyal, S. Katti, N. Spring, D. Levin, and P. Dutta. Battor:
Plug-and-debug energy debugging for applications on smartphones and laptops.
Technical report, Stanford University, 2015.
[64] P. Szekely, P. Sukaviriya, P. Castells, J. Muthukumarasamy, and E. Salcher. Declarative interface models for user interface construction tools: the mastermind approach. In Engineering for Human-Computer Interaction, pages 120-150. Springer,
1996.

[65] D.S. Tan, B. Meyers, and M. Czerwinski. Wincuts: Manipulating arbitrary window
regions for more effective use of screen space. In CHI ’04 Extended Abstracts on
Human Factors in Computing Systems, CHI EA 04, pages 1525-1528, New York,
NY, USA, 2004. ACM.

[66] Teradici. | Pc-over-ip technology explained.
pcoip-technology.

http://www.teradici.com/

[67] UlAutomater Viewer. http://www.bdtool net/third/android-doc/web-docs/tools/
testing/testing_uihtml.

[68] A. Van’t Hof, H. Jamjoom, J. Nieh, and D. Williams. Flux: Multi-surface computing
in android. In Proceedings of the Tenth European Conference on Computer Systems,
EuroSys 15, pages 24:1—-24:17, New York, NY, USA, 2015. ACM.

[69] Systrace. https://developer.android.com/studio/profile/systrace-commandline.
html.

[70] J. Yang and D. Wigdor. Panelrama: Enabling easy specification of cross-device
web applications. In Proceedings of the SIGCHI Conference on Human Factors in
Computing Systems, CHI 14, pages 2783-2792, New York, NY, USA, 2014. ACM.