REFERENCES
[1] NetFilter SDK. http://netfiltersdk.com/.
[2] OpenSSL changelog. https://www.openssl.org/news/changelog.html.
[3] B. Anderson, S. Paul, and D. McGrew. Deciphering malware’s use of
TLS (without decryption). arXiv preprint arXiv:1607.01639, 2016.
[4] R. Arora and N. Aggarwal. Browserstack. https://browserstack.com.
[5] R. Barnes. Deprecating non-secure HTTP. Mozilla Security Blog. https://
blog.mozilla.org/security/2015/04/30/deprecating-non-secure-http/.
[6] R. Barnes. Man-in-the-middle interfering with increased security. Mozilla
Security Blog. https://blog.mozilla.org/security/2016/01/06/man-in-themiddle-interfering-with-increased-security/.
[7] H. Böck. Software Privdog worse than Superfish. https://blog.hboeck.de/
archives/865-Software-Privdog-worse-than-Superfish.html.
[8] H. Böck. Superfishy. https://github.com/hannob/superfishy.
[9] L. Brotherston. Stealthier attacks and smarter defending with TLS
fingerprinting. DerbyCon 2015.
[10] E. Bursztein. Speeding up and strengthening HTTPS connections for
Chrome on Android. https://security.googleblog.com/2014/04/speedingup-and-strengthening-https.html.
[11] Chromium.
IsSecureTLSCipherSuite function.
https://
chromium.googlesource.com/chromium/src/net/+/master/ssl/
ssl_cipher_suite_names.cc#373.
[12] X. de Carné de Carnavalet and M. Mannan. Killed by proxy: Analyzing
client-end TLS interception software. In Network and Distributed System
Security Symposium, 2016.
[13] Dell. Information on the eDellRoot and DSDTestProvider certificates.
http://www.dell.com/support/article/us/en/19/SLN300321.
[14] T. Dierks and E. Rescorla. Transport Layer Security (TLS) Protocol
Version 1.2. RFC 5246.
[15] W. Dormann. The risks of SSL inspection. https://insights.sei.cmu.edu/
cert/2015/03/the-risks-of-ssl-inspection.html.
[16] Z. Durumeric, D. Adrian, A. Mirian, M. Bailey, and J. A. Halderman.
Tracking the FREAK attack. https://freakattack.com/.
[17] Z. Durumeric, D. Adrian, A. Mirian, J. Kasten, E. Bursztein,
N. Lidzborski, K. Thomas, V. Eranti, M. Bailey, and J. A. Halderman.
Neither snow nor rain nor MITM...: An empirical analysis of email
delivery security. In ACM Internet Measurement Conference, 2015.

[18] P. Eckersley. How unique is your web browser? In Symposium on
Privacy Enhancing Technologies, 2010.
[19] C. Evans, C. Palmer, and R. Sleevi. Public key pinning extension for
HTTP. RFC 7469.
[20] S. Farrell and H. Tschofenig. Pervasive monitoring is an attack. RFC7258, 2014.
[21] M. Georgiev, S. Iyengar, S. Jana, R. Anubhai, D. Boneh, and
V. Shmatikov. The most dangerous code in the world: validating SSL
certificates in non-browser software. In ACM Conference on Computer
and Communications Security, 2012.
[22] Google. Certificate transparency in Chrome. https://www.certificatetransparency.org/certificate-transparency-in-chrome.
[23] Google. HTTPS as a ranking signal. https://webmasters.googleblog.com/
2014/08/https-as-ranking-signal.html.
[24] Google Chromium.
CRLSets.
https://dev.chromium.org/Home/
chromium-security/crlsets.
[25] J. Graham-Cumming. The two reasons to be an engineer at Cloudflare.
https://blog.cloudflare.com/the-two-reasons-to-work-for-cloudflare/.
[26] H. W. Group. Explicit trusted proxy in HTTP/2.0, 2014. https://
tools.ietf.org/html/draft-loreto-httpbis-trusted-proxy20-01.
[27] L. S. Huang, A. Rice, E. Ellingsen, and C. Jackson. Analyzing forged
SSL certificates in the wild. In IEEE Symposium on Security and Privacy
2014.
[28] M. Husák, M. Cermák, T. Jirsík, and P. Celeda. Network-based HTTPS
client identification using SSL/TLS fingerprinting, 2015.
[29] IANA. Transport layer security (TLS) extensions. http://www.iana.org/
assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml.
[30] IANA. Transport layer security (TLS) parameters. http://www.iana.org/
assignments/tls-parameters/tls-parameters.xhtml.
[31] A. Kirk. Web proxies, user-agent strings, and malware detection. http://
blog.talosintel.com/2012/11/web-proxies-user-agent-strings-and.html.
[32] Komodia. Redirector. http://www.komodia.com/products/komodiaredirector.
[33] C. Lan, J. Sherry, R. A. Popa, S. Ratnasamy, and Z. Liu. Embark:
securely outsourcing middleboxes to the cloud. In USENIX Symposium
on Networked Systems Design and Implementation, 2016.
[34] A. Langley. Public key pinning. https://www.imperialviolet.org/2011/
05/04/pinning.html.
[35] P. Lepeska. Comments on explicit/trusted proxy. https://www.ietf.org/
mail-archive/web/httpbisa/current/msg13124.html.
[36] M. Majkowski. SSL fingerprinting for p0f. https://idea.popcount.org/
2012-06-17-ssl-fingerprinting-for-p0f/.
[37] D. McGrew. Comments on explicit/trusted proxy. https://www.ietf.org/
mail-archive/web/tls/current/msg07815.html.
[38] D. McGrew, D. Wing, Y. Nir, and P. Gladstone. TLS proxy server extension, 2012. https://tools.ietf.org/html/draft-mcgrew-tls-proxy-server-01.
[39] Microsoft. Platform status. https://developer.microsoft.com/en-us/
microsoft-edge/platform/status/publickeypinningextensionforhttp.
[40] K. Mowery, D. Bogenreif, S. Yilek, and H. Shacham. Fingerprinting
information in JavaScript implementations. Web 2.0 Security & Privacy,
2011.
[41] Mozilla. Installing certificates into Firefox. https://wiki.mozilla.org/CA:
AddRootToFirefox.

[42] Mozilla. Network security services (NSS). https://developer.mozilla.org/
en-US/docs/Mozilla/Projects/NSS.
[43] Mozilla. Revoking intermediate certificates: Introducing OneCRL.
https://blog.mozilla.org/security/2015/03/03/revoking-intermediatecertificates-introducing-onecrl/.
[44] D. Naylor, K. Schomp, M. Varvello, I. Leontiadis, J. Blackburn, D. R.
López, K. Papagiannaki, P. Rodriguez Rodriguez, and P. Steenkiste.
Multi-context TLS (mcTLS): Enabling secure in-network functionality
in TLS. In ACM SIGCOMM Computer Communication Review, 2015.
[45] N. Nikiforakis, A. Kapravelos, W. Joosen, C. Kruegel, F. Piessens, and
G. Vigna. Cookieless monster: Exploring the ecosystem of web-based
device fingerprinting. In IEEE Symposium on Security and Privacy,
2013.
[46] M. O’Neill, S. Ruoti, K. Seamons, and D. Zappala. TLS proxies: Friend
or foe? In ACM Internet Measurement Conference, 2016.
[47] OPSWAT.
Antivirus and compromised device report: Janurary 2015. https://www.opswat.com/resources/reports/antivirus-andcompromised-device-january-2015.
[48] T. Ormandy.
Avast antivirus: X.509 error rendering command
execution. https://bugs.chromium.org/p/project-zero/issues/detail?id=
546&can=1&q=avast.
[49] V. Paxson. Bro: a system for detecting network intruders in real-time.
In 7th USENIX Security Symposium, 1998.
[50] A. Popov. Prohibiting RC4 cipher suites. RFC 7465.
[51] B. Riordan-Butterworth. Adopting encryption: The need for HTTPS.
http://www.iab.com/adopting-encryption-the-need-for-https/.
[52] I. Ristic. HTTP client fingerprinting using SSL handshake analysis. https://blog.ivanristic.com/2009/06/http-client-fingerprinting-usingssl-handshake-analysis.html.
[53] R. Seggelmann, M. Tuexen, and M. Williams. Transport layer security
(TLS) and datagram transport layer security (DTLS) heartbeat extension.
RFC 6520.
[54] J. Sherry, C. Lan, R. A. Popa, and S. Ratnasamy. Blindbox: Deep
packet inspection over encrypted traffic. In SIGCOMM Computer
Communication Review, 2015.
[55] Statista. Mobile phone internet user penetration in South Korea from
2014 to 2019, 2016. http://www.statista.com/statistics/284204/southkorea-mobile-phone-internet-user-penetration/.
[56] Symantec. Trojan.Nurjax. https://www.symantec.com/security_response/
writeup.jsp?docid=2014-121000-1027-99.
[57] U.S. Digital Analytics Program. The U.S. federal government’s web
traffic. https://analytics.usa.gov/.
[58] F. Valsorda. Komodia/superfish SSL validation is broken, February 2015.
https://blog.filippo.io/komodia-superfish-ssl-validation-is-broken/.
[59] M. Vanhoef and F. Piessens. All your biases belong to us: Breaking
RC4 in WPA-TKIP and TLS. In USENIX Security Symposium, 2015.
[60] N. Weaver, C. Kreibich, M. Dam, and V. Paxson. Here be web proxies. In
International Conference on Passive and Active Network Measurement,
2014.
[61] T.-F. Yen, Y. Xie, F. Yu, R. P. Yu, and M. Abadi. Host fingerprinting
and tracking on the web: Privacy and security implications. In Network
and Distributed System Security Symposium, 2012.
