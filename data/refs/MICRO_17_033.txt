[1] Jaume Abella, Antonio González, Xavier Vera, and Michael F. P.
O’Boyle. 2005. IATAC: a smart predictor to turn-o↵ L2 cache
lines. ACM Trans. Archit. Code Optim. 2, 1 (2005), 55–77.
https://doi.org/10.1145/1061267.1061271
[2] Nathan Beckmann and Daniel Sanchez. 2017. Maximizing Cache
Performance Under Uncertainty. In Proceedings of the 23rd international symposium on High Performance Computer Architecture (HPCA-23).
[3] László A. Bélády. 1966. A Study of Replacement Algorithms for
a Virtual-storage Computer. IBM Systems Journal 5, 2 (June
1966), 78–101.
[4] Brad Burgess. 2016. Samsung’s Exynos-M1 CPU. In Hot Chips: A
Symposium on High Performance Chips (Cupertino, California).
[5] Ryan R. Curtin, James R. Cline, Neil P. Slagle, William B. March,
P. Ram, Nishant A. Mehta, and Alexander G. Gray. 2013. MLPACK: A Scalable C++ Machine Learning Library. Journal of
Machine Learning Research 14 (2013), 801–805.
[6] Nam Duong, Dali Zhao, Taesu Kim, Rosario Cammarota, Mateo
Valero, and Alexander V. Veidenbaum. 2012. Improving Cache
Management Policies Using Dynamic Reuse Distances. In Proceedings of the 2012 45th Annual IEEE/ACM International
Symposium on Microarchitecture (MICRO ’12). IEEE Computer
Society, Washington, DC, USA, 389–400. https://doi.org/10.
1109/MICRO.2012.43
[7] Michael Ferdman, Almutaz Adileh, Onur Kocberber, Stavros
Volos, Mohammad Alisafaee, Djordje Jevdjic, Cansu Kaynak,
Adrian Daniel Popescu, Anastasia Ailamaki, and Babak Falsafi.
2012. Clearing the clouds: a study of emerging scale-out workloads
on modern hardware. In ACM SIGPLAN Notices, Vol. 47. ACM,
37–48.
[8] Agner Fog. 2014. The Microarchitecture of Intel, AMD, and VIA
CPUs. http://www.agner.org/optimize/microarchitecture.pdf.
(2014).
[9] Andrew Hilton, Neeraj Eswaran, and Amir Roth. 2009. FIESTA:
A Sample-Balanced Multi-Program Workload Methodology. In
Workshop on Modeling, Benchmarking and Simulation (MoBS)
(Austin, Texas).
[10] Zhigang Hu, Stefanos Kaxiras, and Margaret Martonosi. 2002.
Timekeeping in the memory system: predicting and optimizing
memory behavior. SIGARCH Comput. Archit. News 30, 2 (2002),
209–220. https://doi.org/10.1145/545214.545239
[11] Akanksha Jain and Calvin Lin. 2016. Back to the Future: Leveraging Belady’s Algorithm for Improved Cache Replacement. In
Proceedings of the 43rd ACM/IEEE International Symposium
on Computer Architecture (ISCA ’16). 78–89.
[12] Aamer Jaleel, Kevin Theobald, Simon Steely Jr., and Joel Emer.
2010. High Performance Cache Replacement Using Re-Reference
Interval Prediction (RRIP). In Proceedings of the 37th Annual
International Symposium on Computer Architecture (ISCA-37).
[13] Daniel A. Jiménez. 2013. Insertion and Promotion for Tree-based
PseudoLRU Last-level Caches. In Proceedings of the 46th Annual IEEE/ACM International Symposium on Microarchitecture
(MICRO-46). 284–296.
[14] Georgios Keramidas, Pavlos Petoumenos, and Stefanos Kaxiras.
2007. Cache Replacement Based on Reuse-Distance Prediction.
In In Proceedings of the 25th International Conference on Computer Design (ICCD-2007). 245–250.
[15] Samira M. Khan, Yingying Tian, and Daniel A. Jiménez. 2010.
Sampling Dead Block Prediction for Last-Level Caches. In MICRO. 175–186.

[16] Mazen Kharbutli and Yan Solihin. 2008. Counter-Based Cache
Replacement and Bypassing Algorithms. IEEE Trans. Comput.
57, 4 (2008), 433–447. https://doi.org/10.1109/TC.2007.70816
[17] An-Chow Lai and Babak Falsafi. 2000. Selective, accurate,
and timely self-invalidation using last-touch prediction. In International Symposium on Computer Architecture. 139 – 148.
https://doi.org/10.1109/ISCA.2000.854385
[18] An-Chow Lai, Cem Fide, and Babak Falsafi. 2001. Dead-block
prediction & dead-block correlating prefetchers. SIGARCH Comput. Archit. News 29, 2 (2001), 144–154. https://doi.org/10.
1145/384285.379259
[19] Haiming Liu, Michael Ferdman, Jaehyuk Huh, and Doug Burger.
2008. Cache bursts: A new approach for eliminating dead blocks
and increasing cache efficiency. In Proceedings of the IEEE/ACM
International Symposium on Microarchitecture. IEEE Computer
Society, Los Alamitos, CA, USA, 222–233. https://doi.org/10.
1109/MICRO.2008.4771793
[20] Pierre Michaud, André Seznec, and Richard Uhlig. 1997. Trading
Conflict and Capacity Aliasing in Conditional Branch Predictors. In Proceedings of the 24th International Symposium on
Computer Architecture. 292–303.
[21] Gennady Pekhimenko, Tyler Huberty, Rui Cai, Onur Mutlu,
Phillip B. Gibbons, Michael A. Kozuch, and Todd C. Mowry.
2015. Exploiting compressed block size as an indicator of future
reuse.. In HPCA. IEEE, 51–63.
[22] Erez Perelman, Greg Hamerly, Michael Van Biesbrouck, Timothy
Sherwood, and Brad Calder. 2003. Using SimPoint for accurate
and efficient simulation. SIGMETRICS Perform. Eval. Rev. 31,
1 (2003), 318–319. https://doi.org/10.1145/885651.781076
[23] Moinuddin K. Qureshi, Daniel N. Lynch, Onur Mutlu, and Yale N.
Patt. 2006. A Case for MLP-Aware Cache Replacement. In ISCA
’06: Proceedings of the 33rd annual international symposium
on Computer Architecture. IEEE Computer Society, Washington,
DC, USA, 167–178. https://doi.org/10.1109/ISCA.2006.5
[24] M. Shah, R. Golla, G. Grohoski, P. Jordan, J. Barreh, J. Brooks,
M. Greenberg, G. Levinsky, M. Luttrell, C. Olson, Z. Samoail, M.
Smittle, and T. Ziaja. 2012. Sparc T4: A Dynamically Threaded
Server-on-a-Chip. IEEE Micro 32, 2 (2012), 8–19.
[25] Stephen Somogyi, Thomas F. Wenisch, Nikolaos Hardavellas,
Jangwoo Kim, Anastassia Ailamaki, and Babak Falsafi. 2004.
Memory coherence activity prediction in commercial workloads.
In WMPI ’04: Proceedings of the 3rd workshop on Memory
performance issues. ACM, New York, NY, USA, 37–45. https:
//doi.org/10.1145/1054943.1054949
[26] David Tarjan, Kevin Skadron, and M. Stan. 2004. An Ahead
Pipelined Alloyed Perceptron with Single Cycle Access Time. In
Proceedings of the Workshop on Complexity E↵ective Design
(WCED).
[27] Elvira Teran, Yingying Tian, Zhe Wang, and Daniel A. Jiménez.
2016. Minimal Disturbance Placement and Promotion. In 2016
IEEE 22nd International Symposium on High Performance
Computer Architecture (HPCA).
[28] Elvira Teran, Zhe Wang, and Daniel A. Jiménez. 2016. Perceptron Learning for Reuse Prediction. In Proceedings of the
49th ACM/IEEE International Symposium on Microarchitecture (MICRO-49).
[29] Carole-Jean Wu, Aamer Jaleel, Will Hasenplaugh, Margaret
Martonosi, Jr. Simon C. Steely, and Joel Emer. 2011. SHiP:
Signature-based Hit Predictor for High Performance Caching. In
Proceedings of the 44th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO-44). ACM, New York,
NY, USA, 430–441.