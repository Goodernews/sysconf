[1] H. Alblas. Attribute evaluation methods. In H. Alblas
and B. Melichar, editors, Attribute Grammars, Applications
and Systems: International Summer School SAGA Prague,
Czechoslovakia, June 4-13, 1991 Proceedings, pages 48-113,
Berlin, Heidelberg, 1991. Springer Berlin Heidelberg. ISBN
978-3-540-38490-8. doi: 10.1007/3-540-54572-7_3. URL
http: //dx.doi.org/10.1007/3-540-54572-7_3.

[2] E. Bruneton, R. Lenglet, and T. Coupaye. Asm: a code
manipulation tool to implement adaptable systems. Adaptable
and extensible component systems, 30(19), 2002.

[3] D. Coutts, R. Leshchinskiy, and D. Stewart. Stream fusion: from lists to streams to nothing at all. In R. Hinze
and N. Ramsey, editors, Proceedings of the 12th ACM SIGPLAN International Conference on Functional Programming,
ICFP 2007, Freiburg, Germany, October 1-3, 2007, pages
315-326. ACM, 2007. ISBN 978-1-59593-815-2. doi:
10.1145/1291151.1291199. URL http://doi.acm.org/10.
1145/1291151.1291199.
[4] T. Ekman and G. Hedin. The JastAdd system -— modular
extensible compiler construction. Science of Computer Programming, 69(1):14—26, 2007.

[5] A. J. Gill. Cheap deforestation for non-strict functional languages. PhD thesis, University of Glasgow, UK, 1996. URL
http: //theses.gla.ac.uk/4817/.

[6] Intel Corporation. Intel 64 and IA-32 architectures optimization reference manual, 2016. URL http://www.intel.
com/content /dam/www/public/us/en/documents/manuals/
64-ia-32-architectures-optimization-manual . pdf.

[7] Y. Jo and M. Kulkarni. Enhancing locality for recursive traversals of recursive structures. In Proceedings of the 2011
ACM International Conference on Object Oriented Programming Systems Languages and Applications, OOPSLA ’11,
pages 463-482, New York, NY, USA, 2011. ACM. ISBN
978-1-4503-0940-0. doi: 10.1145/2048066.2048104. URL
http: //doi.acm.org/10.1145/2048066 . 2048104.

[8] Y. Jo and M. Kulkami. Automatically enhancing locality
for tree traversals with traversal splicing. In G. T. Leavens
and M. B. Dwyer, editors, Proceedings of the 27th Annual
ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2012,
part of SPLASH 2012, Tucson, AZ, USA, October 21-25, 2012,
pages 355-374. ACM, 2012. ISBN 978-1-4503-1561-6. doi:
10.1145/2384616.2384643. URL http://doi.acm.org/10.
1145/2384616 . 2384643.

[9] M. Jourdan. A survey of parallel attribute evaluation methods. In H. Alblas and B. Melichar, editors, Attribute
Grammars, Applications and Systems: International Summer
School SAGA Prague, Czechoslovakia, June 4-13, 1991 Proceedings, pages 234-255, Berlin, Heidelberg, 1991. Springer
Berlin Heidelberg. ISBN 978-3-540-38490-8. doi: 10.
1007/3-540-54572-7_9. URL http: //dx. doi .org/10.1007/
3-540- 54572-7_9.

[10] U. Kastens. Ordered attributed grammars. Acta Informatica, 13(3):229-256, 1980. ISSN 1432-0525. doi:
10.1007/BF00288644. URL http://dx.doi.org/10.1007/
BF00288644.

[11] U. Kastens. Implementation of visit-oriented attribute evaluators. In H. Alblas and B. Melichar, editors, Attribute
Grammars, Applications and Systems: International Summer
School SAGA Prague, Czechoslovakia, June 4-13, 1991 Proceedings, pages 114-139, Berlin, Heidelberg, 1991. Springer
Berlin Heidelberg. ISBN 978-3-540-38490-8. doi: 10.
1007/3-540-54572-7_4. URL http: //dx. doi .org/10.1007/
3-540- 54572-7_4.

[12] D. E. Knuth. Semantics of context-free languages. Mathematical systems theory, 2(2):127-145, 1968. ISSN 14330490. doi: 10.1007/BF01692511. URL http: //dx.doi.org/
10.1007 /BF01692511.

[13] G. Leontiev, E. Burmako, J. Zaugg, A. Moors, and P. Phillips.
Sip-23 - literal-based singleton types. https: //github.com/
scala/scala/pull1/4706, 2016. Accessed: 2016-10-24.

[14] M. Lepper and B. Trancén y Widemann. Optimization of visitor performance by reflection-based analysis. In J. Cabot and
E. Visser, editors, Theory and Practice of Model Transformations: 4th International Conference, ICMT 2011, Zurich,

Switzerland, June 27-28, 2011. Proceedings, pages 15-30,
Berlin, Heidelberg, 2011. Springer Berlin Heidelberg. ISBN
978-3-642-21732-6. doi: 10.1007/978-3-642-21732-6_2.
URL http: //dx. doi .org/10.1007/978-3-642-21732-6_2.

[15] P. Lewis, D. Rosenkrantz, and R. Stearns. Attributed
translations. Journal of Computer and System Sciences, 9(3):279 -— 307, 1974. ISSN 0022-0000. doi:
http://dx.doi.org/10.1016/S0022-0000(74)80045-0. URL
http: //www.sciencedirect .com/science/article/pii/
$0022000074800450.

[16] L. A. Meyerovich, M. E. Torok, E. Atkinson, and R. Bodik.
Parallel schedule synthesis for attribute grammars. In Proceedings of the 18th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, PPoPP °13,
pages 187-196, New York, NY, USA, 2013. ACM. ISBN
978-1-4503-1922-5. doi: 10.1145/2442516.2442535. URL
http: //doi.acm.org/10.1145/2442516 . 2442535.

[17] N. Nystrom, M. R. Clarkson, and A. C. Myers. Polyglot: An
extensible compiler framework for java. In G. Hedin, editor, Compiler Construction: 12th International Conference,
CC 2003 Held as Part of the Joint European Conferences
on Theory and Practice of Software, ETAPS 2003 Warsaw,
Poland, April 7-11, 2003 Proceedings, pages 138-152, Berlin, Heidelberg, 2003. Springer Berlin Heidelberg. ISBN
978-3-540-36579-2. doi: 10.1007/3-540-36579-6_11. URL
http: //dx.doi .org/10.1007/3-540-36579-6_11.

[18] M. Odersky. The Scala language specification v 2.11, 2016.
URL https: //web.archive.org/web/20160702192746/
http: //www.scala-lang.org/files/archive/spec/2.11/.

[19] B. C. Pierce. Programming with intersection types, union
types. Technical report, and polymorphism. Technical Report
CMU-CS-91-106, Carnegie Mellon University, 1991.

[20] S. Rajbhandari, J. Kim, S. Krishnamoorthy, L. Pouchet,
E Rastello, R. J. Harrison, and P. Sadayappan. A domainspecific compiler for a parallel multiresolution adaptive numerical simulation environment. In J. West and C. M. Pancake, editors, Proceedings of the International Conference
for High Performance Computing, Networking, Storage and
Analysis, SC 2016, Salt Lake City, UT, USA, November 1318, 2016, pages 40:1-40:12. ACM, 2016. ISBN 978-14673-8815-3. URL http://dl.acm.org/citation.cfm?id=
3014958.

[21] S. Rajbhandari, J. Kim, S. Krishnamoorthy, L.-N. Pouchet,
E Rastello, R. J. Harrison, and P. Sadayappan. On fusing
recursive traversals of K-d trees. In Proceedings of the 25th
International Conference on Compiler Construction, pages
152-162. ACM, 2016.

[22] H. Riis Nielson. Computation sequences: A way to characterize classes of attribute grammars. Acta Informatica, 19(3):
255-268, 1983. ISSN 1432-0525. doi: 10.1007/BF00265558.
URL http: //dx.doi.org/10.1007/BF00265558.

[23] D. Sarkar, O. Waddell, and R. K. Dybvig. Educational pearl:
A nanopass framework for compiler education. J. Funct.
Program., 15(5):653-667, 2005. URL http: //dx.doi.org/
10.1017 /S80956796805005605.

[24] P. Wadler. Deforestation: Transforming programs to eliminate
trees. Theoretical Computer Science, 73(2):231-248, 1990.
[25] Y. Weijiang, S. Balakrishna, J. Liu, and M. Kulkarni. Tree NY, USA, 2015. ACM. ISBN 978-1-4503-3468-6. doi:
dependence analysis. In Proceedings of the 36th ACM 10.1145/2737924.2737972. URL http://doi.acm.org/10.
SIGPLAN Conference on Programming Language Design 1145/2737924.2737972.
and Implementation, PLDI ’15, pages 314-325, New York, NY, USA, 2015. ACM. ISBN 978-1-4503-3468-6. doi: 10.1145/2737924.2737972. URLhttp://doi.acm.org/10. 1145/2737924.2737972.
