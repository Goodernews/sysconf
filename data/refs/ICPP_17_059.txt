[1] K. Bergman et al., “Exascale computing study: Technology challenges
in achieving exascale systems,” Defense Advanced Research Projects
Agency Information Processing Techniques Ofﬁce (DARPA IPTO),
Tech. Rep. TR-2008-13, 2008.
[2] S. Amarasinghe et al., “Exascale software study: Software challenges in
extreme scale systems,” DARPA IPTO, Air Force Research Labs, Tech.
Rep, Tech. Rep., 2009.
[3] C. Martino et al., “Lessons learned from the analysis of system failures
at petascale: The case of blue waters,” in DSN ’14, 2014.
[4] C. D. Martino et al., “Measuring and understanding extreme-scale
application resilience: A ﬁeld study of 5,000,000 hpc application runs,”
in DSN ’15, 2015.
[5] G. Lu et al., “When is multi-version checkpointing needed?” in FTXS
’13, 2013.
[6] F. Cappello et al., “Toward exascale resilience: 2014 update,” Supercomput. Front. Innov, 2014.
[7] M. Snir et al., “Addressing failures in exascale computing,” Int. J. High
Performance Computing Applications, 2014.
[8] F. Cappello, “Fault tolerance in petascale/exascale systems: Current
knowledge, challenges and research opportunities,” Int. J. High Performance Computing Applications, 2009.
[9] K.-H. Huang and J. Abraham, “Algorithm-based fault tolerance for
matrix operations,” IEEE Trans. Computers, 1984.
[10] Z. Chen, “Online-abft: An online algorithm based fault tolerance scheme
for soft error detection in iterative methods,” in PPoPP ’13, 2013.
[11] J. T. Daly, “A higher order estimate of the optimum checkpoint interval
for restart dumps,” Future Gener. Comput. Syst., 2006.
[12] G. Aupy, A. Benoit, T. Hérault, Y. Robert, F. Vivien, and D. Zaidouni,
“On the combination of silent error detection and checkpointing,” in
2013 IEEE 19th Paciﬁc Rim International Symposium on Dependable
Computing, Dec 2013, pp. 11–20.
[13] E. Gelenbe, “A model of roll-back recovery with multiple checkpoints,”
in Proc. 2nd Int. Conf. on Software Engineering, 1976.
[14] L. Bautista-Gomez et al., “Fti: High performance fault tolerance interface for hybrid systems,” in SC ’11, 2011.
[15] A. Moody et al., “Design, modeling, and evaluation of a scalable multilevel checkpointing system,” in SC ’10, 2010.
[16] M. Shantharam et al., “Fault tolerant preconditioned conjugate gradient
for sparse linear system solution,” in ICS ’12, 2012.
[17] P. Du et al., “Algorithm-based fault tolerance for dense matrix factorizations,” in PPoPP ’12, 2012.
[18] A. Chien, et al., “Versioned distributed arrays for resilience in scientiﬁc
applications: Global view resilience,” Procedia Computer Science, 2015.
[19] A. Chien et al., “Exploring versioned distributed arrays for resilience in
scientiﬁc applications: global view resilience,” Int. J. High Performance
Computing Applications, 2016.
[20] N. Dun et al., “Data decomposition in monte carlo neutron transport
simulations using global view arrays,” Int. J. High Performance Computing Applications, 2015.
[21] A. Fang and A. A. Chien, “Applying gvr to molecular dynamics:
Enabling resilience for scientiﬁc computations,” University of Chicago,
Tech. Rep. TR-2014-04, 2014.
[22] “Nersc cori,” https://www.nersc.gov/users/computational-systems/cori/.
[23] “Juqueen,” http://www.fz-juelich.de/ias/jsc/EN/Expertise/Supercomputers/
JUQUEEN/JUQUEEN_node.html.
[24] N. Dun et al., “Multi-versioning performance opportunities in bgas
system for resilience,” in Int. Conf. High Performance Computing.
Springer, 2016.
[25] K. Datta et al., “Optimization and performance modeling of stencil
computations on modern microprocessors,” SIAM Rev., 2009.
[26] J. F. Epperson, An introduction to numerical methods and analysis. John
Wiley & Sons, 2013.
[27] A. Fang et al., “Resilience for stencil computations with latent errors
(extended report),” INRIA, Research report RR-9042, 2017.
[28] M. Gamell et al., “Local recovery and failure masking for stencil-based
applications at extreme scales,” in SC ’15, 2015.
[29] K. Ferreira et al., “Evaluating the viability of process replication
reliability for exascale systems,” in SC’11, 2011.
[30] P. Colella et al., “Chombo software package for AMR applications
design document,” LBNL, Tech. Rep., 2009.
[31] E. Berrocal et al., “Lightweight silent data corruption detection based
on runtime data analysis for hpc applications,” in HPDC ’15, 2015.
[32] A. R. Benson et al., “Silent error detection in numerical time-stepping
schemes,” Int. J. High Performance Computing Applications, 2014.
[33] V. C. Sharma, G. Gopalakrishnan, and G. Bronevetsky, “Detecting soft
errors in stencil based computations,” Geophysics, 1983.
[34] A. Dubey et al., “Granularity and the cost of error recovery in resilient
amr scientiﬁc applications,” in SC ’16, 2016.
