[1] R. F. Freitas and W. W. Wilcke, “Storage-class memory: The next storage
system technology,” IBM Journal of Research and Development, vol. 52,
no. 4.5, pp. 439–447, 2008.
[2] T. Kawahara, “Scalable spin-transfer torque ram technology for normallyoﬀ computing,” IEEE Design & Test of Computers, no. 1, pp. 52–63,
2010.
[3] A. Akel, A. M. Caulﬁeld, T. I. Mollov, R. K. Gupta, and S. Swanson,
“Onyx: A prototype phase change memory storage array.” HotStorage,
vol. 1, p. 1, 2011.
[4] R. Fackenthal et al., “A 16gb reram with 200mb/s write and 1gb/s read
in 27nm technology, isscc tech,” 2014.
[5] F. Xu-Dong, T. Yu-Hua, and W. Jun-Jie, “Spice modeling of memristors
with multilevel resistance states,” Chinese Physics B, vol. 21, no. 9, p.
098901, 2012.
[6] I. Newsroom, “Intel and micron produce breakthrough memory technology, july 28, 2015.”
[7] S. Yu, N. Xiao, M. Deng, F. Liu, and W. Chen, “Redesign the memory
allocator for non-volatile main memory,” ACM Journal on Emerging
Technologies in Computing Systems (JETC), vol. 13, no. 3, p. 49, 2017.
[8] S. Venkataraman, N. Tolia, P. Ranganathan, R. H. Campbell et al.,
“Consistent and durable data structures for non-volatile byte-addressable
memory.” in FAST, vol. 11, 2011, pp. 61–75.
[9] R. H. Arpaci-Dusseau and A. C. Arpaci-Dusseau, Operating systems:
Three easy pieces. Arpaci-Dusseau Books Wisconsin, 2014, vol. 151.
[10] M. Cao, S. Bhattacharya, and T. Ts’o, “Ext4: The next generation of
ext2/3 ﬁlesystem.” in LSF, 2007.
[11] J. Bonwick and B. Moore, “Zfs: The last word in ﬁle systems,” Journal
of the Society of Powder Technology Japan, vol. 44, pp. 546–553, 2007.
[12] M. Rosenblum and J. K. Ousterhout, “The design and implementation of
a log-structured ﬁle system,” ACM Transactions on Computer Systems
(TOCS), vol. 10, no. 1, pp. 26–52, 1992.
[13] E. Kültürsay, M. Kandemir, A. Sivasubramaniam, and O. Mutlu,
“Evaluating stt-ram as an energy-eﬃcient main memory alternative,” in
Performance Analysis of Systems and Software (ISPASS), 2013 IEEE
International Symposium on. IEEE, 2013, pp. 256–267.
[14] B. C. Lee, E. Ipek, O. Mutlu, and D. Burger, “Architecting phase change
memory as a scalable dram alternative,” in ACM SIGARCH Computer
Architecture News, vol. 37, no. 3. ACM, 2009, pp. 2–13.
[15] A. Proctor, “Nv-dimm: Fastest tier in your storage strategy,” 2012.
[16] X. Dong, X. Wu, G. Sun, Y. Xie, H. Li, and Y. Chen, “Circuit and
microarchitecture evaluation of 3d stacking magnetic ram (mram) as a
universal memory replacement,” in Design Automation Conference, 2008.
DAC 2008. 45th ACM/IEEE. IEEE, 2008, pp. 554–559.
[17] J. Chen, Q. Wei, C. Chen, and L. Wu, “Fsmac: A ﬁle system metadata
accelerator with non-volatile memory,” in Mass Storage Systems and
Technologies (MSST), 2013 IEEE 29th Symposium on. IEEE, 2013, pp.
1–11.
[18] J. Condit, E. B. Nightingale, C. Frost, E. Ipek, B. Lee, D. Burger, and
D. Coetzee, “Better i/o through byte-addressable, persistent memory,” in
Proceedings of the ACM SIGOPS 22nd symposium on Operating systems
principles. ACM, 2009, pp. 133–146.
[19] J. Ou, J. Shu, and Y. Lu, “A high performance ﬁle system for non-volatile
main memory,” in Proceedings of the Eleventh European Conference on
Computer Systems. ACM, 2016, p. 12.
[20] K. Bhandari, D. R. Chakrabarti, and H.-J. Boehm, “Implications of
cpu caching on byte-addressable non-volatile memory programming,”
Hewlett-Packard, Tech. Rep. HPL-2012-236, 2012.
[21] I. Intel, “Intel-64 and ia-32 architectures software developer’s manual,”
Volume 3A: System Programming Guide, Part, vol. 1, no. 64, 2013.
[22] I. Cooperation, “Intel architecture instruction set extensions programming
reference,” 2016.
[23] S. R. Dulloor, S. Kumar, A. Keshavamurthy, P. Lantz, D. Reddy,
R. Sankaran, and J. Jackson, “System software for persistent memory,”
in Proceedings of the Ninth European Conference on Computer Systems.
ACM, 2014, p. 15.
[24] M. Wilcox, “Add support for nv-dimms to ext4.”
[25] D. S. Roselli, J. R. Lorch, T. E. Anderson et al., “A comparison of ﬁle
system workloads.” in USENIX annual technical conference, general
track, 2000, pp. 41–54.
[26] A. W. Leung, S. Pasupathy, G. R. Goodson, and E. L. Miller, “Measurement and analysis of large-scale network ﬁle system workloads.” in
USENIX annual technical conference, vol. 1, no. 2, 2008, pp. 2–5.
[27] D. Hitz, J. Lau, and M. A. Malcolm, “File system design for an nfs ﬁle
server appliance.” in USENIX winter, vol. 94, 1994.
[28] J. Xu and S. Swanson, “Nova: A log-structured ﬁle system for hybrid
volatile/non-volatile main memories.” in FAST, 2016, pp. 323–338.
[29] M. Rosenblum and J. K. Ousterhout, “The design and implementation of
a log-structured ﬁle system,” ACM Transactions on Computer Systems
(TOCS), vol. 10, no. 1, pp. 26–52, 1992.
[30] X. Wu and A. Reddy, “Scmfs: a ﬁle system for storage class memory,”
in Proceedings of 2011 International Conference for High Performance
Computing, Networking, Storage and Analysis. ACM, 2011, p. 39.
[31] Linux posix ﬁle system test suite. [Online]. Available: https:
//lwn.net/Articles/276617/
[32] A. Awad, S. Blagodurov, and Y. Solihin, “Write-aware management of
nvm-based memory extensions,” in Proceedings of the 2016 International
Conference on Supercomputing. ACM, 2016, p. 9.
[33] C. Lee, D. Sim, J. Y. Hwang, and S. Cho, “F2fs: A new ﬁle system for
ﬂash storage.” in FAST, 2015, pp. 273–286.
[34] B. A. Dhas, E. Zadok, J. Borden, and J. Malina, “Evaluation of nilfs2
for shingled magnetic recording (smr) disks,” Stony Brook Univ. and
Western Digital Corp., Stony Brook, NY, Tech. Rep. FSL-14-03, 2014.
[35] O. Rodeh, J. Bacik, and C. Mason, “Btrfs: The linux b-tree ﬁlesystem,”
ACM Transactions on Storage (TOS), vol. 9, no. 3, p. 9, 2013.
[36] Filebench ﬁle system benchmark. [Online]. Available: http://sourceforge.
net/projects/ﬁlebench
[37] Mobibench benchmark tool. [Online]. Available: http://www.mobibench.
co.kr/