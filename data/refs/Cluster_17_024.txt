[1] Apache Hadoop. http://hadoop.apache.org/ [Online; accessed
2-January-2017].

[2] Apache Spark. http://spark.apache.org/ [Online; accessed 2January-2017].

[3] M. Babaioff et al. ERA: A Framework for Economic Resource
Allocation for the Cloud. In: Proceedings of the 26th International Conference on World Wide Web Companion. International World Wide Web Conferences Steering Committee.
2017, pp. 635-642.

[4] A. Bhattacharya et al. Hierarchical scheduling for diverse
datacenter workloads. In: ACM SoCC. 2013.

[5] F. Bonomi et al. Fog computing and its role in the internet
of things. In: Proceedings of the first edition of the MCC
workshop on Mobile cloud computing. ACM. 2012, pp. 13-16.

[6] YARN Capacity Scheduler. https://hadoop.apache.org/docs/r2.
7. 1/hadoop-yarn/hadoop- yarn- site/CapacityScheduler-html.

[7] Y. Chen, S. Alspaugh, and R. Katz. Interactive analytical
processing in big data systems: A cross-industry study of
mapreduce workloads. In: VEDB 5.12 (2012), pp. 1802-1813.

[8] C. Curino et al. Reservation-based Scheduling: If You’re Late
Don’t Blame Us! In: ACM Symposium on Cloud Computing.
2014, pp. 1-14.

[9] C. Delimitrou and C. Kozyrakis. Quasar: resource-efficient and
QoS-aware cluster management. In: ACM SIGPLAN Notices
49.4 (2014), pp. 127-144.

[10] J. Dhok, N. Maheshwari, and V. Varma. Learning based.
opportunistic admission control algorithm for MapReduce as
a service. In: India software engineering conference. ACM.
2010, pp. 153-160.

[11] S. Dimopoulos, C. Krintz, and R. Wolski. Big Data Framework
Interference In Restricted Private Cloud Settings. In: IEEE
International Conference on Big Data. IEEE. 2016.

[12] S. Dimopoulos, C. Krintz, and R. Wolski. PYTHIA: Admission Control for Multi-Framework, Deadline-Driven, Big Data
Workloads. In: International Conference on Cloud Computing.
IEEE. 2017.

[13] K. Doka et al. Mix’n’Match Multi-Engine Analytics. In: IEEE
International Conference on Big Data. IEEE. 2016.

[14] A. R. Elias et al. Where is The Bear?-Automating Wildlife
Image Processing Using IoT and Edge Cloud Systems. In:
ACM Conference on IoT Design and Implementation. ACM.
2017.

[15] YARN Fair Scheduler. https://hadoop.apache.org/docs/r2.4.1/
hadoop-yarn/hadoop- yarn-site/FairScheduler.html.

[16] H. Feng, V. Misra, and D. Rubenstein. PBS: a unified prioritybased scheduler. In: ACM SIGMETRICS Performance Evaluation Review. Vol. 35. 1. ACM. 2007, pp. 203-214.

[17] A. D. Ferguson et al. Jockey: guaranteed job latency in data
parallel clusters. In: ACM European Conference on Computer
Systems. ACM. 2012, pp. 99-112.

[18] E. Friedman, A. Ghodsi, and C.-A. Psomas. Strategyproof
allocation of discrete jobs on multiple machines. In: ACM EC.
2014.

[19] P. Garcia Lopez et al. Edge-centric computing: Vision and
challenges. In: ACM SIGCOMM Computer Communication
Review 45.5 (2015), pp. 37-42.

[20] A. Ghodsi et al. Dominant resource fairness: Fair allocation of
multiple resource types. In: NSDI. 2011.

[21] I. Gog et al. Musketeer: all for one, one for all in data
processing systems. In: European Conference on Computer
Systems. 2015.

[22] R. Grand et al. Altruistic scheduling in multi-resource clusters.
In: USENIX Symposium on Operating Systems Design and
Implementation. 2016.

[23] H. Herodotou and S. Babu. Profiling, what-if analysis, and
cost-based optimization of mapreduce programs. In: VLDB
4.11 (2011), pp. 1111-1122.

[24] B. Hindman et al. Mesos: A Platform for Fine-Grained Resource Sharing in the Data Center. In: NSDI. 2011, pp. 22-22.
[25] M. Hu et al. Deadline-Oriented Task Scheduling for MapReduce Environments. In: International Conference on Algorithms and Architectures for Parallel Processing. Springer.
2015, pp. 359-372.

[26] Z. Huang et al. RUSH: A RobUst ScHeduler to Manage Uncertain Completion-Times in Shared Clouds. In: 20/6 IEEE 36th
International Conference on Distributed Computing Systems
(ICDCS). TEEE. 2016, pp. 242-251.

[27] M. Islam et al. Towards provision of quality of service guarantees in job scheduling. In: [EEE International Conference
Cluster Computing. TEEE. 2004.

[28] R. Jain, D.-M. Chiu, and W. R. Hawe. A quantitative measure
of fairness and discrimination for resource allocation in shared
computer system. Vol. 38. Eastern Research Laboratory, Digital
Equipment Corporation Hudson, MA, 1984.

[29] V. Jalaparti et al. Bridging the tenant-provider gap in cloud
services. In: ACM Symposium on Cloud Computing. 2012.

[30] S. A. Jyothi et al. Morpheus: towards automated SLOs for
enterprise clusters. In: Proceedings of OSDI’16: 12th USENIX
Symposium on Operating Systems Design and Implementation.
2016, p. 117.

[31] P. Lama and X. Zhou. Aroma: Automated resource allocation
and configuration of mapreduce environment in the cloud.
In: ACM International Conference on Autonomic Computing.
2012, pp. 63-72.

[32] J. Liu, H. Shen, and H. $. Narman. CCRP: Customized Cooperative Resource Provisioning for High Resource Utilization
in Clouds. In: IEEE International Conference on Big Data.
IEEE, 2016.

[33] Moab Workload Manager. https://en. wikipedia. org / wiki/
Moab_Cluster_Suite.

[34] Open Lava Workload Manager. http://www.openlava.org/.

[35] A. Pavlo et al. A comparison of approaches to large-scale
data analysis. In: ACM SIGMOD International Conference on
Management of data. 2009, pp. 165-178.

[36] J. Polo et al. Performance-driven Task Co-Scheduling for
MapReduce Environments. In: IEEE Network Operations and
Management Symposium. 2010, pp. 373-380.

[37] K. Ren et al. Hadoop’s Adolescence; A Comparative Workloads Analysis from Three Research Clusters. In: SC Companion. 2012.

[38] S. Sidhanta, W. Golab, and S. Mukhopadhyay. OptEx: A
Deadline-Aware Cost Optimization Model for Spark. In: arXiv
preprint arXiv: 1603.07936 (2016).

[39] A. Simitsis et al. Optimizing analytic data flows for multiple
execution engines. In: ACM SIGMOD International Conference on Management of Data. 2012, pp. 829-840.

[40] Simpy. https://simpy.readthedocs.io/en/latest/.

[41] J. Tan et al. Multi-resource fair sharing for multiclass workflows. In: ACM SIGMETRICS Performance Evaluation Review
42.4 (2015).

[42] F. Tian and K. Chen. Towards optimal resource provisioning
for running mapreduce programs in public clouds. In: Cloud
Computing (CLOUD), 2011 IEEE International Conference
on. TEEE. 2011, pp. 155-162.

[43] A. Tumanov et al. TetriSched: global rescheduling with adaptive plan-ahead in dynamic heterogeneous clusters. In: European Conference on Computer Systems. 2016, p. 35.

[44] V. K. Vavilapalli et al. Apache hadoop yarn: Yet another
resource negotiator. In: ACM Symposium on Cloud Computing.
2013.

[45] S. Venkataraman et al. Ernest: efficient performance prediction
for large-scale advanced analytics. In: 13th USENIX Symposium on Networked Systems Design and Implementation (NSDI
16). 2016, pp. 363-378.

[46] T. Verbelen et al. Cloudlets: bringing the cloud to the mobile
user. In: ACM workshop on Mobile cloud computing and
services. ACM. 2012.

[47] A. Verma, L. Cherkasova, and R. H. Campbell. ARIA: automatic resource inference and allocation for mapreduce environments. In: ACM International Conference on Autonomic
Computing. 2011, pp. 235-244.

[48] A. Verma et al. Deadline-based workload management for
MapReduce environments: Pieces of the performance puzzle.
In: 2012 IEEE Network Operations and Management Symposium. TEEE. 2012, pp. 900-905.

[49] K. Wang and M. M. H. Khan. Performance Prediction for
Apache Spark Platform. In: 2015 IEEE 17th International Conference on High Performance Computing and Communications
(HPCC). IEEE. 2015, pp. 166-173.

[50] W. Wang, B. Liang, and B. Li. Multi-resource fair allocation
in heterogeneous cloud computing systems. In: JEEE Trans.
Parallel Distrib. Syst. 26.10 (2015).

[51] Welch’s T-Test. https://en. wikipedia.org/wiki/Welch’ s_t- test
[Online; accessed 22-July-2017]. URL: https://en. wikipedia.
org/wiki/Welch’ s_t-test.

[52] L. Wu, S. K. Garg, and R. Buyya. SLA-based admission control for a Software-as-a-Service provider in Cloud computing
environments. In: Journal of Computer and System Sciences
78.5 (2012), pp. 1280-1299.

[53] Y. Yao et al. Admission control in YARN clusters based on dynamic resource reservation. In: IEEE International Symposium
on Integrated Network Management. 2015, pp. 838-841.

[54] A. B. Yoo, M. A. Jette, and M. Grondona. Slurm: Simple
linux utility for resource management. In: Workshop on Job
Scheduling Strategies for Parallel Processing. Springer. 2003,
pp. 44-60.

[55] N. Zaheilas and V. Kalogeraki. Real-time scheduling of skewed.
mapreduce jobs in heterogeneous environments. In: /1th International Conference on Autonomic Computing (ICAC 14).
2014, pp. 189-200.

[56] W. Zhang et al. Mimp: Deadline and interference aware
scheduling of hadoop virtual machines. In: IEEE Cluster,
Cloud and Grid Computing. 2014, pp. 394-403.

[57] Z. Zhang et al. Automated profiling and resource management of pig programs for meeting service level objectives.
In: ACM International Conference on Autonomic computing.
2012, pp. 53-62.