[1] [n. d.]. Apache Hadoop. ([n. d.]). http://hadoop.apache.org.
[2] [n. d.]. Apache Hive. ([n. d.]). http://hive.apache.org.
[3] [n. d.]. Apache Spark. ([n. d.]). http://spark.apache.org.
[4] [n. d.]. CoFlow trace from Facebook datacenter. ([n. d.]). https://github.com/
coflow/coflow-benchmark.
[5] [n. d.]. Microsoft Azure. ([n. d.]). http://azure.microsoft.com.
[6] [n. d.]. Open-sourced Aalo Simulator. ([n. d.]). https://github.com/coflow/
coflowsim.
[7] Mohammad Al-Fares, Sivasankar Radhakrishnan, Barath Raghavan, Nelson
Huang, and Amin Vahdat. 2010. Hedera: Dynamic Flow Scheduling for Data
Center Networks. In NSDI.
[8] Mohammad Alizadeh, Shuang Yang, Milad Sharif, Sachin Katti, Nick McKeown, Balaji Prabhakar, and Scott Shenker. 2013. pFabric: Minimal Near-optimal
Datacenter Transport. In ACM SIGCOMM.
[9] Ganesh Ananthanarayanan, Ali Ghodsi, Andrew Wang, Dhruba Borthakur,
Srikanth Kandula, Scott Shenker, and Ion Stoica. 2012. PACMan: Coordinated
Memory Caching for Parallel Jobs. In NSDI’12.
[10] Ganesh Ananthanarayanan, Srikanth Kandula, Albert Greenberg, Ion Stoica, Yi
Lu, Bikas Saha, and Edward Harris. 2010. Reining in the Outliers in Map-reduce
Clusters Using Mantri. In OSDI.
[11] Wei Bai, Li Chen, Kai Chen, Dongsu Han, Chen Tian, and Weicheng Sun. 2014.
PIAS: Practical Information-Agnostic Flow Scheduling for Data Center Networks.
In ACM HotNets.
[12] Theophilus Benson, Ashok Anand, Aditya Akella, and Ming Zhang. 2011. MicroTE: Fine Grained Traffic Engineering for Data Centers. In CoNEXT.
[13] Mosharaf Chowdhury and Ion Stoica. 2012. Coflow: A Networking Abstraction
for Cluster Applications. In HotNets-XI.
[14] Mosharaf Chowdhury and Ion Stoica. 2015. Efficient Coflow Scheduling Without
Prior Knowledge. In ACM SIGCOMM.
[15] Mosharaf Chowdhury, Matei Zaharia, Justin Ma, Michael I. Jordan, and Ion Stoica.
2011. Managing Data Transfers in Computer Clusters with Orchestra. In ACM
SIGCOMM.
[16] Mosharaf Chowdhury, Yuan Zhong, and Ion Stoica. 2014. Efficient Coflow
Scheduling with Varys. In ACM SIGCOMM.
[17] Edward G. Coffman and Leonard Kleinrock. 1968. Feedback Queueing Models
for Time-Shared Systems. J. ACM 15, 4 (Oct. 1968), 549–576. https://doi.org/10.
1145/321479.321483
[18] Fernando J. Corbató, Marjorie Merwin-Daggett, and Robert C. Daley. 1962. An
Experimental Time-sharing System. In Proceedings of the May 1-3, 1962, Spring
Joint Computer Conference (AIEE-IRE ’62 (Spring)). ACM, New York, NY, USA,
335–344. https://doi.org/10.1145/1460833.1460871
[19] Fahad R. Dogar, Thomas Karagiannis, Hitesh Ballani, and Antony Rowstron.
2014. Decentralized Task-aware Scheduling for Data Center Networks. In ACM
SIGCOMM.
[20] Dror G. Feitelson and Morris A. Jettee. 2005. Improved Utilization and Responsiveness with Gang Scheduling. In Job Scheduling Strategies for Parallel Processing.
[21] S. Gupta, V. Chandramouli, and S. Chakrabarti. 2013. Web-scale entity annotation
using MapReduce. In High Performance Computing.
[22] Chi-Yao Hong, Matthew Caesar, and P. Brighten Godfrey. 2012. Finishing Flows
Quickly with Preemptive Scheduling. ACM SIGCOMM (2012).
[23] Akshay Jajoo, Rohan Gandhi, and Y. Charlie Hu. 2016. Graviton: Twisting Space
and Time to Speed-up CoFlows. In USENIX HotCloud.
[24] Yoongu Kim, Dongsu Han, O. Mutlu, and M. Harchol-Balter. 2010. ATLAS:
A scalable and high-performance scheduling algorithm for multiple memory
controllers. In High Performance Computer Architecture (HPCA), 2010 IEEE
16th International Symposium on.
[25] Gautam Kumar, Ganesh Ananthanarayanan, Sylvia Ratnasamy, and Ion Stoica.
2016. Hold ’Em or Fold ’Em?: Aggregation Queries Under Performance Variations. In EuroSys.
[26] David A. Lifka. 1998. The ANL/IBM SP Scheduling System. In IPPS.
[27] Masoud Moshref, Minlan Yu, Abhishek Sharma, and Ramesh Govindan. 2013.
Scalable rule management for data centers. In NSDI.
[28] Misja Nuyens and Adam Wierman. 2008. The Foreground-Background Queue: A
Survey. Perform. Eval. 65, 3-4 (March 2008), 286–307. https://doi.org/10.1016/j.
peva.2007.06.028
[29] Jonathan Perry, Amy Ousterhout, Hari Balakrishnan, Devavrat Shah, and Hans
Fugal. 2014. Fastpass: A Centralized "Zero-queue" Datacenter Network. In ACM
SIGCOMM.
[30] Zhen Qiu, Cliff Stein, and Yuan Zhong. 2015. Minimizing the total weighted
completion time of coflows in datacenter networks. In SPAA.
[31] Idris A. Rai, Guillaume Urvoy-Keller, and Ernst W. Biersack. 2003. Analysis of
LAS Scheduling for Job Size Distributions with High Variance. In Proceedings
of the 2003 ACM SIGMETRICS International Conference on Measurement and
Modeling of Computer Systems (SIGMETRICS ’03). ACM, New York, NY, USA,
218–228. https://doi.org/10.1145/781027.781055
[32] Uwe Schwiegelshohn and Ramin Yahyapour. 1998. Analysis of First-come-firstserve Parallel Job Scheduling. In SODA.
[33] Aleksandar Vitorovic, Mohammed Elseidy, Khayyam Guliyev, et al. 2016. Squall:
Scalable Real-time Analytics. In EPFL Technical report, EPFL-REPORT-217286.
[34] Di Xie, Ning Ding, Y. Charlie Hu, and Ramana Kompella. 2012. The Only
Constant is Change: Incorporating Time-varying Network Reservations in Data
Centers. In ACM SIGCOMM.
[35] Hong Zhang, Li Chen, Bairen Yi, Kai Chen, Mosharaf Chowdhury, and Yanhui
Geng. 2015. CODA: Toward Automatically Identifying and Scheduling Coflows
in the Dark. In ACM SIGCOMM.