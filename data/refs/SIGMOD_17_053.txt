[1] Amazon S3. https://aws.amazon.com/s3.
[2] Apache HBase. http://hbase.apache.org/.
[3] Apache Spark. http://spark.apache.org/.
[4] Graph500 benchmark. http://www.graph500.org/.
[5] Hadoop implementation of RMAT-WES/P.

https://github.com/paulmw/rmat.

[6] Human Connectome Project.

http://www.humanconnectomeproject.org/.

[7] Rich Data and the Increasing Value of the Internet of Things.
http://www.emc.com/leadership/digital-universe/2014iview/
internet-of-things.htm.

[8] Stanford Network Analysis Project. http://snap.stanford.edu/.
[9] G. Aluç, O. Hartig, M. T. Özsu, and K. Daudjee. Diversiﬁed

stress testing of RDF data management systems. In
International Semantic Web Conference, pages 197–212.
Springer, 2014.

[10] G. Bagan, A. Bonifati, R. Ciucanu, G. H. Fletcher,

A. Lemay, and N. Advokaat. gMark: schema-driven
generation of graphs and queries. IEEE Transactions on
Knowledge and Data Engineering, 2016.

[11] A.-L. Barabási and R. Albert. Emergence of scaling in
random networks. science, 286(5439):509–512, 1999.

[12] D. Borthakur. The Hadoop distributed ﬁle system:
Architecture and design. Hadoop Project Website,
11(2007):21, 2007.

[13] U. K. ByungSoo Jeon, Inah jeon. TeGViz: Distributed

Tera-Scale Graph Generation and Visualization. In ICDM,
2015.

[14] D. Chakrabarti, Y. Zhan, and C. Faloutsos. R-MAT: A

Recursive Model for Graph Mining. In SDM, volume 4,
pages 442–446. SIAM, 2004.

[15] F. Checconi and F. Petrini. Traversing trillions of edges in

real time: Graph exploration on large-scale parallel
machines. In Parallel and Distributed Processing
Symposium, 2014 IEEE 28th International, pages 425–434.
IEEE, 2014.

[16] A. Ching, S. Edunov, M. Kabiljo, D. Logothetis, and

S. Muthukrishnan. One trillion edges: graph processing at
Facebook-scale. VLDB, 8(12):1804–1815, 2015.

[17] C. Curino, E. Jones, Y. Zhang, and S. Madden. Schism: a

workload-driven approach to database replication and
partitioning. Proceedings of the VLDB Endowment,
3(1-2):48–57, 2010.

[18] C. Dobre and F. Xhafa. Intelligent services for big data

science. Future Generation Computer Systems, 37:267–281,
2014.

[19] P. Erd˝os and A. Rényi. On random graphs. Publicationes

Mathematicae Debrecen, 6:290–297, 1959.

[20] O. Erling, A. Averbuch, J. Larriba-Pey, H. Chaﬁ,

A. Gubichev, A. Prat, M.-D. Pham, and P. Boncz. The LDBC
social network benchmark: Interactive workload. In
Proceedings of the 2015 ACM SIGMOD International
Conference on Management of Data, pages 619–630. ACM,
2015.

[21] E. N. Gilbert. Random graphs. The Annals of Mathematical

Statistics, 30(4):1141–1144, 1959.

[22] J. E. Gonzalez, R. S. Xin, A. Dave, D. Crankshaw, M. J.
Franklin, and I. Stoica. GraphX: Graph processing in a
distributed dataﬂow framework. In OSDI, pages 599–613,
2014.

[23] A. Hadian, S. Nobari, B. Minaei-Bidgoli, and Q. Qu. ROLL:

Fast In-Memory Generation of Gigantic Scale-free
Networks. In Proceedings of the 2016 International
Conference on Management of Data, pages 1829–1842.
ACM, 2016.

[24] A. Iosup, T. Hegeman, W. L. Ngai, S. Heldens,

A. Prat-Pérez, T. Manhardto, H. Chaﬁo, M. Capot˘a,
N. Sundaram, M. Anderson, et al. LDBC graphalytics: A
benchmark for large-scale graph analysis on parallel and
distributed platforms. volume 9, pages 1317–1328. VLDB
Endowment, 2016.

[25] M.-S. Kim, K. An, H. Park, H. Seo, and J. Kim. GTS: A Fast
and Scalable Graph Processing Method based on Streaming
Topology to GPUs. In Proceedings of the 2016 International
Conference on Management of Data, pages 447–461. ACM,
2016.

[26] P. Kumar and H. H. Huang. G-store: high-performance graph

store for trillion-edge processing. In Proceedings of the
International Conference for High Performance Computing,
Networking, Storage and Analysis, page 71. IEEE Press,
2016.

[27] J. Leskovec, D. Chakrabarti, J. Kleinberg, and C. Faloutsos.

Realistic, mathematically tractable graph generation and
evolution, using Kronecker multiplication. In PKDD, pages
133–145. Springer, 2005.

[28] J. Leskovec, D. Chakrabarti, J. Kleinberg, C. Faloutsos, and
Z. Ghahramani. Kronecker graphs: An approach to modeling
networks. JMLR, 11:985–1042, 2010.

[29] J. Lothian, S. Powers, B. D. Sullivan, M. Baker, J. Schrock,

and S. W. Poole. Synthetic Graph Generation for
Data-Intensive HPC Benchmarking: Background and
Framework. 2013.

[30] A. Pavlo, C. Curino, and S. Zdonik. Skew-aware automatic

database partitioning in shared-nothing, parallel OLTP
systems. In Proceedings of the 2012 ACM SIGMOD
International Conference on Management of Data, pages
61–72. ACM, 2012.

[31] M.-D. Pham, P. Boncz, and O. Erling. S3G2: A scalable
structure-correlated social graph generator. In Technology
Conference on Performance Evaluation and Benchmarking,
pages 156–172. Springer, 2012.

[32] A. Quamar, K. A. Kumar, and A. Deshpande. SWORD:

scalable workload-aware data placement for transactional
workloads. In Proceedings of the 16th International
Conference on Extending Database Technology, pages
430–441. ACM, 2013.

[33] A. Roy, L. Bindschaedler, J. Malicevic, and W. Zwaenepoel.
Chaos: Scale-out graph processing from secondary storage.
In Proceedings of the 25th Symposium on Operating Systems
Principles, pages 410–424. ACM, 2015.

[34] M. Schmidt, T. Hornung, G. Lausen, and C. Pinkel.

SP2Bench: a SPARQL performance benchmark. In Data
Engineering, 2009. ICDE’09. IEEE 25th International
Conference on, pages 222–233. IEEE, 2009.

[35] C. Seshadhri, A. Pinar, and T. G. Kolda. An in-depth study of

stochastic Kronecker graphs. In ICDM, pages 587–596.
IEEE, 2011.

[36] K. Shvachko, H. Kuang, S. Radia, and R. Chansler. The

Hadoop distributed ﬁle system. In MSST, pages 1–10. IEEE,
2010.

[37] C. L. Staudt, A. Sazonovs, and H. Meyerhenke. Networkit:

925An interactive tool suite for high-performance network
analysis. arXiv preprint arXiv:1403.3005, 2014.

[38] M. Wu, F. Yang, J. Xue, W. Xiao, Y. Miao, L. Wei, H. Lin,
Y. Dai, and L. Zhou. G ra M: scaling graph computation to
the trillions. In Proceedings of the Sixth ACM Symposium on
Cloud Computing, pages 408–421. ACM, 2015.

[39] J. Zhang and Y. Tay. GSCALER: Synthetically scaling a

given graph. In EDBT, pages 53–64, 2016.

[40] G. K. Zipf. Human behavior and the principle of least effort:

An introduction to human ecology. 2016.

