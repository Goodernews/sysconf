[1] Martin S Alnæs, Anders Logg, Kristian B Ølgaard, Marie E Rognes, and Garth N
Wells. 2014. Unified form language: A domain-specific language for weak formulations of partial differential equations. ACM Transactions on Mathematical
Software (TOMS) 40, 2 (2014), 9.
[2] Patrick R Amestoy, Iain S Duff, and J-Y L’Excellent. 2000. Multifrontal parallel
distributed symmetric and unsymmetric solvers. Computer methods in applied
mechanics and engineering 184, 2 (2000), 501–520.
[3] Patrick R Amestoy, Iain S Duff, Jean-Yves L’Excellent, and Jacko Koster. 2001. A
fully asynchronous multifrontal solver using distributed dynamic scheduling.
SIAM J. Matrix Anal. Appl. 23, 1 (2001), 15–41.
[4] Patrick R Amestoy, Abdou Guermouche, Jean-Yves LâĂŹExcellent, and Stéphane
Pralet. 2006. Hybrid scheduling for the parallel solution of linear systems. Parallel
computing 32, 2 (2006), 136–156.
[5] Corinne Ancourt and François Irigoin. 1991. Scanning polyhedra with DO loops.
In ACM Sigplan Notices, Vol. 26. ACM, 39–50.
[6] Cleve Ashcraft and Roger G Grimes. 1999. SPOOLES: An Object-Oriented Sparse
Matrix Library.. In PPSC.
[7] Yunfei Bai, M. Danny Kaufman, C. Karen Liu, and Jovan PopoviÄĞ. 2016. Artisticdynamics for 2D animation. In ACM Transactions on Graphics (SIGGRAPH 2016).
[8] Michele Benzi, Jane K Cullum, and Miroslav Tuma. 2000. Robust approximate
inverse preconditioning for the conjugate gradient method. SIAM Journal on
Scientific Computing 22, 4 (2000), 1318–1332.
[9] Gilbert Louis Bernstein, Chinmayee Shah, Crystal Lemire, Zachary Devito,
Matthew Fisher, Philip Levis, and Pat Hanrahan. 2016. Ebb: A DSL for Physical
Simulation on CPUs and GPUs. ACM Trans. Graph. 35, 2, Article 21 (May 2016),
12 pages. DOI:https://doi.org/10.1145/2892632
[10] Chun Chen. 2012. Polyhedra scanning revisited. ACM SIGPLAN Notices 47, 6
(2012), 499–508.
[11] Yanqing Chen, Timothy A Davis, William W Hager, and Sivasankaran Rajamanickam. 2008. Algorithm 887: CHOLMOD, supernodal sparse Cholesky factorization and update/downdate. ACM Transactions on Mathematical Software (TOMS)
35, 3 (2008), 22.
[12] Timothy A Davis. 2004. Algorithm 832: UMFPACK V4. 3—an unsymmetricpattern multifrontal method. ACM Transactions on Mathematical Software (TOMS)
30, 2 (2004), 196–199.
[13] Timothy A Davis. 2005. Algorithm 849: A concise sparse Cholesky factorization
package. ACM Transactions on Mathematical Software (TOMS) 31, 4 (2005), 587–
591.
[14] Timothy A Davis. 2006. Direct methods for sparse linear systems. Vol. 2. Siam.
[15] Timothy A Davis. 2011. Algorithm 915, SuiteSparseQR: Multifrontal multithreaded rank-revealing sparse QR factorization. ACM Transactions on Mathematical Software (TOMS) 38, 1 (2011), 8.
[16] Timothy A Davis. 2013. Algorithm 930: FACTORIZE: An object-oriented linear
system solver for MATLAB. ACM Transactions on Mathematical Software (TOMS)
39, 4 (2013), 28.
[17] Timothy A Davis and William W Hager. 2005. Row modifications of a sparse
Cholesky factorization. SIAM J. Matrix Anal. Appl. 26, 3 (2005), 621–639.
[18] Timothy A Davis and William W Hager. 2009. Dynamic supernodes in sparse
Cholesky update/downdate and triangular solves. ACM Transactions on Mathematical Software (TOMS) 35, 4 (2009), 27.
[19] Timothy A Davis and Yifan Hu. 2011. The University of Florida sparse matrix
collection. ACM Transactions on Mathematical Software (TOMS) 38, 1 (2011), 1.
[20] Timothy A Davis and Ekanathan Palamadai Natarajan. 2010. Algorithm 907:
KLU, a direct sparse solver for circuit simulation problems. ACM Transactions
on Mathematical Software (TOMS) 37, 3 (2010), 36.
[21] Ailson P de Moura and Adriano Aron F de Moura. 2013. Newton–Raphson power
flow with constant matrices: a comparison with decoupled power flow methods.
International Journal of Electrical Power & Energy Systems 46 (2013), 108–114.
[22] James W Demmel, Stanley C Eisenstat, John R Gilbert, Xiaoye S Li, and
Joseph WH Liu. 1999. A supernodal approach to sparse partial pivoting. SIAM J.
Matrix Anal. Appl. 20, 3 (1999), 720–755.
[23] James W Demmel, John R Gilbert, and Xiaoye S Li. 1999. An asynchronous
parallel supernodal algorithm for sparse gaussian elimination. SIAM J. Matrix
Anal. Appl. 20, 4 (1999), 915–952.
[24] Richard C Dorf. 2006. Electronics, power electronics, optoelectronics, microwaves,
electromagnetics, and radar. CRC press.
[25] Iain S Duff, Nick IM Gould, John K Reid, Jennifer A Scott, and Kathryn Turner.
1991. The factorization of sparse symmetric indefinite matrices. IMA J. Numer.
Anal. 11, 2 (1991), 181–204.
[26] Iain S Duff and John K Reid. 1983. The multifrontal solution of indefinite sparse
symmetric linear. ACM Transactions on Mathematical Software (TOMS) 9, 3 (1983),
302–325.
[27] Iain S Duff and John Ker Reid. 1996. The design of MA48: a code for the direct
solution of sparse unsymmetric linear systems of equations. ACM Transactions
on Mathematical Software (TOMS) 22, 2 (1996), 187–226.
[28] Alan George and Joseph WH Liu. 1979. The design of a user interface for a
sparse matrix package. ACM Transactions on Mathematical Software (TOMS) 5, 2
(1979), 139–162.
[29] Alan George and Joseph W. Liu. 1981. Computer Solution of Large Sparse Positive
Definite. Prentice Hall Professional Technical Reference.
[30] Alan George and Joseph W Liu. 1981. Computer solution of large sparse positive
definite. (1981).
[31] John R Gilbert and Tim Peierls. 1988. Sparse partial pivoting in time proportional
to arithmetic operations. SIAM J. Sci. Statist. Comput. 9, 5 (1988), 862–874.
[32] Nicholas IM Gould, Jennifer A Scott, and Yifan Hu. 2007. A numerical evaluation
of sparse direct solvers for the solution of large sparse symmetric linear systems
of equations. ACM Transactions on Mathematical Software (TOMS) 33, 2 (2007),
10.
[33] Gaël Guennebaud and Benoit Jacob. 2010. Eigen. URl: http://eigen. tuxfamily. org
(2010).
[34] John A Gunnels, Fred G Gustavson, Greg M Henry, and Robert A Van De Geijn.
2001. FLAME: Formal linear algebra methods environment. ACM Transactions
on Mathematical Software (TOMS) 27, 4 (2001), 422–455.
[35] Anshul Gupta, George Karypis, and Vipin Kumar. 1997. Highly scalable parallel
algorithms for sparse matrix factorization. IEEE Transactions on Parallel and
Distributed Systems 8, 5 (1997), 502–520.
[36] Fred G Gustavson, Werner Liniger, and R Willoughby. 1970. Symbolic generation
of an optimal Crout algorithm for sparse systems of linear equations. Journal of
the ACM (JACM) 17, 1 (1970), 87–109.
[37] Justin Holewinski, Louis-Noël Pouchet, and P. Sadayappan. 2012. Highperformance Code Generation for Stencil Computations on GPU Architectures.
In Proceedings of the 26th ACM International Conference on Supercomputing (ICS
’12). ACM, New York, NY, USA, 311–320. DOI:https://doi.org/10.1145/2304576.
2304619
[38] Carlo Janna, Massimiliano Ferronato, and Giuseppe Gambolati. 2015. The use
of supernodes in factored sparse approximate inverse preconditioning. SIAM
Journal on Scientific Computing 37, 1 (2015), C72–C94.
[39] Neil D Jones, Carsten K Gomard, and Peter Sestoft. 1993. Partial evaluation and
automatic program generation. Peter Sestoft.
[40] Wayne Kelly. 1998. Optimization within a unified transformation framework.
(1998).
[41] David S Kershaw. 1978. The incomplete CholeskyâĂŤconjugate gradient method
for the iterative solution of systems of linear equations. J. Comput. Phys. 26, 1
(1978), 43–65.
[42] Fredrik Kjolstad, Shoaib Kamil, Jonathan Ragan-Kelley, David IW Levin, Shinjiro
Sueda, Desai Chen, Etienne Vouga, Danny M Kaufman, Gurtej Kanwar, Wojciech Matusik, and Saman Amarasinghe. 2016. Simit: A language for physical
simulation. ACM Transactions on Graphics (TOG) 35, 2 (2016), 20.
[43] Xiaoye S Li. 2005. An overview of SuperLU: Algorithms, implementation, and
user interface. ACM Transactions on Mathematical Software (TOMS) 31, 3 (2005),
302–325.
[44] Xiaoye S Li and James W Demmel. 2003. SuperLU_DIST: A scalable distributedmemory sparse direct solver for unsymmetric linear systems. ACM Transactions
on Mathematical Software (TOMS) 29, 2 (2003), 110–140.
[45] Douglas K Lilly. 1965. On the computational stability of numerical solutions of
time-dependent non-linear geophysical fluid dynamics problems. Mon. Wea. Rev
93, 1 (1965), 11–26.
[46] Joseph W. H. Liu. 1990. The Role of Elimination Trees in Sparse Factorization.
SIAM J. Matrix Anal. Appl. 11, 1 (Jan. 1990), 134–172. DOI:https://doi.org/10.
1137/0611010
[47] José A Zevallos Luna, Alexandre Siligaris, Cédric Pujol, and Laurent Dussopt.
2013. A packaged 60 GHz low-power transceiver with integrated antennas for
short-range communications.. In Radio and Wireless Symposium. 355–357.
[48] Fabio Luporini, David A Ham, and Paul HJ Kelly. 2016. An algorithm for the
optimization of finite element integration loops. arXiv preprint arXiv:1604.05872
(2016).
[49] Maxim Naumov. 2012. Parallel incomplete-LU and Cholesky factorization in
the preconditioned iterative methods on the GPU. NVIDIA Technical Report
NVR-2012-003 (2012).
[50] M Papadrakakis and N Bitoulas. 1993. Accuracy and effectiveness of preconditioned conjugate gradient algorithms for large and ill-conditioned problems.
Computer methods in applied mechanics and engineering 109, 3-4 (1993), 219–232.

[51] Roger P Pawlowski, John N Shadid, Joseph P Simonis, and Homer F Walker. 2006.
Globalization techniques for Newton–Krylov methods and applications to the
fully coupled solution of the Navier–Stokes equations. SIAM review 48, 4 (2006),
700–721.
[52] Lukas Polok, Viorela Ila, Marek Solony, Pavel Smrz, and Pavel Zemcik. 2013. Incremental Block Cholesky Factorization for Nonlinear Least Squares in Robotics..
In Robotics: Science and Systems.
[53] Alex Pothen and Sivan Toledo. 2004. Elimination Structures in Scientific Computing. (2004).
[54] Markus Püschel, José M. F. Moura, Jeremy Johnson, David Padua, Manuela Veloso,
Bryan Singer, Jianxin Xiong, Franz Franchetti, Aca Gacic, Yevgen Voronenko,
Kang Chen, Robert W. Johnson, and Nicholas Rizzolo. 2005. SPIRAL: Code
Generation for DSP Transforms. Proceedings of the IEEE, special issue on “Program
Generation, Optimization, and Adaptation” 93, 2 (2005), 232– 275.
[55] Fabien Quilleré, Sanjay Rajopadhye, and Doran Wilde. 2000. Generation of efficient nested loops from polyhedra. International Journal of Parallel Programming
28, 5 (2000), 469–498.
[56] Michael Rabinovich, Roi Poranne, Daniele Panozzo, and Olga Sorkine-Hornung.
2017. Scalable locally injective mappings. ACM Transactions on Graphics (TOG)
36, 2 (2017), 16.
[57] Jonathan Ragan-Kelley, Connelly Barnes, Andrew Adams, Sylvain Paris, Frédo
Durand, and Saman Amarasinghe. 2013. Halide: a language and compiler for
optimizing parallelism, locality, and recomputation in image processing pipelines.
ACM SIGPLAN Notices 48, 6 (2013), 519–530.
[58] Hongbo Rong, Jongsoo Park, Lingxiang Xiang, Todd A Anderson, and Mikhail
Smelyanskiy. 2016. Sparso: Context-driven optimizations of sparse linear algebra.
In Proceedings of the 2016 International Conference on Parallel Architectures and
Compilation. ACM, 247–259.
[59] Olaf Schenk and Klaus Gärtner. 2004. Solving unsymmetric sparse systems of
linear equations with PARDISO. Future Generation Computer Systems 20, 3 (2004),
475–487.
[60] Olaf Schenk, Klaus Gärtner, and Wolfgang Fichtner. 2000. Efficient sparse LU
factorization with left-right looking strategy on shared memory multiprocessors.
BIT Numerical Mathematics 40, 1 (2000), 158–176.
[61] Kai Shen, Tao Yang, and Xiangmin Jiao. 2000. S+: Efficient 2D sparse LU factorization on parallel machines. SIAM J. Matrix Anal. Appl. 22, 1 (2000), 282–305.
[62] Andrew H Sherman. 1978. Algorithms for sparse Gaussian elimination with
partial pivoting. ACM Transactions on Mathematical Software (TOMS) 4, 4 (1978),
330–338.
[63] Jaewook Shin, Mary W Hall, Jacqueline Chame, Chun Chen, Paul F Fischer, and
Paul D Hovland. 2010. Speeding up Nek5000 with autotuning and specialization.
In Proceedings of the 24th ACM International Conference on Supercomputing. ACM,
253–262.
[64] Daniele G Spampinato and Markus Püschel. 2014. A basic linear algebra compiler.
In Proceedings of Annual IEEE/ACM International Symposium on Code Generation
and Optimization. ACM, 23.
[65] Michelle Mills Strout, Alan LaMielle, Larry Carter, Jeanne Ferrante, Barbara
Kreaseck, and Catherine Olschanowsky. 2016. An approach for code generation
in the sparse polyhedral framework. Parallel Comput. 53 (2016), 32–57.
[66] Yuan Tang, Rezaul Alam Chowdhury, Bradley C Kuszmaul, Chi-Keung Luk,
and Charles E Leiserson. 2011. The pochoir stencil compiler. In Proceedings
of the twenty-third annual ACM symposium on Parallelism in algorithms and
architectures. ACM, 117–128.
[67] Ananta Tiwari, Chun Chen, Jacqueline Chame, Mary Hall, and Jeffrey K
Hollingsworth. 2009. A scalable auto-tuning framework for compiler optimization. In Parallel & Distributed Processing, 2009. IPDPS 2009. IEEE International
Symposium on. IEEE, 1–12.
[68] Harmen LA Van Der Spek and Harry AG Wijshoff. 2010. Sublimation: expanding
data structures to enable data instance specific optimizations. In International
Workshop on Languages and Compilers for Parallel Computing. Springer, 106–120.
[69] Nicolas Vasilache, Cédric Bastoul, and Albert Cohen. 2006. Polyhedral code
generation in the real world. In International Conference on Compiler Construction.
Springer, 185–201.
[70] Anand Venkat, Mary Hall, and Michelle Strout. 2015. Loop and data transformations for sparse matrix code. In Proceedings of the 36th ACM SIGPLAN Conference
on Programming Language Design and Implementation. ACM, 521–532.
[71] Anand Venkat, Mahdi Soltan Mohammadi, Jongsoo Park, Hongbo Rong, Rajkishore Barik, Michelle Mills Strout, and Mary Hall. 2016. Automating wavefront
parallelization for sparse matrix computations. In Proceedings of the International
Conference for High Performance Computing, Networking, Storage and Analysis.
IEEE Press, 41.
[72] Anand Venkat, Manu Shantharam, Mary Hall, and Michelle Mills Strout. 2014.
Non-affine extensions to polyhedral code generation. In Proceedings of Annual
IEEE/ACM International Symposium on Code Generation and Optimization. ACM,
185.
[73] Z Xianyi. 2016. OpenBLAS: an optimized BLAS library. (2016).
