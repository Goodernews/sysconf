[1] Amazon, “Overview of Amazon web services,” Dec 2015. [Online].
Available: https://d0.awsstatic.com/whitepapers/aws-overview.pdf
[2] AMD, “AMD SDK—a complete development platform,” Mar 2016.
[3] N. Ardalani, C. Lestourgeon, K. Sankaralingam, and X. Zhu, “Crossarchitecture performance prediction (XAPP) using CPU code to predict
GPU performance,” in Proc. of the 48th Annual IEEE/ACM International
Symposium on Microarchitecture (MICRO), Dec 2015.
[4] R. Ausavarungnirun, K. K.-W. Chang, L. Subramanian, G. H. Loh, and
O. Mutlu, “Staged memory scheduling: Achieving high performance and
scalability in heterogeneous systems,” in Proc. of the 39th IEEE/ACM
International Symposium on Computer Architecture (ISCA), Jun 2012.
[5] M. E. Belviranli, F. Khorasani, L. N. Bhuyan, and R. Gupta, “CuMAS:
Data transfer aware multi-application scheduling for shared GPUs,” in
Proc. of the 2016 ACM International Conference on Supercomputing
(ICS), Jun 2016
[6] S. Che, B. M. Beckmann, S. K. Reinhardt, and K. Skadron, “Pannotia:
Understanding irregular GPGPU graph applications,” in Proc. of the 2013
IEEE International Symposium on Workload Characterization (IISWC),
Sep 2013.
[7] S. Che, M. Boyer, J. Meng, D. Tarjan, J. W. Sheaffer, S.-H. Lee, and
K. Skadron, “Rodinia: A benchmark suite for heterogeneous computing,”
in Proc. of the 2009 IEEE International Symposium on Workload
Characterization (IISWC), Oct 2009.
[8] S. Che, J. W. Sheaffer, M. Boyer, L. G. Szafaryn, L. Wang, and
K. Skadron, “A characterization of the Rodinia benchmark suite with
comparison to contemporary CMP workloads,” in Proc. of the 2010
IEEE International Symposium on Workload Characterization (IISWC),
Dec 2010.
[9] M. Collier and R. Shahan, Microsoft Azure Essential: Fundamentals of
Azure, 2nd ed. Microsoft Press, Sep 2016.
[10] K. V. Craeynest, A. Jaleel, L. Eeckhout, paolo Narvaez, and J. Emer,
“Scheduling heterogeneous multi-cores through performance impact estimation (PIE),” in Proc. of the 39th IEEE/ACM International Symposium
on Computer Architecture (ISCA), Jun 2012.
[11] A. Danalis, G. Marin, C. McCurdy, J. S. Meredith, P. C. Roth, K. Spafford,
V. Tipparaju, and J. S. Vetter, “The scalable heterogeneous computing
(SHOC) benchmark suite,” in Proc. of the 3rd General Purpose GPUs
(GPGPU), Mar 2010.
[12] S. Eyerman and L. Eeckhout, “System-level performance metrics for
multiprogram workloads,” IEEE Micro, vol. 28, no. 3, pp. 42–53, May
2008.
[13] V. Garc´ıa, J. Gomez-Luna, T. Grass, A. Rico, E. Ayguade, and A. J. Pe ´ na, ˜
“Evaluating the effect of last-level cache sharing on integrated GPU-CPU
systems with heterogeneous applications,” in Proc. of the 2016 IEEE
International Symposium on Workload Characterization (IISWC), Sep
2016.
[14] Google, “Google cloud platform overview,” Jan 2017. [Online].
Available: https://cloud.google.com/docs/overview
[15] C. Gregg and K. Hazlewood, “Where is the data? Why you cannot debate
CPU vs. GPU performance without the answer,” in Proc. of the 2011
IEEE International Symposium on Performance Analysis of Systems and
Software (ISPASS), Apr 2011.
[16] J. Henning, “Spec cpu2006,” Aug 2006. [Online]. Available:
http://www.spec.org/cpu2006/Docs/readme1st.html
[17] L. R. Hsu, S. K. Reinhardt, Ravishankar, and S. Makineni, “Communist,
utilitarian, and capitalist cache policies on CMPs: Caches as a shared
resource,” in Proc. of the 15th IEEE/ACM International Conference on
Paralel Architectures and Compilation Techniques (PACT), Sep 2006.
[18] Intel, “Intel sdk for opencl applications,” Jun 2016. [Online]. Available:
https://software.intel.com/en-us/intel-opencl
[19] A. Jaleel, W. hasenplaugh, M. Qureshi, J. Sebot, S. Steely Jr., and J. Emer,
“Adaptive insertion policies for managing shared caches,” in Proc. of the
17th IEEE/ACM International Conference on Paralel Architectures and
Compilation Techniques (PACT), Oct 2008.
[20] A. Jaleel, H. H. Najaf-abadi, S. Subramaniam, S. C. S. Jr., and J. Emer,
“CRUISE: Cache replacement and utility-aware scheduling,” in Proc.
of the ACM 17th International Conference on Architectural Suport for
Programming Languages and Operating Systems (ASPLOS), Mar 2012.
[21] O. Kayıran, N. C. Nachiappan, A. Jog, R. Ausavarungnirun, M. T.
Kandemir, G. H. Loh, O. Mutlu, and C. R. Das, “Managing GPU
concurrency in heterogeneous architectures,” in Proc. of the 47th Annual
IEEE/ACM International Symposium on Microarchitecture (MICRO),
Dec 2014.
[22] A. S. D. Lee and T. S. Abdelrahman, “Launch-time optimization of
OpenCL GPU kernels,” in Proc. of the 10th General Purpose GPUs
(GPGPU), Feb 2017.
[23] J. Lee and H. Kim, “TAP: A TLP-aware cache management policy for
a CPU-GPU heterogeneous architecture,” in Proc. of the 18th IEEE
International Symposium on High Performance Computer Architecture
(HPCA), Feb 2012.
[24] J. M. Lin, Y. Chen, W. Li, Z. Tang, and A. Jaleel, “Memory characterization of SPEC CPU2006 benchmark suite,” in Workshop for the 11th
Computer Architecture Evaluation of Commerical Workloads (CAECW),
Feb 2008.
[26] C. Margiolas and M. F. P. O’Boyle, “Portable and transparent software
managed scheduling on accelerators for fair resource sharing,” in Proc.
[25] D. Lustig and M. Martonosi, “Reducing GPU offload latency via
fine-grained CPU-GPU synchronization,” in Proc. of the 19th IEEE
International Symposium on High Performance Computer Architecture
(HPCA), Feb 2013.
of the 2016 IEEE/ACM International Symposium on Code Generation
and Optimization (CGO), Jun 2016.
[27] J. Mars, L. Tang, R. Hundt, K. Skadron, and M. L. Soffa, “Bubble-up:
Increasing utilization in modern warehouse scale computers via sensible
co-locations,” in Proc. of the 44th Annual IEEE/ACM International
Symposium on Microarchitecture (MICRO), Dec 2011.
[28] MathWorks, “MATLAB product documentation r2017a,” Mar 2017.
[Online]. Available: https://www.mathworks.com/help
[29] V. Mekkat, A. Holey, P.-C. Yew, and A. Zhai, “Managing shared lastlevel cache in a heterogeneous multicore processor,” in Proc. of the
22nd IEEE/ACM International Conference on Parallel Architectures and
Compilation Techniques (PACT), Oct 2013.
[30] O. Mutlu and T. Moscibroda, “Stall-time fair memory access scheduling
for chip multiprocessors,” in Proc. of the 40th Annual IEEE/ACM
International Smposium on Microarchitecture (MICRO), Dec 2007.
[31] S. Pai, M. J. Thazhuthaveetil, and R. Govindarajan, “Improving GPGPU
concurrency with elastic kernels,” in Proc. of the ACM 18th International
Conference on Architectural Suport for Programming Languages and
Operating Systems (ASPLOS), Mar 2013.
[32] R. R. Picard and R. D. Cook, “Cross-validation of regression models,”
Journal of the American Statistical Association, vol. 79, no. 387, pp.
575–583, Mar 1984.
[33] M. K. Qureshi and Y. N. Patt, “Utility-based cache partition: A lowoverhead, high performance, runtime mechanism to partition shared
caches,” in Proc. of the 39th Annual IEEE/ACM International Symposium
on Microarchitecture (MICRO), Dec 2006.
[34] Y. Sun, X. Gong, A. K. Ziabari, L. Yu, X. Li, S. Mukherjee, C. McCardwell, A. Vilegas, and D. Kaeli, “Hetero-Mark, a benchmark suite
for CPU-GPU collaborative computing,” in Proc. of the 2016 IEEE
International Symposium on Workload Characterization (IISWC), Sep
2016.
[35] J. R. Tramm, A. R. Siegel, T. Islam, and M. Schulz, “XSBench — the
development and verification of a performance abstraction for Monte
Carlo reactor analysis,” in Proc. of the 2014 International Conference
on the Role of Reactor Physics toward a Sustainable Future (PHYSOR),
Sep 2014.
[36] J. Vesely, A. Basu, M. Oskin, G. H. Loh, and A. Bhattacharjee,
“Observations and opportunities in architecting shared virtual memory
for heterogeneous systems,” in Proc. of the 2016 IEEE International
Symposium on Performance Analysis of Systems and Software (ISPASS),
Apr 2016.
[37] R. Wang and L. Chen, “Futility scaling: High-associativity cache
partitioning,” in Proc. of the 47th Annual IEEE/ACM International
Symposium on Microarchitecture (MICRO), Dec 2014.
[38] Y. Wen and M. F. O’Boyle, “Merge or separate? multi-job scheduling for
OpenCL kernels on CPU/GPU platforms,” in Proc. of the 10th General
Purpose GPUs (GPGPU), Feb 2017.
[39] Y. Wen, Z. Wang, and M. F. P. O’Boyle, “Smart multi-task scheduling for
OpenCL programs on CPU/GPU heterogeneous platforms,” in Proc. of
the 21st IEEE International Conference on High Performance Computing
(HiPC), Dec 2014.
[40] T. Willhalm, R. Dementiev, and P. Fay, “Intel performance
counter monitor – a better way to measure CPU utilization,” Jan
2017. [Online]. Available: https://software.intel.com/en-us/articles/intelperformance-counter-monitor
[41] C.-J. Wu and M. Martonosi, “Adaptive timekeeping replacement: Finegrained capacity management for shared CMP caches,” ACM Transactions
on Architecture and Code Optimization (TACO), vol. 8, no. 2, pp. 3:1–
3:26, Apr 2011.
[42] C.-J. Wu and M. Martonosi, “Characterization and dynamic mitigation
of intra-application cache interference,” in Proc. o fht e 2011 IEEE
International Symposium on Performance Analysis of Systems and
Software (ISPASS), Apr 2011.
[43] G. Wu, J. L. Greathouse, A. Lyashevsky, N. Jayasena, and D. Chiou,
“GPGPU performance and power estimation using machine learning,” in
Proc. of the 21st IEEE International Symposium on High Performance
Computer Architecture (HPCA), Feb 2015.
[44] Y. Xie and G. H. Loh, “PIPP: Promotion/insertion pseudo-partitioning of
multi-core shared caches,” in Proc. of the 36th IEEE/ACM International
Symposium on Computer Architecture (ISCA), Jun 2009.
[45] M. Zahran, “Heterogeneous computing: Here to stay,” ACM Queue,
vol. 14, no. 6, p. 40, Nov 2016.
