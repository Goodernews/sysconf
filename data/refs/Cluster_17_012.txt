[1] OpenMP Architecture Review Board, “OpenMP application
program interface version 4.0,” 2013. [Online]. Available:
http://www.openmp.org/mp-documents/OpenMP4.0.0.pdf

[2] M. Frigo, C. E. Leiserson, and K. H. Randall, “The
implementation of the cilk-5 multithreaded language,” in
Proceedings of the ACM SIGPLAN 1998 Conference on Programming Language Design and Implementation, ser. PLDI
°98. New York, NY, USA: ACM, 1998, pp. 212-223. [Online]. Available: http://doi.acm.org/10.1145/277650.277725

[3] C. E. Leiserson, “The Cilk++ concurrency platform,” in Proceedings of the 46th Annual Design Automation Conference
DAC ’09. ACM Press, Jul. 2009.

[4] C. Pheatt, “Intel(R) Threading Building Blocks,” J. Comput.
Sci. Coll., vol. 23, no. 4, pp. 298-298, Apr. 2008.

[5] K. B. Wheeler, R. C. Murphy, and D. Thain, “Qthreads: An
API for programming with millions of lightweight threads,”
in 2008 IEEE IPDPS. JEEE, Apr. 2008, pp. 1-8.

[6] J. Nakashima, S. Nakatani, and K. Taura, “Design and implementation of a customizable work stealing scheduler,” in
Proceedings of the 3rd International Workshop on Runtime
and Operating Systems for Supercomputers - ROSS ’13.
ACM Press, Jun. 2013.

[7] J. Nakashima and K. Taura, “MassiveThreads: A Thread
Library for High Productivity Languages,” in Festschrift of
Symposium on Concurrent Objects and Beyond: From Theory
to High-Performance Computing, 2012.

[8] A. Duran, X. Teruel, R. Ferrer, X. Martorell, and E. Ayguade,
“Barcelona OpenMP Tasks Suite: A Set of Benchmarks
Targeting the Exploitation of Task Parallelism in OpenMP,” in
2009 International Conference on Parallel Processing. TEEE,
Sep. 2009, pp. 124-131.

[9] A. Huynh, D. Thain, M. Pericas, and K. Taura, “DAGViz:
A dag visualization tool for analyzing task-parallel program
traces,” in Proceedings of the 2nd Workshop on Visual Performance Analysis, ser. VPA °15. ACM, 2015, pp. 3:1-3:8.

[10] N. R. Tallent and J. M. Mellor-Crummey, “Effective performance measurement and analysis of multithreaded applications,” in Proceedings of the 14th ACM SIGPLAN Symposium
on Principles and Practice of Parallel Programming, ser.
PPoPP ’09. ACM, 2009, pp. 229-240.

[11] L. Adhianto, S. Banerjee, M. Fagan, M. Krentel, G. Marin,
J. Mellor-Crummey, and N. R. Tallent, “Hpctoolkit: Tools
for performance analysis of optimized parallel programs
http://hpctoolkit.org,” Concurr. Comput. : Pract. Exper.,
vol. 22, no. 6, pp. 685-701, Apr. 2010. [Online]. Available:
http://dx.doi.org/10.1002/cpe.v22:6

[12] S. L. Olivier, B. R. de Supinski, M. Schulz, and J. F.
Prins, “Characterizing and mitigating work time inflation in
task parallel programs,” in Proceedings of the International
Conference on High Performance Computing, Networking,
Storage and Analysis, ser. SC °12._ TEEE Computer Society
Press, 2012, pp. 65:1-65:12.

[13] Intel, “Intel vtune amplifier,’ 2015, [Online; last accessed July
5, 2015]. [Online]. Available: http://software.intel.com/enus/intel-vtune-amplifier-xe

[14] W. E. Nagel, A. Arnold, M. Weber, H.-C. Hoppe, and
K. Solchenbach, “Vampir: Visualization and analysis of mpi
resources,” Supercomputer, vol. 12, pp. 69-80, 1996.

[15] O. Zaki, E. Lusk, and D. Swider, “Toward scalable performance visualization with jumpshot,’ High Performance
Computing Applications, vol. 13, pp. 277-288, 1999.

[16] S. Hunold, R. Hoffmann, and F. Suter, “Jedule: A tool for
visualizing schedules of parallel applications,’ in Parallel
Processing Workshops (ICPPW), 2010 39th International
Conference on, Sept 2010, pp. 169-178.

[17] A. Drebes, A. Pop, K. Heydemann, A. Cohen, and N. DrachTemam, “Aftermath: A graphical tool for performance analysis and debugging of fine-grained task-parallel programs
and run-time systems,” in Proceedings of 7th Workshop on
Programmability Issues for Heterogeneous Multicores, ser.
MULTIPROG °14, 2014.

[18] A. Pop and A. Cohen, “Openstream: Expressiveness and
data-flow compilation of openmp streaming programs,” ACM
Trans. Archit. Code Optim., vol. 9, no. 4, pp. 53:1-53:25, Jan.
2013.

[19] G. Llort, H. Servat, J. Gonzdlez, J. Giménez, and J. Labarta,
“On the usefulness of object tracking techniques in
performance analysis,” in Proceedings of the International
Conference on High Performance Computing, Networking,
Storage and Analysis, ser. SC °13. New York, NY,
USA: ACM, 2013, pp. 29:1-29:11. [Online]. Available:
http://doi.acm.org/10.1145/2503210.2503267

[20] Y. He, C. E. Leiserson, and W. M. Leiserson, “The cilkview
scalability analyzer,’ in Proceedings of the Twenty-second
Annual ACM Symposium on Parallelism in Algorithms
and Architectures, ser. SPAA °10. New York, NY,
USA: ACM, 2010, pp. 145-156. [Online]. Available:
http://doi.acm.org/10.1145/1810479.1810509

[21] T. B. Schardl, B. C. Kuszmaul, I.-T. A. Lee, W. M. Leiserson,
and C. E. Leiserson, “The cilkprof scalability profiler,’ in
Proceedings of the 27th ACM Symposium on Parallelism in
Algorithms and Architectures, ser. SPAA °15. New York,
NY, USA: ACM, 2015, pp. 89-100. [Online]. Available:
http://doi.acm.org/10.1145/2755573.2755603

[22] A. Muddukrishna, P. A. Jonsson, A. Podobas, and M. Brorsson, “Grain graphs: Openmp performance analysis made
easy,” in Proceedings of the 21st ACM SIGPLAN Symposium
on Principles and Practice of Parallel Programming, ser.
PPoPP ’16. ACM, 2016, pp. 28:1-28:13.

[23] V. Tovinkere and M. Voss, “Flow graph designer: A tool for
designing and analyzing intel®threading building blocks flow
graphs,” Washington, DC, USA, pp. 149-158, 2014. [Online].
Available: http://dx.doi.org/10.1109/ICPPW.2014.31