[1] Pierre Amiranoff, Albert Cohen, and Paul Feautrier. 2006. Beyond Iteration Vectors: Instancewise Relational Abstract

Domains. In Proceedings of the 13th International Conference on Static Analysis (SAS’06). Springer-Verlag, Berlin, Heidelberg,

161-180. DOI: http://dx.doi.org/10.1007/11823230_11



[2] Uday Bondhugula, Albert Hartono, J. Ramanujam, and P. Sadayappan. 2008. A Practical Automatic Polyhedral Parallelizer

and Locality Optimizer. In Proceedings of the 29th ACM SIGPLAN Conference on Programming Language Design and

Implementation (PLDI ’08). ACM, New York, NY, USA, 101-113. DOL: http://dx.doi.org/10.1145/1375581.1375595



[3] Wei-Ngan Chin. 1992. Safe Fusion of Functional Expressions. In Proceedings of the 1992 ACM Conference on LISP and

Functional Programming (LFP ’92). ACM, New York, NY, USA, 11-20. DOI: http://dx.doi.org/10.1145/141471.141494



[4] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 76. Publication date: October 2017.

76:28 Laith Sakka, Kirshanthan Sundararajah, and Milind Kulkarni



[5] Albert Cohen and Jean-Francois Collard. 1998. Instance-Wise Reaching Definition Analysis for Recursive Programs Using

Context-Free Transductions. In Proceedings of the 1998 International Conference on Parallel Architectures and Compilation

Techniques (PACT ’98). IEEE Computer Society, Washington, DC, USA, 332-. http://dl.acm.org/citation.cfm?id=522344,

825716



[6] H. Comon, M. Dauchet, R. Gilleron, C. Léding, F. Jacquemard, D. Lugiez, S. Tison, and M. Tommasi. 2007. Tree Automata

Techniques and Applications. Available on: http://www.grappa.univ-lille3.fr/tata. (2007). release October, 12th 2007.



[7] Loris D’Antoni, Margus Veanes, Benjamin Livshits, and David Molnar. 2014. Fast: A Transducer-based Language for Tree

Manipulation. In Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation

(PLDI ’14), ACM, New York, NY, USA, 384-394. DOI: http://dx.doi.org/10.1145/2594291.2594309



[8] Alain Darte. 1999. On the Complexity of Loop Fusion. In Proceedings of the 1999 International Conference on Parallel

Architectures and Compilation Techniques (PACT ’99). IEEE Computer Society, Washington, DC, USA, 149-. http:

//dl.acm.org/citation.cfm?id=520793.825721



[9] John Doner. 1970. Tree Acceptors and Some of Their Applications. }. Comput. Syst. Sci. 4, 5 (Oct. 1970), 406-451. DOL:

http://dx.doi.org/10.1016/S0022-0000(70)80041-1



[10] Torbjérn Ekman and Gérel Hedin. 2007. The Jastadd Extensible Java Compiler. In Proceedings of the 22Nd Annual ACM

SIGPLAN Conference on Object-oriented Programming Systems and Applications (OOPSLA ’07). ACM, New York, NY, USA,

1-18. DOI: http://dx.doi.org/10.1145/1297027.1297029



[11] Joost Engelfriet. 1975. Bottom-up and top-down tree transformations— a comparison. Mathematical systems theory 9, 2 (01

Jun 1975), 198-231. DOL: http://dx.doi.org/10.1007/BF0 1704020



[12] Joost Engelfriet and Sebastian Maneth. 2002. Output String Languages of Compositions of Deterministic Macro Tree

Transducers. j. Comput. Syst. Sci. 64, 2 (March 2002), 350-395. DOI : http://dx.doi.org/10.1006/jcss.2001.1816



[13] Joost Engelfriet and Heiko Vogler. 1985. Macro tree transducers. 7. Comput. System Sci. 31, 1 (1985), 71 — 146. DOI:

http://dx.doi.org/10.1016/0022-0000(85)90066-2



[14] N. Engheta, W. D. Murphy, V. Rokhlin, and M. S. Vassiliou. 1992. The fast multipole method (FMM) for electromagnetic

scattering problems. IEEE Transactions on Antennas and Propagation 40, 6 (Jun 1992), 634-641. DOL: http://dx.doi.org/10.

1109/8.144597



[15] R. Farrow, K. Kennedy, and L. Zucconi. 1976. Graph Grammars and Global Program Data Flow Analysis. In Proceedings of

the 17th Annual Symposium on Foundations of Computer Science (SFCS ’76). IEEE Computer Society, Washington, DC,

USA, 42-56. DOL: http://dx.doi.org/10.1109/SFCS. 1976.17



[16] Paul Feautrier. 1992a. Some Efficient Solutions to the Affine Scheduling Problem: I. One-dimensional Time. Int. 7. Parallel

Program. 21, 5 (Oct. 1992), 313-348. DOI: http://dx.doi.org/10.1007/BF01407835



[17] Paul Feautrier. 1992b. Some efficient solutions to the affine scheduling problem. Part II. Multidimensional time. International

Journal of Parallel Programming 21, 6 (01 Dec 1992), 389-420. DOL : http://dx.doi.org/10.1007/BF01379404



[18] Paul Feautrier. 1998. A parallelization framework for recursive tree programs. In Euro-Par’98 Parallel Processing: 4th

International Euro-Par Conference Southampton, UK, September 1-4, 1998 Proceedings, David Pritchard and Jeff Reeve

(Eds.). Springer Berlin Heidelberg, Berlin, Heidelberg, 470-479. DOI : http://dx.doi.org/10.1007/BFb0057890



[19] Rakesh Ghiya and Laurie J. Hendren. 1996. Is It a Tree, a DAG, or a Cyclic Graph? A Shape Analysis for Heap-directed

Pointers in C. In Proceedings of the 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages

(POPL ’96). ACM, New York, NY, USA, 1-15. DOL: http://dx.doi.org/10.1145/237721.237724



[20] Rakesh Ghiya, Laurie J. Hendren, and Yingchun Zhu. 1998. Detecting Parallelism in C Programs with Recursive Darta

Structures. In Proceedings of the 7th International Conference on Compiler Construction (CC ’98). Springer-Verlag, London,

UK, UK, 159-173. http://dl.acm.org/citation.cfm?id=647474.727598



[21] Andrew Gill, John Launchbury, and Simon L. Peyton Jones. 1993. A Short Cut to Deforestation. In Proceedings of the

Conference on Functional Programming Languages and Computer Architecture (FPCA 93). ACM, New York, NY, USA,

223-232. DOI : http://dx.doi.org/10.1145/165180.165214



[22] L. Greengard and V. Rokhlin. 1987. A Fast Algorithm for Particle Simulations. }. Comput. Phys. 73, 2 (Dec. 1987), 325-348.

DOL: http://dx.doi.org/10.1016/0021-9991(87)90140-9



[23] Robert J. Harrison, George I. Fann, Takeshi Yanai, Zhengting Gan, and Gregory Beylkin. 2004. Multiresolution quantum

chemistry: Basic theory and initial applications. The Journal of Chemical Physics 121, 23 (2004), 11587-11598. DOL:

http://dx.doi.org/10.1063/1.1791051 arXiv:http://dx.doi.org/10.1063/1.1791051



[24] N. Hegde, J. Liu, K. Sundararajah, and M. Kulkarni. 2017. Treelogy: A benchmark suite for tree traversals. In 2017 IEEE

International Symposium on Performance Analysis of Systems and Software (ISPASS). 227-238. DOI: http://dx.doi.org/10.

1109/ISPASS.2017.7975294



[25] Ralf Hinze, Thomas Harper, and Daniel W. H. James. 2011. Theory and Practice of Fusion. In Proceedings of the 22Nd

International Conference on Implementation and Application of Functional Languages (IFL’10). Springer-Verlag, Berlin,

Heidelberg, 19-37. http://dl.acm.org/citation.cfm?id=2050135.2050137



[26] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 76. Publication date: October 2017.

TreeFuser: A Framework for Analyzing and Fusing General Recursive Tree Traversals 76:29



[27] Joseph Hummel, Laurie J. Hendren, and Alexandru Nicolau. 1994, A General Data Dependence Test for Dynamic, Pointerbased Data Structures. In Proceedings of the ACM SIGPLAN 1994 Conference on Programming Language Design and

Implementation (PLDI ’94). ACM, New York, NY, USA, 218-229. DOL : http://dx.doi.org/10.1145/178243.178262



[28] Ken Kennedy and Kathryn S. McKinley. 1994. Maximizing Loop Parallelism and Improving Data Locality via Loop Fusion

and Distribution. In Proceedings of the 6th International Workshop on Languages and Compilers for Parallel Computing.

Springer-Verlag, London, UK, UK, 301-320. http://dl.acm.org/citation.cfm?id=64567 1.665526



[29] Donald E. Knuth. 1968. Semantics of context-free languages. Mathematical systems theory 2, 2 (01 Jun 1968), 127-145. DOI:

http://dx.doi.org/10,1007/BF01692511



[30] J. R. Larus and P. N. Hilfinger. 1988. Detecting Conflicts Between Structure Accesses. In Proceedings of the ACM SIGPLAN

1988 Conference on Programming Language Design and Implementation (PLDI ’88). ACM, New York, NY, USA, 24-31. DOL:

http://dx.doi.org/10.1145/53990.53993



[31] Parthasarathy Madhusudan, Xiaokang Qiu, and Andrei Stefanescu. 2012. Recursive Proofs for Inductive Tree Data-structures.

In Proceedings of the 39th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL ’12).

ACM, New York, NY, USA, 123-136. DOI: http://dx.doi.org/10.1145/2103656.2103673



[32] Andreas Maletti. 2008. Compositions of Extended Top-down Tree Transducers. Inf’ Comput. 206, 9-10 (Sept. 2008), 1187-1196.

DOI: http://dx.doi.org/10.1016/j.ic.2008.03.019



[33] MACAsnica MartACAnnez and Alberto Pardo. 2013. A shortcut fusion approach to accumulations. Science of Computer

Programming 78, 8 (2013), 1121 — 1136. DOL: http://dx.doi.org/10.1016/j.scico.2012.09.002 Special section on software

evolution, adaptability, and maintenance & Special section on the Brazilian Symposium on Programming Languages.



[34] R. L. Mattson, J. Gecsei, D. R. Slutz, and I. L. Traiger. 1970. Evaluation Techniques for Storage Hierarchies. IBM Syst. J. 9, 2

(June 1970), 78-117. DOI: http://dx.doi.org/10.1147/sj.92.0078



[35] Erik Meijer and Johan Jeuring. 1995. Merging Monads and Folds for Functional Programming. In Advanced Functional

Programming, First International Spring School on Advanced Functional Programming Techniques-Tutorial Text. SpringerVerlag, London, UK, UK, 228-266. http://dl.acm.org/citation.cfm?id=647698.734152



[36] Leo A. Meyerovich and Rastislav Bodik. 2010. Fast and Parallel Webpage Layout. In Proceedings of the 19th International

Conference on World Wide Web (WWW ’10). ACM, New York, NY, USA, 711-720. DOI: http://dx.doi.org/10.1145/1772690.

1772763



[37] Leo A. Meyerovich, Matthew E. Torok, Eric Atkinson, and Rastislav Bodik. 2013. Parallel Schedule Synthesis for Attribute

Grammars. In Proceedings of the 18th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPoPP

’13). ACM, New York, NY, USA, 187-196. DOI: http://dx.doi.org/10.1145/2442516.2442535



[38] Dmitry Petrashko, Ondfej Lhoték, and Martin Odersky. 2017. Miniphases: Compilation Using Modular and Efficient

Tree Transformations. In Proceedings of the 38th ACM SIGPLAN Conference on Programming Language Design and

Implementation (PLDI 2017). ACM, New York, NY, USA, 201-216. DOI: http://dx.doi.org/10.1145/3062341.3062346



[39] Apan Qasem and Ken Kennedy. 2006. Profitable Loop Fusion and Tiling Using Model-driven Empirical Search. In Proceedings

of the 20th Annual International Conference on Supercomputing (ICS ’06). ACM, New York, NY, USA, 249-258. DOI:

http://dx.doi.org/10.1145/1183401.1183437



[40] Samyam Rajbhandari, Jinsung Kim, Sriram Krishnamoorthy, Louis-Noel Pouchet, Fabrice Rastello, Robert J. Harrison,

and P. Sadayappan. 2016a. A Domain-specific Compiler for a Parallel Multiresolution Adaptive Numerical Simulation

Environment. In Proceedings of the International Conference for High Performance Computing, Networking, Storage and

Analysis (SC ’16). IEEE Press, Piscataway, NJ, USA, Article 40, 12 pages. http://dl.acm.org/citation.cfm?id=3014904.3014958



[41] Samyam Rajbhandari, Jinsung Kim, Sriram Krishnamoorthy, Louis-Noél Pouchet, Fabrice Rastello, Robert J. Harrison, and P.

Sadayappan. 2016b. On Fusing Recursive Traversals of K-d Trees. In Proceedings of the 25th International Conference on

Compiler Construction (CC 2016), ACM, New York, NY, USA, 152-162. DOI :http://dx.doi.org/10.1145/2892208.2892228



[42] V Rokhlin. 1985. Rapid solution of integral equations of classical potential theory. 3. Comput. Phys. 60, 2 (1985), 187 — 207.

DOL: http://dx.doi.org/10.1016/0021-9991(85)90002-6



[43] Tiark Rompf, Arvind K. Sujeeth, Nada Amin, Kevin J. Brown, Vojin Jovanovic, HyoukJoong Lee, Manohar Jonnalagedda, Kunle

Olukotun, and Martin Odersky. 2013. Optimizing Data Structures in High-level Programs: New Directions for Extensible

Compilers Based on Staging. In Proceedings of the 40th Annual ACM SIGPLAN-SIGACT Symposium on Principles of

Programming Languages (POPL 713). ACM, New York, NY, USA, 497-510. DOL : http://dx.doi.org/10.1145/2429069.2429128



[44] Radu Rugina and Martin C. Rinard. 2005. Symbolic Bounds Analysis of Pointers, Array Indices, and Accessed Memory

Regions. ACM Trans. Program. Lang. Syst. 27, 2 (March 2005), 185-235. DOI : http://dx.doi.org/10.1145/1057387.1057388



[45] Mooly Sagiv, Thomas Reps, and Reinhard Wilhelm. 1999, Parametric Shape Analysis via 3-valued Logic. In Proceedings of

the 26th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL ’99). ACM, New York, NY,

USA, 105-118. DOI : hitp://dx.doi.org/10.1145/292540.292552



[46] Philip Wadler. 1988. Deforestation: Transforming Programs to Eliminate Trees. In Proceedings of the Second European

Symposium on Programming. North-Holland Publishing Co., Amsterdam, The Netherlands, The Netherlands, 231-248.

http://dl.acm.org/citation.cfm?id=80098.80104



[47] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 76. Publication date: October 2017.

76:30 Laith Sakka, Kirshanthan Sundararajah, and Milind Kulkarni



[48] Yusheng Weijiang, Shruthi Balakrishna, Jiangiao Liu, and Milind Kulkarni. 2015. Tree Dependence Analysis. In Proceedings



[49] of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI ’15). ACM, New York,

NY, USA, 314-325. DOL: http://dx.doi.org/10.1145/2737924.2737972



[50] Ben Wiedermann and William R. Cook. 2007. Extracting Queries by Static Analysis of Transparent Persistence. In Proceedings

of the 34th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL ’07). ACM, New

York, NY, USA, 199-210. DOI : http://dx.doi.org/10.1145/1190216.1190248



[51] Proc. ACM Program. Lang., Vol. 1, No. OOPSLA, Article 76. Publication date: October 2017.
