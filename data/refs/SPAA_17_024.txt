
[1] D. Achlioptas and M. Molloy. The solution space geometry of random linear
equations. Random Structures & Algorithms, 46(2), 2015.
[2] J. I. Alvarez-Hamelin, L. Dall’asta, A. Barrat, and A. Vespignani. Large scale
networks fingerprinting and visualization using the k -core decomposition. In
NIPS. 2005.
[3] R. Anderson and E. W. Mayr. A P-complete problem and approximations to it.
Technical report, 1984.
[4] V. Batagelj and M. Zaversnik. An O (m) algorithm for cores decomposition of
networks. CoRR, cs.DS/0310049, 2003.
[5] S. Beamer, K. Asanović, and D. Patterson. Direction-optimizing breadth-first
search. In SC, 2012.
[6] S. Beamer, K. Asanovic, and D. A. Patterson. The GAP benchmark suite. CoRR,
abs/1508.03619, 2015.
[7] B. Berger, J. Rompel, and P. W. Shor. Efficient NC algorithms for set cover with
applications to learning and geometry. J. Comput. Syst. Sci., 49(3), Dec. 1994.
[8] G. E. Blelloch, Y. Gu, Y. Sun, and K. Tangwongsan. Parallel shortest paths using
radius stepping. In SPAA, 2016.
[9] G. E. Blelloch, R. Peng, and K. Tangwongsan. Linear-work greedy parallel
approximate set cover and variants. In SPAA, 2011.
[10] G. E. Blelloch, H. V. Simhadri, and K. Tangwongsan. Parallel and I/O efficient set
covering algorithms. In SPAA, 2012.
[11] G. S. Brodal, J. L. Träff, and C. D. Zaroliagis. A parallel priority queue with
constant time operations. J. Parallel Distrib. Comput., 49(1), Feb. 1998.
[12] F. Chierichetti, R. Kumar, and A. Tomkins. Max-cover in map-reduce. In WWW,
2010.
[13] E. Cohen. Using selective path-doubling for parallel shortest-path computations.
J. Algorithms, 22(1), Jan. 1997.
[14] R. Cole, P. N. Klein, and R. E. Tarjan. Finding minimum spanning forests in
logarithmic time and linear work using random sampling. In SPAA, 1996.
[15] T. H. Cormen, C. E. Leiserson, R. L. Rivest, and C. Stein. Introduction to Algorithms
(3. ed.). MIT Press, 2009.
[16] N. S. Dasari, R. Desh, and M. Zubair. ParK: An efficient algorithm for k -core
decomposition on multicore processors. In Big Data, 2014.
[17] A. A. Davidson, S. Baxter, M. Garland, and J. D. Owens. Work-efficient parallel
GPU methods for single-source shortest paths. In IPDPS, 2014.
[18] R. B. Dial. Algorithm 360: Shortest-path forest with topological ordering [H].
Commun. ACM, 12(11), Nov. 1969.
[19] E. W. Dijkstra. A note on two problems in connexion with graphs. Numer. Math.,
1(1), Dec. 1959.
[20] B. Elser and A. Montresor. An evaluation study of bigdata frameworks for graph
processing. In Big Data, 2013.
[21] M. L. Fredman and R. E. Tarjan. Fibonacci heaps and their uses in improved
network optimization algorithms. J. ACM, 34(3), July 1987.
[22] J. E. Gonzalez, Y. Low, H. Gu, D. Bickson, and C. Guestrin. PowerGraph: Distributed graph-parallel computation on natural graphs. In OSDI, 2012.
[23] Y. Gu, J. Shun, Y. Sun, and G. E. Blelloch. A top-down parallel semisort. In SPAA,
2015.
[24] M. A. Hassaan, M. Burtscher, and K. Pingali. Ordered vs. unordered: A comparison
of parallelism and work-efficiency in irregular algorithms. In PPoPP, 2011.
[25] J. Jaja. Introduction to Parallel Algorithms. Addison-Wesley Professional, 1992.
[26] J. Jiang, M. Mitzenmacher, and J. Thaler. Parallel peeling algorithms. ACM Trans.
Parallel Comput., 3(1), Jan. 2017.
[27] D. S. Johnson. Approximation algorithms for combinatorial problems. J. Comput.
Syst. Sci., 9(3), 1974.
[28] W. Khaouid, M. Barsky, V. Srinivasan, and A. Thomo. k -core decomposition of
large networks on a single PC. Proc. VLDB Endow., 9(1), Sept. 2015.
[29] P. N. Klein and S. Subramanian. A randomized parallel algorithm for singlesource shortest paths. J. Algorithms, 25(2), Nov. 1997.
[30] R. Kumar, B. Moseley, S. Vassilvitskii, and A. Vattani. Fast greedy algorithms in
mapreduce and streaming. ACM Trans. Parallel Comput., 2(3), Sept. 2015.
[31] H. Kwak, C. Lee, H. Park, and S. Moon. What is twitter, a social network or a
news media? In WWW, 2010.
[32] Y. Low, D. Bickson, J. Gonzalez, C. Guestrin, A. Kyrola, and J. M. Hellerstein.
Distributed GraphLab: A framework for machine learning and data mining in
the cloud. Proc. VLDB Endow., 5(8), Apr. 2012.
[33] Y. Low, J. Gonzalez, A. Kyrola, D. Bickson, C. Guestrin, and J. M. Hellerstein.
GraphLab: A new parallel framework for machine learning. In UAI, July 2010.

[34] K. Madduri, D. A. Bader, J. W. Berry, and J. R. Crobak. An experimental study
of a parallel shortest path algorithm for solving large-scale graph instances. In
ALENEX, 2007.
[35] S. Maleki, D. Nguyen, A. Lenharth, M. Garzarán, D. Padua, and K. Pingali. DSMR:
A parallel algorithm for single-source shortest path problem. In ICS, 2016.
[36] G. Malewicz, M. H. Austern, A. J. Bik, J. C. Dehnert, I. Horn, N. Leiser, and
G. Czajkowski. Pregel: A system for large-scale graph processing. In SIGMOD,
2010.
[37] D. W. Matula and L. L. Beck. Smallest-last ordering and clustering and graph
coloring algorithms. J. ACM, 30(3), July 1983.
[38] F. McSherry, M. Isard, and D. G. Murray. Scalability! But at what COST? In
HotOS, 2015.
[39] R. Meusel, S. Vigna, O. Lehmberg, and C. Bizer. The graph structure in the
web–analyzed on different aggregation levels. The Journal of Web Science, 1(1),
2015.
[40] U. Meyer and P. Sanders. ∆-stepping: a parallelizable shortest path algorithm. J.
Algorithms, 49(1), 2003.
[41] A. Montresor, F. D. Pellegrini, and D. Miorandi. Distributed k-core decomposition.
TPDS, 24(2), 2013.
[42] D. Nguyen, A. Lenharth, and K. Pingali. A lightweight infrastructure for graph
analytics. In SOSP, 2013.
[43] R. C. Paige and C. P. Kruskal. Parallel algorithms for shortest path problems. In
ICPP, 1985.
[44] K. Pechlivanidou, D. Katsaros, and L. Tassiulas. MapReduce-based distributed
k -shell decomposition for online social networks. In SERVICES, 2014.
[45] S. Rajagopalan and V. V. Vazirani. Primal-dual RNC approximation algorithms
for set cover and covering integer programs. SIAM J. Comput., 28(2), Feb. 1999.
[46] A. E. Sariyüce and A. Pinar. Fast hierarchy construction for dense subgraphs.
Proc. VLDB Endow., 10(3), Nov. 2016.
[47] A. E. Sariyuce, C. Seshadhri, and A. Pinar. Parallel local algorithms for core,
truss, and nucleus decompositions. arXiv preprint arXiv:1704.00386, 2017.
[48] S. B. Seidman. Network structure and minimum degree. Soc. Networks, 5(3), 1983.
[49] H. Shi and T. H. Spencer. Time-work tradeoffs of the single-source shortest paths
problem. J. Algorithms, 30(1), Jan. 1999.
[50] K. Shin, T. Eliassi-Rad, and C. Faloutsos. CoreScope: Graph mining using k -core
analysis–patterns, anomalies and algorithms. In ICDM, 2016.
[51] J. Shun and G. E. Blelloch. Ligra: A lightweight graph processing framework for
shared memory. In PPoPP, 2013.
[52] J. Shun, G. E. Blelloch, J. T. Fineman, and P. B. Gibbons. Reducing contention
through priority updates. In SPAA, 2013.
[53] J. Shun, G. E. Blelloch, J. T. Fineman, P. B. Gibbons, A. Kyrola, H. V. Simhadri,
and K. Tangwongsan. Brief announcement: the problem based benchmark suite.
In SPAA, 2012.
[54] J. Shun, L. Dhulipala, and G. Blelloch. A simple and practical linear-work parallel
algorithm for connectivity. In SPAA, 2014.
[55] J. Shun, L. Dhulipala, and G. Blelloch. Smaller and faster: Parallel processing of
compressed graphs with Ligra+. In DCC, 2015.
[56] T. H. Spencer. Time-work tradeoffs for parallel algorithms. J. ACM, 44(5), Sept.
1997.
[57] S. Stergiou and K. Tsioutsiouliklis. Set cover at web scale. In SIGKDD, 2015.
[58] J. Ugander, B. Karrer, L. Backstrom, and C. Marlow. The anatomy of the facebook
social graph. arXiv preprint arXiv:1111.4503, 2011.
[59] Y. Wang, A. A. Davidson, Y. Pan, Y. Wu, A. Riffel, and J. D. Owens. Gunrock: a
high-performance graph processing library on the GPU. In PPoPP, 2016.
[60] S. Wuchty and E. Almaas. Peeling the yeast protein network. Proteomics, 5(2),
2005.
