[1] Accelerated Mobile Pages Project. https://www.ampproject.org/.
[2] Beautiful Soup. http://www.crummy.com/software/BeautifulSoup/.
[3] Google Developers - Simulate Mobile Devices with Device Mode. https:
//developers.google.com/web/tools/chrome-devtools/iterate/device-model.
[4] Google Page Speed. https://developers.google.com/speed/pagespeed/.
[5] H20 - The optimized HTTP/2 server. https://h20.example.net/configure/http2-
directives.html#http2-casper.
[6] How One Second Could Cost
Amazon $1.6 Bil-
lion In Sales.
https://www.fastcompany.com/1825005/
how-one-second-could-cost-amazon-16-billion-sales.
[7] HTTP Archive. http://httpаrchive.org/.
[8] HTTPS adoption *doubled* this year. https://snyk.io/blog/
https-breaking-through/.
[9] Keynote: Mobile Commerce Performance Index. http://www.keynote.com/
performance-indexes/mobile-retail-us.
[10] Latency Is Everywhere And It Costs You Sales - How To Crush It. http:
l/highscalability.com/latency-everywhere-and-it-costs-you-sales-how-crush-it.
[11] Mobile Devices Now Driving 56 Percent of Traffic To Top Sites. http:
//marketingland.com/mobile-top-sites-165725.
[12] The need for mobile speed: How mobile latency impacts publisher revenue.
https://www.doubleclickbygoogle.com/articles/mobile-speed-matters/.
[13] New findings: For top ecommerce sites, mobile web performance is
wildly inconsistent. http://www.webperformancetoday.com/2014/10/22/
2014-mobile-ecommerce-page-speed-web-performancel.
[14] nghttpx - HTTP/2 proxy. https://nghttp2.org/documentation/nghttpx-howto.html.
[15] Opera Mini & Opera Mobile browsers. http://www.opera.com/mobile/.
[16] Preload. https://www.w3.org/TR/preload/.
[17] SPDY. https://developers.google.com/speed/spdyl.
[18] visualmetrics. https://github.com/WPO-Foundation/visualmetrics.
[19] WPO Stats. https://wpostats.com/.
[20] M. Belshe, R. Peon, and M. Thomson. 2015. Hypertext Transfer Protocol Version
2. http://httpwg.org/specs/rfc7540.html.
[21] Michael Butkiewicz, Harsha V. Madhyastha, and Vyas Sekar. 2011. Understand-
ing Website Complexity: Measurements, Metrics, and Implications. In IMC.
[22] Michael Butkiewicz, Daimeng Wang, Zhe Wu, Harsha V. Madhyastha, and Vyas
Sekar. 2015. Klotski: Reprioritizing Web Content to Improve User Experience on
Mobile Devices. In NSDI.
[23] Abhijnan Chakraborty, Vishnu Navda, Venkata N Padmanabhan, and Ramachan-
dran Ramjee. 2013. Coordinating Cellular Background Transfers using LoadSense.
In MOBICOM.
[24] Jeff Erman, Vijay Gopalakrishnan, Rittwik Jana, and K.K. Ramakrishnan. 2013.
Towards a SPDY'ier Mobile Web. In CONEXT.
[25] Tammy Everts. 2013. Rules for Mobile Performance Optimization. ACM Queue
11, 6 (2013).
[26] Li Fan, Pei Cao, Wei Lin, and Quinn Jacobson. 1999. Web Prefetching Between
Low-Bandwidth Clients and Proxies: Potential and Performance. In SIGMET-
RICS.
[27] David F. Galletta, Raymond Henry, Scott McCoy, and Peter Polak. 2004. Web
Site Delays: How Tolerant are Users? Journal of the Association for Information
Systems 5, 1 (2004), 1–28.
[28] Zhimei Jiang and Leonard Kleinrock. 1998. Web Prefetching in a Mobile Envi-
ronment. IEEE Personal Communications 5,5 (1998), 25–34.
[29] Conor Kelton, Jihoon Ryoo, Aruna Balasubramanian, and Samir R. Das. 2017.
Improving User Perceived Page Load Times Using Gaze. In NSDI.
[30] Zhichun Li, Ming Zhang, Zhaosheng Zhu, Yan Chen, Albert Greenberg, and
Yi-Min Wang. 2010. WebProphet: Automating Performance Prediction for Web
Services. In NSDI.
[31] Haohui Mai, Shuo Tang, Samuel T. King, Calin Cascaval, and Pablo Montesinos.
2012. A Case for Parallelizing Web Pages. In HotPar.
[32] L. Meyerovich and R. Bodik. 2010. Fast and Parallel Web Page Layout. In WWW.
[33] David Naylor, Alessandro Finamore, Illias Leontiadis, Yan Grunenberger, Marco
Mellia, Konstantina Papagiannaki, and Peter Steenkiste. 2014. The Cost of the
"S” in HTTPS. In CONEXT.
[34] Javad Nejati and Aruna Balasubramanian. 2016. An In-Depth Study of Mobile
Browser Performance. In WWW.
[35] Ravi Netravali, Ameesh Goyal, James Mickens, and Hari Balakrishnan. 2016.
Polaris: Faster Page Loads Using Fine-grained Dependency Tracking. In NSDI.
[36] Ravi Netravali, Anirudh Sivaraman, Somak Das, Ameesh Goyal, Keith Winstein,
James Mickens, and Hari Balakrishnan. 2015. Mahimahi: Accurate Record-and-
Replay for HTTP. In ATC.
[37] Venkata N. Padmanabhan and Jeffrey C. Mogul. 1996. Using Predictive Prefetch-
ing to Improve World Wide Web Latency. In SIGCOMM.
[38] Lenin Ravindranath, Sharad Agarwal, Jitendra Padhye, and Christopher Riederer.
2013. Give in to Procrastination and Stop Prefetching. In HotNets.
[39] Sanae Rosen, Bo Han, Shuai Hao, Z Morley Mao, and Feng Qian. 2017. Push
or Request: An Investigation of HTTP/2 Server Push for Improving Mobile
Performance. In WWW.
[40] Ashiwan Sivakumar, Shankaranarayanan Puzhavakath Narayanan, Vijay Gopalakr-
ishnan, Seungjoon Lee, Sanjay Rao, and Subhabrata Sen. 2014. PARCEL: Proxy
Assisted BRowsing in Cellular Networks for Energy and Latency Reduction. In
CONEXT.
[41] Xiao Sophia Wang, Aruna Balasubramanian, Arvind Krishnamurthy, and David
Wetherall. 2013. Demystifying Page Load Performance with WProf. In NSDI.
[42] Xiao Sophia Wang, Aruna Balasubramanian, Arvind Krishnamurthy, and David
Wetherall. 2014. How Speedy is SPDY?. In NSDI.
[43] Xiao Sophia Wang, Arvind Krishnamurthy, and David Wetherall. 2016. Speeding
Up Web Page Loads with Shandian. In NSDI.
[44] Zhen Wang, Felix Xiaozhu Lin, Lin Zhong, and Mansoor Chishtie. 2011. Why
are Web Browsers Slow on Smartphones?. In HotMobile.
[45] Zhen Wang, Felix Xiazhou Lin, Lin Zhong, and Mansoor Chishtie. 2012. How
Far Can Client-Only Solutions Go for Mobile Browser Speed?. In WWW.
[46] Zizhuang Yang. 2009. Every Millisecond Counts. https://www.facebook.com/
note.php?note_id=122869103919.
[47] Yuhao Zhu and Vijay Janapa Reddi. 2013. High-Performance and Energy-Efficient
Mobile Web Browsing on Big/Little Systems. In HPCA.

