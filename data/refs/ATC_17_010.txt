
[1] G2 - Yahoo! AltaVista Web Page Hyperlink Connectivity Graph, circa 2002. http://webscope. sandbox.yahoo.com/.
[2] S. N. A. Project. Stanford large network dataset
collection.
http://snap.stanford.edu/data/comFriendster.html.
[3] S. N. A. Project. Stanford large network dataset
collection.
http://snap.stanford.edu/data/socLiveJournal1.html.
[4] The Center for Discrete Mathematics and Theoretical Computer Science. http://www.dis.uniroma1.it
/challenge9/download.shtml.
[5] Richard Bellman. On a routing problem. Quarterly
of applied mathematics, pages 87–90, 1958.
[6] Ulrik Brandes. A faster algorithm for betweenness centrality*. Journal of mathematical sociology, 25(2):163–177, 2001.
[7] Avery Ching, Sergey Edunov, Maja Kabiljo,
Dionysios Logothetis, and Sambavi Muthukrishnan. One trillion edges: graph processing at
Facebook-scale. Proceedings of the VLDB Endowment, 8(12):1804–1815, 2015.
[8] Joan Feigenbaum, Sampath Kannan, Andrew McGregor, Siddharth Suri, and Jian Zhang. On graph
problems in a semi-streaming model. In International Colloquium on Automata, Languages, and
Programming, pages 531–543. Springer, 2004.
[9] Michael L Fredman. New bounds on the complexity of the shortest path problem. SIAM Journal on
Computing, 5(1):83–89, 1976.
[10] Andreas Frommer and Daniel B Szyld. On Asynchronous Iterations. 1999.
[11] Harold N Gabow and Robert Endre Tarjan. A
linear-time algorithm for a special case of disjoint
set union. Journal of computer and system sciences,
30(2):209–221, 1985.
[12] Joseph E Gonzalez, Yucheng Low, Haijie Gu,
Danny Bickson, and Carlos Guestrin. Powergraph:
Distributed graph-parallel computation on natural
graphs. In Presented as part of the 10th USENIX
Symposium on Operating Systems Design and Implementation (OSDI 12), pages 17–30, 2012.
[13] Wook-Shin Han, Sangyeon Lee, Kyungyeol Park,
Jeong-Hoon Lee, Min-Soo Kim, Jinha Kim, and
Hwanjo Yu. TurboGraph: a fast parallel graph engine handling billion-scale graphs in a single PC.
In Proceedings of the 19th ACM SIGKDD international conference on Knowledge discovery and data
mining, pages 77–85. ACM, 2013.
[14] Haewoon Kwak, Changhyun Lee, Hosung Park,
and Sue Moon. What is Twitter, a social network
or a news media? In Proceedings of the 19th international conference on World wide web, pages
591–600. ACM, 2010.
[15] Aapo Kyrola, Guy Blelloch, and Carlos Guestrin.
GraphChi: large-scale graph computation on just
a PC. In Presented as part of the 10th USENIX
Symposium on Operating Systems Design and Implementation (OSDI 12), pages 31–46, 2012.
[16] Andrew Lenharth, Donald Nguyen, and Keshav
Pingali. Parallel Graph Analytics. Communication
of ACM, 59(5):78–87, 2016.
[17] Zhiyuan Lin, Minsuk Kahng, Kaeser Md Sabrin,
Duen Horng Polo Chau, Ho Lee, and U Kang.
Mmap: Fast billion-scale graph computation on
a pc via memory mapping. In Big Data (Big
Data), 2014 IEEE International Conference on,
pages 159–164. IEEE, 2014.
[18] Yucheng Low, Danny Bickson, Joseph Gonzalez, Carlos Guestrin, Aapo Kyrola, and Joseph M
Hellerstein. Distributed GraphLab: a framework
for machine learning and data mining in the cloud.
Proceedings of the VLDB Endowment, 5(8):716–
727, 2012.
[19] Michael Luby. A simple parallel algorithm for the
maximal independent set problem. SIAM journal
on computing, 15(4):1036–1053, 1986.
[20] Grzegorz Malewicz, Matthew H Austern, Aart JC
Bik, James C Dehnert, Ilan Horn, Naty Leiser, and
Grzegorz Czajkowski. Pregel: a system for largescale graph processing. In Proceedings of the 2010
ACM SIGMOD International Conference on Management of data, pages 135–146. ACM, 2010.
[21] Andrew McGregor. Graph stream algorithms: a
survey. ACM SIGMOD Record, 43(1):9–20, 2014.
[22] Frank McSherry, Michael Isard, and Derek G Murray. Scalability! But at what COST? In 15th Workshop on Hot Topics in Operating Systems (HotOS
XV), 2015.
[23] Shanmugavelayutham Muthukrishnan.
Data
streams: Algorithms and applications. Now Publishers Inc, 2005.
[24] Donald Nguyen, Andrew Lenharth, and Keshav
Pingali. A lightweight infrastructure for graph analytics. In Proceedings of the Twenty-Fourth ACM
Symposium on Operating Systems Principles, pages
456–471. ACM, 2013.
[25] Liam Roditty and Virginia Vassilevska Williams.
Fast approximation algorithms for the diameter and
radius of sparse graphs. In Proceedings of the fortyfifth annual ACM symposium on Theory of computing, pages 515–524. ACM, 2013.
[26] Amitabha Roy, Ivo Mihailovic, and Willy
Zwaenepoel. X-Stream: edge-centric graph processing using streaming partitions. In Proceedings
of the Twenty-Fourth ACM Symposium on Operating Systems Principles, pages 472–488. ACM,
2013.
[27] Yogesh Simmhan, Alok Kumbhare, Charith Wickramaarachchi, Soonil Nagarkar, Santosh Ravi,
Cauligi Raghavendra, and Viktor Prasanna. Goffish: A sub-graph centric framework for large-scale
graph analytics. In European Conference on Parallel Processing, pages 451–462. Springer, 2014.
[28] Narayanan
Sundaram,
Nadathur
Satish,
Md Mostofa Ali Patwary, Subramanya R Dulloor,
Michael J Anderson, Satya Gautam Vadlamudi,
Dipankar Das, and Pradeep Dubey. GraphMat:
High performance graph analytics made productive. Proceedings of the VLDB Endowment,
8(11):1214–1225, 2015.
[29] Robert E Tarjan and Jan Van Leeuwen. Worst-case
analysis of set union algorithms. Journal of the
ACM (JACM), 31(2):245–281, 1984.
[30] Robert Endre Tarjan. Efficiency of a good but not
linear set union algorithm. Journal of the ACM
(JACM), 22(2):215–225, 1975.
[31] Carlos HC Teixeira, Alexandre J Fonseca, Marco
Serafini, Georgos Siganos, Mohammed J Zaki, and
Ashraf Aboulnaga. Arabesque: a system for distributed graph mining. In Proceedings of the 25th
Symposium on Operating Systems Principles, pages
425–440. ACM, 2015.
[32] Yuanyuan Tian, Andrey Balmin, Severin Andreas
Corsten, Shirish Tatikonda, and John McPherson.
From think like a vertex to think like a graph. Proceedings of the VLDB Endowment, 7(3):193–204,
2013.
[33] Keval Vora, Rajiv Gupta, and Guoqing Xu. Synergistic Analysis of Evolving Graphs. ACM Transactions on Architecture and Code Optimization
(TACO), 13(4):32, 2016.
[34] Keval Vora, Guoqing Xu, and Rajiv Gupta. Load
the Edges You Need: A Generic I/O Optimization
for Disk-based Graph Processing. In 2016 USENIX
Annual Technical Conference (USENIX ATC 16).
USENIX Association, 2016.
[35] Kaiyuan Zhang, Rong Chen, and Haibo Chen.
NUMA-aware graph-structured analytics. In ACM
SIGPLAN Notices, volume 50, pages 183–193.
ACM, 2015.
[36] Mingxing Zhang, Yongwei Wu, Kang Chen, Xuehai Qian, Xue Li, and Weimin Zheng. Exploring
the hidden dimension in graph processing. In 12th
USENIX Symposium on Operating Systems Design
and Implementation (OSDI 16), pages 285–300.
USENIX Association, 2016.
[37] Yanfeng Zhang, Qixin Gao, Lixin Gao, and
Cuirong Wang. Accelerate large-scale iterative
computation through asynchronous accumulative
updates. In Proceedings of the 3rd workshop on
Scientific Cloud Computing Date, pages 13–22.
ACM, 2012.
[38] Yunming Zhang, Vladimir Kiriansky, Charith
Mendis, and Matei Zaharia Saman Amarasinghe.
Optimizing Cache Performance for Graph Analytics. arXiv preprint arXiv:1608.01362, 2016.
[39] Da Zheng, Disa Mhembere, Randal Burns, Joshua
Vogelstein, Carey E Priebe, and Alexander S
Szalay.
FlashGraph: Processing billion-node
graphs on an array of commodity SSDs. In 13th
USENIX Conference on File and Storage Technologies (FAST 15), pages 45–58, 2015.
[40] Xiaowei Zhu, Wenguang Chen, Weimin Zheng, and
Xiaosong Ma. Gemini: A computation-centric distributed graph processing system. In 12th USENIX
Symposium on Operating Systems Design and Implementation (OSDI 16)(Savannah, GA, 2016.
[41] Xiaowei Zhu, Wentao Han, and Wenguang Chen.
GridGraph: Large-scale graph processing on a single machine using 2-level hierarchical partitioning. In 2015 USENIX Annual Technical Conference
(USENIX ATC 15), pages 375–386, 2015.
