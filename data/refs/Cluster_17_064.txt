[1] F. Cappello, A. Geist, W. Gropp, S. Kale, B. Kramer, and
M. Snir, “Toward exascale resilience: 2014 update,” Supercomputing
Frontiers and Innovations, vol. 1, no. 1, 2014. [Online]. Available:
http://superfri.org/superfri/article/view/14
[2] T. J. Dell, “A white paper on the beneﬁts of chipkill-correct ECC for PC
server main memory,” IBM Microelectronics Division, pp. 1–23, 1997.
[3] P. J. Nair, D. A. Roberts, and M. K. Qureshi, “Citadel: Efﬁciently
protecting stacked memory from tsv and large granularity failures,” ACM
Transactions on Architecture and Code Optimization (TACO), vol. 12,
no. 4, p. 49, 2016.
[4] V. Sridharan, N. DeBardeleben, S. Blanchard, K. B. Ferreira,
J. Stearley, J. Shalf, and S. Gurumurthi, “Memory errors in modern
systems: The good, the bad, and the ugly,” in Proceedings of
the Twentieth International Conference on Architectural Support for
Programming Languages and Operating Systems, ser. ASPLOS ’15.
New York, NY, USA: ACM, 2015, pp. 297–310. [Online]. Available:
http://doi.acm.org/10.1145/2694344.2694348
[5] B. Fang, P. Wu, Q. Guan, N. DeBardeleben, L. Monroe, S. Blanchard,
Z. Chen, K. Pattabiraman, and M. Ripeanu, “Sdc is in the eye of
the beholder: A survey and preliminary study,” in Dependable Systems
and Networks Workshop, 2016 46th Annual IEEE/IFIP International
Conference on. IEEE, 2016, pp. 72–76.
[6] S. Levy, K. B. Ferreira, and P. G. Bridges, “Improving application
resilience to memory errors with lightweight compression,” in High
Performance Computing, Networking, Storage and Analysis, SC16:
International Conference for. IEEE, 2016, pp. 323–334.
[7] Sandia National Laboratory, “Mantevo project home page,”
https://software.sandia.gov/mantevo, Apr. 10 2010.
[8] Sandia National Laboratories, “LAMMPS molecular dynamics simulator,” http://lammps.sandia.gov, Apr. 10 2013.
[9] J. McGlaun, S. Thompson, and M. Elrick, “CTH: A three-dimensional
shock wave physics code,” International Journal of Impact Engineering,
vol. 10, no. 1, pp. 351–360, 1990.
[10] Lawrence Livermore National Laboratory, “Co-design at Lawrence
Livermore National Lab : Livermore Unstructured Lagrangian Explicit
Shock Hydrodynamics (LULESH),” http://codesign.llnl.gov/lulesh.php.
[11] “Samrai: Structured adaptive mesh reﬁnement application infrastructure,” https://computation.llnl.gov/projects/samrai.
[12] J. Elliott, M. Hoemmen, and F. Mueller, “Evaluating the impact of sdc
on the gmres iterative solver,” in 2014 IEEE 28th International Parallel
and Distributed Processing Symposium, May 2014, pp. 1193–1202.
[13] P. G. Bridges, M. Hoemmen, K. B. Ferreira, M. A. Heroux, P. Soltero,
and R. Brightwell, Cooperative Application/OS DRAM Fault Recovery.
Berlin, Heidelberg: Springer Berlin Heidelberg, 2012, pp. 241–250.
[14] D. Li, Z. Chen, P. Wu, and J. S. Vetter, “Rethinking algorithm-based
fault tolerance with a cooperative software-hardware approach,” in
Proceedings of the International Conference on High Performance
Computing, Networking, Storage and Analysis, ser. SC ’13. New
York, NY, USA: ACM, 2013, pp. 44:1–44:12. [Online]. Available:
http://doi.acm.org/10.1145/2503210.2503226
[15] Z. Chen, “Online-abft: An online algorithm based fault tolerance
scheme for soft error detection in iterative methods,” in
Proceedings of the 18th ACM SIGPLAN Symposium on Principles
and Practice of Parallel Programming, ser. PPoPP ’13. New
York, NY, USA: ACM, 2013, pp. 167–176. [Online]. Available:
http://doi.acm.org/10.1145/2442516.2442533
[16] J. A. Gunnels, D. S. Katz, E. S. Quintana-Orti, and R. A. V. de Gejin,
“Fault-tolerant high-performance matrix multiplication: theory and practice,” in 2001 International Conference on Dependable Systems and
Networks, July 2001, pp. 47–56.
[17] M. J. Turmon, R. Granat, D. S. Katz, and J. Z. Lou, “Tests and
tolerances for high-performance software-implemented fault detection,”
IEEE Trans. Computers, vol. 52, no. 5, pp. 579–591, 2003. [Online].
Available: http://dx.doi.org/10.1109/TC.2003.1197125
[18] J. Sloan, R. Kumar, and G. Bronevetsky, “Algorithmic approaches to
low overhead fault detection for sparse linear algebra,” in IEEE/IFIP
International Conference on Dependable Systems and Networks (DSN
2012), June 2012, pp. 1–12.
[19] O. Subasi, S. Di, L. Bautista-Gomez, P. Balaprakash, O. Unsal,
J. Labarta, A. Cristal, and F. Cappello, “Spatial support vector regression
to detect silent errors in the exascale era,” in 2016 16th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid),
May 2016, pp. 413–424.
[20] M. Salloum, J. R. Mayo, and R. C. Armstrong, “In-situ mitigation
of silent data corruption in pde solvers,” in Proceedings of the ACM
Workshop on Fault-Tolerance for HPC at Extreme Scale, ser. FTXS ’16.
New York, NY, USA: ACM, 2016, pp. 43–48. [Online]. Available:
http://doi.acm.org/10.1145/2909428.2909433
[21] S. Di, E. Berrocal, and F. Cappello, “An efﬁcient silent data corruption
detection method with error-feedback control and even sampling for hpc
applications,” in Cluster, Cloud and Grid Computing (CCGrid), 2015
15th IEEE/ACM International Symposium on. IEEE, 2015, pp. 271–
280.
[22] K. S. Yim, “Characterization of impact of transient faults and detection
of data corruption errors in large-scale n-body programs using graphics processing units,” in IEEE International Parallel and Distributed
Processing Symposium (IPDPS), 2014, pp. 458–467.
[23] E. Berrocal, L. Bautista-Gomez, S. Di, Z. Lan, and F. Cappello,
“Lightweight silent data corruption detection based on runtime data
analysis for HPC applications,” in Proceedings of the 24th International
Symposium on High-Performance Parallel and Distributed Computing.
New York, NY, USA: ACM, 2015, pp. 275–278.
[24] K. Ferreira, J. Stearley, J. H. Laros, R. Oldﬁeld, K. Pedretti,
R. Brightwell, R. Riesen, P. G. Bridges, and D. Arnold, “Evaluating
the viability of process replication reliability for exascale systems,” in
High Performance Computing, Networking, Storage and Analysis (SC),
2011 International Conference for. IEEE, 2011, pp. 1–12.
[25] D. Fiala, F. Mueller, C. Engelmann, R. Riesen, K. Ferreira, and
R. Brightwell, “Detection and correction of silent data corruption
for large-scale high-performance computing,” in Proceedings of the
International Conference on High Performance Computing, Networking,
Storage and Analysis. IEEE Computer Society Press, 2012, p. 78.
[26] J. Elliott, K. Kharbas, D. Fiala, F. Mueller, K. Ferreira, and C. Engelmann, “Combining partial redundancy and checkpointing for hpc,”
in Proceedings of the 2012 IEEE 32Nd International Conference on
Distributed Computing Systems, ser. ICDCS ’12. Washington, DC,
USA: IEEE Computer Society, 2012, pp. 615–626.
[27] E. Berrocal, L. Bautista-Gomez, S. Di, Z. Lan, and F. Cappello,
Exploring Partial Replication to Improve Lightweight Silent Data Corruption Detection for HPC Applications. Cham: Springer International
Publishing, 2016, pp. 419–430.
[28] D. Fiala, F. Mueller, and K. B. Ferreira, “Flipsphere: A software-based
dram error detection and correction library for hpc,” in Distributed
Simulation and Real Time Applications (DS-RT), 2016 IEEE/ACM 20th
International Symposium on. IEEE, 2016, pp. 19–28.