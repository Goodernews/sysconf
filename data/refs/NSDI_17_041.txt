[1] H. Agrawal and J. R. Horgan. Dynamic program
slicing. In Proc. PLDI, 1990.
[2] C. J. Anderson, N. Foster, A. Guha, J.-B. Jeannin, D. Kozen, C. Schlesinger, and D. Walker.
NetKAT: Semantic foundations for networks. In
Proc. POPL, 2014.
[3] A. Bates, D. Tian, K. R. Butler, and T. Moyer.
Trustworthy whole-system provenance for the
Linux kernel. In Proc. USENIX Security, 2015.
[4] R. Beckett, X. K. Zou, S. Zhang, S. Malik, J. Rexford, and D. Walker. An assertion language for debugging SDN applications. In Proc. HotSDN, 2014.
[5] T. Benson, A. Akella, and D. A. Maltz. Network
traffic characteristics of data centers in the wild. In
Proc. IMC, 2010.
[6] P. Buneman, S. Khanna, and T. Wang-Chiew. Why
and where: A characterization of data provenance.
In Proc. ICDT, 2001.
[7] M. Canini, D. Venzano, P. Perešı́ni, D. Kostić, and
J. Rexford. A NICE way to test openflow applications. In Proc. NSDI, 2012.
[8] S. Chandra, E. Torlak, S. Barman, and R. Bodik.
Angelic debugging. In Proc. ICSE, 2011.
[9] A. Chapman and H. Jagadish. Why not? In Proc.
SIGMOD, 2009.
[10] A. Chen, Y. Wu, A. Haeberlen, W. Zhou, and B. T.
Loo. The Good, the Bad, and the Differences: Better Network Diagnostics with Differential Provenance. In Proc. SIGCOMM, 2016.
[11] L. De Moura and N. Bjørner. Z3: An efficient SMT
solver. In Proc. TACAS, 2008.
[12] M. Dietz, S. Shekhar, Y. Pisetsky, A. Shu, and D. S.
Wallach. Quire: Lightweight provenance for smart
phone operating systems. In Proc. USENIX Security, 2011.
[13] R. Durairajan, J. Sommers, and P. Barford.
Controller-agnostic SDN debugging. In Proc.
CoNEXT, 2014.
[14] D. Erickson. The Beacon OpenFlow controller. In
Proc. HotSDN, 2013.
[15] N. Feamster and H. Balakrishnan. Detecting BGP
configuration faults with static analysis. In Proc.
NSDI, 2005.
[16] A. Feldmann, O. Maennel, Z. M. Mao, A. Berger,
and B. Maggs. Locating Internet routing instabilities. In Proc. SIGCOMM, 2004.
[17] A. Fogel, S. Fung, L. Pedrosa, M. WalraedSullivan, R. Govindan, R. Mahajan, and T. Millstein. A general approach to network configuration
analysis. In Proc. NSDI, 2015.
14
[18] A. Gehani and D. Tariq. SPADE: Support for
provenance auditing in distributed environments. In
Proc. Middleware, 2012.
[19] G. Giannikis, G. Alonso, and D. Kossmann.
SharedDB: Killing one thousand queries with one
stone. In Proc. VLDB, 2012.
[20] Z. Guo, S. McDirmid, M. Yang, L. Zhuang,
P. Zhang, Y. Luo, T. Bergan, M. Musuvathi,
Z. Zhang, and L. Zhou. Failure recovery: When
the cure is worse than the disease. In Proc. HotOS,
2013.
[21] N. Handigol, B. Heller, V. Jeyakumar, D. Mazières,
and N. McKeown. I know what your packet did
last hop: Using packet histories to troubleshoot networks. In Proc. NSDI, 2014.
[22] H. Hojjat, P. Reummer, J. McClurgh, P. Cerny, and
N. Foster. Optimizing Horn solvers for network repair. In Proc. FMCAD, 2016.
[23] E. Katz-Bassett, H. V. Madhyastha, J. P. John,
A. Krishnamurthy, D. Wetherall, and T. Anderson.
Studying black holes in the Internet with Hubble.
In Proc. NSDI, 2008.
[24] P. Kazemian, M. Chang, H. Zeng, G. Varghese,
N. McKeown, and S. Whyte. Real time network
policy checking using header space analysis. In
Proc. NSDI, 2013.
[25] P. Kazemian, G. Varghese, and N. McKeown.
Header space analysis: Static checking for networks. In Proc. NSDI, 2012.
[26] A. Khurshid, X. Zou, W. Zhou, M. Caesar, and P. B.
Godfrey. VeriFlow: Verifying network-wide invariants in real time. In Proc. NSDI, 2013.
[27] D. Kim, J. Nam, J. Song, and S. Kim. Automatic patch generation learned from human-written
patches. In Proc. ICSE, 2013.
[28] H. Kim, J. Reich, A. Gupta, M. Shahbaz, N. Feamster, and R. Clark. Kinetic: Verifiable dynamic network control. In Proc. NSDI, 2015.
[29] B. Lantz, B. Heller, and N. McKeown. A network
in a laptop: rapid prototyping for software-defined
networks. In Proc. HotNets, 2010.
[30] C. Le Goues, M. Dewey-Vogt, S. Forrest, and
W. Weimer. A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each.
In Proc. ICSE, 2012.
[31] Z. Li, S. Lu, S. Myagmar, and Y. Zhou. CP-Miner:
A tool for finding copy-paste and related bugs in
operating system code. In Proc. OSDI, 2004.
[32] Z. Li, L. Tan, X. Wang, S. Lu, Y. Zhou, and C. Zhai.
Have things changed now?: An empirical study of
bug characteristics in modern open source software.
In Proc. ASID, 2006.
[33] D. Logothetis, S. De, and K. Yocum. Scalable lineage capture for debugging DISC analysis. Technical Report CSE2012-0990, UCSD, 2012.
[34] B. T. Loo, T. Condie, M. Garofalakis, D. E. Gay,
J. M. Hellerstein, P. Maniatis, R. Ramakrishnan,
T. Roscoe, and I. Stoica. Declarative networking.
Comm. ACM, 52(11):87–95, 2009.
[35] S. Madden, M. Shah, J. M. Hellerstein, and V. Raman. Continuously adaptive continuous queries
over streams. In Proc. SIGMOD, 2002.
[36] H. Mai, A. Khurshid, R. Agarwal, M. Caesar, P. B.
Godfrey, and S. T. King. Debugging the data plane
with Anteater. In Proc. SIGCOMM, 2011.
[37] C. Monsanto, J. Reich, N. Foster, J. Rexford, and
D. Walker. Composing software-defined networks.
In Proc. NSDI, 2013.
[38] K.-K. Muniswamy-Reddy, D. A. Holland,
U. Braun, and M. Seltzer. Provenance-aware
storage systems. In Proc. USENIX ATC, 2006.
[39] T. Nelson, A. D. Ferguson, M. J. Scheer, and S. Krishnamurthi. Tierless programming and reasoning for software-defined networks. In Proc. NSDI,
2014.
[40] H. D. T. Nguyen, D. Qi, A. Roychoudhury, and
S. Chandra. SemFix: Program repair via semantic analysis. In Proc. ICSE, 2013.
[41] K. Pan, S. Kim, and E. J. Whitehead Jr. Toward an
understanding of bug fix patterns. Empirical Software Engineering, 14(3):286–315, 2009.
[42] R. Perera, U. A. Acar, J. Cheney, and P. B. Levy.
Functional programs that explain their work. In
Proc. ICFP, 2012.
[43] J. H. Perkins, S. Kim, S. Larsen, S. Amarasinghe,
J. Bachrach, M. Carbin, C. Pacheco, F. Sherwood,
S. Sidiroglou, G. Sullivan, W.-F. Wong, Y. Zibin,
M. D. Ernst, and M. Rinard. Automatically patching errors in deployed software. In Proc. SOSP,
2009.
[44] RapidNet project web page. http://netdb.
cis.upenn.edu/rapidnet/.
[45] S. Saha, S. Prabhu, and P. Madhusudan. NetGen:
Synthesizing data-plane configurations for network
policies. In Proc. SOSR, 2015.
[46] C. Scott, A. Panda, V. Brajkovic, G. Necula, A. Krishnamurthy, and S. Shenker. Minimizing faulty
executions of distributed systems. In Proc. NSDI,
2016.
[47] C. Scott, A. Wundsam, B. Raghavan, A. Panda,
A. Or, J. Lai, E. Huang, Z. Liu, A. ElHassany, S. Whitlock, H. Acharya, K. Zarifis, and
S. Shenker. Troubleshooting blackbox SDN control
software with minimal causal sequences. In Proc.
[48] S. Sidiroglou and A. D. Keromytis. Countering network worms through automatic patch generation.
Proc. IEEE Security and Privacy, 2005.
[49] K. Subramanian, L. DAntoni, and A. Akella. Genesis: Synthesizing forwarding tables in multi-tenant
networks. In Proc. POPL, 2017.
[50] Q. T. Tran and C.-Y. Chan. How to conquer whynot questions. In Proc. SIGMOD, 2010.
[51] Trema: Full-Stack OpenFlow Framework in Ruby
and C, 2019. https://trema.github.io/
trema/.
[52] M. Weiser. Program slicing. In Proc. ICSE, 1981.
[53] Y. Wu, A. Chen, A. Haeberlen, W. Zhou, and B. T.
Loo. Automated network repair with meta provenance. In Proc. HotNets, 2015.
[54] Y. Wu, A. Chen, A. Haeberlen, W. Zhou, and B. T.
Loo. Automated bug removal for software-defined
networks. Technical Report MS-CIS-17-02, University of Pennsylvania, 2017.
[55] Y. Wu, M. Zhao, A. Haeberlen, W. Zhou, and
B. T. Loo. Diagnosing missing events in distributed
systems with negative provenance. In Proc. SIGCOMM, 2014.
[56] A. Wundsam, D. Levin, S. Seetharaman, and
A. Feldmann. OFRewind: Enabling record and
replay troubleshooting for networks. In Proc.
USENIX ATC, 2011.
[57] M. Zaharia, M. Chowdhury, T. Das, A. Dave, J. Ma,
M. McCauley, M. J. Franklin, S. Shenker, and
I. Stoica. Resilient distributed datasets: A faulttolerant abstraction for in-memory cluster computing. In Proc. NSDI, 2012.
[58] H. Zeng, P. Kazemian, G. Varghese, and N. McKeown. Automatic test packet generation. In Proc.
CoNEXT, 2012.
[59] H. Zeng, S. Zhang, F. Ye, V. Jeyakumar, M. Ju,
J. Liu, N. McKeown, and A. Vahdat. Libra: Divide
and conquer to verify forwarding tables in huge networks. In Proc. NSDI, 2014.
[60] S. Zhang and M. D. Ernst. Automated diagnosis of
software configuration errors. In Proc. ICSE, 2013.
[61] W. Zhou, Q. Fei, A. Narayan, A. Haeberlen, B. T.
Loo, and M. Sherr. Secure network provenance. In
Proc. SOSP, 2011.
[62] W. Zhou, S. Mapara, Y. Ren, Y. Li, A. Haeberlen,
Z. Ives, B. T. Loo, and M. Sherr. Distributed timeaware provenance. In Proc. VLDB, 2013.
[63] W. Zhou, M. Sherr, T. Tao, X. Li, B. T. Loo, and
Y. Mao. Efficient querying and maintenance of network provenance at Internet-scale. In Proc. SIGMOD, 2010.
