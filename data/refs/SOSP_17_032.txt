
[1] 2015. Idle Page Tracking. (2015). Retrieved 25.8.2017 from https:
//www.kernel.org/doc/Documentation/vm/idle_page_tracking.txt

[2] 2016. (March 2016). Retrieved 25.8.2017 from http://www.cve.mitre.
org/cgi-bin/cvename.cgi?name=C VE- 2016-3272

[3] 2016. STREAM: Sustainable Memory Bandwidth in High Performance
Computers. (2016). Retrieved 25.8.2017 from https://www.cs. virginia.
edu/stream/

[4] 2017. memtier benchmark: A High-Throughput Benchmarking Tool
for Redis and Memcached. (2017). Retrieved 25.8.2017 from https:
//github.com/RedisLabs/memtier_benchmark

[5] 2017. WRK - a HTTP Benchmarking Tool. (2017). Retrieved 25.8.2017
from https://github.com/wg/wrk

[6] Advanced Micro Device. 2013. AMD64 Architecture Programmer’s
Manual Volume 2: System Programming.

[7] José Bacelar Almeida, Manuel Barbosa, Gilles Barthe, Francois Dupressoir, and Michael Emmi. 2016. Verifying Constant-Time Implementations (SEC’16).

[8] Andrea Arcangeli. 2010. Transparent Hugepage Support. KVM Forum
(2010).

[9] Andrea Arcangeli, Izik Eidus, and Chris Wright. 2009. Increasing
Memory Density by Using KSM (OLS’09).

[10] Sean Barker, Timothy Wood, Prashant Shenoy, and Ramesh Sitaraman.
2012. An Empirical Study of Memory Sharing in Virtual Machines
(USENIX ATC’ 12).

[11] Antonio Barresi, Kaveh Razavi, Mathias Payer, and Thomas R. Gross.
2015. CAIN: Silently Breaking ASLR in the Cloud (WOOT’15).

[12] Ravi Bhargava, Benjamin Serebrin, Francesco Spadini, and Srilatha
Manne. 2008. Accelerating Two-dimensional Page Walks for Virtualized Systems (ASPLOS XIII).

[13] Erik Bosman, Kaveh Razavi, Herbert Bos, and Cristiano Giuffrida.
2016. Dedup Est Machina: Memory Deduplication as an Advanced
Exploitation Vector (SP’16).

[14] Sergey Bratus, Michael E. Locasto, Meredith L. Patterson, Len Sassaman, , and Anna Shubina. 2011. Exploit Programming: From Buffer
Overflows to “Weird Machines” and Theory of Computation (;login:).

[15] Yu Cai, Saugata Ghose, Yixin Luo, Ken Mai, Onur Mutlu, and Erich F.
Haratsch. 2017. Vulnerabilities in MLC NAND Flash Memory Programming: Experimental Analysis, Exploits, and Mitigation Techniques
(HPCA’17).

[16] Chao-Rui Chang, Jan-Jan Wu, and Pangfeng Liu. 2011. An Empirical
Study on Memory Sharing of Virtual Machines for Server Consolidation
(ISPA’I1).

[17] Google. 2017. Android Low RAM Configuration. (2017). Retrieved
25.8.2017 from https://goo.gl/Rz4B6l

[18] Abel Gordon, Nadav Amit, Nadav Har’El, Muli Ben-Yehuda, Alex
Landau, Assaf Schuster, and Dan Tsafrir. 2012. ELI: Bare-metal Performance for I/O Virtualization (ASPLOS XVII).

[19] Ben Gras, Kaveh Razavi, Erik Bosman, Herbert Bos, and Cristiano
Giuffrida. 2017. ASLR on the Line: Practical Cache Attacks on the
MMU (NDSS’17).

[20] Daniel Gruss, Cementine Maurice, Anders Fogh, Moritz Lipp, and
Stefan Mangard. 2016. Prefetch Side-Channel Attacks: Bypassing
SMAP and Kernel ASLR (CCS’16).

[21] Fan Guo, Yongkun Li, Yinlong Xu, Song Jiang, and John C. S. Lui.
2017. SmartMD: A High Performance Deduplication Engine with
Mixed Pages (ATC’17).

[22] Michael R. Hines, Umesh Deshpande, and Kartik Gopalan. 2009. Postcopy Live Migration of Virtual Machines (OSR’09).

SOSP ’17, October 28, 2017, Shanghai, China

[23] Intel. 2017. Intel Clear Containers: Building a Virtualization Continuum.
(2017). White paper.

[24] Intel Corporation. 2016. Intel 64 and IA-32 Architectures Software
Developer’s Manual.

[25] Gorka Irazoqui, Mehmet Sinan Incl, Thomas Eisenbarth, and Berk
Sunar. 2015. Know Thy Neighbor: Crypto Library Detection in Cloud
(PETS’15).

[26] Samira Khan, Donghyuk Lee, and Onur Mutlu. 2016. PARBOR: An
Efficient System-Level Technique to Detect Data-Dependent Failures
in DRAM (DSN’J6).

[27] Yoongu Kim, Ross Daly, Jeremie Kim, Chris Fallin, Ji Hye Lee,
Donghyuk Lee, Chris Wilkerson, Konrad Lai, and Onur Mutlu. 2014.
Flipping Bits in Memory Without Accessing Them: An Experimental
Study of DRAM Disturbance Errors (ISCA’14).

[28] David Kohlbrenner and Hovav Shacham. 2016. Trusted Browsers for
Uncertain Times (SEC’/6).

[29] Youngjin Kwon, Hangchen Yu, Simon Peter, Christopher J. Rossbach,
and Emmett Witchel. 2016. Coordinated and Efficient Huge Page
Management with Ingens (OSDI’16).

[30] Fangfei Liu, Yuval Yarom, Qian Ge, Gernot Heiser, and Ruby B. Lee.
2015. Last-Level Cache Side-Channel Attacks are Practical (SP’/5).

[31] Robert Martin, John Demme, and Simha Sethumadhavan. 2012. TimeWarp: Rethinking Timekeeping and Performance Monitoring Mechanisms to Mitigate Side-channel Attacks (ISCA’12).

[32] Yossef Oren, Vasileios P. Kemerlis, Simha Sethumadhavan, and Angelos D. Keromytis. 2015. The Spy in the Sandbox: Practical Cache
Attacks in JavaScript and their Implications (CCS’15).

[33] Dag Arne Osvik, Adi Shamir, and Eran Tromer. 2006. Cache Attacks
and Countermeasures: The Case of AES (CT-RSA’06).

[34] R. Owens and Weichao Wang. 2011. Non-Interactive OS Fingerprinting Through Memory De-Duplication Technique in Virtual Machines
(IPCCC’11).

[35] PaX Team. 2003. Address Space Layout Randomization. Phrack,
March 2003.

[36] Mathias Payer. 2016. HexPADS: A Platform to Detect “Stealth” Attacks
(ESSoS’ 16).

[37] Kaveh Razavi, Ben Gras, Erik Bosman, Bart Preneel, Cristiano Giuffrida, and Herbert Bos. 2016. Flip Feng Shui: Hammering a Needle in
the Software Stack (SEC’16).

[38] Mark Seaborn. 2015. Exploiting the DRAM Rowhammer Bug to Gain
Kernel Privileges (BHUSA’15).

[39] Kuniyasu Suzaki, Kengo lijima, Toshiki Yagi, and Cyrille Artho. 2011.
Memory Deduplication As a Threat to the Guest OS (EUROSEC’11).

[40] Victor van der Veen, Yanick Fratantonio, Martina Lindorfer, Daniel
Gruss, Clementine Maurice, Giovanni Vigna, Herbert Bos, Kaveh
Razavi, and Cristiano Giuffrida. 2016. Drammer: Deterministic
Rowhammer Attacks on Mobile Platforms (CCS’/6).

[41] VMWare. 2015. Disallowing inter- Virtual Machine Transparent Page
Sharing. (2015). Retrieved 25.8.2017 from https://goo.gl/uHOzNP

[42] Mark Wagner. 2011. KVM Performance Improvements and Optimizations. KVM Forum (2011).

[43] Jidong Xiao, Zhang Xu, Hai Huang, and Haining Wang. 2012. A Covert
Channel Construction in a Virtualized Environment (CCS’/2).

[44] Yuval Yarom and Katrina Falkner. 2014. FLUSH+RELOAD: A High
Resolution, Low Noise, L3 Cache Side-channel Attack (SEC’/4).

[45] Ziqiao Zhou, Michael K. Reiter, and Yingian Zhang. 2016. A Software
Approach to Defeating Side Channels in Last-Level Caches (CCS’/6).
