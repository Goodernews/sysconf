[1] N. Agarwal, V. Prabhakaran, T. Wobber, J. D. Davis,
M. Manasse, and R. Panigrahy. Design Tradeoffs for SSD
Performance. In Proc. USENIX ATC, Boston, MA, June
2008.
[2] Amazon Relational Database Service.
https://aws.amazon.com/rds/.
[3] Amazon Relational Database Service Pricing.
https://aws.amazon.com/rds/pricing/.
[4] Amazon’s SSD Backed EBS.
https://aws.amazon.com/blogs/aws/newssd-backed-elastic-block-storage/.
[5] Azure DocumentDB.
https://azure.microsoft.com/enus/services/documentdb/.
[6] Azure DocumentDB Pricing.
https://azure.microsoft.com/enus/pricing/details/documentdb/.
[7] Azure Premium Storage.
https://azure.microsoft.com/enus/documentation/articles/storagepremium-storage/.
[8] Azure Service Fabric.
https://azure.microsoft.com/enus/services/service-fabric/.
[9] Azure SQL Database.
https://azure.microsoft.com/enus/services/sql-database/.
[10] Azure SQL Database Pricing.
https://azure.microsoft.com/enus/pricing/details/sql-database/.
[11] S. Blagodurov, S. Zhuravlev, M. Dashti, and A. Fedorova.
A Case for NUMA-aware Contention Management on
Multicore Systems. In Proc. USENIX ATC’11, Berkeley,
CA, June 2011.
[12] Block IO Bandwidth (Blkio) in Docker.
https://docs.docker.com/engine/
reference/run/#block-io-bandwidthblkio-constraint.
[13] Block IO Controller.
https://www.kernel.org/doc/
Documentation/cgroup-v1/blkiocontroller.txt.
[14] Y. Bu, H. Lee, and J. Madhavan. Comparing SSDplacement Strategies to scale a Database-in-the-Cloud. In
Proc. SoCC’13, Santa Clara, CA, Oct. 2013.
[15] A. M. Caulfield, T. I. Mollov, L. Eisner, A. De, J. Coburn,
and S. Swanson. Providing safe, user space access to fast,
solid state disks. In Proc. ACM ASPLOS’12, London,
United Kingdom, Mar. 2012.
[16] CGROUPS.
https://www.kernel.org/doc/
Documentation/cgroup-v1/cgroups.txt.
[17] F. Chen, R. Lee, and X. Zhang. Essential Roles of Exploiting Internal Parallelism of Flash Memory based Solid
State Drives in High-Speed Data Processing. In Proc.
HPCA’11, San Antonio, Texas, Feb. 2011.
[18] CNEX Labs.
http://www.cnexlabs.com/index.php.
[19] B. F. Cooper, A. Silberstein, E. Tam, R. Ramakrishnan,
and R. Sears. Benchmarking cloud serving systems with
ycsb. In Proc. SoCC’12, Indianapolis, Indiana, June
2010.
[20] FIO Benchmarks.
https://linux.die.net/man/1/fio.
[21] Fusion-io ioDrive.
https://www.sandisk.com/business/
datacenter/products/flash-devices/
pcie-flash/sx350.
[22] Google Cloud Platform: Local SSDs.
https://cloud.google.com/compute/docs/
disks/local-ssd.
[23] Google Cloud SQL.
https://cloud.google.com/sql/.
[24] A. Gupta, Y. Kim, and B. Urgaonkar. DFTL: A Flash
Translation Layer Employing Demand-based Selective
Caching of Page-level Address Mappings. In Proc. ACM
ASPLOS, Washington, DC, Mar. 2009.
[25] M. Hao, G. Soundararajan, D. Kenchammana-Hosekote,
A. A. Chien, and H. S. Gunawi. The Tail at Store: A Revelation from Millions of Hours of Disk and SSD Deployments. In Proc. FAST’16, Santa Clara, CA, Feb. 2016.
[26] J. He, D. Nguyen, A. C. Arpaci-Dusseau, and R. H.
Arpaci-Dusseau. Reducing File System Tail Latencies
with Chopper. In Proc. FAST’15, Santa Clara, CA, Feb.
2015.
[27] J. Huang, A. Badam, M. K. Qureshi, and K. Schwan. Unified Address Translation for Memory-Mapped SSD with
FlashMap. In Proc. ISCA’15, Portland, OR, June 2015.
[28] Intel Inc. Improving Real-Time Performance by Utilizing
Cache Allocation Technology. White Paper, 2015.
[29] Iyswarya Narayanan and Di Wang and Myeongjae Jeon
and Bikash Sharma and Laura Caulfield and Anand Sivasubramaniam and Ben Cutler and Jie Liu and Badriddine
Khessib and Kushagra Vaid. SSD Failures in Datacenters:
What? When? and Why? In Proc. ACM SYSTOR’16,
Haifa, Israel, June 2016.
[30] V. Jeyakumar, M. Alizadeh, D. Mazieres, B. Prabhakar,
C. Kim, and A. Greenberg. EyeQ: Practical Network Performance Isolation at the Edge. In Proc. NSDI’13, Berkeley, CA, Apr. 2013.
[31] W. K. Josephson, L. A. Bongo, K. Li, and D. Flynn. DFS:
A File System for Virtualized Flash Storage. ACM Trans.
on Storage, 6(3):14:1–14:25, 2010.
[32] M. Jung and M. K. Ellis H. Wilson III. Physically Addressed Queueing (PAQ): Improving Parallelism in Solid
State Disks. In Proc. ISCA’12, Portland, OR, June 2012.
[33] J.-U. Kang, J. Hyun, H. Maeng, and S. Cho. The MultiStreamed Solid-State Drive. In Proc. HotStorage’14,
Philadelphia, PA, June 2014.
[34] J. Kim, D. Lee, and S. H. Noh. Towards SLO Complying
SSDs Through OPS Isolation. In Proc. FAST’15, Santa
Clara, CA, Feb. 2015.
[35] W.-H. Kim, B. Nam, D. Park, and Y. Won. Resolving
Journaling of Journal Anomaly in Android IO: Multiversion B-tree with Lazy Split. In FAST’14, Santa Clara,
CA, Feb. 2014.
[36] R. Konishi, Y. Amagai, K. Sato, H. Hifumi, S. Kihara, and
S. Moriai. The Linux implementation of a log-structured
file system. SIGOPS OSR, 40(3), 2006.
[37] C. Lee, D. Sim, J.-Y. Hwang, and S. Cho. F2FS: A New
File System for Flash Storage. In Proc. FAST’15, Santa
Clara, CA, Feb. 2015.
[38] S. Lee, M. Liu, S. Jun, S. Xu, J. Kim, and Arvind.
Application-Managed Flash. In Proc. FAST’16, Santa
Clara, CA, Feb. 2016.
[39] LevelDB.
https://github.com/google/leveldb.
[40] J. Leverich and C. Kozyrakis. Reconciling High Server
Utilization and Sub-millisecond Quality-of-Service. In
Proc. EuroSys’14, Amsterdam, Netherlands, Apr. 2014.
[41] N. Li, H. Jiang, D. Feng, and Z. Shi. PSLO: Enforcing the
Xth Percentile Latency and Throughput SLOs for Consolidated VM Storage. In Proc. EuroSys’16, London, United
Kingdom, Apr. 2016.
[42] D. Lo, L. Cheng, R. Govindaraju, P. Ranganathan, and
C. Kozyrakis. Heracles: Improving Resource Efficiency
at Scale. In Proc. ISCA’15, Portland, OR, June 2015.
[43] J. Mars, L. Tang, R. Hundt, K. Skadron, and M. L. Soffa.
Bubble-Up: Increasing Utilization in Modern Warehouse
Scale Computers via Sensible Co-locations. In Proc. MICRO’11, Porto Alegre, Brazil, Dec. 2011.
[44] Matias Bjorling and Javier Gonzalez and Philippe Bonnet. LightNVM: The Linux Open-Channel SSD Subsystem. In Proc. USENIX FAST’17, Santa Clara, CA, Feb.
2016.
[45] H. Menon and L. Kale. A Distributed Dynamic Load Balancer for Iterative Applications. In Proc. SC’13, Denver,
Colorado, Nov. 2013.
[46] Microsoft’s Open Source Cloud Hardware.
https://azure.microsoft.com/enus/blog/microsoft-reimagines-opensource-cloud-hardware/.
[47] S. P. Muralidhara, L. Subramanian, O. Mutlu, M. Kandemir, and T. Moscibroda. Reducing Memory Interference in Multicore Systems via Application-Aware Memory Channel Partitioning. In Proc. MICRO’11, Porto Alegre, Brazil, Dec. 2011.
[48] R. Nathuji, A. Kansal, and A. Ghaffarkhah. Q-Clouds:
Managing Performance Interference Effects for QoSAware Clouds. In Proc. EuroSys’12, Paris, France, Apr.
2010.
[49] J. Ouyang, S. Lin, S. Jiang, Y. Wang, W. Qi, J. Cong, and
Y. Wang. SDF: Software-Defined Flash for Web-Scale
Internet Storage Systems. In Proc. ACM ASPLOS, Salt
Lake City, UT, Mar. 2014.
[50] X. Ouyang, D. Nellans, R. Wipfel, D. Flynn, and D. K.
Panda. Beyond Block I/O: Rethinking Traditional Storage
Primitives. In Proc. HPCA’11, San Antonio, Texas, Feb.
2014.
[51] M. Rosenblum and J. K. Ousterhout. The Design and
Implementation of a Log-Structured File System. ACM
Trans. on Computer Systems, 10(1):26–52, Feb. 1992.
[52] D. Sanchez and C. Kozyrakis. Vantage: Scalable and Efficient Fine-Grain Cache Partitioning. In Proc. ISCA’11,
San Jose, CA, June 2011.
[53] S. Seshadri, M. Gahagan, S. Bhaskaran, T. Bunker, A. De,
Y. Jin, Y. Liu, and S. Swanson. Willow: A UserProgrammable SSD. In Proc. OSDI’14, Broomfield, CO,
Oct. 2014.
[54] K. Shen, S. Park, and M. Zhu. Journaling of journal is
(almost) free. In Proc. FAST’14, Berkeley, CA, 2014.
[55] Shore-MT.
https://sites.google.com/site/
shoremt/.
[56] D. Shue and M. J. Freedman. From Application Requests
to Virtual IOPs: Provisioned Key-Value Storage with Libra. In Proc. EuroSys’14, Amsterdam, Netherlands, Apr.
2014.
[57] D. Shue, M. J. Freedman, and A. Shaikh. Performance
Isolation and Fairness for Multi-Tenant Cloud Storage. In
Proc. OSDI’12, Hollywood, CA, Oct. 2012.
[58] D. Shukla, S. Thota, K. Raman, M. Gajendran, A. Shah,
S. Ziuzin, K. Sundama, M. G. Guajardo, A. Wawrzyniak, S. Boshra, R. Ferreira, M. Nassar, M. Koltachev,
J. Huang, S. Sengupta, J. Levandoski, and D. Lomet.
Schema-agnostic indexing with azure documentdb. In
Proc. VLDB’15, Kohala Coast, Hawaii, Sept. 2015.
[59] A. Singh, M. Korupolu, and D. Mohapatra. ServerStorage Virtualization: Integration and Load Balancing in
Data Centers. In Proc. SC’08, Austin, Texas, Nov. 2008.
[60] D. Skourtis, D. Achlioptas, N. Watkins, C. Maltzahn, and
S. Brandt. Flash on rails: consistent flash performance
through redundancy. In Proc. USENIX ATC’14, Philadelphia, PA, June 2014.
[61] X. Song, J. Yang, and H. Chen. Architecting Flashbased Solid-State Drive for High-performance I/O Virtualization. IEEE Computer Architecture Letters, 13:61–64,
2014.
[62] SQL Database Options and Performance: Understand
What’s Available in Each Service Tier.
https://azure.microsoft.com/en-us/
documentation/articles/sql-databaseservice-tiers/#understanding-dtus.
[63] SR-IOV for SSDs.
http://www.snia.org/sites/default/
files/Accelerating%20Storage%20Perf%
20in%20Virt%20Servers.pdf.
[64] Sungyong Ahn and Kwanghyun La and Jihong Kim.
Improving I/O Resource Sharing of Linux Cgroup for
NVMe SSDs on Multi-core Systems. In Proc. USENIX
HotStorage’16, Denver, CO, June 2016.
[65] TATP Benchmark.
http://tatpbenchmark.sourceforge.net/.
[66] E. Thereska, H. Ballani, G. O’Shea, T. Karagiannis,
A. Rowstron, T. Talpey, R. Black, and T. Zhu. IOFlow:
A Software-Defined Storage Architecture. In Proc.
SOSP’13, Farmington, PA, Nov. 2013.
[67] Throtting IO with Linux.
https://fritshoogland.wordpress.com/
2012/12/15/throttling-io-with-linux.
[68] Token Bucket Algorithm.
https://en.wikipedia.org/wiki/token_
bucket.
[69] TPCB Benchmark.
http://www.tpc.org/tpcb/.
[70] TPCC Benchmark.
http://www.tpc.org/tpcc/.
[71] TPCE Benchmark.
http://www.tpc.org/tpce/.
[72] Traffic Control HOWTO.
http://linux-ip.net/articles/TrafficControl-HOWTO/.
[73] B. Trushkowsky, P. Bodik, A. Fox, M. J. Franklin, M. I.
Jordan, and D. A. Patterson. The SCADS Director: Scaling a Distributed Storage System Under Stringent Performance Requirements. In Proc. FAST’11, Santa Clara, CA,
Feb. 2016.
[74] H. Wang and P. Varman. Balancing Fairness and Efficiency in Tiered Storage Systems with Bottleneck-Aware
Allocation. In Proc. FAST’14, Santa Clara, CA, Feb.
2014.
[75] J. Wang and Y. Hu. WOLF: A Novel reordering write
buffer to boost the performance of log-structured file systems. In Proc. FAST’02, Monterey, CA, Jan. 2002.
[76] P. Wang, G. Sun, S. Jiang, J. Ouyang, S. Lin, C. Zhang,
and J. Cong. An Effective Design and Implementation
of LSM-Tree based Key-Value Store on Open-Channel
SSD. In Proc. EuroSys’14, Amsterdam, the Netherlands,
Apr. 2014.
[77] J. Yang, N. Plasson, G. Gillis, N. Talagala, and S. Sundararaman. Don’t stack your Log on my Log. In Proc.
INFLOW’14, Broomfield, CO, Oct. 2014.
[78] S. Yang, T. Harter, N. Agrawal, S. S. Kowsalya, A. Krishnamurthy, S. AI-Kiswany, R. T. Kaushik, A. C. ArpaciDusseau, and R. H. Arpaci-Dusseau. Split-Level I/O
Scheduling. In Proc. SOSP’15, Monterey, CA, Oct. 2015.
[79] N. Zhang, J. Tatemura, J. M. Patel, and H. Hacigumus. Re-evaluating Designs for Multi-Tenant OLTP
Workloads on SSD-based I/O Subsystems. In Proc. SIGMOD’14, Snowbird, UT, June 2014.
[80] Y. Zhang, L. P. Arulraj, A. C. Arpaci-Dusseau, and R. H.
Arpaci-Dusseau. De-indirection for Flash-based SSDs
with Nameless Writes. In Proc. 10th USENIX FAST, San
Jose, CA, Feb. 2012.
