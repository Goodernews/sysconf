[1] Emmanuel Agullo, Eric Darve, Luc Giraud, and Yuval Harness. 2016. Nearly optimal fast preconditioning of symmetric positive definite matrices. Ph.D. Dissertation.
Inria Bordeaux Sud-Ouest.
[2] Sivaram Ambikasaran. 2013. Fast Algorithms for Dense Numerical Linear Algebra
and Applications. Ph.D. Dissertation. Stanford University.
[3] Sivaram Ambikasaran and Eric Darve. 2013. An O(N log N ) Fast Direct Solver
for Partial Hierarchically Semi-Separable Matrices. Journal of Scientific Computing 57, 3 (2013), 477–501. DOI:https://doi.org/10.1007/s10915-013-9714-z
[4] Mario Bebendorf. 2008. Hierarchical matrices. Springer.
[5] Mario Bebendorf and Sergej Rjasanow. 2003. Adaptive low-rank approximation
of collocation matrices. Computing 70, 1 (2003), 1–24.
[6] Michele Benzi, Gene H Golub, and Jörg Liesen. 2005. Numerical solution of
saddle point problems. Acta numerica 14, 1 (2005), 1–137.
[7] Nicola Cancedda, Eric Gaussier, Cyril Goutte, and Jean Michel Renders. 2003.
Word Sequence Kernels. Journal of Machine Learning Research 3 (March 2003),
1059–1082. http://dl.acm.org/citation.cfm?id=944919.944963
[8] S. Chandrasekaran, P. Dewilde, M. Gu, and N. Somasunderam. 2010. On the
Numerical Rank of the Off-Diagonal Blocks of Schur Complements of Discretized
Elliptic PDEs. SIAM J. Matrix Anal. Appl. 31, 5 (2010), 2261–2290. DOI:https:
//doi.org/10.1137/090775932
[9] Chih-Chung Chang and Chih-Jen Lin. 2011. LIBSVM: A library for support
vector machines. ACM Transactions on Intelligent Systems and Technology (TIST)
2, 3 (2011), 27.
[10] H. Cheng, Leslie Greengard, and Vladimir Rokhlin. 1999. A Fast Adaptive
Multipole Algorithm in Three Dimensions. J. Comput. Phys. 155 (1999), 468–498.
[11] D Yu Chenhan, William B March, and George Biros. 2017. An N log N Parallel
Fast Direct Solver for Kernel Matrices. In Parallel and Distributed Processing
Symposium (IPDPS), 2017 IEEE International. IEEE, 886–896.
[12] P. Coulier, H. Pouransari, and E. Darve. 2016. The inverse fast multipole method:
using a fast approximate direct solver as a preconditioner for dense linear systems.
ArXiv e-prints (2016). arXiv:1508.01835
[13] Ryan R. Curtin, James R. Cline, Neil P. Slagle, William B. March, P. Ram, Nishant A.
Mehta, and Alexander G. Gray. 2013. MLPACK: A Scalable C++ Machine Learning
Library. Journal of Machine Learning Research 14 (2013), 801–805.
[14] S. Dasgupta and Y. Freund. 2008. Random projection trees and low dimensional manifolds. In Proceedings of the 40th annual ACM symposium on Theory of
computing. ACM, 537–546.
[15] William Fong and Eric Darve. 2009. The black-box fast multipole method. J.
Comput. Phys. 228, 23 (2009), 8712–8725.
[16] Pieter Ghysels, Xiaoye S. Li, FranÃğois-Henry Rouet, Samuel Williams, and
Artem Napov. 2016. An Efficient Multicore Implementation of a Novel HSSStructured Multifrontal Solver Using Randomized Sampling. SIAM Journal
on Scientific Computing 38, 5 (2016), S358–S384. DOI:https://doi.org/10.1137/
15M1010117
[17] Lars Grasedyck, Ronald Kriemann, and Sabine Le Borne. 2008. Parallel black
box-LU preconditioning for elliptic boundary value problems. Computing and
visualization in science 11, 4 (2008), 273–291.
[18] A.G. Gray and A.W. Moore. 2001. N-body problems in statistical learning. Advances in neural information processing systems (2001), 521–527.
[19] Leslie Greengard, Denis Gueyffier, Per-Gunnar Martinsson, and Vladimir Rokhlin.
2009. Fast direct solvers for integral equations in complex three-dimensional
domains. Acta Numerica 18, 1 (2009), 243–275.
[20] Greengard, L. 1994. Fast Algorithms For Classical Physics. Science 265, 5174
(1994), 909–914.
[21] Wolfgang Hackbusch. 2015. Hierarchical Matrices: Algorithms and Analysis (1
ed.). Springer-Verlag Berlin Heidelberg.
[22] N. Halko, P.-G. Martinsson, and J.A. Tropp. 2011. Finding structure with randomness: Probabilistic algorithms for constructing approximate matrix decompositions. SIAM Rev. 53 (2011), 217–288.
[23] Kenneth L Ho and Leslie Greengard. 2012. A fast direct solver for structured
linear systems by recursive skeletonization. SIAM Journal on Scientific Computing
34, 5 (2012), A2507–A2532.
[24] Thomas Hofmann, Bernhard Schölkopf, and Alexander J Smola. 2008. Kernel
methods in machine learning. The annals of statistics (2008), 1171–1220.
[25] George Karypis and Vipin Kumar. 1998. Multilevel k -way partitioning scheme
for irregular graphs. Journal of Parallel and Distributed computing 48, 1 (1998),
96–129.
[26] Risi Imre Kondor and John Lafferty. 2002. Diffusion kernels on graphs and other
discrete input spaces. In ICML, Vol. 2. 315–322.
[27] Edo Liberty, Franco Woolfe, Per-Gunnar Martinsson, Vladimir Rokhlin, and Mark
Tygert. 2007. Randomized algorithms for the low-rank approximation of matrices.
Proceedings of the National Academy of Sciences 104, 51 (2007), 20167–20172.
[28] M. Lichman. 2013. UCI Machine Learning Repository. (2013). http://archive.ics.
uci.edu/ml
[29] M.W. Mahoney and P. Drineas. 2009. CUR matrix decompositions for improved
data analysis. Proceedings of the National Academy of Sciences 106, 3 (2009), 697.
[30] William B. March, Bo Xiao, Sameer Tharakan, Chenhan D. Yu, and George Biros.
2015. A kernel-independent FMM in general dimensions. In Proceedings of SC15
(The SCxy Conference series). ACM/IEEE, Austin, Texas. http://dx.doi.org/10.1145/
2807591.2807647
[31] William B. March, Bo Xiao, Sameer Tharakan, Chenhan D. Yu, and George Biros.
2015. Robust treecode approximation for kernel machines. In Proceedings of the
21st ACM SIGKDD Conference on Knowledge Discovery and Data Mining. Sydney,
Australia, 1–10. http://dx.doi.org/10.1145/2783258.2783272
[32] William B. March, Bo Xiao, Chenhan Yu, and George Biros. 2015. An algebraic
parallel treecode in arbitrary dimensions. In Proceedings of IPDPS 2015 (29th IEEE
International Parallel and Distributed Computing Symposium). Hyderabad, India.
DOI:https://doi.org/10.1109/IPDPS.2015.86
[33] William B. March, Bo Xiao, Chenhan D. Yu, and George Biros. 2016. ASKIT:
An Efficient, Parallel Library for High-Dimensional Kernel Summations. SIAM
Journal on Scientific Computing 38, 5 (2016), S720–S749. DOI:https://doi.org/10.
1137/15M1026468
[34] Per-Gunnar Martinsson. 2016. Compressing Rank-Structured Matrices via Randomized Sampling. SIAM Journal on Scientific Computing 38, 4 (2016), A1959–
A1986. DOI:https://doi.org/10.1137/15M1016679
[35] Per-Gunnar Martinsson and Vladimir Rokhlin. 2007. An accelerated kernelindependent fast multipole method in one dimension. SIAM Journal on Scientific
Computing 29, 3 (2007), 1160–1178.
[36] P.-G. Martinsson, V. Rokhlin, and M. Tygert. 2010. A randomized algorithm for
the decomposition of matrices. Applied and Computational Harmonic Analysis
(2010).
[37] K. R. Muske and J. W. Howse. 2001. A Lagrangian Method for Simultaneous
Nonlinear Model Predictive Control. In Large-Scale PDE-constrained Optimization: State-of-the-Art, L.T. Biegler, O. Ghattas, M. Heinkenschloss, and B. van
Bloemen Waanders (Eds.). Springer-Verlag.
[38] François-Henry Rouet, Xiaoye S. Li, Pieter Ghysels, and Artem Napov. 2016. A
Distributed-Memory Package for Dense Hierarchically Semi-Separable Matrix
Computations Using Randomization. ACM Transactions in Mathematical Software
42, 4, Article 27 (June 2016), 35 pages. DOI:https://doi.org/10.1145/2930660
[39] Bernhard Schölkopf and Alexander J Smola. 2002. Learning with kernels: support
vector machines, regularization, optimization, and beyond. MIT press.
[40] Avinash Sodani and others. 2016. Knights Landing: Second-Generation Intel
Xeon Phi Product. IEEE Micro 36, 2 (2016), 34–46.
[41] Haluk Topcuoglu, Salim Hariri, and Min-you Wu. 2002. Performance-effective
and low-complexity task scheduling for heterogeneous computing. IEEE transactions on parallel and distributed systems 13, 3 (2002), 260–274.
[42] Christopher Williams and Matthias Seeger. 2001. Using the Nyström method
to speed up kernel machines. In Proceedings of the 14th Annual Conference on
Neural Information Processing Systems. 682–688.
[43] Jianlin Xia, Shivkumar Chandrasekaran, Ming Gu, and Xiaoye S Li. 2010. Fast
algorithms for hierarchically semiseparable matrices. Numerical Linear Algebra
with Applications 17, 6 (2010), 953–976.
[44] Bo Xiao and George Biros. 2016. Parallel Algorithms for Nearest Neighbor Search
Problems in High Dimensions. SIAM Journal on Scientific Computing 38, 5 (2016),
S667–S699. DOI:https://doi.org/10.1137/15M1026377
[45] Lexing Ying, George Biros, and Denis Zorin. 2004. A kernel-independent adaptive
fast multipole method in two and three dimensions. J. Comput. Phys. 196, 2
(2004), 591–626.
[46] Rio Yokota, Huda Ibeid, and David Keyes. 2016. Fast Multipole Method as a MatrixFree Hierarchical Low-Rank Approximation. Computing Research Repository
abs/1602.02244 (2016). http://arxiv.org/abs/1602.02244
[47] Chenhan D Yu, Jianyu Huang, Woody Austin, Bo Xiao, and George Biros. 2015.
Performance optimization for the k-nearest neighbors kernel on x86 architectures.
In Proceedings of the International Conference for High Performance Computing,
Networking, Storage and Analysis. ACM, 7.
[48] Chenhan D. Yu, William B. March, Bo Xiao, and George Biros. 2016. INV-ASKIT:
A Parallel Fast Direct Solver for Kernel Matrices. In Proceedings of the IPDPS16.
Chicago, USA.
