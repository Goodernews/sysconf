[1] T. Araki, J. Furukawa, Y. Lindell, A. Nof and K. Ohara. HighThroughput Semi-Honest Secure Three-Party Computation with an
Honest Majority. In the 23rd ACM CCS, pages 805–817, 2016.
[2] D. Beaver. Efficient Multiparty Protocols Using Circuit Randomization.
In CRYPTO 1991, Springer (LNCS 576), pages 420–432, 1992.
[3] D. Beaver, S. Micali, and P. Rogaway. The round complexity of secure
protocols. In the 22nd STOC, pages 503–513, 1990.
[4] M. Bellare, V.T. Hoang, S. Keelveedhi, and P. Rogaway. Efficient
garbling from a fixed-key blockcipher. In IEEE Security and Privacy,
pages 478–492, 2013.
[5] M. Ben-Or, S. Goldwasser, and A. Wigderson. Completeness theorems
for noncryptographic fault-tolerant distributed computations. In the 20th
STOC, pages 1–10, 1988.
[6] S.S. Burra, E. Larraia, J.B. Nielsen, P.S. Nordholt, C. Orlandi, E. Orsini,
P. Scholl, and N.P. Smart. High Performance Multi-Party Computation
for Binary Circuits Based on Oblivious Transfer. ePrint Cryptology
Archive, 2015/472.
[7] D. Chaum, C. Crépeau and I. Damgård. Multi-party Unconditionally
Secure Protocols. In 20th STOC, pages 11–19, 1988.
[8] I. Damgård, M. Geisler, M. Krøigaard and J.B.Nielsen. Asynchronous
Multiparty Computation: Theory and Implementation. In Public Key
Cryptography 2009, Springer (LNCS 5443), pages 160–179, 2009.
[9] I. Damgård, V. Pastro, N.P. Smart and S. Zakarias. Multiparty Computation from Somewhat Homomorphic Encryption. In CRYPTO 2012,
pages 643–662, 2012.
[10] R.A. Fisher and F. Yates. Statistical Tables for Biological, Agricultural
and Medical Research (3rd ed.). Oliver & Boyd. pages 26-27, 1938.
[11] J. Furukawa, Y. Lindell, A. Nof and O. Weinstein. High-Throughput
Secure Three-Party Computation for Malicious Adversaries and an
Honest Majority. In EUROCRYPT 2017.
[12] O. Goldreich, S. Micali, and A. Wigderson. How to play any mental
game. In the 19th STOC, 218–229, 1987.
[13] S. Gueron, Y. Lindell, A. Nof and B. Pinkas. Fast Garbling of Circuits
Under Standard Assumptions. In 22nd ACM CCS, pp. 567–578, 2015.
[14] Y. Huang, D. Evans, J. Katz, and L. Malka. Faster secure two-party
computation using garbled circuits. In USENIX Security, 2011.
[15] Y. Ishai, J. Kilian, K. Nissim, and E. Petrank. Extending oblivious
transfers efficiently. In CRYPTO 2003, pages 145–161, 2003.
[16] M. Keller, E. Orsini and P. Scholl. MASCOT: Faster Malicious Arithmetic Secure Computation with Oblivious Transfer. In ACM CCS, pages
830–842, 2016.
[17] M. Keller, P. Scholl and N.P. Smart. An architecture for practical
actively secure MPC with dishonest majority. ACM CCS, pp. 549–
560, 2013.
[18] V. Kolesnikov and T. Schneider. Improved garbled circuit: Free xor
gates and applications. In Automata, Languages and Programming,
pages 486–498, 2008

[19] B. Kreuter, a. shelat, and C. Shen. Billion-gate secure computation with
malicious adversaries. In USENIX Security, pages 285–300, 2012.
[20] E. Larraia, E. Orsini, and N.P. Smart. Dishonest majority multi-party
computation for binary circuits. In CRYPTO, pages 495–512, 2014.
[21] D. Malkhi, N. Nisan, B. Pinkas and Y. Sella. Fairplay-secure two-party
computation system. In the USENIX Security Symposium, 2004.
[22] P. Mohassel, M. Rosulek and Y. Zhang. Fast and Secure Three-party
Computation: The Garbled Circuit Approach. ACM CCS, pp. 591–602,
2015.
[23] P. Rindal and M. Rosulek. Faster Malicious 2-Party Secure Computation with Online/Offline Dual Execution. In USENIX Security
Symposium, pages 297–314, 2016.
[24] T. Schneider and M. Zohner. GMW vs. Yao? efficient secure two-party
computation with low depth circuits. In Financial Cryptography and
Data Security, pages 275–292, 2013.
[25] A. C. Yao. How to generate and exchange secrets. In the 27th FOCS,
pages 162–167, 1986.
[26] S. Zahur, M. Rosulek and D. Evans: Two Halves Make a Whole
- Reducing Data Transfer in Garbled Circuits Using Half Gates. In
EUROCRYPT, 220–250, 2015.
[27] Intel Haswell cache performance. http://www.7-cpu.com/
cpu/Haswell.html

