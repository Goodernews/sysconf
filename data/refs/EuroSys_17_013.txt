[1] B. Atikoglu, Y. Xu, E. Frachtenberg, S. Jiang, and
M. Paleczny. Workload analysis of a large-scale key-value
store. In ACM SIGMETRICS Performance Evaluation Review,
volume 40, pages 53-64. ACM, 2012.

[2] A. D. Birrell and B. J. Nelson. Implementing remote procedure calls. ACM Transactions on Computer Systems (TOCS),
2(1):39-59, 1984.

[3] B. F. Cooper, A. Silberstein, E. Tam, R. Ramakrishnan, and
R. Sears. Benchmarking cloud serving systems with YCSB.
In Proceedings of the ACM Symposium on Cloud Computing
(SoCC), pages 143-154. ACM, 2010.

[4] A. Dragojevi¢é, D. Narayanan, O. Hodson, and M. Castro.
Farm: Fast remote memory. In Proceedings of the USENIX
Conference on Networked Systems Design and Implementation (NSDI), pages 401-414, 2014.

[5] B. Fan, D. G. Andersen, and M. Kaminsky. MemC3: Compact
and concurrent Memcache with dumber caching and smarter
hashing. In Proceedings of the USENIX Conference on Networked Systems Design and Implementation (NSDI), pages
371-384, 2013.

[6] gRPC. https://github.com/grpc/grpc.

[7] J. Huang, X. Ouyang, J. Jose, M. Wasi-ur Rahman, H. Wang,
M. Luo, H. Subramoni, C. Murthy, and D. K. Panda. Highperformance design of HBase with RDMA over InfiniBand.

In Proceedings of the International Parallel and Distributed
Processing Symposium (IPDPS), pages 774-785. IEEE, 2012.

[8] InfiniBand in Data-Centers. http://www.mellanox.com/pdf/
whitepapers/InfiniBand_EDS .pdf.

[9] N. S. Islam, M. Rahman, J. Jose, R. Rajachandrasekar,
H. Wang, H. Subramoni, C. Murthy, and D. K. Panda. High
performance RDMA-based design of HDFS over InfiniBand.
In Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis (SC),
pages 35:1-35:35. IEEE Computer Society Press, 2012.

[10] J. Jose, H. Subramoni, M. Luo, M. Zhang, J. Huang, M. Wasiur Rahman, N. S. Islam, X. Ouyang, H. Wang, S. Sur, et al.
Memcached design on high performance RDMA capable interconnects. In Proceedings of the International Conference
on Parallel Processing (ICPP), pages 743-752. IEEE, 2011.

[11] A. Kalia, M. Kaminsky, and D. G. Andersen. Using RDMA
efficiently for key-value services. In Proceedings of the ACM
Conference on SIGCOMM, pages 295-306. ACM, 2014.

[12] A. Kalia, M. Kaminsky, and D. G. Andersen. FaSST: Fast,
scalable and simple distributed transactions with two-sided
(RDMA) datagram RPCs. In Proceedings of the USENIX
Symposium on Operating Systems Design and Implementation
(OSDD), pages 185-201, 2016.

[13] A. Kalia, M. Kaminsky, and D. G. Andersen. Design guidelines for high performance RDMA systems. In Proceedings of
the USENIX Annual Technical Conference (ATC), pages 437—
450, 2016.

[14] C. Lee, S. J. Park, A. Kejriwal, S. Matsushita, and J. Ousterhout. Implementing linearizability at large scale and low latency. In Proceedings of the ACM Symposium on Operating
Systems Principles (SOSP), pages 71-86. ACM, 2015.

[15] H. Li, A. Kadav, E. Kruus, and C. Ungureanu. MALT: Distributed data-parallelism for existing ML applications. In Proceedings of the European Conference on Computer Systems
(EuroSys), pages 3:1-3:16. ACM, 2015.

[16] S. Li, H. Lim, V. W. Lee, J. H. Ahn, A. Kalia, M. Kaminsky,
D. G. Andersen, O. Seongil, $. Lee, and P. Dubey. Architecting to achieve a billion requests per second throughput on a
single key-value store server platform. In Proceedings of the
Annual International Symposium on Computer Architecture,
pages 476-488. ACM, 2015.

[17] X. Li, D. G. Andersen, M. Kaminsky, and M. J. Freedman. Algorithmic improvements for fast concurrent cuckoo hashing.

In Proceedings of the European Conference on Computer Systems (EuroSys), pages 27:1-27:14. ACM, 2014.

[18] H. Lim, D. Han, D. G. Andersen, and M. Kaminsky. MICA: A
holistic approach to fast in-memory key-value storage. In Proceedings of the USENIX Conference on Networked Systems
Design and Implementation (NSDI), pages 429-444, 2014.

[19] J. Liu, W. Jiang, P. Wyckoff, D. K. Panda, D. Ashton,
D. Buntinas, W. Gropp, and B. Toonen. Design and implementation of MPICH2 over InfiniBand with RDMA support.
In Proceedings of the International Parallel and Distributed
Processing Symposium (IPDPS), pages 16-27. IEEE, 2004.

[20] Mellanox. http://www.mellanox.com/.

[21] Memcached. http://memcached.org/.

[22] Z. Metreveli, N. Zeldovich, and M. F, Kaashoek. Cphash:
A cache-partitioned hash table. In ACM SIGPLAN Notices,
volume 47, pages 319-320. ACM, 2012.

[23] C. Mitchell, Y. Geng, and J. Li. Using one-sided RDMA reads
to build a fast, CPU-efficient key-value store. In Proceedings
of the USENIX Annual Technical Conference (ATC), pages
103-114, 2013.

[24] C. Mitchell, K. Montgomery, L. Nelson, S. Sen, and J. Li. Balancing CPU and network in the cell distributed B-Tree store.
In Proceedings of the USENIX Annual Technical Conference
(ATC), pages 451-464, 2016.

[25] S. Mu, Y. Cui, Y. Zhang, W. Lloyd, and J. Li. Extracting more
concurrency from distributed transactions. In Proceedings of

15

the USENIX Symposium on Operating Systems Design and
Implementation (OSDI), pages 479-494, 2014.

[26] R. Nishtala, H. Fugal, S. Grimm, M. Kwiatkowski, H. Lee,
H. C. Li, R. McElroy, M. Paleczny, D. Peek, P. Saab, et al.
Scaling Memcache at Facebook. In Proceedings of the
USENIX Conference on Networked Systems Design and Implementation (NSDI), pages 385-398, 2013.

[27] D. Ongaro, S. M. Rumble, R. Stutsman, J. Ousterhout, and
M. Rosenblum. Fast crash recovery in RAMCloud. In Proceedings of the ACM Symposium on Operating Systems Principles (SOSP), pages 29-41. ACM, 2011.

[28] M. Poke and T. Hoefler. DARE: High-performance state
machine replication on RDMA networks. In Proceedings of
the International Symposium on High-Performance Parallel
and Distributed Computing (HPDC), pages 107-118, 2015.

[29] P. Stuedi, A. Trivedi, and B. Metzler. Wimpy nodes with
10GbE: Leveraging one-sided operations in soft-RDMA to
boost Memcached. In Proceedings of the USENIX Annual
Technical Conference (ATC), pages 347-353, 2012.

[30] Y. Wang, X. Meng, L. Zhang, and J. Tan. C-Hint: An effective
and reliable cache management for RDMA-accelerated keyvalue stores. In Proceedings of the ACM Symposium on Cloud
Computing (SoCC), pages 1-13. ACM, 2014.

[31] M. Wasi-ur Rahman, X. Lu, N. S. Islam, R. Rajachandrasekar,
and D. K. Panda. High-performance design of YARN MapReduce on modern HPC clusters with Lustre and RDMA. In
Proceedings of the International Parallel and Distributed Processing Symposium (IPDPS), pages 291-300. IEEE, 2015.

[32] X. Wei, J. Shi, Y. Chen, R. Chen, and H. Chen. Fast inmemory transaction processing using RDMA and HTM. In
Proceedings of the ACM Symposium on Operating Systems
Principles (SOSP), pages 87-104. ACM, 2015.

(33] J. Wu, P. Wyckoff, and D. Panda. PVFS over InfiniBand: Design and performance evaluation. In Proceedings of the In
ternational Conference on Parallel Processing (ICPP), pages
125-132. TEEE, 2003.

[34] M. Wu, F. Yang, J. Xue, W. Xiao, Y. Miao, L. Wei, H. Lin,
Y. Dai, and L. Zhou. GraM: Scaling graph computation to
the trillions. In Proceedings of the ACM Symposium on Cloud
Computing (SoCC), pages 408-421. ACM, 2015.

[35] X. Wu, Y. Xu, Z. Shao, and S. Jiang. LSM-trie: An LSMtree-based ultra-large key-value store for small data items.
In Proceedings of the USENIX Annual Technical Conference
(ATC), pages 71-82, 2015.