[1] Aurelius.
Titan: Distributed graph database.
URL: http://titan.
thinkaurelius.com/, 2016.
[2] D. Chakrabarti, Y. Zhan, and C. Faloutsos. R-mat: A recursive model
for graph mining. In SDM, 2004.
[3] P. Charles, C. Grothoff, V. Saraswat, C. Donawa, A. Kielstra,
K. Ebcioglu, C. von Praun, and V. Sarkar. X10: An object-oriented
approach to non-uniform cluster computing. In Proceedings of the 20th
Annual ACM SIGPLAN Conference on Object-oriented Programming,
Systems, Languages, and Applications, OOPSLA ’05, pages 519–538,
New York, NY, USA, 2005. ACM.
[4] S. Choudhury, L. Holder, G. Chin, and J. Feo. Large-scale continuous
subgraph queries on streams. In Proceedings of the First Annual
Workshop on High Performance Computing Meets Databases, HPCDB
’11, pages 29–32, New York, NY, USA, 2011. ACM.
[5] M. Dayarathna, I. Herath, Y. Dewmini, G. Mettananda, S. Nandasiri,
S. Jayasena, and T. Suzumura. Acacia-rdf: An x10-based scalable
distributed rdf graph database engine. In 2016 IEEE 9th International
Conference on Cloud Computing (CLOUD), pages 521–528, June 2016.
[6] M. Dayarathna, I. Herath, Y. Dewmini, G. Mettananda, S. Nandasiri,
S. Jayasena, and T. Suzumura. Introducing acacia-rdf: An x10-based
scalable distributed rdf graph database engine. In 2016 IEEE International Parallel and Distributed Processing Symposium Workshops
(IPDPSW), pages 1024–1032, May 2016.
[7] M. Dayarathna, C. Houngkaew, H. Ogata, and T. Suzumura. Scalable
performance of scalegraph for large scale graph analysis. In High
Performance Computing (HiPC), 2012 19th International Conference
on, pages 1–9, Dec 2012.
[8] M. Dayarathna and T. Suzumura. Towards scalable distributed graph
database engine for hybrid clouds. DataCloud ’14, pages 1–8, Piscataway, NJ, USA, 2014. IEEE Press.
[9] M. Dayarathna and T. Suzumura. High-Performance Graph Data
Management and Mining in Cloud Environments with X10, pages 173–
210. Springer International Publishing, Cham, 2017.
[10] J. Dongarra and et al. The international exascale software project
roadmap. International Journal of High Performance Computing Applications, 25(1):3–60, 2011.
[11] B. DuCharme. Learning SPARQL: Querying and Updating with
SPARQL 1.1. O’Reilly Media, 2013.
[12] Graph500 Steering Committee. Graph 500 benchmark 1 (”search”).
URL: http://www.graph500.org/speciﬁcations, 2016.
[13] V. Gulisano, Z. Jerzak, S. Voulgaris, and H. Ziekow. The debs
2016 grand challenge. In Proceedings of the 10th ACM International
Conference on Distributed and Event-based Systems, DEBS ’16, pages
289–292, New York, NY, USA, 2016. ACM.
[14] S. Hong, S. Depner, T. Manhardt, J. Van Der Lugt, M. Verstraaten,
and H. Chaﬁ. Pgx.d: A fast distributed graph processing engine. In
Proceedings of the International Conference for High Performance
Computing, Networking, Storage and Analysis, SC ’15, pages 58:1–
58:12, New York, NY, USA, 2015. ACM.

[15] IBM. X10: Performance and productivity at scale. URL: http://x10-lang.
org/, 2014.
[16] G. Karypis and V. Kumar. A fast and high quality multilevel scheme
for partitioning irregular graphs. SIAM J. Sci. Comput., 20(1):359–392,
Dec. 1998.
[17] F. Khorasani, R. Gupta, and L. N. Bhuyan. Scalable simd-efﬁcient graph
processing on gpus. In Proceedings of the 24th International Conference
on Parallel Architectures and Compilation Techniques, PACT ’15, pages
39–50, 2015.
[18] A. Labouseur, J. Birnbaum, J. Olsen, PaulW., S. Spillane, J. Vijayan, J.H. Hwang, and W.-S. Han. The g* graph database: efﬁciently managing
large distributed dynamic graphs. Distributed and Parallel Databases,
pages 1–36, 2014.
[19] Y. Lim and U. Kang. Mascot: Memory-efﬁcient and accurate sampling
for counting local triangles in graph streams. In Proceedings of the 21th
ACM SIGKDD International Conference on Knowledge Discovery and
Data Mining, KDD ’15, pages 685–694, New York, NY, USA, 2015.
ACM.

[20] A. McGregor. Graph stream algorithms: A survey. SIGMOD Rec.,
43(1):9–20, May 2014.
[21] Oracle. About java ﬂight recorder. URL: https://docs.oracle.com/
javacomponents/jmc-5-4/jfr-runtime-guide/about.htm#JFRUH170,
2016.
[22] Oracle. Oracle labs pgx: Parallel graph analytics overview. URL: http:
//www.oracle.com/technetwork/oracle-labs/parallel-graph-analytics/
overview/index.html, 2016.
[23] J. Partner, A. Vukotic, and N. Watt. In Neo4j in Action. Manning
Publications Co., 2012.
[24] A. Pavan, K. Tangwongsan, S. Tirthapura, and K.-L. Wu. Counting
and sampling triangles from a graph stream. Proc. VLDB Endow.,
6(14):1870–1881, Sept. 2013.
[25] Y. Simmhan, A. Kumbhare, C. Wickramaarachchi, S. Nagarkar, S. Ravi,
C. Raghavendra, and V. Prasanna. Gofﬁsh: A sub-graph centric
framework for large-scale graph analytics. In Euro-Par 2014 Parallel
Processing, volume 8632 of Lecture Notes in Computer Science, pages
451–462. 2014.
[26] Sourceforge. nmon for linux. URL: http://nmon.sourceforge.net/pmwiki.
php, 2017.
[27] C. Tsourakakis, C. Gkantsidis, B. Radunovic, and M. Vojnovic. Fennel:
Streaming graph partitioning for massive scale graphs. In Proceedings of
the 7th ACM International Conference on Web Search and Data Mining,
WSDM ’14, pages 333–342, New York, NY, USA, 2014. ACM.
[28] C. E. Tsourakakis, U. Kang, G. L. Miller, and C. Faloutsos. Doulion:
Counting triangles in massive graphs with a coin. In Proceedings of the
15th ACM SIGKDD International Conference on Knowledge Discovery
and Data Mining, KDD ’09, pages 837–846, New York, NY, USA, 2009.
ACM.
[29] Y. Xia, I. Tanase, L. Nai, W. Tan, Y. Liu, J. Crawford, and C.-Y. Lin.
Graph analytics and storage. In Big Data (Big Data), 2014 IEEE
International Conference on, pages 942–951, Oct 2014.
[30] X. Zhu, W. Chen, W. Zheng, and X. Ma. Gemini: A computationcentric distributed graph processing system. In Proceedings of the 12th
USENIX Conference on Operating Systems Design and Implementation,
OSDI’16, pages 301–316, Berkeley, CA, USA, 2016. USENIX Association.