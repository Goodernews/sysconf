[1] J. R. Allen, K. Kennedy, C. Porterfield, and J. Warren.
Conversion of control dependence to data dependence. In
PROC. of the 10th POPL, 1983.
[2] D. I. August, D. A. Connors, S. A. Mahlke, J. W. Sias, K. M.
Crozier, B.-C. Cheng, P. R. Eaton, Q. B. Olaniran, and W.m. W. Hwu. Integrated predicated and speculative execution
in the IMPACT EPIC architecture. In PROC of the 25th ISCA,
1998.
[3] D. I. August, W.-m. W. Hwu, and S. A. Mahlke. A framework
for balancing control flow and predication. In PROC of the
30th MICRO, 1997.
[4] T. Ball and J. R. Larus. Efficient Path Profiling. In PROC of
the 1996 MICRO, 1996.
[5] J. Benson, R. Cofell, C. Frericks, C.-H. Ho, V. Govindaraju,
T. Nowatzki, and K. Sankaralingam. Design, integration
and implementation of the DySER hardware accelerator into
OpenSPARC. PROC of the 18th HPCA, pages 1–12, 2012.
[6] J. Benson, R. Cofell, C. Frericks, C.-H. Ho, V. Govindaraju,
T. Nowatzki, and K. Sankaralingam. Design, integration
and implementation of the DySER hardware accelerator into
OpenSPARC. PROC. of the HPCA, pages 1–12, 2012.
[7] D. Bryant. Disrupting the data center to create the digital
services economy. 2014.
[8] M. Budiu, G. Venkataramani, T. Chelcea, and S. C. Goldstein.
Spatial computation. In PROC of the 11th ASPLOS, 2004.
[9] A. Canis, J. Choi, M. Aldham, V. Zhang, A. Kammoona, J. H.
Anderson, S. Brown, and T. Czajkowski. Legup: high-level
synthesis for fpga-based processor/accelerator systems. In
PROC. of the 39th FPGA, pages 33–36. ACM, 2011.
[10] N. Clark, M. Kudlur, H. Park, S. Mahlke, and K. Flautner.
Application-Specific Processing on a General-Purpose Core
via Transparent Instruction Set Customization. In PROC of
the 37th MICRO, 2004.
[11] M. U. Farooq, L. John, and M. F. Jacome. Compiler Controlled
Speculation for Power Aware ILP Extraction in Dataflow
Architectures. In Proc. of 4th HiPEAC, 2008.
[12] E. Fluhr, S. Baumgartner, D. Boerstler, J. Bulzacchelli,
T. Diemoz, D. Dreps, G. English, J. Friedrich, A. Gattiker,
T. Gloekler, et al. The 12-Core POWER8 Processor with
7.6 Tb/s IO bandwidth, Integrated Voltage Regulation, and
Resonant Clocking. 2015.
[13] C. Frericks, R. Cofell, and K. Sankaralingam. Performance
evaluation of a DySER FPGA prototype system spanning
the compiler, microarchitecture, and hardware implementation.
2015.
[14] M. Gebhart, B. A. Maher, K. E. Coons, J. Diamond, P. Gratz,
M. Marino, N. Ranganathan, B. Robatmili, A. Smith, J. Burrill,
S. W. Keckler, D. Burger, and K. S. McKinley. An evaluation
of the TRIPS computer system. In PROC of the 14th ASPLOS,
2009.
[15] C. González-Álvarez, J. B. Sartor, C. Álvarez, D. JiménezGonzález, and L. Eeckhout. Automatic design of domainspecific instructions for low-power processors. In PROC. of
ASAP, pages 1–8, 2015.
[16] V. Govindaraju, C.-H. Ho, T. Nowatzki, J. Chhugani, N. Satish,
K. Sankaralingam, and C. Kim. Dyser: Unifying functionality
and parallelism specialization for energy-efficient computing.
IEEE Micro, 32(5):0038–51, 2012.
[17] V. Govindaraju, C.-H. Ho, and K. Sankaralingam. Dynamically
Specialized Datapaths for energy efficient computing. In PROC
of the 17th HPCA, 2011.
[18] S. Gupta, S. Feng, A. Ansari, S. Mahlke, and D. August.
Bundled execution of recurring traces for energy-efficient
general purpose processing. In PROC of the 44th MICRO,
2011.
[19] R. Hameed, W. Qadeer, M. Wachs, O. Azizi, A. Solomatnikov,
B. C. Lee, S. Richardson, C. Kozyrakis, and M. Horowitz.
Understanding sources of inefficiency in general-purpose chips.
In PROC of the 37th ISCA, 2010.
[20] M. Hill and C. Kozyrakis. Advancing computer systems
without technology progress. In DARPA/ISAT Workshop, 2012.
[21] J. Holewinski, R. Ramamurthi, M. Ravishankar, N. Fauzia,
L.-N. Pouchet, A. Rountev, and P. Sadayappan. Dynamic
trace-based analysis of vectorization potential of applications.
In PROC. of the PLDI, 2012.
[22] S. Kumar. Needle on github.
[23] S. Li, J. H. Ahn, R. D. Strong, J. B. Brockman, D. M. Tullsen,
and N. P. Jouppi. McPAT: an integrated power, area, and timing
modeling framework for multicore and manycore architectures.
In PROC of the 42nd MICRO, 2009.
[24] F. Liu, H. Ahn, S. R. Beard, T. Oh, and D. I. August.
Dynaspam: dynamic spatial architecture mapping using out
of order instruction schedules. In PROC. of the 42nd ISCA,
pages 541–553, 2015.
[25] P. G. Lowney, S. M. Freudenberger, T. J. Karzes, W. D.
Lichtenstein, R. P. Nix, J. S. O’Donnell, and J. Ruttenberg.
The multiflow trace scheduling compiler. The Journal of
Supercomputing, 7(1-2), May 1993.
[26] S. A. Mahlke, R. E. Hank, J. E. McCormick, D. I. August, and
W.-m. W. Hwu. A comparison of full and partial predicated
execution support for ILP processors. In PROC of the 22nd
ISCA, 1995.
[27] S. A. Mahlke, D. C. Lin, W. Y. Chen, R. E. Hank, and
R. A. Bringmann. Effective compiler support for predicated
execution using the hyperblock. In PROC of the 25th MICRO,
1992.
[28] D. S. McFarlin, C. Tucker, and C. Zilles. Discerning the
dominant out-of-order performance advantage: is it speculation
or dynamism? In Proc. of the eighteenth ASPLOS, 2013.
[29] W. mei W. Hwu, S. A. Mahlke, W. Y. Chen, P. P. Chang,
N. J. Warter, R. A. Bringmann, R. G. Ouellette, R. E. Hank,
T. Kiyohara, G. E. Haab, J. G. Holm, and D. M. Lavery. The
superblock: An effective technique for vliw and superscalar
compilation. THE JOURNAL OF SUPERCOMPUTING, 7:229–
248, 1993.
[30]] T. Nowatzki, V. Gangadhar, and K. Sankaralingam. Exploring
the potential of heterogeneous von neumann/dataflow execution
models. In PROC of the 42nd ISCA, New York, New York,
USA, June 2015.
[31] T. Nowatzki, V. Govindaraju, and K. Sankaralingam. A
Graph-Based Program Representation for Analyzing Hardware
Specialization Approaches. IEEE Computer Architecture
Letters, 2015.
[32] A. Parashar, M. Pellauer, M. Adler, B. Ahsan, N. Crago,
D. Lustig, V. Pavlov, A. Zhai, M. Gambhir, A. Jaleel, R. Allmon, R. Rayess, S. Maresh, and J. Emer. Triggered instructions:
a control paradigm for spatially-programmed architectures. In
PROC of the 40th ISCA, Apr. 2013.
[33] H. Park, Y. Park, and S. Mahlke. Polymorphic pipeline array:
a flexible multicore accelerator with virtualized execution for
mobile multimedia applications. In PROC of the 42nd MICRO,
2009.
[34] Y. Park, H. Park, and S. Mahlke. CGRA Express: Accelerating
Execution Using Dynamic Operation Fusion. CASES ’09.
2009.
[35] D. N. Pnevmatikatos and G. S. Sohi. Guarded execution and
branch prediction in dynamic ILP processors. In PROC of the
21st ISCA, 1994.
[36] A. Putnam, A. M. Caulfield, E. S. Chung, D. Chiou,
K. Constantinides, J. Demme, H. Esmaeilzadeh, J. Fowers,
G. Prashanth, G. Jan, G. Michael, H. S. Hauck, S. Heil,
A. Hormati, J.-Y. Kim, S. Lanka, J. Larus, E. Peterson, S. Pope,
A. Smith, J. Thong, P. Yi, and X. D. Burger. A reconfigurable
fabric for accelerating large-scale datacenter services. In
Proceeding of the 41st Annual International Symposium on
Computer Architecuture, 2014.
[37] W. Qadeer, R. Hameed, O. Shacham, P. Venkatesan,
C. Kozyrakis, and M. Horowitz. Convolution Engine: Balancing Efficiency & Flexibility in Specialized Computing. PROC
of the 40th ISCA, pages 1–12, Apr. 2013.
[38] B. Reagen, R. Adolf, S. Y. Shao, G.-Y. Wei, and D. Brooks.
Machsuite: Benchmarks for accelerator design and customized
architectures. In IEEE International Symposium on Workload
Characterization (IISWC), 2014.
[39] S. S. L. Sanjay J Patel. rePLay: A Hardware Framework
for Dynamic Program Optimization. IEEE Transactions on
Computers archive. Volume 50, 1999.
[40] Y. S. Shao, B. Reagen, G.-Y. Wei, and D. M. Brooks. Aladdin:
A pre-RTL, power-performance accelerator simulator enabling
large design space exploration of customized architectures. In
Proc. of the 41st ISCA, pages 97–108, 2014.
[41] H. Singh, M.-H. Lee, G. Lu, F. J. Kurdahi, N. Bagherzadeh,
and E. M. C. Filho. MorphoSys: an integrated reconfigurable
system for data-parallel and computation-intensive applications.
IEEE Transactions on Computers, 49(5):465–481, May 2000.
[42] A. Smith, J. Gibson, B. A. Maher, N. Nethercote, B. Yoder,
D. Burger, K. S. McKinley, and J. H. Burrill. Compiling for
EDGE Architectures. PROC. of the CGO, 2006.
[43] G. Tech. Macsim : Simulator for heterogeneous architecture https://code.google.com/p/macsim/.
[44] G. Venkatesh, J. Sampson, N. Goulding, S. Garcia, V. Bryksin,
J. Lugo-Martinez, S. Swanson, and M. B. Taylor. Conservation
cores: reducing the energy of mature computations. In PROC
of the 15th ASPLOS, 2010.
[45] G. Venkatesh, J. Sampson, N. Goulding-Hotta, S. K. Venkata,
M. B. Taylor, and S. Swanson. Qscores: Trading dark silicon
for scalable energy efficiency with quasi-specific cores. In
PROC. of the 44th MICRO, 2011.
[46] M. A. Watkins, T. Nowatzki, and A. Carno. Software transparent dynamic binary translation for coarse-grain reconfigurable
architectures. In PROC. of the 21st HPCA, 2016.