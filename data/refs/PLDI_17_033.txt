[1] Advanced configuration and power interface, http://

www.acpi.info.

[2] Duckduckgo, https://github.com/duckduckgo/

android.

[3] Javaboy, http: //www.millstone.demon.co.uk/

download/javaboy/.

[4] jspider, http://j- spider.sourceforge.net.

[5] Materiallife, https: //github.com/

juankysoriano/MaterialLife.

[6] Mopi, https: //pi.gate.ac.uk/pages/mopi.html.

[7] Newpipe, https://github.com/TeamNewPipe/
NewPipe.

[8] Turn your pi into a low-cost hd serveillance cam, https:
//www.raspberrypi.org/blog/turn-your-piinto-a-low-cost-—hd-surveillance-cam/,.

[9] Satellite cameras saving endangered species, http:
//www.cambridgeconsultants.com/news/pr/
release/140/en,.

[10] Emulation on raspberry pi 2, https://
www.raspberrypi.org/blog/emulation-onraspberry-pi-2/,.

[11] Raspberry pi, https: //www.raspberrypi.org/,.

[12] Raspberry pi camera, https://
www.raspberrypi.org/documentation/
raspbian/applications/camera.md,.

[13] Raspberry pi camera java, https://
blogs.msdn.microsoft.com/robert_mcmurray/
2015/06/12/simple-java-wrapper-class-—
for-raspistill-on-the-raspberry-—pi-2/,.

[14] Simbamon, https://github.com/
hamishcunningham/pi-tronics/tree/master/

simbamon.

[15] Soundrecorder, https://github.com/dkim0419/
SoundRecorder.

[16] Watts up? power meters, https://

www.wattsupmeters.com/secure/index.php.

[17] M. Abadi, L. Cardelli, B. Pierce, and G. Plotkin. Dynamic
typing in a statically-typed language. In POPL ’89.

[18] N. Ayewah, W. Pugh, J. D. Morgenthaler, J. Penix, and
Y. Zhou. Evaluating static analysis defect warnings on production software. PASTE ’07, pages 1-8.

[19] W. Baek and T. M. Chilimbi. Green: a framework for supporting energy-conscious programming using controlled approximation. In PLDI’ 10, pages 198-209.

[20] S. M. Blackburn, R. Garner, C. Hoffman, A. M. Khan, K. S.
McKinley, R. Bentzur, A. Diwan, D. Feinberg, D. Frampton,
S. Z. Guyer, M. Hirzel, A. Hosking, M. Jump, H. Lee, J. E. B.
Moss, A. Phansalkar, D. Stefanovié, T. VanDrunen, D. von
Dincklage, and B. Wiedermann. The DaCapo benchmarks:
Java benchmarking development and analysis. In OOPSLA
’06, pages 169-190.

[21] P. Boldi and S. Vigna. The webgraph framework i: Compres
sion techniques. In Proceedings of the 13th International Conference on World Wide Web, WWW ’04, pages 595-602.

231

[22] P. Boldi, M. Rosa, M. Santini, and S. Vigna. Layered label
propagation: A multiresolution coordinate-free ordering for
compressing social networks. In S. Srinivasan, K. Ramamritham, A. Kumar, M. P. Ravindra, E. Bertino, and R. Kumar,
editors, Proceedings of the 20th international conference on
World Wide Web, pages 587-596. ACM Press, 2011.

[23] J. Bornholt, T. Mytkowicz, and M. Kathryn. Uncertainjt;: a
first-order type for uncertain data. In ASPLOS ’14, pages 5166.

[24] B. Boston, A. Sampson, D. Grossman, and L. Ceze. Probability type inference for flexibile approximate programming. In
OOPSLA ’15.

[25] P. Buiras, D. Vytiniotis, and A. Russo. Hlio: Mixing static
and dynamic typing for information-flow control in haskell.
In ICFP 2015.

[26] T. Cao, S. M. Blackburn, T. Gao, and K. S. McKinley. The yin
and yang of power and performance for asymmetric hardware
and managed software. In ICSA ’12.

[27] M. Carbin, S. Misailovic, and M. Rinard. Verifying quantitative reliability for programs that execute on unreliable hardware. In OOPSLA 713, pages 33-52.

[28] L. Cardelli, S. Martini, J. C. Mitchell, and A. Scedrov. An
extension of system f with subtyping. In Information and
Computation, pages 750-770. Springer-Verlag, 1991.

[29] R. Cartwright and M. Fagan. Soft typing. In PLDI ’91.

[30] E. Cicek, G. Barthe, M. Gaboardi, D. Garg, and J. Hoffmann.
Relational cost analysis. In POPL ’17, pages 316-329.

[31] A. P. Chandrakasan, S. Sheng, and R. W. Brodersen. Low
power cmos digital design. JEEE JOURNAL OF SOLID
STATE CIRCUITS, 27:473-484, 1995.

[32] M. Cohen, H. S. Zhu, S. E. Emgin, and Y. D. Liu. Energy
types. In OOPSLA °12.

[33] H. David, E. Gorbatov, U. R. Hanebutte, R. Khanna, and
C. Le. Rapl: Memory power estimation and capping. In
ISLPED ’10, pages 189-194.

[34] R. B. Findler and M. Felleisen. Contracts for higher-order
functions. In ICFP ’02, pages 48-59.

[35] C. Flanagan. Hybrid type checking. In POPL ’06.

[36] J. Flinn and M. Satyanarayanan. Energy-aware adaptation for
mobile applications. In SOSP ’99.

[37] E. Gamma, R. Helm, R. Johnson, and J. Vlissides. Design
Patterns: Elements of Reusable Object-oriented Software.
Addison-Wesley Longman Publishing Co., Inc., Boston, MA,
USA, 1995. ISBN 0-201-63361-2.

[38] L. Gomez, I. Neamtiu, T. Azim, and T. Millstein. Reran:

Timing- and touch-sensitive record and replay for android. In
ICSE °13.

[39] H. Hoffmann. Jouleguard: Energy guarantees for approximate
applications. In Proceedings of the 25th Symposium on Operating Systems Principles, SOSP *15, pages 198-214.

[40] H. Hoffmann, S. Sidiroglou, M. Carbin, S. Misailovic,
A. Agarwal, and M. Rinard. Dynamic knobs for responsive
power-aware computing. In ASPLOS ’11, .

[41] J. Hoffmann, A. Das, and S.-C. Weng. Towards automatic

resource bound analysis for ocaml. In POPL ’17, pages 359373, .
[42] D. Hovemeyer and W. Pugh. Finding bugs is easy. SIGPLAN
Not., 39(12):92-106, 2004.

[43] A. Igarashi, B. Pierce, and P. Wadler. Featherweight java - a
minimal core calculus for java and gj. In TOPLAS ’99, pages
132-146.

[44] M. Kambadur and M. Kim. Nrg-loops: Adjusting power from
within applications. In CGO ’J16, .

[45] M. Kambadur and M. Kim. An experimental survey of energy
management across the stack. In OOPSLA ’14, pages 329344, .

[46] A. Kansal, S. Saponas, A. B. Brush, K. S. McKinley,
T. Mytkowicz, and R. Ziola. The latency, accuracy, and battery (lab) abstraction: Programmer productivity and energy efficiency for continuous mobile context sensing. In OOPSLA
13, pages 661-676.

[47] S. Kaxiras and M. Martonosi. Computer Architecture Techniques for Power-Efficiency. Morgan and Claypool Publishers, 1st edition, 2008.

[48] B. S. Lerner, J. G. Politz, A. Guha, and S. Krishnamurthi.
TeJaS: Retrofitting type systems for JavaScript. In Dynamic
Languages Symposium (DLS) ’13.

[49] K. Liu, G. Pinto, and Y. D. Liu. Data-oriented characterization
of application-level energy optimization. In FASE ’15.

[50] Y. Long, Y. D. Liu, and H. Rajan. Intensional effect polymorphism. In ECOOP ’15, pages 346-370.

[51] G. Mainland, G. Morrisett, and M. Welsh. Flask: staged
functional programming for sensor networks. In ICFP ’08.

[52] S. Misailovic, M. Carbin, S. Achour, Z. Qi, and M. C. Rinard. Chisel: Reliability- and accuracy-aware optimization of
approximate computational kernels. In OOPSLA 714, pages
309-328.

[53] A. C. Myers. Jflow: practical mostly-static information flow control. In 26th ACM Symp. on Principles of
Programming Languages (POPL), page 228241, January
1999. URL http://www.cs.cornell.edu/andru/
papers/popl199/pop199.pdf.

[54] B. D. Noble, M. Satyanarayanan, D. Narayanan, J. E. Tilton,
J. Flinn, and K. R. Walker. Agile application-aware adaptation
for mobility. pages 276-287, 1997.

[55] N. Nystrom, M. R. Clarkson, and A. C. Myers. Polyglot: An
extensible compiler framework for java. In CC ’03, pages
138-152.

[56] A. Pathak, Y. C. Hu, and M. Zhang. Bootstrapping energy
debugging on smartphones: A first look at energy bugs in

232

mobile devices. HotNets-X ’11, pages 5:1-5:6, .

[57] A. Pathak, A. Jindal, Y. C. Hu, and S. P. Midkiff. What is
keeping my phone awake?: Characterizing and detecting nosleep energy bugs in smartphone apps. In MobiSys ’12, pages
267-280, .

[58] G. Pinto, F. Castor, and Y. D. Liu. Understanding energy
behaviors of thread management constructs. In OOPSLA ’14.

[59] A. Sampson, W. Dietl, E. Fortuna, D. Gnanapragasam,
L. Ceze, and D. Grossman. EnerJ: Approximate data types
for safe and general low-power computation. In PLDI’11.

[60] K. Shiv, K. Chow, Y. Wang, and D. Petrochenko.

Specjvm2008 performance characterization. In Proceedings
of the 2009 SPEC Benchmark Workshop on Computer Perfor
mance Evaluation and Benchmarking, 2009.

[61] J. Siek and W. Taha. Gradual typing for objects. In ECOOP
"07.

[62] J. G. Siek and W. Taha. Gradual typing for functional languages. Scheme and Functional Programming Workshop, 6:
81-92, 2006.

[63] J. G. Siek, M. Vitousek, M. Cimini, and B. John. Refined
criteria for gradual typing. In SNAPL ’15.

[64] J. Sorber, A. Kostadinov, M. Garber, M. Brennan, M. D.
Corner, and E. D. Berger. Eon: a language and runtime system
for perpetual systems. In SenSys ’07, pages 161-174.

[65] Takikawa, Feltey, Dean, Flatt, Findler, Tobin-Hochstadt, and
Felleisen. Toward practical gradual typing. In ECOOP °15, .

[66] A. Takikawa, T. S. Strickland, C. Dimoulas, S. TobinHochstadt, and M. Felleisen. Gradual typing for first-class
classes. In OOPSLA ’12, pages 793-810, .

[67] T. Wrigstad, F. Z. Nardelli, S. Lebresne, J. Ostlund, and
J. Vitek. Integrating typed and untyped code in a scripting
language. In POPL ’10, pages 377-388.

[68] S. Zdancewic and A. C. Myers. Secure information
flow and cps. In 10th European Symposium on Programming, volume 2028, page 4661, 2001. URL
http: //www.cs.cornell.edu/andru/papers/
lincont.pdf.

[69] H. S. Zhu, C. Lin, and Y. D. Liu. A programming model for
sustainable software. In ICSE’15, pages 767-777, 2015.

[70] Y. Zhu and V. Reddi. Greenweb: Language extensions for
qos-aware energy-efficient mobile web computing. In PLDI
"16.

