[1] Apache HTTP benchmarking tool. http:
//nttpd.apache.org/docs/2.4/programs/
ab. html.

[2] Apache HTTP server project. https://httpd.
apache.org/.

[3] CURL, command line tool and library for transferring data with url. https: //curl.haxx.se.

[4] GCC, the GNU compiler collection. https://
gcc.gnu.org.
[5] Large single compilation-unit C programs.

http://people.csail.mit.edu/smec/
projects/single-file—programs/.

[6] Lighttpd. https: //www.lighttpd.net/.
[7] NGINX. https: //www.nginx.com/.

[8] R benchmark 2.5. http: //www.math.tamu.edu/
osg/R/R-benchmark-25.R.

[9] The R project for statical computing. https://
www.r-project.org/.

[10] CVE-2009-2692. Available at MITRE,
https://cve.mitre.org/cgi—bin/cvename.
cgi?name=CVE- 2009-2692, August 2009.

[11] IEEE International Standard for Information Technology — Portable Operating System Interface
(POSIX) Base Specifications, Issue 7. Standard,
TEEE, September 2009.

[12] K. Agarwal, B. Jain, and D. E. Porter. Containing
the hype. In Proceedings of the 6th Asia-Pacific
Workshop on Systems, APSys ’15, 2015.

[13] I. Anati, S. Gueron, S. P. Johnson, and V. R. Scarlata. Innovative technology for CPU based attestation and sealing. In Proceedings of the Fourth
Workshop on Hardware and Architectural Support
for Security and Privacy at Proceedings of the ACM
IEEE International Symposium on Computer Architecture (ISCA), 2013.

[14] S. Arnautov, B. Trach, F. Gregor, T. Knauth,
A. Martin, C. Priebe, J. Lind, D. Muthukumaran,
D. O’Keeffe, M. L. Stillwell, D. Goltzsche, D. Eyers, R. Kapitza, P. Pietzuch, and C. Fetzer. SCONE:
Secure linux containers with Intel SGX. In Proceedings of the USENIX Symposium on Operating
Systems Design and Implementation (OSDI), Nov
2016.
[15] A. Baumann, M. Peinado, and G. Hunt. Shielding
applications from an untrusted cloud with haven. In
Proceedings of the USENIX Symposium on Operating Systems Design and Implementation (OSDI),
pages 267–283, 2014.
[16] R. Boivie and P. Williams. SecureBlue++:
CPU support for secure executables. Technical report, IBM Research, 2013. Available at http://domino.research.ibm.
com/library/cyberdig.nsf/papers/
BE73A643EFE8274B85257B51006760C0.
[17] S. Brenner, C. Wulf, and R. Kapitza. Running ZooKeeper coordination services in untrusted
clouds. In 10th Workshop on Hot Topics in System
Dependability (HotDep 14), 2014.
[18] S. Checkoway and H. Shacham. Iago attacks: Why
the system call API is a bad untrusted RPC interface. SIGPLAN Not., pages 253–264, March 2013.
[19] V. Costan, I. Lebedev, and S. Devadas. Sanctum:
Minimal hardware extensions for strong software
isolation. In USENIX Security, volume 16, pages
857–874, 2016.
[20] J. Criswell, N. Dautenhahn, and V. Adve. Virtual
ghost: Protecting applications from hostile operating systems. In Proceedings of the ACM International Conference on Architectural Support for
Programming Languages and Operating Systems
(ASPLOS). Citeseer, 2014.
[21] O. S. Hofmann, S. Kim, A. M. Dunn, M. Z. Lee,
and E. Witchel. Inktag: secure applications on
an untrusted operating system. In Proceedings of
the ACM International Conference on Architectural
Support for Programming Languages and Operating Systems (ASPLOS), pages 265–278. ACM,
2013.
[22] T. Hunt, Z. Zhu, Y. Xu, S. Peter, and E. Witchel.
Ryoan: A distributed sandbox for untrusted computation on secret data. In Proceedings of the USENIX
Symposium on Operating Systems Design and Implementation (OSDI). USENIX Association, 2016.
[23] Intel Corporation. Intel software guard extensions for Linux OS - Intel SGX driver. https:
//github.com/01org/linux-sgx.
[24] Intel Corporation. Intel software guard extensions for Linux OS - Intel SGX SDK. https:
//github.com/01org/linux-sgx.
[25] B. Jain, C.-C. Tsai, and D. E. Porter. A clairvoyant approach to evaluating software (in)security. In
Proceedings of the USENIX Workshop on Hot Topics in Operating Systems (HotOS), 2017.
[26] J. S. Jang, S. Kong, M. Kim, D. Kim, and B. B.
Kang. Secret: Secure channel between rich execution environment and trusted execution environment. In Proceedings of the Network and Distributed System Security Symposium (NDSS), 2015.
[27] D. Kaplan, J. Powell, and T. Woller. AMD memory
encryption. White paper, April 2016. Available at http://amd-dev.wpengine.netdnacdn.com/wordpress/media/2013/12/AMD_
Memory_Encryption_Whitepaper_v7-
Public.pdf.
[28] S. Kim, J. Han, J. Ha, T. Kim, and D. Han. Enhancing security and privacy of tors ecosystem by
using trusted execution environments. In 14th
USENIX Symposium on Networked Systems Design
and Implementation (NSDI 17). USENIX Association, 2017.
[29] S. Kim, Y. Shin, J. Ha, T. Kim, and D. Han. A first
step towards leveraging commodity trusted execution environments for network applications. In Proceedings of the 14th ACM Workshop on Hot Topics
in Networks (HotNets), page 7. ACM, 2015.
[30] P. Koeberl, S. Schulz, A.-R. Sadeghi, and V. Varadharajan. Trustlite: A security architecture for tiny
embedded devices. In Proceedings of the ACM
European Conference on Computer Systems (EuroSys), page 10. ACM, 2014.
[31] D. Kuvaiskii, O. Oleksenko, S. Arnautov,
B. Trach, P. Bhatotia, P. Felber, and C. Fetzer. SGXBOUNDS: Memory safety for shielded
execution. In Proceedings of the ACM European
Conference on Computer Systems (EuroSys),
EuroSys ’17, 2017.
[32] Y. Kwon, A. M. Dunn, M. Z. Lee, O. S. Hofmann,
Y. Xu, and E. Witchel. Sego: Pervasive trusted
metadata for efficiently verified untrusted system
services. SIGOPS Oper. Syst. Rev.
[33] Y. Kwon, A. M. Dunn, M. Z. Lee, O. S. Hofmann, Y. Xu, and E. Witchel. Sego: Pervasive
trusted metadata for efficiently verified untrusted
system services. In Proceedings of the ACM International Conference on Architectural Support for
Programming Languages and Operating Systems
(ASPLOS), pages 277–290. ACM, 2016.
[34] Y. Li, J. McCune, J. Newsome, A. Perrig, B. Baker,
and W. Drewry. Minibox: A two-way sandbox for
x86 native code. In Proceedings of the USENIX Annual Technical Conference, pages 409–420, 2014.
[35] D. Lie, C. A. Thekkath, and M. Horowitz. Implementing an untrusted operating system on trusted
hardware. ACM SIGOPS Operating Systems Review, 37(5):178–192, 2003.
[36] J. Lind, C. Priebe, D. Muthukumaran, D. O’Keeffe,
P.-L. Aublin, F. Kelbert, T. Reiher, D. Goltzsche,
D. Eyers, R. Kapitza, C. Fetzer, and P. Pietzuch.
Glamdring: Automatic application partitioning for
Intel SGX. In 2017 USENIX Annual Technical
Conference (USENIX ATC 17), Santa Clara, CA,
2017. USENIX Association.
[37] Y. Liu, T. Zhou, K. Chen, H. Chen, and
Y. Xia. Thwarting memory disclosure with efficient
hypervisor-enforced intra-domain isolation. In Proceedings of the ACM Conference on Computer and
Communications Security (CCS), 2015.
[38] A. Madhavapeddy, R. Mortier, C. Rotsos, D. Scott,
B. Singh, T. Gazagnaire, S. Smith, S. Hand, and
J. Crowcroft. Unikernels: Library operating systems for the cloud. In Proceedings of the ACM
International Conference on Architectural Support
for Programming Languages and Operating Systems (ASPLOS), 2013.
[39] J. M. McCune, Y. Li, N. Qu, Z. Zhou, A. Datta,
V. Gligor, and A. Perrig. TrustVisor: Efficient TCB
reduction and attestation. In Proceedings of the
IEEE Symposium on Security and Privacy (Oakland), pages 143–158, 2010.
[40] J. M. McCune, B. J. Parno, A. Perrig, M. K. Reiter,
and H. Isozaki. Flicker: An execution infrastructure for TCB minimization. In Proceedings of the
ACM European Conference on Computer Systems
(EuroSys), pages 315–328, 2008.
[41] F. McKeen, I. Alexandrovich, I. Anati, D. Caspi,
S. Johnson, R. Leslie-Hurd, and C. Rozas. Intel
software guard extensions (Intel SGX) support for
dynamic memory management inside an enclave.
In Proceedings of the Fourth Workshop on Hardware and Architectural Support for Security and
Privacy, pages 1–9, New York, New York, USA,
June 2016. ACM Press.
[42] L. McVoy and C. Staelin. lmbench: Portable tools
for performance analysis. In Proceedings of the
USENIX Annual Technical Conference, pages 23–
23, 1996.
[43] M. Orenbach, P. Lifshits, M. Minkin, and M. Silberstein. Eleos: ExitLess OS services for SGX enclaves. In Proceedings of the ACM European Conference on Computer Systems (EuroSys), 2017.
[44] N. Provos, M. Friedl, and P. Honeyman. Preventing privilege escalation. In Proceedings of the 12th
Conference on USENIX Security Symposium - Volume 12, SSYM’03, pages 16–16, Berkeley, CA,
USA, 2003. USENIX Association.
[45] F. Schuster, M. Costa, C. Fournet, C. Gkantsidis,
M. Peinado, G. Mainar-Ruiz, and M. Russinovich.
VC3: Trustworthy data analytics in the cloud using SGX. In Proceedings of the IEEE Symposium
on Security and Privacy (Oakland), pages 38–54.
IEEE, 2015.
[46] J. Seo, B. Lee, S. Kim, M.-W. Shih, I. Shin, D. Han,
and T. Kim. SGX-Shield: Enabling address space
layout randomization for SGX programs. In Proceedings of the Network and Distributed System Security Symposium (NDSS), 2017.
[47] M.-W. Shih, M. Kumar, T. Kim, and
A. Gavrilovska. S-NFV: Securing NFV states by
using SGX. In Proceedings of the ACM International Workshop on Security in Software Defined
Networks & Network Function Virtualization
(SDN-NFV Security), pages 45–48. ACM, 2016.
[48] M.-W. Shih, S. Lee, T. Kim, and M. Peinado.
T-SGX: Eradicating controlled-channel attacks
against enclave programs. In Proceedings of the
Network and Distributed System Security Symposium (NDSS), 2017.
[49] S. Shinde, D. L. Tien, S. Tople, and P. Saxena. PANOPLY: Low-TCB Linux applications with
SGX enclaves. In Proceedings of the Network and
Distributed System Security Symposium (NDSS),
2017.
[50] C. Song, H. Moon, M. Alam, I. Yun, B. Lee,
T. Kim, W. Lee, and Y. Paek. HDFI: Hardwareassisted data-flow isolation. In Proceedings of the
IEEE Symposium on Security and Privacy (Oakland), 2016.
[51] ARM TrustZone technology overview. Available at http://www.arm.com/products/
processors/technologies/trustzone/
index.php.
[52] C.-C. Tsai, K. S. Arora, N. Bandi, B. Jain,
W. Jannen, J. John, H. A. Kalodner, V. Kulkarni,
D. Oliveira, and D. E. Porter. Cooperation and Security Isolation of Library OSes for Multi-Process
Applications. In Proceedings of the ACM European
Conference on Computer Systems (EuroSys), 2014.
[53] C.-C. Tsai, B. Jain, N. A. Abdul, and D. E. Porter.
A study of modern Linux API usage and compatibility: What to support when you’re supporting. In
Proceedings of the ACM European Conference on
Computer Systems (EuroSys), 2016.
[54] Y. Xu, W. Cui, and M. Peinado. Controlled-channel
attacks: Deterministic side channels for untrusted
operating systems. In Proceedings of the 36th
IEEE Symposium on Security and Privacy (Oakland). IEEE Institute of Electrical and Electronics
Engineers, May 2015.
[55] B. Yee, D. Sehr, G. Dardyk, J. B. Chen, R. Muth,
T. Ormandy, S. Okasaka, N. Narula, and N. Fullagar. Native client: A sandbox for portable, untrusted x86 native code. In Proceedings of the
IEEE Symposium on Security and Privacy (Oakland), pages 79–93. IEEE, 2009.
[56] N. Zhang, M. Li, W. Lou, and Y. T. Hou. Mushi:
Toward multiple level security cloud with strong
hardware level isolation. In Military Communications Conference, 2012-MILCOM 2012, pages 1–6.
IEEE, 2012.
[57] W. Zheng, A. Dave, J. G. Beekman, R. A. Popa,
J. E. Gonzalez, and I. Stoica. Opaque: An oblivious and encrypted distributed analytics platform. In
Proceedings of the Network and Distributed System
Security Symposium (NDSS), 2017.
