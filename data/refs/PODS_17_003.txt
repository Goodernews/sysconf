
[1] A. Abboud, R. R. Williams, and H. Yu. More

applications of the polynomial method to algorithm
design. In Proc. SODA’15, pages 218–230, 2015.

[2] S. Abiteboul, R. Hull, and V. Vianu. Foundations of

Databases. Addison-Wesley, 1995.

[3] A. Atserias, M. Grohe, and D. Marx. Size bounds and

query plans for relational joins. SIAM J. Comput.,
42(4):1737–1767, 2013.

[4] G. Bagan, A. Durand, and E. Grandjean. On acyclic
conjunctive queries and constant delay enumeration.
In Proc. CSL’07, pages 208–222, 2007.

[5] A. Balmin, Y. Papakonstantinou, and V. Vianu.
Incremental validation of XML documents. ACM
Trans. Database Syst., 29(4):710–751, 2004.

[6] C. Berkholz, J. Keppeler, and N. Schweikardt.

Answering FO+MOD queries under updates on
bounded degree databases. In Proc. ICDT’17, LIPIcs,
2017. To appear. Preprint available at
https://arxiv.org/abs/1702.08764

[7] H. Bj¨orklund, W. Gelade, and W. Martens.

Incremental XPath evaluation. ACM Trans. Database
Syst., 35(4):29, 2010.

[8] J. Brault-Baron. De la pertinence de l’´enum´eration :
complexit´e en logiques propositionnelle et du premier
ordre. (The relevance of the list: propositional logic
and complexity of the ﬁrst order). PhD thesis,
University of Caen Normandy, France, 2013.

[9] A. A. Bulatov, V. Dalmau, M. Grohe, and D. Marx.
Enumerating homomorphisms. J. Comput. Syst. Sci.,
78(2):638–650, 2012.

[10] H. Chen and S. Mengel. A trichotomy in the

complexity of counting answers to conjunctive queries.
In Proc. ICDT’15, pages 110–126, 2015.

[11] V. Dalmau and P. Jonsson. The complexity of

counting homomorphisms seen from the other side.
Theor. Comput. Sci., 329(1-3):315–323, 2004.

[12] N. Dalvi and D. Suciu. The dichotomy of conjunctive
queries on probabilistic structures. In Proc. PODS’07,
pages 293–302. ACM, 2007.

[13] N. N. Dalvi and D. Suciu. Eﬃcient query evaluation
on probabilistic databases. VLDB J., 16(4):523–544,
2007.

[14] A. Durand and E. Grandjean. First-order queries on

structures of bounded degree are computable with
constant delay. ACM Trans. Comput. Log., 8(4), 2007.

[15] A. Durand and S. Mengel. Structural tractability of
counting of solutions to conjunctive queries. Theory
Comput. Syst., 57(4):1202–1249, 2015.

[16] R. Fink and D. Olteanu. Dichotomies for queries with

negation in probabilistic databases. ACM Trans.
Database Syst., 41(1):4, 2016.

[17] G. Greco and F. Scarcello. Structural tractability of

enumerating CSP solutions. Constraints, 18(1):38–74,
2013.

[18] G. Greco and F. Scarcello. Counting solutions to

conjunctive queries: structural and hybrid tractability.
In Proc. PODS’14, pages 132–143, 2014.

[19] M. Grohe. The complexity of homomorphism and

constraint satisfaction problems seen from the other
side. J. ACM, 54(1), 2007.

[20] M. Grohe, T. Schwentick, and L. Segouﬁn. When is

the evaluation of conjunctive queries tractable? In
Proc. STOC’01, pages 657–666, 2001.

[21] A. Gupta, I. S. Mumick, and V. S. Subrahmanian.

Maintaining views incrementally. SIGMOD Rec.,
22(2):157–166, June 1993.

[22] M. Henzinger, S. Krinninger, D. Nanongkai, and

T. Saranurak. Unifying and strengthening hardness for
dynamic problems via the online matrix-vector
multiplication conjecture. In Proc. STOC’15, pages
21–30, 2015.

[23] M. A. Khamis, H. Q. Ngo, C. R´e, and A. Rudra. Joins

via geometric resolutions: Worst-case and beyond. In
Proc. PODS’15, pages 213–228, 2015.

[24] P. Koutris and D. Suciu. Parallel evaluation of

conjunctive queries. In Proc. PODS’11, pages 223–234,
2011.

[25] K. G. Larsen and R. R. Williams. Faster online

matrix-vector multiplication. In Proc. SODA’17, pages
2182–2189, 2017.

[26] K. Losemann and W. Martens. MSO queries on trees:

enumerating answers under updates. In Proc.
CSL-LICS’14, pages 67:1–67:10, 2014.

[27] D. Marx. Tractable hypergraph properties for

constraint satisfaction and conjunctive queries. J.
ACM, 60(6):42, 2013.

[28] B. M. E. Moret and H. D. Shapiro. Algorithms from P

to NP: Volume 1: Design & Eﬃciency.
Benjamin-Cummings, 1991.

[29] H. Q. Ngo, D. T. Nguyen, C. Re, and A. Rudra.

Beyond worst-case analysis for joins with
minesweeper. In Proc. PODS’14, pages 234–245, 2014.
[30] H. Q. Ngo, E. Porat, C. R´e, and A. Rudra. Worst-case
optimal join algorithms: [extended abstract]. In Proc.
PODS’12, pages 37–48, 2012.

[31] D. Olteanu and J. Z´avodn´y. Size bounds for factorised
representations of query results. ACM Trans. Database
Syst., 40(1):2, 2015.

[32] S. Patnaik and N. Immerman. Dyn-fo: A parallel,

dynamic complexity class. J. Comput. Syst. Sci.,
55(2):199–209, 1997.

[33] T. Schwentick and T. Zeume. Dynamic complexity:

recent updates. SIGLOG News, 3(2):30–52, 2016.
[34] L. Segouﬁn. Enumerating with constant delay the

answers to a query. In Proc. ICDT’13, pages 10–20,
2013.

[35] L. Segouﬁn. A glimpse on constant delay enumeration
(invited talk). In Proc. STACS’14, pages 13–27, 2014.

[36] L. Segouﬁn. Constant delay enumeration for

conjunctive queries. SIGMOD Record, 44(1):10–17,
2015.

[37] T. L. Veldhuizen. Triejoin: A simple, worst-case
optimal join algorithm. In Proc. ICDT’14, pages
96–106, 2014.

[38] R. Williams. Matrix-vector multiplication in

sub-quadratic time: (some preprocessing required). In
Proc. SODA’07, pages 995–1001, 2007.

[39] T. Zeume and T. Schwentick. Dynamic conjunctive

queries. In Proc. ICDT’14, pages 38–49, 2014.
