[1] Redis. http://redis.io/. 7/24/2015.
[2] L. Barroso, M. Marty, D. Patterson, and P. Ranganathan. Attack of the Killer Microseconds. Communications of the ACM, 60(4):48–54, Mar. 2017.
[3] A. Belay, A. Bittau, A. Mashtizadeh, D. Terei,
D. Mazières, and C. Kozyrakis. Dune: Safe Userlevel Access to Privileged CPU Features. In Presented as part of the 10th USENIX Symposium
on Operating Systems Design and Implementation
(OSDI 12), pages 335–348, Hollywood, CA, 2012.
USENIX.
[4] A. Bittau, P. Marchenko, M. Handley, and B. Karp.
Wedge: Splitting Applications into Reducedprivilege Compartments. In Proceedings of the
5th USENIX Symposium on Networked Systems Design and Implementation, NSDI’08, pages 309–322,
Berkeley, CA, USA, 2008. USENIX Association.
[5] N. Bronson, Z. Amsden, G. Cabrera, P. Chakka,
P. Dimov, H. Ding, J. Ferris, A. Giardullo, S. Kulkarni, H. Li, M. Marchukov, D. Petrov, L. Puzar, Y. J.
Song, and V. Venkataramani. TAO: Facebook’s Distributed Data Store for the Social Graph. In Presented as part of the 2013 USENIX Annual Technical Conference (USENIX ATC 13), pages 49–60,
San Jose, CA, 2013. USENIX.
[6] D. Herman, L. Wagner, and A. Zakai. asm.js. http:
//asmjs.org/spec/latest/, 2017.
[7] S. Das, D. Agrawal, and A. El Abbadi. G-store: a
scalable data store for transactional multi key access
in the cloud. In Proceedings of the 1st ACM symposium on Cloud computing, pages 163–174. ACM,
2010.
[8] J. Dean and S. Ghemawat. MapReduce: Simplified
Data Processing on Large Clusters. In Proceedings
of the 6th Conference on Symposium on Opearting Systems Design & Implementation - Volume 6,
OSDI’04, pages 10–10, Berkeley, CA, USA, 2004.
USENIX Association.
[9] A. Dragojević, D. Narayanan, M. Castro, and
O. Hodson. FaRM: Fast Remote Memory. In
11th USENIX Symposium on Networked Systems
Design and Implementation (NSDI 14), pages 401–
414, Seattle, WA, Apr. 2014. USENIX Association.
[10] A. Dragojević, D. Narayanan, E. B. Nightingale,
M. Renzelmann, A. Shamis, A. Badam, and M. Castro. No compromises: distributed transactions with
consistency, availability, and performance . In SOSP,
pages 85–100, 2015.
[11] C. Freedman, E. Ismert, and P. Larson. Compilation
in the Microsoft SQL Server Hekaton Engine. IEEE
Data Engineering Bulletin, 37(1):22–30, 2014.

[12] R. Geambasu, A. A. Levy, T. Kohno, A. Krishnamurthy, and H. M. Levy. Comet: An active distributed key-value store. In OSDI, pages 323–336,
2010.
[13] Google Inc. Chrome V8. http://developers.
google.com/v8/, 2017.
[14] Google Inc. Embedder’s Guide. http://github.
com/v8/v8/wiki/Embedder%27s-Guide,
2017.
[15] A. Kejriwal, A. Gopalan, A. Gupta, Z. Jia, S. Yang,
and J. Ousterhout. SLIK: Scalable Low-Latency
Indexes for a Key-Value Store. In 2016 USENIX
Annual Technical Conference (USENIX ATC 16),
pages 57–70, Denver, CO, June 2016. USENIX Association.
[16] A. Kesavan, R. Ricci, and R. Stutsman. To Copy or
Not to Copy: Making In-Memory Databases Fast
on Modern NICs. In Proceedings of the 4th VLDB
Workshop on In-Memory Data Management and
Analytics, IMDM ’16, 2016.
[17] C. Lee, S. J. Park, A. Kejriwal, S. Matsushita, and
J. Ousterhout. Implementing linearizability at large
scale and low latency. In Proceedings of the 25th
Symposium on Operating Systems Principles, SOSP
’15, pages 71–86, New York, NY, USA, 2015. ACM.
[18] Y. Liu, T. Zhou, K. Chen, H. Chen, and
Y. Xia. Thwarting memory disclosure with efficient hypervisor-enforced intra-domain isolation. In
Proceedings of the 22nd ACM SIGSAC Conference
on Computer and Communications Security, pages
1607–1619. ACM, 2015.
[19] M. Maas, T. Harris, K. Asanović, and J. Kubiatowicz. Trash Day: Coordinating Garbage Collection
in Distributed Systems. In 15th Workshop on Hot
Topics in Operating Systems (HotOS XV), Kartause
Ittingen, Switzerland, 2015. USENIX Association.
[20] M. K. McKusick, G. V. Neville-Neil, and R. N. Watson. The Design and Implementation of the FreeBSD
Operating System. Pearson Education, 2014.
[21] MongoDB, Inc. MongoDB for GIANT Ideas | MongoDB. http://www.mongodb.com/, 2017.
[22] T. Neumann. Efficiently Compiling Efficient Query
Plans for Modern Hardware. Proceedings of the
VLDB Endowment, 4(9):539–550, 2011.
[23] S. Nishimura, S. Das, D. Agrawal, and A. El Abbadi.
Md-hbase: A scalable multi-dimensional data infrastructure for location aware services. In Mobile Data
Management (MDM), 2011 12th IEEE International
Conference on, volume 1, pages 7–16. IEEE, 2011.
[24] D. Ongaro, S. M. Rumble, R. Stutsman, J. Ousterhout, and M. Rosenblum. Fast Crash Recovery in
RAMCloud. In Proceedings of the Twenty-Third
ACM Symposium on Operating Systems Principles,
pages 29–41. ACM, 2011.
[25] J. Ousterhout, A. Gopalan, A. Gupta, A. Kejriwal, C. Lee, B. Montazeri, D. Ongaro, S. J. Park,
H. Qin, M. Rosenblum, S. Rumble, R. Stutsman, and
S. Yang. The RAMCloud Storage System. ACM
Transactions on Computer Systems, 33(3):7:1–7:55,
Aug. 2015.
[26] R. Ricci and E. Eide. Introducing CloudLab: Scientific Infrastructure for Advancing Cloud Architecturesand Applications. ; login:, 39(6):36–38, 2014.
[27] Y. Tang, A. Iyengar, W. Tan, L. Fong, and L. Liu.
Write-optimized indexing for log-structured keyvalue stores. Technical report, Georgia Institute
of Technology, 2014.
[28] The Apache Software Foundation. Apache Cassandra. http://cassandra.apache.org/.
[29] B. White, J. Lepreau, L. Stoller, R. Ricci, S. Guruprasad, M. Newbold, M. Hibler, C. Barb, and
A. Joglekar. An integrated experimental environment for distributed systems and networks. In In
Proc. of the Fifth Symposium on Operating Systems
Design and Implementation, 2002.
[30] M. Zaharia, M. Chowdhury, T. Das, A. Dave, J. Ma,
M. McCauly, M. J. Franklin, S. Shenker, and I. Stoica. Resilient Distributed Datasets: A Fault-Tolerant
Abstraction for In-Memory Cluster Computing. In
Presented as part of the 9th USENIX Symposium
on Networked Systems Design and Implementation (NSDI 12), pages 15–28, San Jose, CA, 2012.
USENIX.
[31] S. Zeuch and J.-C. Freytag. Selection on Modern
CPUs. In Proceedings of the 3rd VLDB Workshop
on In-Memory Data Management and Analytics,
IMDM ’15, pages 5:1–5:8, New York, NY, USA,
2015. ACM.