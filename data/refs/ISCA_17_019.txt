[1] Robert Baumann. 2005. Soft errors in advanced computer systems. In
IEEE Design & Test of Computers, vol. 22, no. 3, pp. 258-266, MayJune. DOT:http://doi.org/10.1109/MDT.2005.69

[2] Zeshan Chishti, Alaa R.Alameldeen, Chris Wilkerson, Wei Wu, and
Shih-Lien Lu. 2009. Improving cache lifetime _ reliability
at ultra-low voltages. In Proceedings of the IEEE/ACM
International Symposium on Microarchitecture
DOt:http://dx.doi.org/10.1145/1669112.1669126

[3] Cristian Constantinescu. 2003. Trends and challenges in VLSI circuit
reliability. In JEEE Micro, vol. 23, pp. 14-19, July.
DOt:http://dx.doi.org/10.1109/MM.2003.1225959

[4] Lin Huang, and Qiang Xu. 2010. AgeSim: A simulation framework for
evaluating the lifetime reliability of processor-based SoCs. In Proceedings of Design, Automation and Test in Europe (DATE). ISBN:978-39810801-6-2

[5] Sani R.Nassif, Nikil Mehta, and Yu Cao. 2010. A resilience roadmap.
In Proceedings of Design, Automation and Test in Europe (DATE).
ISBN:978-3-98 10801-6-2

[6] Yixin Luo, Sriram Govindan, Bikash Sharma, Mark Santaniello, Justin
Meza, Aman Kansal, Jie Liu, Badriddine Khessib, Kushagra Vaid, and
Onur Mutlu. 2014. Characterizing application memory error vulnerability to optimize datacenter cost via heterogeneous reliability
memory. In Proceedings of IEEE/IFIP International Conference
on Dependable Systems and Networks (DSN).
DOt:http://dx.doi.org/10.1109/DSN.2014.50

[7] A.Abraham, and Subbanish Mitra. 2013. Quantitative evaluation of soft
error injection techniques for robust system design. In Proceedings of
ACM/EDACHEEE Design and Automation Conference (DAC).
ISBN:978-1-4503-2071-9

[8] Michail Maniatakos, Naghmeh Karimi, Chandra Tirumurti, Abhijit Jas,
and Yiorgos Makris. 2011. Instruction- level impact analysis of lowlevel faults in @ modern ยง microprocessor controller. In
IEEE Transactions on Computers, vol. 60, no. 9, pp.1260-1273.
DOt-http://dx.doi.org/ 10.1109/TC.2010.60

[9] Nicholas J.Wang, Aqeel Mahersi, and Sanjay J.Patel. 2007. Examining
ACE analysis reliability estimates using fault-injection. In Proceedings
of IEEE/ACM International Symposium on Computer Architecture
(SCA). DOT:http://dx.doi.org/10.1145/1250662.1250719

[10] Gulay Yalcin, Osman S.Unsal, Adrian Cristal, and Mateo
Valero. 2011. FIMSIM: A _ fault injection infrastructure for
microarchitectural simulators. In Proceedings of IEEE
International Conference on Computer Design (ICCD).
DOt:http://dx.doi.org/10.1109/ICCD.201 1.608 1435

[11] Nikos Foutris, Dimitris Gizopoulos, John Kalamatianos, and Vilas
Sridharan. 2013. Assessing the impact of hard faults in performance
components of modern microprocessors. In Proceedings of IEEE
International Conference on Computer Design (ICCD).
DOtl:http://dx.doi.org /10.1109/ICCD.2013.6657044

[12] Athanasios Chatzidimitriou, and Dimitris Gizopoulos. 2016. Anatomy
of microarchitecture-level reliability assessment: Throughput and accuracy. In Proceedings of IEEE International Symposium on
Performance Analysis of Systems and Software (ISPASS).
DOT:http://dx.doi.org/10.1109/ISPASS.2016.7482075

[13] Manolis Kaliorakis, Sotiris Tselonis, Athanasios Chatzidimitriou,
and Dimitris Gizopoulos. 2015. Differential fault injection
on microarchitectural simulators. In Proceedings of IEEE
International Symposium on Workload Characterization (ISWC).
DOtl:http://dx.doi.org/10.1109/IISWC.2015.28

[14] Manolis Kaliorakis, Sotiris Tselonis, Athanasios Chatzidimitriou, and
Dimitris Gizopoulos. 2015. Accelerated microarchitectural
fault injection-based reliability assessment. In Proceedings of
IEEE International Symposium on Defect and Fault
Tolerance in VLSI and Nanotechnology Systems (DFTS).
DOT:http://dx.doi.org/10.1109/DFT.2015.7315134

[15] Shubhendu S.Mukherjee, Christopher Weaver, Joel Emer, Steven
K Reinhardt, and Todd Austin. 2004. A systematic methodology to
compute the architectural vulnerability factors for a high-performance
microprocessors. In Proceedings of IEEE/ACM International Symposium on Microarchitecture (MICRO). ISBN:0-7695-2043-X

[16] Arun Nair, Stijn Eyerman, Lieven Eeckhout, and Lizy K.John. 2012. A
first-order mechanistic model for architectural vulnerability factor. In
Proceedings af IEEE/ACM International Symposium on Computer
Architecture (ISCA). DOI:http://dx.doi.org/10.1145/236623 1.2337191

[17] Arijit Biswas, Paul Racunas, Romulus Cheveresan, Joel Emer,
Shubhendu S.Mukherjee, and Ram Rangan. 2005. Computing
architectural vulnerability factors for address-based structures. In Proceedings of IEEE/ACM International Symposium on Computer Architecture (ISCA). DOI:http://dx.doi.org/10.1109/ISCA.2005.18

[18] Hossein Asadi, Vilas Sridharan, Mehdi Tahoori, and David Kaeli. 2005.
Balancing performance and reliability in the memory hierarchy. In Proceedings of IEEE International Symposium on Performance
Analysis of Systems and Software (ISPASS). DOv:http://dx.doi.org/
10.1109/ISPASS.2005.1430581

[19] Xiaodong Li, Sarita V.Adve, Pradip Bose, and Jude A.Rivers. 2005.
SoftArch: An architecture-level tool for modeling and
analyzing soft errors. In Proceedings of IEEE/IFIP International
Conference on Dependable Systems and Networks (DSN).
DOI:http://dx.doi.org/10.1109/DSN.2005.88

[20] Jinho Suh, Murali Annavaram, and Michel Dubois. 2012. MACAU: A
markovy model for reliability evaluations of caches under single-bit
and multi-bit upsets. In Proceedings of IEEE International
Symposium on High Performance Computer Architecture (HPCA).
DOI:http://dx.doi.org/ 10.1109/HPCA.2012.6168940

[21] Jinho Suh, Mehrtash Manoochehri, Murali Annavaram, and
Michel Dubois. 2011. Soft error benchmarking of L2 caches
with PARMA. In _ Proceedings of ACM SIGMETRICS.
DOtT:http://dx.doi.org/10.1145/2007116.2007127

[22] Shuguang Feng, Shantanu Gupta, Amin Ansari, and Scott Mahlke.
2010. Shoestring: probabilistic soft error reliability on the cheap. In
Proceedings of IEEE/ACM International Conference on Architectural
Support for Programming Languages and Operating Systems
(ASPLOS). DOI:http://dx.doi.org/10.1145/1736020.1736063

[23] Nishant J.George, Carl R.Elks, Barry W.Johnson, and John Lach. 2010.

Transient fault models and AVF estimation revisited. In Proceedings of
IEEE/FIP International Conference on Dependable Systems and

Networks (DSN). DOT:http://dx.doi.org/10.1109/DSN.2010.5544276

[24] Xiaodong Li, Sarita V.Adve, Pradip Bose, and Jude A.Rivers. 2007.
Architecture-level soft error analysis: Examining the limits of common
assumptions. In Proceedings of IEEE/IFIP International Conference
on Dependable Systems and Networks (DSN). DOI: http://dx.doi.org/
10.1109/DSN.2007.15

[25] Arun A.Nair, Lizy K.John, and Lieven Eeckhout. 2010. AVF Stressmark: Towards an automated methodology for bounding the worst-case
vulnerability to soft errors. In Proceedings of IEEE/ACM International
Symposium on Microarchitecture (MICRO). DOt:http://dx.doi.org/
10.1109/MICRO.2010.34

[26] Regis Leveugle, A.Calvez, Paolo Maistri, and Pierre Vanhauwaert.
2009. Statistical fault injection: Quantified error and confidence. In
Proceedings of Design, Automation and Test in Europe (DATE).
DOtI:http://dx.doi.org/ 10.1109/DATE.2009.50907 16

[27] Arijit Biswas, Paul Racunas, Joel Emer, and Shubhendu S.Mukherjee.
2008. Computing accurate AVFs using ACE analysis on performance
models: a rebuttal. In EEE Computer Architecture Letters, vol.7, no.
1, January-June. DOI:http://dx.doi.org/ 10.1109/L-CA.2007.19

[28] Aashish Phansalkar, Ajay Joshi, and Lizy K.John. 2007. Analysis of
redundancy and application balance in the SPEC CPU2006
benchmark suite. In Proceedings of IEEE/ACM International Symposium on Computer Architecture (ISCA). DOlI:http://dx.doi.org/
10.1145/1273440.1250713

[29] Avinash Sodani, and Gurinhar S.Sohi. 1997. Dynamic instruction reuse.
In Proceedings of IEEE/ACM International Symposium on Computer
Architecture (ISCA). DOI:http://dx.doi.org/10.1145/384286.264200

[30] Avinash Sodani, and Gurinhar S.Sohi. 1998. An _ empirical
analysis of instruction repetition. In Proceedings of IEEE/ACM
International Conference on Architectural Support for
Programming Languages and Operating Systems (ASPLOS).
DOT:http://dx.doi.org/10.1145/384265.291016

[31] Saisanthosh Balakrishnan, and Gurinhar S.Sohi. 2003. Exploiting value
locality in physical register files. In Proceedings of IEEE/ACM International Symposium on Microarchitecture (MICRO). ISBN:0-76952043-X

[32] Xin Fu, Tao Li, and Jose Fortes. 2006. Sim-SODA: A unified framework for architectural level software reliability analysis. In Workshop
on Modeling, Benchmarking and Simulation.

[33] Lide Duan, Bin Li, and Lu Peng. 2009. Versatile prediction and fast
estimation of architectural vulnerability factor from processor performance metrics. In Proceedings of IEEE International Symposium
on High Performance Computer Architecture (HPCA).
DOt:http://dx.doi.org/ 10.1109/HPCA.2009.4798244

[34] Konstantinos Parasyris, Georgios Tziantzoulis, Christos D. Antonopoulos, and Nikolaos Bellas. 2014. GemFI: A fault injection tool for studying the behavior of applications on unreliable substrates. In Proceedings of IEEE/IFIP International Conference on Dependable Systems
and Networks (DSN). DOI:http://dx.doi.org/10.1109/DSN.2014.96

[35] Nathan Binkert, Bradford Beckmann, Gabriel Black, Steven
K.Reinhardt, Ali Saidi, Arkaprava Basu, Joel Hestness, Derek
R.Hower, Tushar Krishna, Somayeh Sardashti, Rathijit Sen, Korey
Sewell, Muhammad Shoaib, Nilay Vaish, Mark D.Hill,
and David A.Wood. 2011. The Gem5 simulator. In ACM
SIGARCH Computer Architecture News, vol. 39, no. 2, May.
DOt-http://dx.doi.org/10.1145/2024716.2024718

[36] Man-Lap Li, Pradeep Ramachandran, Swarup K.Sahoo, Sarita V.Adve,
Vikram S.Adve, and Yuanyuan Zhou. 2008. Understanding the propagation of hard errors to software and implications for resilient system
design. In Proceedings of IEEE/ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS). DOI:http://dx.doi.org/ 10.1145/1353534.1346315

[37] Jinho Suh, Murali Annavaram, and Michel Dubois. 2013.
PHYS: Profiled-HYbrid Sampling for soft error reliability
benchmarking. In Proceedings of JIEFEE/IFIP International
Conference on Dependable Systems and Networks (DSN).
DOtr:http://dx.doi.org/10.1109/DSN.2013.6575352

[38] Vilas Sridharan, and David R.Kaeli. 2009. Eliminating
microarchitectural dependency from architectural vulnerability.
In Proceedings of IEEE International Symposium on
High Performance Computer Architecture (HPCA).
DOT:http://dx.doi.org/10.1109/HPCA.2009.4798243

[39] Vilas Sridharan, and David R.Kaeli. 2010. Using hardware vulnerability factors to enhance AVF analysis. In Proceedings of IEEE/ACM In
ternational Symposium on Computer Architecture (ISCA).
DOT:http://dx.doi.org/10.1145/1816038.1816023

[40] Arijit Biswas, Niranjan Soundararajan, Shubhendu S.Mukherjee,
Sudhanva Gurumurthi. 2009. Quantized AVF: a means of capturing
vulnerability variations over small windows of time. In International
Workshop on Silicon Errors in Logic-System Effects (SELSE).

[41] Pablo Montesinos, Wei Liu, and Josep Torrellas. 2007. Using
register lifetime predictions to protect register files
against soft errors. In Proceedings of IEEE/IFIP International
Conference on Dependable Systems and Networks (DSN).
DOT:http://dx.doi.org/10.1109/DSN.2007.99

[42] Xin Xu, and Man-Lap Li. 2012. Understanding soft error propagation
using efficient vulnerability-driven fault injection. In Proceedings of
IEEE/FIP International Conference on Dependable Systems and
Networks (DSN). ISBN: 978-1-4673-1624-8

[43] Vimal Reddy, and Eric Rotenberg. 2007. Inherent Time
Redundancy (ITR): Using program repetition for low-overhead
fault tolerance. In Proceedings of IEEE/IFIP International
Conference on Dependable Systems and Networks (DSN).
DOT:http://dx.doi.org/10.1109/DSN.2007.59

[44] Mohamed A.Gomaa, and T.N.Vijaykumar. 2005. Opportunistic transient-fault detection. In Proceedings of IEEE/ACM International
Symposium on Computer Architecture (ISCA). DOI:http://dx.doi.org/
10.1109/ISCA.2005.38

[45] Siva K.S.Hari, Sarita V.Adve, Helia Naemi, and Pradeep Ramachandran. 2012. Relyzer: Exploiting application-level fault equivalence to
analyze application resiliency to transient faults. In Proceedings of
IEEE/ACM International Conference on Architectural Support for
Programming Languages and Operating Systems (ASPLOS).
DOT:http://dx.doi.org/ 10.1145/2150976.2150990

[46] Guanpeng Li, Qining Lu, and Karthik Pattabiraman. 2015.
Fine-grained characterization of faults causing long latency
crashes in programs. In Proceedings of IEEE/IFIP International
Conference on Dependable Systems and Networks (DSN).
DOT:http://dx.doi.org/10.1109/DSN.2015.36

[47] Horst Schirmeier, Christoph Borchert, and Olaf Spincezyk. 2015. Avoiding pitfalls in fault-injection based comparison of program susceptibility
to soft errors. In Proceedings of IEEE/IFIP International Conference
on Dependable Systems and Networks (DSN). DOI:http://dx.doi.org/
10.1109/DSN.2015.44

[48] Siva K.S.Hari, Radha Venkatagiri, Sarita V.Adve, and Helia
Naemi. 2014. GangES: Gang error simulation for hardware
resilience evaluation. In Proceedings of IEEE/ACM
International Symposium on Computer Architecture (ISCA).
DOtT:http://dx.doi.org/10.1145/2678373.2665685

[49] Matthew R.Guthaus, Jeff S.Ringenberg, Damien Ernst, Todd M. Austin,
Trevor Mudge, and Richard B.Brown. 2001. MiBench: A free, commercially representative embedded benchmark suite. In Proceedings of
IEEE International Workshop on Workload Characterization (WWC).
DOtT:http://dx.doi.org/ 10.1109/WWC.2001.990739

[50] Daya S.Khudia, and Scott Mahlke. 2014. Harnessing soft computations
for low budget fault tolerance. In Proceedings of IEEE/ACM
International Symposium on Microarchitecture (MICRO).
DOt:http://dx.doi.org/ 10.1109/MICRO.2014.33

[51] Timothy Sherwood, Erez Perelman, Greg Hamerly, and Brad Calder.
2002. Automatically characterizing large scale program behavior. In
Proceedings of IEEE/ACM International Conference on Architectural
Support for Programming Languages and Operating Systems
(ASPLOS). DOT:http://dx.doi.org/10.1145/635506.605403
