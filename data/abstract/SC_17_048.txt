
The increasing complexity of HPC systems has introduced new
sources of variability, which can contribute to significant differences
in run-to-run performance of applications. With components at
various levels of the system contributing variability, application
developers and system users are now faced with the difficult task of
running and tuning their applications in an environment where runto-run performance measurements can vary by as much as a factor
of two to three. In this study, we classify, quantify, and present ways
to mitigate the sources of run-to-run variability on Cray XC systems
with Intel Xeon Phi processors and a dragonfly interconnect. We
further demonstrate that the code-tuning performance observed ina
variability-mitigating environment correlates with the performance
observed in production running conditions.
