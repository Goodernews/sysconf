
We design resource management heuristics that
assign serial tasks to the nodes of a heterogeneous high
performance computing (HPC) system. The value of completing
these tasks is modeled using monotonically decreasing utility
functions that represent the time-varying importance of the task.
The value of completing a task is equal to its utility function at
the time of its completion. The overall performance of this system
is measured using the total utility earned by all tasks during
some interval of time. To maximize the performance of such a
system where the preemption of tasks is possible, we have
designed, analyzed, and compared a set of resource allocation
heuristic techniques. We combine two utility-aware heuristics
with three different preemption techniques to create six
preemption-capable heuristics. We also consider the two utilityaware heuristics without preemption. We use simulation studies
to evaluate this set of eight heuristics and compare them with an
FCFS heuristic, which is often used in real systems, and random
assignments. In general, our set of eight heuristics is able to
significantly outperform the comparison heuristics, and the
preemption-capable heuristics are able to significantly increase
the utility earned compared to the heuristics that do not use
preemption. We analyze the performance tradeoffs among the
different preemption-capable heuristics under a variety of
oversubscribed workload environments.

