
Computer system designers need a deep understanding of end users’ workload in order to arrive at an
optimum design. However, current design practices suffer from
two problems: fime mismatch where designers rely on workloads
available today to design systems that will be produced years
into the future to run future workloads, and sparse behavior
where many performance behavior is not represented by the
limited set of applications available today. We propose clone
morphing, a systematic method for producing new synthetic
workloads (morphs) with performance behavior that does not
currently exist. The morphs are generated automatically without
knowing or changing the original application’s source code. There
are three different aspects a morph can differ from the original
benchmark it is built on: temporal locality, spatial locality, and
memory footprint. We showed how each of these aspects can be
varied largely independently of other aspects. Furthermore, we
also presented a method for merging two different applications
into one that has an average behavior of both applications. We
evaluated the morphs by running them on simulators and collect
statistics that capture their behavior, and validated that morphs
can be used for projecting future workloads and for generating
new behavior that fills up the behavior map densely.

