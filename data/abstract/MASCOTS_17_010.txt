
The programmability of Software-Defined Networking (SDN) challenges the correctness and reliability of networks.
There may be design flaws as well as implementation bugs in SDN
applications. White-box testing methods with formal models rely
on source codes, which limits the applicability of these methods.
Black-box methods without behavior models cannot systematically cover an applicationâ€™s functions. Most previous work has
mainly focused on design flaws and has ignored implementation
bugs. In this paper, we propose a new black-box test framework
to detect both design flaws and implementation bugs. Following
this test framework, we propose a new model, Information
Table Extended State Machine (IT-EFSM), combining a group of
parallel state machines and an abstract topology to specify the
SDN applications. We employ a model checking tool to generate
tests against design flaws and propose a test generation based
on partial composition, symmetry simplification on the topology
and topology simulated execution to expose implementation bugs.
The experimental results of the testing process demonstrate the
effectiveness and applicability of our method.

