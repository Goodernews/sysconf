
Modern systems use networks extensively, accessing
both services and storage across local and remote networks. Latency is a key performance challenge, and
packing multiple small operations into fewer large ones
is an effective way to amortize that cost, especially after years of significant improvement in bandwidth but
not latency. To this end, the NFSv4 protocol supports
a compounding feature to combine multiple operations.
Yet compounding has been underused since its conception because the synchronous POSIX file-system API issues only one (small) request at a time.

We propose vNF'S, an NFSv4.1-compliant client that
exposes a vectorized high-level API and leverages NFS
compound procedures to maximize performance. We
designed and implemented vNFS as a user-space RPC
library that supports an assortment of bulk operations on
multiple files and directories. We found it easy to modify
several UNIX utilities, an HTTP/2 server, and Filebench
to use vNFS. We evaluated vNFS under a wide range of
workloads and network latency conditions, showing that
vNFS improves performance even for low-latency networks. On high-latency networks, vNFS can improve
performance by as much as two orders of magnitude.
