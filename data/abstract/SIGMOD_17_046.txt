
Bitmap compression has been studied extensively in the
database area and many efficient compression schemes were
proposed, e.g., BBC, WAH, EWAH, and Roaring. Inverted
list compression is also a well-studied topic in the information retrieval community and many inverted list compression algorithms were developed as well, e.g., VB, PforDelta,
GroupVB, Simple8b, and SIMDPforDelta. We observe that
they essentially solve the same problem, i.e., how to store a
collection of sorted integers with as few as possible bits and
support query processing as fast as possible. Due to historical reasons, bitmap compression and inverted list compression were developed as two separated lines of research
in the database area and information retrieval area. Thus,
a natural question is: Which one is better between bitmap
compression and inverted list compression?
To answer the question, we present the first comprehensive
experimental study to compare a series of 9 bitmap compression methods and 12 inverted list compression methods. We
compare these 21 algorithms on synthetic datasets with different distributions (uniform, zipf, and markov) as well as
8 real-life datasets in terms of the space overhead, decompression time, intersection time, and union time. Based on
the results, we provide many lessons and guidelines that can
be used for practitioners to decide which technique to adopt
in future systems and also for researchers to develop new
algorithms.
