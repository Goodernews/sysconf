
. Pattern matching on large graphs is the foundation for a
variety of application domains. The continuously increasing size of the
underlying graphs requires highly parallel in-memory graph processing
engines that need to consider non-uniform memory access (NUMA) and
concurrency issues to scale up on modern multiprocessor systems. To
tackle these aspects, a fine-grained graph partitioning becomes increasingly important. Hence, we present a classification of graph partitioning strategies and evaluate representative algorithms on medium and
large-scale NUMA systems in this paper. As a scalable pattern matching
processing infrastructure, we leverage a data-oriented architecture that
preserves data locality and minimizes concurrency-related bottlenecks on
NUMA systems. Our in-depth evaluation reveals that the optimal partitioning strategy depends on a variety of factors and consequently, we
derive a set of indicators for selecting the optimal partitioning strategy
suitable for a given graph and workload.

