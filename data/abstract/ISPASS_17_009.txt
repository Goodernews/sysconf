
An interesting class of irregular algorithms is tree
traversal algorithms, which repeatedly traverse various trees to
perform efficient computations. Tree traversal algorithms form
the algorithmic kernels in an important set of applications in
scientific computing, computer graphics, bioinformatics, and data
mining, etc. There has been increasing interest in understanding
tree traversal algorithms, optimizing them, and applying them
in a wide variety of settings. Crucially, while there are many
possible optimizations for tree traversal algorithms, which optimizations apply to which algorithms is dependent on algorithmic
characteristics.

In this work, we present a suite of tree traversal kernels,
drawn from diverse domains, called Treelogy, to explore the
connection between tree traversal algorithms and state-of-the-art
optimizations. We characterize these algorithms by developing
an ontology based on their structural properties. The attributes
extracted through our ontology, for a given traversal kernel,
can aid in quick analysis of the suitability of platform- and
application- specific as well as independent optimizations. We
provide reference implementations of these kernels for three platforms: shared memory multicores, distributed memory systems,
and GPUs, and evaluate their scalability.

