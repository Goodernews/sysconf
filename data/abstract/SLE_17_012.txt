
In model-driven engineering (MDE), models abstract the relevant features of software artefacts and model management
operations, including model transformations, act on them
automating large tasks of the development process. Flexible
reuse of such operations is an important factor to improve
productivity when developing and maintaining MDE solutions. In this work, we revisit the traditional notion of object
subtyping based on subsumption, discarded by other approaches to model subtyping. We refine a type system for
object-oriented programming, with multiple inheritance, to
support model types in order to analyse its advantages and
limitations with respect to reuse in MDE. Specifically, we extend type expressions with referential constraints and with
OCL constraints. Our approach has been validated with a tool
that extracts model types from (EMF) metamodels, paired
with their OCL constraints, automatically and that exploits
the extended subtyping relation to reuse model management
operations. We show that structural model subtyping is expressive enough to support variants of model subtyping,
including multiple, partial and dynamic model subtyping.
The tool has received the ACM badge "Artifacts Evaluated âˆ’
Functional".
