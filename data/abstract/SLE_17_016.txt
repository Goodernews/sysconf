
We present a new language construct, filtered iterators, for
robust input processing. Filtered iterators are designed to
eliminate many common input processing errors while enabling robust continued execution. The design is inspired
by (1) observed common input processing errors and (2) successful strategies implemented by human developers fixing
input processing errors. Filtered iterators decompose inputs
into input units and atomically and automatically discard
units that trigger errors. Statistically significant results from
a developer study demonstrate the effectiveness of filtered
iterators in enabling developers to produce robust input processing code without common input processing defects.
