
Provenance is a way to answer “why” questions about computations. It has found a number of uses in the database community,
such as debugging query answers or tracing unexpected results to
database tuples. In fact, the ability to ask “why” can be useful
for a much broader range of applications. In this paper, we summarize our experiences over the past few years in adapting provenance
for diagnostic and forensic uses in networks and distributed systems. Our work draws inspirations from database provenance, yet
the deployment scale, use cases, and distributed nature of networks
require a significant re-design of traditional data provenance models. We review a number of use cases, ranging from investigating
intrusions to diagnosing (and even automatically fixing) softwaredefined networks, and present a unified system architecture that we
have designed and implemented for provenance in distributed systems. We conclude with a discussion of open issues in this space.
