

Intel Software Guard Extension (SGX) offers software applications
a shielded execution environment, dubbed enclave, to protect their
confidentiality and integrity from malicious operating systems.
As processors with this extended feature become commercially
available, many new software applications are developed to enrich
to the SGX-enabled software ecosystem. One important primitive
for these applications is a secure communication channel between
the enclave and a remote trusted party. The SSL/TLS protocol, which
is the de facto standard for protecting transport-layer network
communications, has been broadly regarded a natural choice for
such purposes. However, in this paper, we show that the marriage
between SGX and SSL may not be a smooth sailing.

Particularly, we consider a category of side-channel attacks
against SSL/TLS implementations in secure enclaves, which we call
the control-flow inference attacks. In these attacks, the malicious
operating system kernel may perform a powerful man-in-the-kernel
attack to collect execution traces of the enclave programs at the
page level, the cacheline level, or the branch level, while positioning itself in the middle of the two communicating parties. At the
center of our work is a differential analysis framework, dubbed
StTacco, to dynamically analyze the SSL/TLS implementations and
detect vulnerabilities—discernible execution traces—that can be
exploited as decryption oracles. Surprisingly, in spite of the prevailing constant-time programming paradigm adopted by many
cryptographic libraries, we found exploitable vulnerabilities in the
latest versions of all the SSL/TLS libraries we have examined.

To validate the detected vulnerabilities, we developed a man-inthe-kernel adversary to demonstrate Bleichenbacher attacks against
the latest OpenSSL library running in the SGX enclave (with the
help of Graphene) and completely broke the PreMasterSecret
encrypted by a 4096-bit RSA public key with only 57,286 queries.
We also conducted CBC padding oracle attacks against the latest GnuTLS running in Graphene-SGX and an open-source SGXimplementation of mbedTLS (i.e, mbedTLS-SGX) that runs directly
inside the enclave, and showed that it only needs 48,388 and 25,717

