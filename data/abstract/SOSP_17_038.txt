

Classical query optimization relies on a predefined set of
rewrite rules to re-order and substitute SQL operators at
a logical level. This paper proposes Birrz, a system that
can synthesize efficient query-specific operators using automated program reasoning. Biirz uses static analysis to
identify sub-queries as potential targets for optimization. For
each sub-query, it constructs a template that defines a large
space of possible operator implementations, all restricted to
have linear time and space complexity. Birrz then employs
program synthesis to instantiate the template and obtain a
data-parallel operator implementation that is functionally
equivalent to the original sub-query up to a bound on the
input size.

Program synthesis is an undecidable problem in general
and often difficult to scale, even for bounded inputs. Birrz
therefore uses a series of analyses to judiciously use program
synthesis and incrementally construct complex operators.

We integrated Biirz with existing big-data query languages by embedding the synthesized operators back into
the query as User Defined Operators. We evaluated Burrz on
several production queries from MicrosorT running on two
state-of-the-art query engines: SPARKSQL as well as ScopE,
the big-data engine of MicrosorT. Biirz produces correct
optimizations despite the synthesis being bounded. The resulting queries have much more succinct query plans and demonstrate significant performance improvements on both
big-data systems (1.3x â€” 4.7x).
