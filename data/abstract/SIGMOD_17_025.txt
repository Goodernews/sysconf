

To support analytics on massive graphs such as online social networks, RDF, Semantic Web, etc. many new graph algorithms are
designed to query graphs for a specific problem, and many distributed graph processing systems are developed to support graph
querying by programming. In this paper, we focus on RDBMS,
which has been well studied over decades to manage large datasets,
and we revisit the issue how RDBMS can support graph processing at the SQL level. Our work is motivated by the fact that there
are many relations stored in RDBMS that are closely related to a
graph in real applications and need to be used together to query the
graph, and RDBMS is a system that can query and manage data
while data may be updated over time. To support graph processing,
in this work, we propose 4 new relational algebra operations, MMjoin, MV-join, anti-join, and union-by-update. Here, MM-join and
MV-join are join operations between two matrices and between a
matrix and a vector, respectively, followed by aggregation computing over groups, given a matrix/vector can be represented by
a relation. Both deal with the semiring by which many graph algorithms can be supported. The anti-join removes nodes/edges in
a graph when they are unnecessary for the following computing.
The union-by-update addresses value updates to compute PageRank, for example. The 4 new relational algebra operations can be
defined by the 6 basic relational algebra operations with group-by
& aggregation. We revisit SQL recursive queries and show that
the 4 operations with others are ensured to have a fixpoint, following the techniques studied in DATALOG, and enhance the recursive
with clause in SQLâ€™99. We conduct extensive performance studies to test 10 graph algorithms using 9 large real graphs in 3 major
RDBMSs. We show that RDBMSs are capable of dealing with
graph processing in reasonable time. The focus of this work is at
SQL level. There is high potential to improve the efficiency by
main-memory RDBMSs, efficient join processing in parallel, and
new storage management.

