
. We studied a search engine service in order to evaluate the
impact of the traffic pattern on network performance. This paper focuses
on how the routing algorithm can improve the query latency of a search
engine. The architecture of the service includes three main components:
Front Service, Cache Service and Index Service. This service receives
queries from users, and after a process of seeking in a cluster, a set of
results are returned to users. This workload produces unbalanced traffic throughout the network. As a result, this behavior impacts the network performance in terms of latency and throughput and increases the
user timeout. This paper proposes an application-driven routing policy based on the application architecture which merges a set of criteria and prioritizes the Cache Service messages. We evaluated the performance using real traces and simulation techniques. The experiment
results show a reduction of network latency and throughput when we
apply the application-driven routing policy.

