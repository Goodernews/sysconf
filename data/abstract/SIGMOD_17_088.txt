

The advent of columnar data analytics engines fueled a series of
optimizations on the scan operator. New designs include columngroup storage, vectorized execution, shared scans, working directly
over compressed data, and operating using SIMD and multi-core
execution. Larger main memories and deeper cache hierarchies increase the efficiency of modern scans, prompting a revisit of the
question of access path selection.

In this paper, we compare modern sequential scans and secondary
index scans. Through detailed analytical modeling and experimentation we show that while scans have become useful in more cases
than before, both access paths are still useful, and so, access path
selection (APS) is still required to achieve the best performance
when considering variable workloads. We show how to perform
access path selection. In particular, contrary to the way traditional
systems choose between scans and secondary indexes, we find that
in addition to the query selectivity, the underlying hardware, and
the system design, modern optimizers also need to take into account query concurrency. We further discuss the implications of
integrating access path selection in a modern analytical data system. We demonstrate, both theoretically and experimentally, that
using the proposed model a system can quickly perform access
path selection, outperforming solutions that rely on a single access
path or traditional access path models. We outline a light-weight
mechanism to integrate APS into main-memory analytical systems
that does not interfere with low latency queries. We also use the
APS model to explain how the division between sequential scan
and secondary index scan has historically changed due to hardware
and workload changes, which allows for future projections based
on hardware advancements.

