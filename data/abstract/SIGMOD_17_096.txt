

Searchable encryption (SE) allows a client to outsource a
dataset to an untrusted server while enabling the server to
answer keyword queries in a private manner. SE can be
used as a building block to support more expressive private
queries such as range/point and boolean queries, while providing formal security guarantees. To scale SE to big data
using external memory, new schemes with small locality have
been proposed, where locality is defined as the number of
non-continuous reads that the server makes for each query.
Previous space-efficient SE schemes achieve optimal locality
by increasing the read efficiencyâ€”the number of additional
memory locations (false positives) that the server reads per
result item. This can hurt practical performance.

In this work, we design, formally prove secure, and evaluate the first SE scheme with tunable locality and linear
space. Our first scheme has optimal locality and outperforms existing approaches (that have a slightly different leakage profile) by up to 2.5 orders of magnitude in terms of read
efficiency, for all practical database sizes. Another version
of our construction with the same leakage as previous works
can be tuned to have bounded locality, optimal read efficiency and up to 60x more efficient end-to-end search time.
We demonstrate that our schemes work fast in in-memory as
well, leading to search time savings of up to 1 order of magnitude when compared to the most practical in-memory SE
schemes. Finally, our construction can be tuned to achieve
trade-offs between space, read efficiency, locality, parallelism
and communication overhead.

