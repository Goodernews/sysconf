
Most applications running on supercomputers
achieve only a fraction of a systemâ€™s peak performance. It has
been demonstrated that the co-scheduling of applications can
improve the overall system utilization. However, following this
approach, applications need to fulfill certain criteria such that
the mutual slowdown is kept at a minimum. In this paper,
we present an HPC scheduler that applies co-scheduling and
utilizes virtual machine migration for a re-orchestration of
applications at runtime based on their main memory bandwidth
requirements. Given a job queue consisting of main memorybound applications and compute-bound applications, we can see
a throughput increase of up to 35% while at the same time
reducing energy consumption by around 30 %.

