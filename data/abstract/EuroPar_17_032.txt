
. Besides correctness, scalability is one of the top priorities
of parallel programmers. With manual analytical performance modeling often being too laborious, developers increasingly resort to empirical
performance modeling as a viable alternative, which learns performance
models from a limited amount of performance measurements. Although
powerful automatic techniques exist for this purpose, they usually struggle with the situation where performance data representing two or more
different phenomena are conflated into a single performance model. This
not only generates an inaccurate model for the given data, but can also
either fail to point out existing scalability issues or create the appearance of such issues when none are present. In this paper, we present an
algorithm to detect segmentation in a sequence of performance measurements and estimate the point where the behavior changes. Our method
correctly identified segmentation in more than 80% of 5.2 million synthetic tests and confirmed expected segmentation in three application
case studies.

