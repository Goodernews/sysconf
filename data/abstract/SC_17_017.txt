
The Geometric Multigrid (GMG) method is widely used in numerical analysis to accelerate the convergence of partial differential
equations solvers using a hierarchy of grid discretizations. Multiple grid sizes and recursive expression of multigrid cycles make
the task of program optimization tedious. A high-level language
that aids domain experts for GMG with effective optimization and
parallelization support is thus valuable.

We demonstrate how high performance can be achieved along
with enhanced programmability for GMG, with new language/optimization support in the PolyMage DSL framework. We compare
our approach with (a) hand-optimized code, (b) hand-optimized
code in conjunction with polyhedral optimization techniques, and
(c) the existing PolyMage optimizer adapted to multigrid. We use
benchmarks varying in multigrid cycle structure and smoothing
steps for evaluation. On a 24-core Intel Xeon Haswell multicore
system, our automatically optimized codes achieve a mean improvement of 3.2x over straightforward parallelization, and 1.31x over
the PolyMage optimizer.
