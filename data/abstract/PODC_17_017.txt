

In the distributed message-passing setting a communication network is represented by a graph whose vertices represent processors
that perform local computations and communicate over the edges
of the graph. In the distributed edge-coloring problem the processors
are required to assign colors to edges, such that all edges incident
on the same vertex are assigned distinct colors. The previouslyknown deterministic algorithms for edge-coloring employed at least
(2A — 1) colors, even though any graph admits an edge-coloring
with A + 1 colors [36]. Moreover, the previously-known deterministic algorithms that employed at most O(A) colors required superlogarithmic time [3, 6, 7, 17]. In the current paper we devise
deterministic edge-coloring algorithms that employ only A + o(A)
colors, for a very wide family of graphs. Specifically, as long as
the arboricity a of the graph is a = O(A1~®), for a constant € > 0,
our algorithm computes such a coloring within polylogarithmic
deterministic time.

We also devise significantly improved deterministic edge-coloring
algorithms for general graphs for a very wide range of parameters.
Specifically, for any value x in the range [4A, 2°0°84) . AJ, our kedge-coloring algorithm has smaller running time than the best
previously-known x-edge-coloring algorithms. Our algorithms are
actually much more general, since edge-coloring is equivalent to
vertex-coloring of line graphs. Our method is applicable to vertexcoloring of the family of graphs with bounded diversity that contains
line graphs, line graphs of hypergraphs, and many other graphs. We
significantly improve upon previous vertex-coloring of such graphs,
and as an implication also obtain the improved edge-coloring algorithms for general graphs.

Our results are obtained using a novel technique that connects
vertices or edges in a certain way that reduces clique size. The
resulting structures, which we call connectors, can be colored more
efficiently than the original graph. Moreover, the color classes constitute simpler subgraphs that can be colored even more efficiently

using appropriate connectors. We introduce several types of connectors that are useful for various scenarios. We believe that this
technique is of independent interest.
