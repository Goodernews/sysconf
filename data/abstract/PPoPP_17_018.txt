
On modern multi-core processors, independent workloads
often interfere with each other by competing for shared
cache space. However, for multi-threaded workloads, where
a single copy of data can be accessed by multiple threads, the
threads can cooperatively share cache. Because data sharing
consolidates the collective working set of threads, the effective size of shared cache becomes larger than it would have
been when data are not shared.

This paper presents a new theory of data sharing. It includes (1) a new metric called the shared footprint to mathematically compute the amount of data shared by any group
of threads in any size cache, and (2) a linear-time algorithm
to measure shared footprint by scanning the memory trace
of a multi-threaded program. The paper presents the practical implementation and evaluates the new theory using 14
PARSEC and SPEC OMP benchmarks, including an example use of shared footprint in program optimization.
