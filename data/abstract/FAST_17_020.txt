
As graphs continue to grow, external memory graph processing systems serve as a promising alternative to inmemory solutions for low cost and high scalability. Unfortunately, not only does this approach require considerable efforts in programming and IO management, but its
performance also lags behind, in some cases by an order
of magnitude. In this work, we strive to achieve an ambitious goal of achieving ease of programming and high IO
performance (as in-memory processing) while maintaining graph data on disks (as external memory processing).
To this end, we have designed and developed Graphene
that consists of four new techniques: an IO request centric programming model, bitmap based asynchronous IO,
direct hugepage support, and data and workload balancing. The evaluation shows that Graphene can not only
run several times faster than several external-memory
processing systems, but also performs comparably with
in-memory processing on large graphs.
