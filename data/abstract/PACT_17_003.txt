
High-level GPU graph processing frameworks are an at
tractive alternative for achieving both high productivity and
high performance. Hence, several high-level frameworks for
graph processing on GPUs have been developed. In this paper, we develop an approach to graph processing on GPUs
that seeks to overcome some of the performance limitations
of existing frameworks. It uses multiple data representation
and execution strategies for dense versus sparse vertex frontiers, dependent on the fraction of active graph vertices. A
two-phase edge processing approach trades off extra data
movement for improved load balancing across GPU threads,
by using a 2D blocked representation for edge data. Experimental results demonstrate performance improvement over
current state-of-the-art GPU graph processing frameworks
for many benchmark programs and data sets.
