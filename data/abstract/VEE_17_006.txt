
Real-time 3D space understanding is becoming prevalent
across a wide range of applications and hardware platforms.
To meet the desired Quality of Service (QoS), computer vision applications tend to be heavily parallelized and exploit
any available hardware accelerators. Current approaches to
achieving real-time computer vision, evolve around programming languages typically associated with High Performance
Computing along with binding extensions for OpenCL or
CUDA execution.

Such implementations, although high performing, lack
portability across the wide range of diverse hardware resources and accelerators. In this paper, we showcase how a
complex computer vision application can be implemented
within a managed runtime system. We discuss the complexities of achieving high-performing and portable execution
across embedded and desktop configurations. Furthermore,
we demonstrate that it is possible to achieve the QoS target
of over 30 frames per second (FPS) by exploiting FPGA and
GPGPU acceleration transparently through the managed
runtime system.

Keywords GPU Acceleration, Java Virtual Machines, Heterogeneous Runtime Systems, SLAM, Computer Vision
