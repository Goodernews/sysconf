
Heterogeneous computing systems, e.g., those with
accelerators than the host CPUs, offer the accelerated performance for a variety of workloads. However, most parallel programming models require platform dependent, time-consuming
hand-tuning efforts for collectively using all the resources in a
system to achieve efficient results. In this work, we explore the
use of OpenMP parallel language extensions to empower users
with the ability to design applications that automatically and
simultaneously leverage CPUs and accelerators to further optimize use of available resources. We believe such automation will
be key to ensuring codes adapt to increases in the number and
diversity of accelerator resources for future computing systems.
The proposed system combines language extensions to OpenMP,
load-balancing algorithms and heuristics, and a runtime system
for loop distribution across heterogeneous processing elements.
We demonstrate the effectiveness of our automated approach to
program on systems with multiple CPUs, GPUs, and MICs.

Keywords-accelerator architecture; OpenMP; parallel loops;
performance model; runtime system; data and computation
distribution; alignment; load balance
