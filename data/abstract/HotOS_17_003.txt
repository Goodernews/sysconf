
Many large applications are now built using collections of
microservices, each of which is deployed in isolated containers and which interact with each other through the use
of remote procedure calls (RPCs). The use of microservices
improves scalability — each component of an application can
be scaled independently — and deployability. However, such
applications are inherently distributed and current tools do not
provide mechanisms to reason about and ensure their global
behavior. In this paper we argue that recent advances in formal methods and software packet processing pave the path
towards building mechanisms that can ensure correctness for
such systems, both when they are being built and at runtime.
These techniques impose minimal runtime overheads and are
amenable to production deployments.

