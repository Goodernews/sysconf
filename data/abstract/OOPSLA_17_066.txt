
Software and hardware are increasingly being formally verified against specifications, but how can we verify
the specifications themselves? This paper explores what it means to formally verify a specification. We solve
three challenges: (1) How to create a secondary, higher-level specification that can be effectively reviewed
by processor designers who are not experts in formal verification; (2) How to avoid common-mode failures
between the specifications; and (3) How to automatically verify the two specifications against each other.

One of the most important specifications for software verification is the processor specification since it
defines the behaviour of machine code and of hardware protection features used by operating systems. We
demonstrate our approach on ARMâ€™s v8-M Processor Specification, which is intended to improve the security
of Internet of Things devices. Thus, we focus on establishing the security guarantees the architecture is
intended to provide. Despite the fact that the ARM v8-M specification had previously been extensively tested,
we found twelve bugs (including two security bugs) that have all been fixed by ARM.
