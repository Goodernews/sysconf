
This paper introduces PapyrusKV, a parallel embedded key-value
store (KVS) for distributed high-performance computing (HPC)
architectures that offer potentially massive pools of nonvolatile
memory (NVM). PapyrusKV stores keys with their values in arbitrary byte arrays across multiple NVMs in a distributed system.
PapyrusKV provides standard KVS operations such as put, get, and
delete. More importantly, PapyrusKV provides advanced features
for HPC such as dynamic consistency control, zero-copy workflow, and asynchronous checkpoint/restart. Beyond filesystems,
PapyrusKV provides HPC programmers with a high-level interface to exploit distributed NVM in the system, and it transparently
organizes data to achieve high performance. Also, it allows HPC
applications to specialize PapyrusKV to meet their specific requirements. We empirically evaluate PapyrusKV on three HPC systems
with real NVM devices: OLCF’s Summitdev, TACC’s Stampede,
and NERSC’s Cori. Our results show that PapyrusKV can offer
high performance, scalability, and portability across these various
distributed NVM architectures.
