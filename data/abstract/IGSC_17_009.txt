
In this paper, we consider energy-efficient and faulttolerant scheduling of real-time tasks on heterogeneous multicore
systems. Each task consists of a main copy and a backup
copy which are scheduled on different cores, for fault tolerance
purposes. Our framework deliberately delays the backup tasks
in order to cancel them dynamically when the main task
copies complete successfully (without faults). We identify and
address two dimensions of the problem, i.e., partitioning tasks
and determining processor voltage/frequency levels to minimize
energy consumption. Our experimental results show that our
proposed algorithmsâ€™ performance levels are close to that of
an ideal solution with optimal (but computationally prohibitive)
partitioning and frequency assignment components.

